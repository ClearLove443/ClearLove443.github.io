(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{617:function(a,i,l){"use strict";l.r(i);var t=l(5),e=Object(t.a)({},(function(){var a=this,i=a.$createElement,l=a._self._c||i;return l("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[l("h1",{attrs:{id:"display的所有属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display的所有属性"}},[a._v("#")]),a._v(" display的所有属性")]),a._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",[l("code",[a._v("/* CSS 1 */\ndisplay: none;\ndisplay: inline;\ndisplay: block;\ndisplay: list-item;\n\n/* CSS 2.1 */\ndisplay: inline-block;\n\ndisplay: table;\ndisplay: inline-table;\ndisplay: table-cell;\ndisplay: table-column;\ndisplay: table-column-group;\ndisplay: table-footer-group;\ndisplay: table-header-group;\ndisplay: table-row;\ndisplay: table-row-group;\ndisplay: table-caption;\n/* CSS 2.1 */\n\n/* CSS 3 */\ndisplay: inline-list-item;\ndisplay: flex;\ndisplay: box;\ndisplay: inline-flex;\n\ndisplay: grid;\ndisplay: inline-grid;\n\ndisplay: ruby;\ndisplay: ruby-base;\ndisplay: ruby-text;\ndisplay: ruby-base-container;\ndisplay: ruby-text-container;\n/* CSS 3 */\n\n/* Experimental values */\ndisplay: contents;\ndisplay: run-in;\n/* Experimental values */\n\n/* Global values */\ndisplay: inherit;\ndisplay: initial;\ndisplay: unset;\n")])])]),l("p",[a._v("下面就display的重要属性进行讲解，并配合一些相关的例子")]),a._v(" "),l("h1",{attrs:{id:"基本属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#基本属性"}},[a._v("#")]),a._v(" 基本属性")]),a._v(" "),l("h2",{attrs:{id:"display-none"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-none"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: none")])]),a._v(" "),l("p",[a._v("none 是 CSS 1 就提出来的属性，将元素设置为none的时候既不会占据空间，也无法显示，相当于该元素不存在。\n该属性可以用来改善重排与重绘，同时我也经常用它来做模态窗等效果。")]),a._v(" "),l("h2",{attrs:{id:"display-inline"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-inline"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: inline")])]),a._v(" "),l("p",[a._v("inline也是 CSS 1 提出的属性，它主要用来设置行内元素属性，设置了该属性之后设置高度、宽度都无效，同时text-align属性设置也无效，但是设置了line-height会让inline元素居中")]),a._v(" "),l("h2",{attrs:{id:"display-block"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-block"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: block")])]),a._v(" "),l("p",[a._v("设置元素为块状元素，如果不指定宽高，默认会继承父元素的宽度，并且独占一行，即使宽度有剩余也会独占一行，高度一般以子元素撑开的高度为准，当然也可以自己设置宽度和高度。")]),a._v(" "),l("h2",{attrs:{id:"display-list-item"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-list-item"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: list-item")])]),a._v(" "),l("p",[a._v("此属性默认会把元素作为列表显示，要完全模仿列表的话还需要加上 "),l("code",[a._v("list-style-position，list-style-type")])]),a._v(" "),l("h2",{attrs:{id:"display-inline-block"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-inline-block"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: inline-block")])]),a._v(" "),l("p",[l("code",[a._v("inline-block")]),a._v("为 CSS 2.1 新增的属性。 "),l("code",[a._v("inline-block")]),a._v("既具有block的宽高特性又具有inline的同行元素特性。 通过"),l("code",[a._v("inline-block")]),a._v("结合"),l("code",[a._v("text-align: justify")]),a._v(" 还可以实现固定宽高的列表两端对齐布局")]),a._v(" "),l("h2",{attrs:{id:"display-table"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-table"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: table")])]),a._v(" "),l("p",[a._v("table 此元素会作为块级表格来显示（类似table），表格前后带有换行符。CSS表格能够解决所有那些我们在使用绝对定位和浮动定位进行多列布局时所遇到的问题。例如，"),l("code",[a._v("display:table")]),a._v("的CSS声明能够让一个HTML元素和它的子节点像table元素一样。使用基于表格的CSS布局，使我们能够轻松定义一个单元格的边界、背景等样式， 而不会产生因为使用了table那样的制表标签所导致的语义化问题。")]),a._v(" "),l("p",[a._v("利用table的特性，我们能够轻易的实现三栏布局，并且能够兼容IE8")]),a._v(" "),l("h2",{attrs:{id:"display-inline-list-item"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-inline-list-item"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: inline-list-item")])]),a._v(" "),l("p",[a._v("我在MDN上面看到有这个属性，但是我实际尝试发现这个属性是不能使用的，在 "),l("a",{attrs:{href:"https://caniuse.com/?search=inline-list-item",target:"_blank",rel:"noopener noreferrer"}},[a._v("caniuse"),l("OutboundLink")],1),a._v(" 上面也没有找到这个元素的兼容性，所以应该是不能使用的，支持度全无。")]),a._v(" "),l("h2",{attrs:{id:"display-flex"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-flex"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: flex")])]),a._v(" "),l("p",[a._v("flex是一种弹性布局属性\n"),l("strong",[a._v("注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。")]),a._v("\n主要属性有两大类：容器属性和项目的属性")]),a._v(" "),l("h3",{attrs:{id:"容器属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#容器属性"}},[a._v("#")]),a._v(" 容器属性")]),a._v(" "),l("ul",[l("li",[a._v("flex-direction: 属性决定主轴的方向（即项目的排列方向）。")]),a._v(" "),l("li",[a._v('flex-wrap: 默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。')]),a._v(" "),l("li",[a._v("flex-flow: 属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。")]),a._v(" "),l("li",[a._v("justify-content: 属性定义了项目在主轴上的对齐方式。")]),a._v(" "),l("li",[a._v("align-items: 属性定义项目在交叉轴上如何对齐。")]),a._v(" "),l("li",[a._v("align-content: 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")])]),a._v(" "),l("h3",{attrs:{id:"项目属性"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#项目属性"}},[a._v("#")]),a._v(" 项目属性")]),a._v(" "),l("ul",[l("li",[a._v("order: 定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),a._v(" "),l("li",[a._v("flex-grow: 定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),a._v(" "),l("li",[a._v("flex-shrink: 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),a._v(" "),l("li",[a._v("flex-basis: 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),a._v(" "),l("li",[a._v("flex: 属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")]),a._v(" "),l("li",[a._v("align-self: 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")])]),a._v(" "),l("h2",{attrs:{id:"display-webkit-box"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#display-webkit-box"}},[a._v("#")]),a._v(" "),l("strong",[a._v("display: -webkit-box")])]),a._v(" "),l("p",[a._v("由于某X5浏览器某些版本还不支持最新版的flex布局，所以为了保证良好的运行，建议还是使用display: box，box和flex布局的主要差别如下:")]),a._v(" "),l("h3",{attrs:{id:"容器属性-2"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#容器属性-2"}},[a._v("#")]),a._v(" 容器属性")]),a._v(" "),l("ul",[l("li",[a._v("display: box\n该显示样式的新值可将此元素及其直系子代加入弹性框模型中。Flexbox 模型只适用于直系子代。")]),a._v(" "),l("li",[a._v("box-orient\n值：horizontal | vertical | inherit\n框的子代是如何排列的？还有两个值：inline-axis（真正的默认值）和 block-axis，但是它们分别映射到水平和垂直方向。")]),a._v(" "),l("li",[a._v("box-pack\n值：start | end | center | justify\n设置沿 box-orient 轴的框排列方式。因此，如果 box-orient 是水平方向，就会选择框的子代的水平排列方式，反之亦然。")]),a._v(" "),l("li",[a._v("box-align\n值：start | end | center | baseline | stretch\n基本上而言是 box-pack 的同级属性。设置框的子代在框中的排列方式。如果方向是水平的，该属性就会决定垂直排列，反之亦然。")])]),a._v(" "),l("h3",{attrs:{id:"项目属性-2"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#项目属性-2"}},[a._v("#")]),a._v(" 项目属性")]),a._v(" "),l("ul",[l("li",[a._v("box-flex\n值：0 | 任意整数\n该子代的弹性比。弹性比为 1 的子代占据父代框的空间是弹性比为 2 的同级属性的两倍。其默认值为 0，也就是不具有弹性")])])])}),[],!1,null,null,null);i.default=e.exports}}]);